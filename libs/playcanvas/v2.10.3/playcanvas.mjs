/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.39.0.
 * Original file: /npm/playcanvas@2.10.3/build/playcanvas/src/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
const t="RenderFrame";const e="RenderFrameTime";const s="RenderPass";const i="RenderPassDetail";const n="RenderAction";const r="RenderTargetAlloc";const a="TextureAlloc";const o="ShaderAlloc";const l="ShaderCompile";const h="VRAM.Texture";const c="VRAM.Vb";const d="VRAM.Ib";const u="VRAM.Sb";const f="BindGroupAlloc";const p="BindGroupFormatAlloc";const m="RenderPipelineAlloc";const _="ComputePipelineAlloc";const g="PipelineLayoutAlloc";const v="Element";const y="Textures";const S="RenderQueue";const x="GpuTimings";const T="2.10.3";const w="2dc84cf";function b(t,e){for(const s in e){const i=e[s];if(Array.isArray(i)){t[s]=b([],i)}else if(i&&typeof i==="object"){t[s]=b({},i)}else{t[s]=i}}return t}const E={create(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(t=>{const e=Math.random()*16|0;const s=t==="x"?e:e&3|8;return s.toString(16)}))}};const A={delimiter:"/",join(...t){let e=t[0];for(let s=0;s<t.length-1;s++){const i=t[s];const n=t[s+1];if(n[0]===A.delimiter){e=n;continue}if(i&&n&&i[i.length-1]!==A.delimiter&&n[0]!==A.delimiter){e+=A.delimiter+n}else{e+=n}}return e},normalize(t){const e=t.startsWith(A.delimiter);const s=t.endsWith(A.delimiter);const i=t.split("/");let n="";let r=[];for(let t=0;t<i.length;t++){if(i[t]==="")continue;if(i[t]===".")continue;if(i[t]===".."&&r.length>0){r=r.slice(0,r.length-2);continue}if(t>0)r.push(A.delimiter);r.push(i[t])}n=r.join("");if(!e&&n[0]===A.delimiter){n=n.slice(1)}if(s&&n[n.length-1]!==A.delimiter){n+=A.delimiter}return n},split(t){const e=t.lastIndexOf(A.delimiter);if(e!==-1){return[t.substring(0,e),t.substring(e+1)]}return["",t]},getBasename(t){return A.split(t)[1]},getDirectory(t){return A.split(t)[0]},getExtension(t){const e=t.split("?")[0].split(".").pop();if(e!==t){return`.${e}`}return""},isRelativePath(t){return t.charAt(0)!=="/"&&t.match(/:\/\//)===null},extractPath(t){let e="";const s=t.split("/");let i=0;if(s.length>1){if(A.isRelativePath(t)){if(s[0]==="."){for(i=0;i<s.length-1;++i){e+=i===0?s[i]:`/${s[i]}`}}else if(s[0]===".."){for(i=0;i<s.length-1;++i){e+=i===0?s[i]:`/${s[i]}`}}else{e=".";for(i=0;i<s.length-1;++i){e+=`/${s[i]}`}}}else{for(i=0;i<s.length-1;++i){e+=i===0?s[i]:`/${s[i]}`}}}return e}};var C=typeof global!=="undefined"?global:typeof self!=="undefined"?self:typeof window!=="undefined"?window:{};const P=()=>{let t=false;try{const e=Object.defineProperty({},"passive",{get:function(){t=true;return false}});window.addEventListener("testpassive",null,e);window.removeEventListener("testpassive",null,e)}catch(t){}return t};const L=typeof navigator!=="undefined"?navigator.userAgent:"";const D=typeof window!=="undefined"?"browser":typeof C!=="undefined"?"node":"worker";const M=/android/i.test(L)?"android":/ip(?:[ao]d|hone)/i.test(L)?"ios":/windows/i.test(L)?"windows":/mac os/i.test(L)?"osx":/linux/i.test(L)?"linux":/cros/i.test(L)?"cros":null;const I=D!=="browser"?null:/Chrome\/|Chromium\/|Edg.*\//.test(L)?"chrome":/Safari\//.test(L)?"safari":/Firefox\//.test(L)?"firefox":"other";const R=/xbox/i.test(L);const O=D==="browser"&&("ontouchstart"in window||"maxTouchPoints"in navigator&&navigator.maxTouchPoints>0);const F=D==="browser"&&(!!navigator.getGamepads||!!navigator.webkitGetGamepads);const N=typeof Worker!=="undefined";const k=P();const B={name:M,environment:D,global:(typeof globalThis!=="undefined"&&globalThis)??(D==="browser"&&window)??(D==="node"&&C)??(D==="worker"&&self),browser:D==="browser",worker:D==="worker",desktop:["windows","osx","linux","cros"].includes(M),mobile:["android","ios"].includes(M),ios:M==="ios",android:M==="android",xbox:R,gamepads:F,touch:O,workers:N,passiveEvents:k,browserName:I};const U="abcdefghijklmnopqrstuvwxyz";const z="ABCDEFGHIJKLMNOPQRSTUVWXYZ";const V=U+z;const G=55296;const H=56319;const W=56320;const X=57343;const q=8205;const $=127462;const j=127487;const Y=127995;const K=127999;const Z=8400;const Q=8447;const J=65024;const tt=65039;function et(t,e=0){const s=t.length;if(e<0||e>=s){return null}const i=t.charCodeAt(e);if(s>1&&i>=G&&i<=H){const s=t.charCodeAt(e+1);if(s>=W&&s<=X){return{code:(i-G)*1024+s-W+65536,long:true}}}return{code:i,long:false}}function st(t,e,s){if(!t){return false}const i=et(t);if(i){const t=i.code;return t>=e&&t<=s}return false}function it(t,e){if(e===t.length-1){return 1}if(st(t[e],G,H)){const s=t.substring(e,e+2);const i=t.substring(e+2,e+4);if(st(i,Y,K)||st(s,$,j)&&st(i,$,j)){return 4}if(st(i,J,tt)){return 3}return 2}if(st(t[e+1],J,tt)){return 2}return 1}const nt={ASCII_LOWERCASE:U,ASCII_UPPERCASE:z,ASCII_LETTERS:V,format(t,...e){for(let s=0;s<e.length;s++){t=t.replace(`{${s}}`,e[s])}return t},getCodePoint(t,e){const s=et(t,e);return s&&s.code},getCodePoints(t){if(typeof t!=="string"){throw new TypeError("Not a string")}let e=0;const s=[];let i;while(!!(i=et(t,e))){s.push(i.code);e+=i.long?2:1}return s},getSymbols(t){if(typeof t!=="string"){throw new TypeError("Not a string")}let e=0;const s=t.length;const i=[];let n=0;let r;while(e<s){n+=it(t,e+n);r=t[e+n];if(st(r,Z,Q)){r=t[e+n++]}if(st(r,J,tt)){r=t[e+n++]}if(r&&r.charCodeAt(0)===q){r=t[e+n++];continue}const s=t.substring(e,e+n);i.push(s);e+=n;n=0}return i},fromCodePoint(...t){return t.map((t=>{if(t>65535){t-=65536;return String.fromCharCode((t>>10)+55296,t%1024+56320)}return String.fromCharCode(t)})).join("")}};class rt{constructor(t,e,s,i,n=false){this._removed=false;this.handler=t;this.name=e;this.callback=s;this.scope=i;this._once=n}off(){if(this._removed)return;this.handler.offByHandle(this)}on(t,e,s=this){return this.handler._addCallback(t,e,s,false)}once(t,e,s=this){return this.handler._addCallback(t,e,s,true)}set removed(t){if(!t)return;this._removed=true}get removed(){return this._removed}toJSON(t){return undefined}}class at{initEventHandler(){this._callbacks=new Map;this._callbackActive=new Map}_addCallback(t,e,s,i){if(!this._callbacks.has(t)){this._callbacks.set(t,[])}if(this._callbackActive.has(t)){const e=this._callbackActive.get(t);if(e&&e===this._callbacks.get(t)){this._callbackActive.set(t,e.slice())}}const n=new rt(this,t,e,s,i);this._callbacks.get(t).push(n);return n}on(t,e,s=this){return this._addCallback(t,e,s,false)}once(t,e,s=this){return this._addCallback(t,e,s,true)}off(t,e,s){if(t){if(this._callbackActive.has(t)&&this._callbackActive.get(t)===this._callbacks.get(t)){this._callbackActive.set(t,this._callbackActive.get(t).slice())}}else{for(const[t,e]of this._callbackActive){if(!this._callbacks.has(t)){continue}if(this._callbacks.get(t)!==e){continue}this._callbackActive.set(t,e.slice())}}if(!t){for(const t of this._callbacks.values()){for(let e=0;e<t.length;e++){t[e].removed=true}}this._callbacks.clear()}else if(!e){const e=this._callbacks.get(t);if(e){for(let t=0;t<e.length;t++){e[t].removed=true}this._callbacks.delete(t)}}else{const i=this._callbacks.get(t);if(!i){return this}for(let t=0;t<i.length;t++){if(i[t].callback!==e){continue}if(s&&i[t].scope!==s){continue}i[t].removed=true;i.splice(t,1);t--}if(i.length===0){this._callbacks.delete(t)}}return this}offByHandle(t){const e=t.name;t.removed=true;if(this._callbackActive.has(e)&&this._callbackActive.get(e)===this._callbacks.get(e)){this._callbackActive.set(e,this._callbackActive.get(e).slice())}const s=this._callbacks.get(e);if(!s){return this}const i=s.indexOf(t);if(i!==-1){s.splice(i,1);if(s.length===0){this._callbacks.delete(e)}}return this}fire(t,e,s,i,n,r,a,o,l){if(!t){return this}const h=this._callbacks.get(t);if(!h){return this}let c;if(!this._callbackActive.has(t)){this._callbackActive.set(t,h)}else if(this._callbackActive.get(t)!==h){c=h.slice()}for(let h=0;(c||this._callbackActive.get(t))&&h<(c||this._callbackActive.get(t)).length;h++){const d=(c||this._callbackActive.get(t))[h];if(!d.callback)continue;d.callback.call(d.scope,e,s,i,n,r,a,o,l);if(d._once){const e=this._callbacks.get(t);const s=e?e.indexOf(d):-1;if(s!==-1){if(this._callbackActive.get(t)===e){this._callbackActive.set(t,this._callbackActive.get(t).slice())}const i=this._callbacks.get(t);if(!i)continue;i[s].removed=true;i.splice(s,1);if(i.length===0){this._callbacks.delete(t)}}}}if(!c){this._callbackActive.delete(t)}return this}hasEvent(t){return!!this._callbacks.get(t)?.length}constructor(){this._callbacks=new Map;this._callbackActive=new Map}}class ot{push(t,e){if(this._index[t]){throw Error(`Key already in index ${t}`)}const s=this._list.push(e)-1;this._index[t]=s}has(t){return this._index[t]!==undefined}get(t){const e=this._index[t];if(e!==undefined){return this._list[e]}return null}remove(t){const e=this._index[t];if(e!==undefined){this._list.splice(e,1);delete this._index[t];for(t in this._index){const s=this._index[t];if(s>e){this._index[t]=s-1}}return true}return false}list(){return this._list}clear(){this._list.length=0;for(const t in this._index){delete this._index[t]}}constructor(){this._list=[];this._index={}}}const lt=t=>{const e={};let s=e;return()=>{if(s===e){s=t()}return s}};class ht{static{this.modules={}}static{this.wasmSupported=lt((()=>{try{if(typeof WebAssembly==="object"&&typeof WebAssembly.instantiate==="function"){const t=new WebAssembly.Module(Uint8Array.of(0,97,115,109,1,0,0,0));if(t instanceof WebAssembly.Module){return new WebAssembly.Instance(t)instanceof WebAssembly.Instance}}}catch(t){}return false}))}static loadScript(t,e){const s=document.createElement("script");s.setAttribute("src",t);s.onload=()=>{e(null)};s.onerror=()=>{e(`Failed to load script='${t}'`)};document.body.appendChild(s)}static loadWasm(t,e,s){const i=ht.wasmSupported()&&e.glueUrl&&e.wasmUrl?e.glueUrl:e.fallbackUrl;if(i){ht.loadScript(i,(i=>{if(i){s(i,null)}else{const i=window[t];window[t]=undefined;i({locateFile:()=>e.wasmUrl,onAbort:()=>{s("wasm module aborted.")}}).then((t=>{s(null,t)}))}}))}else{s("No supported wasm modules found.",null)}}static getModule(t){if(!ht.modules.hasOwnProperty(t)){ht.modules[t]={config:null,initializing:false,instance:null,callbacks:[]}}return ht.modules[t]}static initialize(t,e){if(e.initializing){return}const s=e.config;if(s.glueUrl||s.wasmUrl||s.fallbackUrl){e.initializing=true;ht.loadWasm(t,s,((i,n)=>{if(i){if(s.errorHandler){s.errorHandler(i)}else{console.error(`failed to initialize module=${t} error=${i}`)}}else{e.instance=n;e.callbacks.forEach((t=>{t(n)}))}}))}}}class ct{static setConfig(t,e){const s=ht.getModule(t);s.config=e;if(s.callbacks.length>0){ht.initialize(t,s)}}static getConfig(t){return ht.modules?.[t]?.config}static getInstance(t,e){const s=ht.getModule(t);if(s.instance){e(s.instance)}else{s.callbacks.push(e);if(s.config){ht.initialize(t,s)}}}}class dt{constructor(t){this.offset=0;this.arraybuffer=t;this.dataView=new DataView(t)}get remainingBytes(){return this.dataView.byteLength-this.offset}reset(t=0){this.offset=t}skip(t){this.offset+=t}align(t){this.offset=this.offset+t-1&~(t-1)}_inc(t){this.offset+=t;return this.offset-t}readChar(){return String.fromCharCode(this.dataView.getUint8(this.offset++))}readChars(t){let e="";for(let s=0;s<t;++s){e+=this.readChar()}return e}readU8(){return this.dataView.getUint8(this.offset++)}readU16(){return this.dataView.getUint16(this._inc(2),true)}readU32(){return this.dataView.getUint32(this._inc(4),true)}readU64(){return this.readU32()+2**32*this.readU32()}readU32be(){return this.dataView.getUint32(this._inc(4),false)}readArray(t){for(let e=0;e<t.length;++e){t[e]=this.readU8()}}readLine(){const t=this.dataView;let e="";while(true){if(this.offset>=t.byteLength){break}const s=String.fromCharCode(this.readU8());if(s==="\n"){break}e+=s}return e}}class ut{constructor(t){this.items=[];this.length=0;this.loopIndex=-1;this._sortBy=t.sortBy;this._sortHandler=this._doSort.bind(this)}_binarySearch(t){let e=0;let s=this.items.length-1;const i=t[this._sortBy];let n;let r;while(e<=s){n=Math.floor((e+s)/2);r=this.items[n][this._sortBy];if(r<=i){e=n+1}else if(r>i){s=n-1}}return e}_doSort(t,e){const s=this._sortBy;return t[s]-e[s]}insert(t){const e=this._binarySearch(t);this.items.splice(e,0,t);this.length++;if(this.loopIndex>=e){this.loopIndex++}}append(t){this.items.push(t);this.length++}remove(t){const e=this.items.indexOf(t);if(e<0)return;this.items.splice(e,1);this.length--;if(this.loopIndex>=e){this.loopIndex--}}sort(){const t=this.loopIndex>=0?this.items[this.loopIndex]:null;this.items.sort(this._sortHandler);if(t!==null){this.loopIndex=this.items.indexOf(t)}}}class ft extends at{static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}static{this.EVENT_CHANGE="change"}constructor(t){super(),this._index={},this._list=[];this._parent=t}add(...t){let e=false;const s=this._processArguments(t,true);if(!s.length){return e}for(let t=0;t<s.length;t++){if(this._index[s[t]]){continue}e=true;this._index[s[t]]=true;this._list.push(s[t]);this.fire("add",s[t],this._parent)}if(e){this.fire("change",this._parent)}return e}remove(...t){let e=false;if(!this._list.length){return e}const s=this._processArguments(t,true);if(!s.length){return e}for(let t=0;t<s.length;t++){if(!this._index[s[t]]){continue}e=true;delete this._index[s[t]];this._list.splice(this._list.indexOf(s[t]),1);this.fire("remove",s[t],this._parent)}if(e){this.fire("change",this._parent)}return e}clear(){if(!this._list.length){return}const t=this._list.slice(0);this._list=[];this._index={};for(let e=0;e<t.length;e++){this.fire("remove",t[e],this._parent)}this.fire("change",this._parent)}has(...t){if(!this._list.length){return false}return this._has(this._processArguments(t))}_has(t){if(!this._list.length||!t.length){return false}for(let e=0;e<t.length;e++){if(t[e].length===1){if(this._index[t[e][0]]){return true}}else{let s=true;for(let i=0;i<t[e].length;i++){if(this._index[t[e][i]]){continue}s=false;break}if(s){return true}}}return false}list(){return this._list.slice(0)}_processArguments(t,e){const s=[];let i=[];if(!t||!t.length){return s}for(let n=0;n<t.length;n++){if(t[n]instanceof Array){if(!e){i=[]}for(let r=0;r<t[n].length;r++){if(typeof t[n][r]!=="string"){continue}if(e){s.push(t[n][r])}else{i.push(t[n][r])}}if(!e&&i.length){s.push(i)}}else if(typeof t[n]==="string"){if(e){s.push(t[n])}else{s.push([t[n]])}}}return s}get size(){return this._list.length}}const pt=typeof window!=="undefined"&&window.performance&&window.performance.now?performance.now.bind(performance):Date.now;function mt(t){let e="";if((t.authority||t.scheme)&&(t.host||t.hostpath)){throw new Error("Can't have 'scheme' or 'authority' and 'host' or 'hostpath' option")}if(t.host&&t.hostpath){throw new Error("Can't have 'host' and 'hostpath' option")}if(t.path&&t.hostpath){throw new Error("Can't have 'path' and 'hostpath' option")}if(t.scheme){e+=`${t.scheme}:`}if(t.authority){e+=`//${t.authority}`}if(t.host){e+=t.host}if(t.path){e+=t.path}if(t.hostpath){e+=t.hostpath}if(t.query){e+=`?${t.query}`}if(t.fragment){e+=`#${t.fragment}`}return e}const _t=/^(([^:/?#]+):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class gt{constructor(t){const e=t.match(_t);this.scheme=e[2];this.authority=e[4];this.path=e[5];this.query=e[7];this.fragment=e[9]}toString(){let t="";if(this.scheme){t+=`${this.scheme}:`}if(this.authority){t+=`//${this.authority}`}t+=this.path;if(this.query){t+=`?${this.query}`}if(this.fragment){t+=`#${this.fragment}`}return t}getQuery(){const t={};if(this.query){const e=decodeURIComponent(this.query).split("&");for(const s of e){const e=s.split("=");t[e[0]]=e[1]}}return t}setQuery(t){let e="";for(const s in t){if(t.hasOwnProperty(s)){if(e!==""){e+="&"}e+=`${encodeURIComponent(s)}=${encodeURIComponent(t[s])}`}}this.query=e}}class vt{static{this._traceChannels=new Set}static{this.stack=false}static set(t,e=true){}static get(t){return vt._traceChannels.has(t)}}const yt=0;const St=1;const xt=4;const Tt=5;const wt={DEG_TO_RAD:Math.PI/180,RAD_TO_DEG:180/Math.PI,clamp(t,e,s){if(t>=s)return s;if(t<=e)return e;return t},intToBytes24(t){const e=t>>16&255;const s=t>>8&255;const i=t&255;return[e,s,i]},intToBytes32(t){const e=t>>24&255;const s=t>>16&255;const i=t>>8&255;const n=t&255;return[e,s,i,n]},bytesToInt24(t,e,s){if(t.length){s=t[2];e=t[1];t=t[0]}return t<<16|e<<8|s},bytesToInt32(t,e,s,i){if(t.length){i=t[3];s=t[2];e=t[1];t=t[0]}return(t<<24|e<<16|s<<8|i)>>>0},lerp(t,e,s){return t+(e-t)*wt.clamp(s,0,1)},lerpAngle(t,e,s){if(e-t>180){e-=360}if(e-t<-180){e+=360}return wt.lerp(t,e,wt.clamp(s,0,1))},powerOfTwo(t){return t!==0&&!(t&t-1)},nextPowerOfTwo(t){t--;t|=t>>1;t|=t>>2;t|=t>>4;t|=t>>8;t|=t>>16;t++;return t},nearestPowerOfTwo(t){return Math.pow(2,Math.round(Math.log2(t)))},random(t,e){const s=e-t;return Math.random()*s+t},smoothstep(t,e,s){if(s<=t)return 0;if(s>=e)return 1;s=(s-t)/(e-t);return s*s*(3-2*s)},smootherstep(t,e,s){if(s<=t)return 0;if(s>=e)return 1;s=(s-t)/(e-t);return s*s*s*(s*(s*6-15)+10)},roundUp(t,e){if(e===0){return t}return Math.ceil(t/e)*e},between(t,e,s,i){const n=Math.min(e,s);const r=Math.max(e,s);return i?t>=n&&t<=r:t>n&&t<r}};class bt{constructor(t=0,e=0,s=0,i=1){const n=t.length;if(n===3||n===4){this.r=t[0];this.g=t[1];this.b=t[2];this.a=t[3]??1}else{this.r=t;this.g=e;this.b=s;this.a=i}}clone(){const t=this.constructor;return new t(this.r,this.g,this.b,this.a)}copy(t){this.r=t.r;this.g=t.g;this.b=t.b;this.a=t.a;return this}equals(t){return this.r===t.r&&this.g===t.g&&this.b===t.b&&this.a===t.a}set(t,e,s,i=1){this.r=t;this.g=e;this.b=s;this.a=i;return this}lerp(t,e,s){this.r=t.r+s*(e.r-t.r);this.g=t.g+s*(e.g-t.g);this.b=t.b+s*(e.b-t.b);this.a=t.a+s*(e.a-t.a);return this}linear(t=this){this.r=Math.pow(t.r,2.2);this.g=Math.pow(t.g,2.2);this.b=Math.pow(t.b,2.2);this.a=t.a;return this}gamma(t=this){this.r=Math.pow(t.r,1/2.2);this.g=Math.pow(t.g,1/2.2);this.b=Math.pow(t.b,1/2.2);this.a=t.a;return this}mulScalar(t){this.r*=t;this.g*=t;this.b*=t;return this}fromString(t){const e=parseInt(t.replace("#","0x"),16);let s;if(t.length>7){s=wt.intToBytes32(e)}else{s=wt.intToBytes24(e);s[3]=255}this.set(s[0]/255,s[1]/255,s[2]/255,s[3]/255);return this}fromArray(t,e=0){this.r=t[e]??this.r;this.g=t[e+1]??this.g;this.b=t[e+2]??this.b;this.a=t[e+3]??this.a;return this}toString(t,e){const{r:s,g:i,b:n,a:r}=this;if(e||s>1||i>1||n>1){return`${s.toFixed(3)}, ${i.toFixed(3)}, ${n.toFixed(3)}, ${r.toFixed(3)}`}let a=`#${((1<<24)+(Math.round(s*255)<<16)+(Math.round(i*255)<<8)+Math.round(n*255)).toString(16).slice(1)}`;if(t===true){const t=Math.round(r*255).toString(16);if(this.a<16/255){a+=`0${t}`}else{a+=t}}return a}toArray(t=[],e=0,s=true){t[e]=this.r;t[e+1]=this.g;t[e+2]=this.b;if(s){t[e+3]=this.a}return t}static{this.BLACK=Object.freeze(new bt(0,0,0,1))}static{this.BLUE=Object.freeze(new bt(0,0,1,1))}static{this.CYAN=Object.freeze(new bt(0,1,1,1))}static{this.GRAY=Object.freeze(new bt(.5,.5,.5,1))}static{this.GREEN=Object.freeze(new bt(0,1,0,1))}static{this.MAGENTA=Object.freeze(new bt(1,0,1,1))}static{this.RED=Object.freeze(new bt(1,0,0,1))}static{this.WHITE=Object.freeze(new bt(1,1,1,1))}static{this.YELLOW=Object.freeze(new bt(1,1,0,1))}}class Et{constructor(t,e=0){this._left=-Infinity;this._right=Infinity;this._recip=0;this._p0=0;this._p1=0;this._m0=0;this._m1=0;this._curve=t;this._reset(e)}evaluate(t,e=false){if(e||t<this._left||t>=this._right){this._reset(t)}let s;const i=this._curve.type;if(i===Tt){s=this._p0}else{const e=this._recip===0?0:(t-this._left)*this._recip;if(i===yt){s=wt.lerp(this._p0,this._p1,e)}else if(i===St){s=wt.lerp(this._p0,this._p1,e*e*(3-2*e))}else{s=this._evaluateHermite(this._p0,this._p1,this._m0,this._m1,e)}}return s}_reset(t){const e=this._curve.keys;const s=e.length;if(!s){this._left=-Infinity;this._right=Infinity;this._recip=0;this._p0=this._p1=this._m0=this._m1=0}else{if(t<e[0][0]){this._left=-Infinity;this._right=e[0][0];this._recip=0;this._p0=this._p1=e[0][1];this._m0=this._m1=0}else if(t>=e[s-1][0]){this._left=e[s-1][0];this._right=Infinity;this._recip=0;this._p0=this._p1=e[s-1][1];this._m0=this._m1=0}else{let s=0;while(t>=e[s+1][0]){s++}this._left=e[s][0];this._right=e[s+1][0];const i=1/(this._right-this._left);this._recip=isFinite(i)?i:0;this._p0=e[s][1];this._p1=e[s+1][1];if(this._curve.type===xt){this._calcTangents(e,s)}}}}_calcTangents(t,e){let s;const i=t[e];const n=t[e+1];let r;if(e===0){s=[t[0][0]+(t[0][0]-t[1][0]),t[0][1]+(t[0][1]-t[1][1])]}else{s=t[e-1]}if(e===t.length-2){r=[t[e+1][0]+(t[e+1][0]-t[e][0]),t[e+1][1]+(t[e+1][1]-t[e][1])]}else{r=t[e+2]}if(this._curve.type===xt){const t=2*(n[0]-i[0])/(n[0]-s[0]);const e=2*(n[0]-i[0])/(r[0]-i[0]);this._m0=this._curve.tension*(isFinite(t)?t:0)*(n[1]-s[1]);this._m1=this._curve.tension*(isFinite(e)?e:0)*(r[1]-i[1])}else{const t=(n[0]-i[0])/(i[0]-s[0]);const e=(n[0]-i[0])/(r[0]-n[0]);const a=i[1]+(s[1]-i[1])*(isFinite(t)?t:0);const o=n[1]+(r[1]-n[1])*(isFinite(e)?e:0);const l=this._curve.tension;this._m0=l*(n[1]-a);this._m1=l*(o-i[1])}}_evaluateHermite(t,e,s,i,n){const r=n*n;const a=n+n;const o=1-n;const l=o*o;return t*((1+a)*l)+s*(n*l)+e*(r*(3-a))+i*(r*(n-1))}}class At{constructor(t){this.keys=[];this.type=St;this.tension=.5;this._eval=new Et(this);if(t){for(let e=0;e<t.length-1;e+=2){this.keys.push([t[e],t[e+1]])}}this.sort()}get length(){return this.keys.length}add(t,e){const s=this.keys;const i=s.length;let n=0;for(;n<i;n++){if(s[n][0]>t){break}}const r=[t,e];this.keys.splice(n,0,r);return r}get(t){return this.keys[t]}sort(){this.keys.sort(((t,e)=>t[0]-e[0]))}value(t){return this._eval.evaluate(t,true)}closest(t){const e=this.keys;const s=e.length;let i=2;let n=null;for(let r=0;r<s;r++){const s=Math.abs(t-e[r][0]);if(i>=s){i=s;n=e[r]}else{break}}return n}clone(){const t=new this.constructor;t.keys=this.keys.map((t=>[...t]));t.type=this.type;t.tension=this.tension;return t}quantize(t){t=Math.max(t,2);const e=new Float32Array(t);const s=1/(t-1);e[0]=this._eval.evaluate(0,true);for(let i=1;i<t;i++){e[i]=this._eval.evaluate(s*i)}return e}quantizeClamped(t,e,s){const i=this.quantize(t);for(let t=0;t<i.length;++t){i[t]=Math.min(s,Math.max(e,i[t]))}return i}}class Ct{constructor(...t){this.curves=[];this._type=St;if(t.length>1){for(let e=0;e<t.length;e++){this.curves.push(new At(t[e]))}}else if(t.length===0){this.curves.push(new At)}else{const e=t[0];if(typeof e==="number"){for(let t=0;t<e;t++){this.curves.push(new At)}}else{for(let t=0;t<e.length;t++){this.curves.push(new At(e[t]))}}}}get length(){return this.curves.length}set type(t){this._type=t;for(let e=0;e<this.curves.length;e++){this.curves[e].type=t}}get type(){return this._type}get(t){return this.curves[t]}value(t,e=[]){const s=this.curves.length;e.length=s;for(let i=0;i<s;i++){e[i]=this.curves[i].value(t)}return e}clone(){const t=new this.constructor;t.curves=[];for(let e=0;e<this.curves.length;e++){t.curves.push(this.curves[e].clone())}t._type=this._type;return t}quantize(t){t=Math.max(t,2);const e=this.curves.length;const s=new Float32Array(t*e);const i=1/(t-1);for(let n=0;n<e;n++){const r=new Et(this.curves[n]);for(let a=0;a<t;a++){s[a*e+n]=r.evaluate(i*a)}}return s}quantizeClamped(t,e,s){const i=this.quantize(t);for(let t=0;t<i.length;++t){i[t]=Math.min(s,Math.max(e,i[t]))}return i}}const Pt=new Float32Array(1);const Lt=new Int32Array(Pt.buffer);class Dt{static float2Half(t){Pt[0]=t;const e=Lt[0];let s=e>>16&32768;let i=e>>12&2047;const n=e>>23&255;if(n<103){return s}if(n>142){s|=31744;s|=(n===255?0:1)&&e&8388607;return s}if(n<113){i|=2048;s|=(i>>114-n)+(i>>113-n&1);return s}s|=n-112<<10|i>>1;s+=i&1;return s}static float2RGBA8(t,e){Pt[0]=t;const s=Lt[0];e.r=(s>>24&255)/255;e.g=(s>>16&255)/255;e.b=(s>>8&255)/255;e.a=(s&255)/255}}class Mt{static concentric(t,e){const s=[];s.push(0,0);const i=2*Math.PI/t/e;for(let e=1;e<=t;e++){const n=e/t;const r=2*Math.PI*n;const a=Math.max(1,Math.floor(r/i));const o=2*Math.PI/a;for(let t=0;t<a;t++){const e=t*o;const i=n*Math.cos(e);const r=n*Math.sin(e);s.push(i,r)}}return s}}class It{constructor(t=0,e=0,s=0){if(t.length===3){this.x=t[0];this.y=t[1];this.z=t[2]}else{this.x=t;this.y=e;this.z=s}}add(t){this.x+=t.x;this.y+=t.y;this.z+=t.z;return this}add2(t,e){this.x=t.x+e.x;this.y=t.y+e.y;this.z=t.z+e.z;return this}addScalar(t){this.x+=t;this.y+=t;this.z+=t;return this}addScaled(t,e){this.x+=t.x*e;this.y+=t.y*e;this.z+=t.z*e;return this}clone(){const t=this.constructor;return new t(this.x,this.y,this.z)}copy(t){this.x=t.x;this.y=t.y;this.z=t.z;return this}cross(t,e){const s=t.x;const i=t.y;const n=t.z;const r=e.x;const a=e.y;const o=e.z;this.x=i*o-a*n;this.y=n*r-o*s;this.z=s*a-r*i;return this}distance(t){const e=this.x-t.x;const s=this.y-t.y;const i=this.z-t.z;return Math.sqrt(e*e+s*s+i*i)}div(t){this.x/=t.x;this.y/=t.y;this.z/=t.z;return this}div2(t,e){this.x=t.x/e.x;this.y=t.y/e.y;this.z=t.z/e.z;return this}divScalar(t){this.x/=t;this.y/=t;this.z/=t;return this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}equals(t){return this.x===t.x&&this.y===t.y&&this.z===t.z}equalsApprox(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e&&Math.abs(this.z-t.z)<e}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}lerp(t,e,s){this.x=t.x+s*(e.x-t.x);this.y=t.y+s*(e.y-t.y);this.z=t.z+s*(e.z-t.z);return this}mul(t){this.x*=t.x;this.y*=t.y;this.z*=t.z;return this}mul2(t,e){this.x=t.x*e.x;this.y=t.y*e.y;this.z=t.z*e.z;return this}mulScalar(t){this.x*=t;this.y*=t;this.z*=t;return this}normalize(t=this){const e=t.x*t.x+t.y*t.y+t.z*t.z;if(e>0){const s=1/Math.sqrt(e);this.x=t.x*s;this.y=t.y*s;this.z=t.z*s}return this}floor(t=this){this.x=Math.floor(t.x);this.y=Math.floor(t.y);this.z=Math.floor(t.z);return this}ceil(t=this){this.x=Math.ceil(t.x);this.y=Math.ceil(t.y);this.z=Math.ceil(t.z);return this}round(t=this){this.x=Math.round(t.x);this.y=Math.round(t.y);this.z=Math.round(t.z);return this}min(t){if(t.x<this.x)this.x=t.x;if(t.y<this.y)this.y=t.y;if(t.z<this.z)this.z=t.z;return this}max(t){if(t.x>this.x)this.x=t.x;if(t.y>this.y)this.y=t.y;if(t.z>this.z)this.z=t.z;return this}project(t){const e=this.x*t.x+this.y*t.y+this.z*t.z;const s=t.x*t.x+t.y*t.y+t.z*t.z;const i=e/s;this.x=t.x*i;this.y=t.y*i;this.z=t.z*i;return this}set(t,e,s){this.x=t;this.y=e;this.z=s;return this}sub(t){this.x-=t.x;this.y-=t.y;this.z-=t.z;return this}sub2(t,e){this.x=t.x-e.x;this.y=t.y-e.y;this.z=t.z-e.z;return this}subScalar(t){this.x-=t;this.y-=t;this.z-=t;return this}fromArray(t,e=0){this.x=t[e]??this.x;this.y=t[e+1]??this.y;this.z=t[e+2]??this.z;return this}toString(){return`[${this.x}, ${this.y}, ${this.z}]`}toArray(t=[],e=0){t[e]=this.x;t[e+1]=this.y;t[e+2]=this.z;return t}static{this.ZERO=Object.freeze(new It(0,0,0))}static{this.HALF=Object.freeze(new It(.5,.5,.5))}static{this.ONE=Object.freeze(new It(1,1,1))}static{this.UP=Object.freeze(new It(0,1,0))}static{this.DOWN=Object.freeze(new It(0,-1,0))}static{this.RIGHT=Object.freeze(new It(1,0,0))}static{this.LEFT=Object.freeze(new It(-1,0,0))}static{this.FORWARD=Object.freeze(new It(0,0,-1))}static{this.BACK=Object.freeze(new It(0,0,1))}}class Rt{constructor(){this.data=new Float32Array(9);this.data[0]=this.data[4]=this.data[8]=1}clone(){const t=this.constructor;return(new t).copy(this)}copy(t){const e=t.data;const s=this.data;s[0]=e[0];s[1]=e[1];s[2]=e[2];s[3]=e[3];s[4]=e[4];s[5]=e[5];s[6]=e[6];s[7]=e[7];s[8]=e[8];return this}set(t){const e=this.data;e[0]=t[0];e[1]=t[1];e[2]=t[2];e[3]=t[3];e[4]=t[4];e[5]=t[5];e[6]=t[6];e[7]=t[7];e[8]=t[8];return this}getX(t=new It){return t.set(this.data[0],this.data[1],this.data[2])}getY(t=new It){return t.set(this.data[3],this.data[4],this.data[5])}getZ(t=new It){return t.set(this.data[6],this.data[7],this.data[8])}equals(t){const e=this.data;const s=t.data;return e[0]===s[0]&&e[1]===s[1]&&e[2]===s[2]&&e[3]===s[3]&&e[4]===s[4]&&e[5]===s[5]&&e[6]===s[6]&&e[7]===s[7]&&e[8]===s[8]}isIdentity(){const t=this.data;return t[0]===1&&t[1]===0&&t[2]===0&&t[3]===0&&t[4]===1&&t[5]===0&&t[6]===0&&t[7]===0&&t[8]===1}setIdentity(){const t=this.data;t[0]=1;t[1]=0;t[2]=0;t[3]=0;t[4]=1;t[5]=0;t[6]=0;t[7]=0;t[8]=1;return this}toString(){return`[${this.data.join(", ")}]`}transpose(t=this){const e=t.data;const s=this.data;if(e===s){let t;t=e[1];s[1]=e[3];s[3]=t;t=e[2];s[2]=e[6];s[6]=t;t=e[5];s[5]=e[7];s[7]=t}else{s[0]=e[0];s[1]=e[3];s[2]=e[6];s[3]=e[1];s[4]=e[4];s[5]=e[7];s[6]=e[2];s[7]=e[5];s[8]=e[8]}return this}setFromMat4(t){const e=t.data;const s=this.data;s[0]=e[0];s[1]=e[1];s[2]=e[2];s[3]=e[4];s[4]=e[5];s[5]=e[6];s[6]=e[8];s[7]=e[9];s[8]=e[10];return this}setFromQuat(t){const e=t.x;const s=t.y;const i=t.z;const n=t.w;const r=e+e;const a=s+s;const o=i+i;const l=e*r;const h=e*a;const c=e*o;const d=s*a;const u=s*o;const f=i*o;const p=n*r;const m=n*a;const _=n*o;const g=this.data;g[0]=1-(d+f);g[1]=h+_;g[2]=c-m;g[3]=h-_;g[4]=1-(l+f);g[5]=u+p;g[6]=c+m;g[7]=u-p;g[8]=1-(l+d);return this}invertMat4(t){const e=t.data;const s=e[0];const i=e[1];const n=e[2];const r=e[4];const a=e[5];const o=e[6];const l=e[8];const h=e[9];const c=e[10];const d=c*a-o*h;const u=-c*i+n*h;const f=o*i-n*a;const p=-c*r+o*l;const m=c*s-n*l;const _=-o*s+n*r;const g=h*r-a*l;const v=-h*s+i*l;const y=a*s-i*r;const S=s*d+i*p+n*g;if(S===0){this.setIdentity()}else{const t=1/S;const e=this.data;e[0]=d*t;e[1]=u*t;e[2]=f*t;e[3]=p*t;e[4]=m*t;e[5]=_*t;e[6]=g*t;e[7]=v*t;e[8]=y*t}return this}transformVector(t,e=new It){const s=this.data;const{x:i,y:n,z:r}=t;e.x=i*s[0]+n*s[3]+r*s[6];e.y=i*s[1]+n*s[4]+r*s[7];e.z=i*s[2]+n*s[5]+r*s[8];return e}static{this.IDENTITY=Object.freeze(new Rt)}static{this.ZERO=Object.freeze((new Rt).set([0,0,0,0,0,0,0,0,0]))}}class Ot{constructor(t=0,e=0){if(t.length===2){this.x=t[0];this.y=t[1]}else{this.x=t;this.y=e}}add(t){this.x+=t.x;this.y+=t.y;return this}add2(t,e){this.x=t.x+e.x;this.y=t.y+e.y;return this}addScalar(t){this.x+=t;this.y+=t;return this}addScaled(t,e){this.x+=t.x*e;this.y+=t.y*e;return this}clone(){const t=this.constructor;return new t(this.x,this.y)}copy(t){this.x=t.x;this.y=t.y;return this}cross(t){return this.x*t.y-this.y*t.x}distance(t){const e=this.x-t.x;const s=this.y-t.y;return Math.sqrt(e*e+s*s)}div(t){this.x/=t.x;this.y/=t.y;return this}div2(t,e){this.x=t.x/e.x;this.y=t.y/e.y;return this}divScalar(t){this.x/=t;this.y/=t;return this}dot(t){return this.x*t.x+this.y*t.y}equals(t){return this.x===t.x&&this.y===t.y}equalsApprox(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}lengthSq(){return this.x*this.x+this.y*this.y}lerp(t,e,s){this.x=t.x+s*(e.x-t.x);this.y=t.y+s*(e.y-t.y);return this}mul(t){this.x*=t.x;this.y*=t.y;return this}mul2(t,e){this.x=t.x*e.x;this.y=t.y*e.y;return this}mulScalar(t){this.x*=t;this.y*=t;return this}normalize(t=this){const e=t.x*t.x+t.y*t.y;if(e>0){const s=1/Math.sqrt(e);this.x=t.x*s;this.y=t.y*s}return this}rotate(t){const e=Math.atan2(this.x,this.y)+t*wt.DEG_TO_RAD;const s=Math.sqrt(this.x*this.x+this.y*this.y);this.x=Math.sin(e)*s;this.y=Math.cos(e)*s;return this}angle(){return Math.atan2(this.x,this.y)*wt.RAD_TO_DEG}angleTo(t){return Math.atan2(this.x*t.y+this.y*t.x,this.x*t.x+this.y*t.y)*wt.RAD_TO_DEG}floor(t=this){this.x=Math.floor(t.x);this.y=Math.floor(t.y);return this}ceil(t=this){this.x=Math.ceil(t.x);this.y=Math.ceil(t.y);return this}round(t=this){this.x=Math.round(t.x);this.y=Math.round(t.y);return this}min(t){if(t.x<this.x)this.x=t.x;if(t.y<this.y)this.y=t.y;return this}max(t){if(t.x>this.x)this.x=t.x;if(t.y>this.y)this.y=t.y;return this}set(t,e){this.x=t;this.y=e;return this}sub(t){this.x-=t.x;this.y-=t.y;return this}sub2(t,e){this.x=t.x-e.x;this.y=t.y-e.y;return this}subScalar(t){this.x-=t;this.y-=t;return this}fromArray(t,e=0){this.x=t[e]??this.x;this.y=t[e+1]??this.y;return this}toString(){return`[${this.x}, ${this.y}]`}toArray(t=[],e=0){t[e]=this.x;t[e+1]=this.y;return t}static angleRad(t,e){return Math.atan2(t.x*e.y-t.y*e.x,t.x*e.x+t.y*e.y)}static{this.ZERO=Object.freeze(new Ot(0,0))}static{this.HALF=Object.freeze(new Ot(.5,.5))}static{this.ONE=Object.freeze(new Ot(1,1))}static{this.UP=Object.freeze(new Ot(0,1))}static{this.DOWN=Object.freeze(new Ot(0,-1))}static{this.RIGHT=Object.freeze(new Ot(1,0))}static{this.LEFT=Object.freeze(new Ot(-1,0))}}class Ft{constructor(t=0,e=0,s=0,i=0){if(t.length===4){this.x=t[0];this.y=t[1];this.z=t[2];this.w=t[3]}else{this.x=t;this.y=e;this.z=s;this.w=i}}add(t){this.x+=t.x;this.y+=t.y;this.z+=t.z;this.w+=t.w;return this}add2(t,e){this.x=t.x+e.x;this.y=t.y+e.y;this.z=t.z+e.z;this.w=t.w+e.w;return this}addScalar(t){this.x+=t;this.y+=t;this.z+=t;this.w+=t;return this}addScaled(t,e){this.x+=t.x*e;this.y+=t.y*e;this.z+=t.z*e;this.w+=t.w*e;return this}clone(){const t=this.constructor;return new t(this.x,this.y,this.z,this.w)}copy(t){this.x=t.x;this.y=t.y;this.z=t.z;this.w=t.w;return this}div(t){this.x/=t.x;this.y/=t.y;this.z/=t.z;this.w/=t.w;return this}div2(t,e){this.x=t.x/e.x;this.y=t.y/e.y;this.z=t.z/e.z;this.w=t.w/e.w;return this}divScalar(t){this.x/=t;this.y/=t;this.z/=t;this.w/=t;return this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}equals(t){return this.x===t.x&&this.y===t.y&&this.z===t.z&&this.w===t.w}equalsApprox(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e&&Math.abs(this.z-t.z)<e&&Math.abs(this.w-t.w)<e}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}lerp(t,e,s){this.x=t.x+s*(e.x-t.x);this.y=t.y+s*(e.y-t.y);this.z=t.z+s*(e.z-t.z);this.w=t.w+s*(e.w-t.w);return this}mul(t){this.x*=t.x;this.y*=t.y;this.z*=t.z;this.w*=t.w;return this}mul2(t,e){this.x=t.x*e.x;this.y=t.y*e.y;this.z=t.z*e.z;this.w=t.w*e.w;return this}mulScalar(t){this.x*=t;this.y*=t;this.z*=t;this.w*=t;return this}normalize(t=this){const e=t.x*t.x+t.y*t.y+t.z*t.z+t.w*t.w;if(e>0){const s=1/Math.sqrt(e);this.x=t.x*s;this.y=t.y*s;this.z=t.z*s;this.w=t.w*s}return this}floor(t=this){this.x=Math.floor(t.x);this.y=Math.floor(t.y);this.z=Math.floor(t.z);this.w=Math.floor(t.w);return this}ceil(t=this){this.x=Math.ceil(t.x);this.y=Math.ceil(t.y);this.z=Math.ceil(t.z);this.w=Math.ceil(t.w);return this}round(t=this){this.x=Math.round(t.x);this.y=Math.round(t.y);this.z=Math.round(t.z);this.w=Math.round(t.w);return this}min(t){if(t.x<this.x)this.x=t.x;if(t.y<this.y)this.y=t.y;if(t.z<this.z)this.z=t.z;if(t.w<this.w)this.w=t.w;return this}max(t){if(t.x>this.x)this.x=t.x;if(t.y>this.y)this.y=t.y;if(t.z>this.z)this.z=t.z;if(t.w>this.w)this.w=t.w;return this}set(t,e,s,i){this.x=t;this.y=e;this.z=s;this.w=i;return this}sub(t){this.x-=t.x;this.y-=t.y;this.z-=t.z;this.w-=t.w;return this}sub2(t,e){this.x=t.x-e.x;this.y=t.y-e.y;this.z=t.z-e.z;this.w=t.w-e.w;return this}subScalar(t){this.x-=t;this.y-=t;this.z-=t;this.w-=t;return this}fromArray(t,e=0){this.x=t[e]??this.x;this.y=t[e+1]??this.y;this.z=t[e+2]??this.z;this.w=t[e+3]??this.w;return this}toString(){return`[${this.x}, ${this.y}, ${this.z}, ${this.w}]`}toArray(t=[],e=0){t[e]=this.x;t[e+1]=this.y;t[e+2]=this.z;t[e+3]=this.w;return t}static{this.ZERO=Object.freeze(new Ft(0,0,0,0))}static{this.HALF=Object.freeze(new Ft(.5,.5,.5,.5))}static{this.ONE=Object.freeze(new Ft(1,1,1,1))}}const Nt=new Ot;const kt=new It;const Bt=new It;const Ut=new It;const zt=new It;class Vt{constructor(){this.data=new Float32Array(16);this.data[0]=this.data[5]=this.data[10]=this.data[15]=1}static _getPerspectiveHalfSize(t,e,s,i,n){if(n){t.x=i*Math.tan(e*Math.PI/360);t.y=t.x/s}else{t.y=i*Math.tan(e*Math.PI/360);t.x=t.y*s}}add2(t,e){const s=t.data,i=e.data,n=this.data;n[0]=s[0]+i[0];n[1]=s[1]+i[1];n[2]=s[2]+i[2];n[3]=s[3]+i[3];n[4]=s[4]+i[4];n[5]=s[5]+i[5];n[6]=s[6]+i[6];n[7]=s[7]+i[7];n[8]=s[8]+i[8];n[9]=s[9]+i[9];n[10]=s[10]+i[10];n[11]=s[11]+i[11];n[12]=s[12]+i[12];n[13]=s[13]+i[13];n[14]=s[14]+i[14];n[15]=s[15]+i[15];return this}add(t){return this.add2(this,t)}clone(){const t=this.constructor;return(new t).copy(this)}copy(t){const e=t.data,s=this.data;s[0]=e[0];s[1]=e[1];s[2]=e[2];s[3]=e[3];s[4]=e[4];s[5]=e[5];s[6]=e[6];s[7]=e[7];s[8]=e[8];s[9]=e[9];s[10]=e[10];s[11]=e[11];s[12]=e[12];s[13]=e[13];s[14]=e[14];s[15]=e[15];return this}equals(t){const e=this.data,s=t.data;return e[0]===s[0]&&e[1]===s[1]&&e[2]===s[2]&&e[3]===s[3]&&e[4]===s[4]&&e[5]===s[5]&&e[6]===s[6]&&e[7]===s[7]&&e[8]===s[8]&&e[9]===s[9]&&e[10]===s[10]&&e[11]===s[11]&&e[12]===s[12]&&e[13]===s[13]&&e[14]===s[14]&&e[15]===s[15]}isIdentity(){const t=this.data;return t[0]===1&&t[1]===0&&t[2]===0&&t[3]===0&&t[4]===0&&t[5]===1&&t[6]===0&&t[7]===0&&t[8]===0&&t[9]===0&&t[10]===1&&t[11]===0&&t[12]===0&&t[13]===0&&t[14]===0&&t[15]===1}mul2(t,e){const s=t.data;const i=e.data;const n=this.data;const r=s[0];const a=s[1];const o=s[2];const l=s[3];const h=s[4];const c=s[5];const d=s[6];const u=s[7];const f=s[8];const p=s[9];const m=s[10];const _=s[11];const g=s[12];const v=s[13];const y=s[14];const S=s[15];let x,T,w,b;x=i[0];T=i[1];w=i[2];b=i[3];n[0]=r*x+h*T+f*w+g*b;n[1]=a*x+c*T+p*w+v*b;n[2]=o*x+d*T+m*w+y*b;n[3]=l*x+u*T+_*w+S*b;x=i[4];T=i[5];w=i[6];b=i[7];n[4]=r*x+h*T+f*w+g*b;n[5]=a*x+c*T+p*w+v*b;n[6]=o*x+d*T+m*w+y*b;n[7]=l*x+u*T+_*w+S*b;x=i[8];T=i[9];w=i[10];b=i[11];n[8]=r*x+h*T+f*w+g*b;n[9]=a*x+c*T+p*w+v*b;n[10]=o*x+d*T+m*w+y*b;n[11]=l*x+u*T+_*w+S*b;x=i[12];T=i[13];w=i[14];b=i[15];n[12]=r*x+h*T+f*w+g*b;n[13]=a*x+c*T+p*w+v*b;n[14]=o*x+d*T+m*w+y*b;n[15]=l*x+u*T+_*w+S*b;return this}mulAffine2(t,e){const s=t.data;const i=e.data;const n=this.data;const r=s[0];const a=s[1];const o=s[2];const l=s[4];const h=s[5];const c=s[6];const d=s[8];const u=s[9];const f=s[10];const p=s[12];const m=s[13];const _=s[14];let g,v,y;g=i[0];v=i[1];y=i[2];n[0]=r*g+l*v+d*y;n[1]=a*g+h*v+u*y;n[2]=o*g+c*v+f*y;n[3]=0;g=i[4];v=i[5];y=i[6];n[4]=r*g+l*v+d*y;n[5]=a*g+h*v+u*y;n[6]=o*g+c*v+f*y;n[7]=0;g=i[8];v=i[9];y=i[10];n[8]=r*g+l*v+d*y;n[9]=a*g+h*v+u*y;n[10]=o*g+c*v+f*y;n[11]=0;g=i[12];v=i[13];y=i[14];n[12]=r*g+l*v+d*y+p;n[13]=a*g+h*v+u*y+m;n[14]=o*g+c*v+f*y+_;n[15]=1;return this}mul(t){return this.mul2(this,t)}transformPoint(t,e=new It){const s=this.data;const{x:i,y:n,z:r}=t;e.x=i*s[0]+n*s[4]+r*s[8]+s[12];e.y=i*s[1]+n*s[5]+r*s[9]+s[13];e.z=i*s[2]+n*s[6]+r*s[10]+s[14];return e}transformVector(t,e=new It){const s=this.data;const{x:i,y:n,z:r}=t;e.x=i*s[0]+n*s[4]+r*s[8];e.y=i*s[1]+n*s[5]+r*s[9];e.z=i*s[2]+n*s[6]+r*s[10];return e}transformVec4(t,e=new Ft){const s=this.data;const{x:i,y:n,z:r,w:a}=t;e.x=i*s[0]+n*s[4]+r*s[8]+a*s[12];e.y=i*s[1]+n*s[5]+r*s[9]+a*s[13];e.z=i*s[2]+n*s[6]+r*s[10]+a*s[14];e.w=i*s[3]+n*s[7]+r*s[11]+a*s[15];return e}setLookAt(t,e,s){Ut.sub2(t,e).normalize();Bt.copy(s).normalize();kt.cross(Bt,Ut).normalize();Bt.cross(Ut,kt);const i=this.data;i[0]=kt.x;i[1]=kt.y;i[2]=kt.z;i[3]=0;i[4]=Bt.x;i[5]=Bt.y;i[6]=Bt.z;i[7]=0;i[8]=Ut.x;i[9]=Ut.y;i[10]=Ut.z;i[11]=0;i[12]=t.x;i[13]=t.y;i[14]=t.z;i[15]=1;return this}setFrustum(t,e,s,i,n,r){const a=2*n;const o=e-t;const l=i-s;const h=r-n;const c=this.data;c[0]=a/o;c[1]=0;c[2]=0;c[3]=0;c[4]=0;c[5]=a/l;c[6]=0;c[7]=0;c[8]=(e+t)/o;c[9]=(i+s)/l;c[10]=(-r-n)/h;c[11]=-1;c[12]=0;c[13]=0;c[14]=-a*r/h;c[15]=0;return this}setPerspective(t,e,s,i,n){Vt._getPerspectiveHalfSize(Nt,t,e,s,n);return this.setFrustum(-Nt.x,Nt.x,-Nt.y,Nt.y,s,i)}setOrtho(t,e,s,i,n,r){const a=this.data;a[0]=2/(e-t);a[1]=0;a[2]=0;a[3]=0;a[4]=0;a[5]=2/(i-s);a[6]=0;a[7]=0;a[8]=0;a[9]=0;a[10]=-2/(r-n);a[11]=0;a[12]=-(e+t)/(e-t);a[13]=-(i+s)/(i-s);a[14]=-(r+n)/(r-n);a[15]=1;return this}setFromAxisAngle(t,e){e*=wt.DEG_TO_RAD;const{x:s,y:i,z:n}=t;const r=Math.cos(e);const a=Math.sin(e);const o=1-r;const l=o*s;const h=o*i;const c=this.data;c[0]=l*s+r;c[1]=l*i+a*n;c[2]=l*n-a*i;c[3]=0;c[4]=l*i-a*n;c[5]=h*i+r;c[6]=h*n+a*s;c[7]=0;c[8]=l*n+a*i;c[9]=h*n-s*a;c[10]=o*n*n+r;c[11]=0;c[12]=0;c[13]=0;c[14]=0;c[15]=1;return this}setTranslate(t,e,s){const i=this.data;i[0]=1;i[1]=0;i[2]=0;i[3]=0;i[4]=0;i[5]=1;i[6]=0;i[7]=0;i[8]=0;i[9]=0;i[10]=1;i[11]=0;i[12]=t;i[13]=e;i[14]=s;i[15]=1;return this}setScale(t,e,s){const i=this.data;i[0]=t;i[1]=0;i[2]=0;i[3]=0;i[4]=0;i[5]=e;i[6]=0;i[7]=0;i[8]=0;i[9]=0;i[10]=s;i[11]=0;i[12]=0;i[13]=0;i[14]=0;i[15]=1;return this}setViewport(t,e,s,i){const n=this.data;n[0]=s*.5;n[1]=0;n[2]=0;n[3]=0;n[4]=0;n[5]=i*.5;n[6]=0;n[7]=0;n[8]=0;n[9]=0;n[10]=.5;n[11]=0;n[12]=t+s*.5;n[13]=e+i*.5;n[14]=.5;n[15]=1;return this}setReflection(t,e){const s=t.x;const i=t.y;const n=t.z;const r=this.data;r[0]=1-2*s*s;r[1]=-2*s*i;r[2]=-2*s*n;r[3]=0;r[4]=-2*s*i;r[5]=1-2*i*i;r[6]=-2*i*n;r[7]=0;r[8]=-2*s*n;r[9]=-2*i*n;r[10]=1-2*n*n;r[11]=0;r[12]=-2*s*e;r[13]=-2*i*e;r[14]=-2*n*e;r[15]=1;return this}invert(t=this){const e=t.data;const s=e[0];const i=e[1];const n=e[2];const r=e[3];const a=e[4];const o=e[5];const l=e[6];const h=e[7];const c=e[8];const d=e[9];const u=e[10];const f=e[11];const p=e[12];const m=e[13];const _=e[14];const g=e[15];const v=s*o-i*a;const y=s*l-n*a;const S=s*h-r*a;const x=i*l-n*o;const T=i*h-r*o;const w=n*h-r*l;const b=c*m-d*p;const E=c*_-u*p;const A=c*g-f*p;const C=d*_-u*m;const P=d*g-f*m;const L=u*g-f*_;const D=v*L-y*P+S*C+x*A-T*E+w*b;if(D===0){this.setIdentity()}else{const t=1/D;const e=this.data;e[0]=(o*L-l*P+h*C)*t;e[1]=(-i*L+n*P-r*C)*t;e[2]=(m*w-_*T+g*x)*t;e[3]=(-d*w+u*T-f*x)*t;e[4]=(-a*L+l*A-h*E)*t;e[5]=(s*L-n*A+r*E)*t;e[6]=(-p*w+_*S-g*y)*t;e[7]=(c*w-u*S+f*y)*t;e[8]=(a*P-o*A+h*b)*t;e[9]=(-s*P+i*A-r*b)*t;e[10]=(p*T-m*S+g*v)*t;e[11]=(-c*T+d*S-f*v)*t;e[12]=(-a*C+o*E-l*b)*t;e[13]=(s*C-i*E+n*b)*t;e[14]=(-p*x+m*y-_*v)*t;e[15]=(c*x-d*y+u*v)*t}return this}set(t){const e=this.data;e[0]=t[0];e[1]=t[1];e[2]=t[2];e[3]=t[3];e[4]=t[4];e[5]=t[5];e[6]=t[6];e[7]=t[7];e[8]=t[8];e[9]=t[9];e[10]=t[10];e[11]=t[11];e[12]=t[12];e[13]=t[13];e[14]=t[14];e[15]=t[15];return this}setIdentity(){const t=this.data;t[0]=1;t[1]=0;t[2]=0;t[3]=0;t[4]=0;t[5]=1;t[6]=0;t[7]=0;t[8]=0;t[9]=0;t[10]=1;t[11]=0;t[12]=0;t[13]=0;t[14]=0;t[15]=1;return this}setTRS(t,e,s){const i=e.x;const n=e.y;const r=e.z;const a=e.w;const o=s.x;const l=s.y;const h=s.z;const c=i+i;const d=n+n;const u=r+r;const f=i*c;const p=i*d;const m=i*u;const _=n*d;const g=n*u;const v=r*u;const y=a*c;const S=a*d;const x=a*u;const T=this.data;T[0]=(1-(_+v))*o;T[1]=(p+x)*o;T[2]=(m-S)*o;T[3]=0;T[4]=(p-x)*l;T[5]=(1-(f+v))*l;T[6]=(g+y)*l;T[7]=0;T[8]=(m+S)*h;T[9]=(g-y)*h;T[10]=(1-(f+_))*h;T[11]=0;T[12]=t.x;T[13]=t.y;T[14]=t.z;T[15]=1;return this}transpose(t=this){const e=t.data;const s=this.data;if(e===s){let t;t=e[1];s[1]=e[4];s[4]=t;t=e[2];s[2]=e[8];s[8]=t;t=e[3];s[3]=e[12];s[12]=t;t=e[6];s[6]=e[9];s[9]=t;t=e[7];s[7]=e[13];s[13]=t;t=e[11];s[11]=e[14];s[14]=t}else{s[0]=e[0];s[1]=e[4];s[2]=e[8];s[3]=e[12];s[4]=e[1];s[5]=e[5];s[6]=e[9];s[7]=e[13];s[8]=e[2];s[9]=e[6];s[10]=e[10];s[11]=e[14];s[12]=e[3];s[13]=e[7];s[14]=e[11];s[15]=e[15]}return this}getTranslation(t=new It){return t.set(this.data[12],this.data[13],this.data[14])}getX(t=new It){return t.set(this.data[0],this.data[1],this.data[2])}getY(t=new It){return t.set(this.data[4],this.data[5],this.data[6])}getZ(t=new It){return t.set(this.data[8],this.data[9],this.data[10])}getScale(t=new It){this.getX(kt);this.getY(Bt);this.getZ(Ut);t.set(kt.length(),Bt.length(),Ut.length());return t}get scaleSign(){this.getX(kt);this.getY(Bt);this.getZ(Ut);kt.cross(kt,Bt);return kt.dot(Ut)<0?-1:1}setFromEulerAngles(t,e,s){t*=wt.DEG_TO_RAD;e*=wt.DEG_TO_RAD;s*=wt.DEG_TO_RAD;const i=Math.sin(-t);const n=Math.cos(-t);const r=Math.sin(-e);const a=Math.cos(-e);const o=Math.sin(-s);const l=Math.cos(-s);const h=this.data;h[0]=a*l;h[1]=-a*o;h[2]=r;h[3]=0;h[4]=n*o+l*i*r;h[5]=n*l-i*r*o;h[6]=-a*i;h[7]=0;h[8]=i*o-n*l*r;h[9]=l*i+n*r*o;h[10]=n*a;h[11]=0;h[12]=0;h[13]=0;h[14]=0;h[15]=1;return this}getEulerAngles(t=new It){this.getScale(zt);const e=zt.x;const s=zt.y;const i=zt.z;if(e===0||s===0||i===0){return t.set(0,0,0)}const n=this.data;const r=Math.asin(-n[2]/e);const a=Math.PI*.5;let o,l;if(r<a){if(r>-a){o=Math.atan2(n[6]/s,n[10]/i);l=Math.atan2(n[1]/e,n[0]/e)}else{l=0;o=-Math.atan2(n[4]/s,n[5]/s)}}else{l=0;o=Math.atan2(n[4]/s,n[5]/s)}return t.set(o,r,l).mulScalar(wt.RAD_TO_DEG)}toString(){return`[${this.data.join(", ")}]`}static{this.IDENTITY=Object.freeze(new Vt)}static{this.ZERO=Object.freeze((new Vt).set([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]))}}class Gt{constructor(t=0,e=0,s=0,i=1){if(t.length===4){this.x=t[0];this.y=t[1];this.z=t[2];this.w=t[3]}else{this.x=t;this.y=e;this.z=s;this.w=i}}clone(){const t=this.constructor;return new t(this.x,this.y,this.z,this.w)}conjugate(t=this){this.x=t.x*-1;this.y=t.y*-1;this.z=t.z*-1;this.w=t.w;return this}copy(t){this.x=t.x;this.y=t.y;this.z=t.z;this.w=t.w;return this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}equals(t){return this.x===t.x&&this.y===t.y&&this.z===t.z&&this.w===t.w}equalsApprox(t,e=1e-6){return Math.abs(this.x-t.x)<e&&Math.abs(this.y-t.y)<e&&Math.abs(this.z-t.z)<e&&Math.abs(this.w-t.w)<e}getAxisAngle(t){let e=Math.acos(this.w)*2;const s=Math.sin(e/2);if(s!==0){t.x=this.x/s;t.y=this.y/s;t.z=this.z/s;if(t.x<0||t.y<0||t.z<0){t.x*=-1;t.y*=-1;t.z*=-1;e*=-1}}else{t.x=1;t.y=0;t.z=0}return e*wt.RAD_TO_DEG}getEulerAngles(t=new It){let e,s,i;const n=this.x;const r=this.y;const a=this.z;const o=this.w;const l=2*(o*r-n*a);if(l<=-.99999){e=2*Math.atan2(n,o);s=-Math.PI/2;i=0}else if(l>=.99999){e=2*Math.atan2(n,o);s=Math.PI/2;i=0}else{e=Math.atan2(2*(o*n+r*a),1-2*(n*n+r*r));s=Math.asin(l);i=Math.atan2(2*(o*a+n*r),1-2*(r*r+a*a))}return t.set(e,s,i).mulScalar(wt.RAD_TO_DEG)}invert(t=this){return this.conjugate(t).normalize()}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}lerp(t,e,s){const i=(1-s)*(t.dot(e)<0?-1:1);this.x=t.x*i+e.x*s;this.y=t.y*i+e.y*s;this.z=t.z*i+e.z*s;this.w=t.w*i+e.w*s;return this.normalize()}mul(t){const e=this.x;const s=this.y;const i=this.z;const n=this.w;const r=t.x;const a=t.y;const o=t.z;const l=t.w;this.x=n*r+e*l+s*o-i*a;this.y=n*a+s*l+i*r-e*o;this.z=n*o+i*l+e*a-s*r;this.w=n*l-e*r-s*a-i*o;return this}mulScalar(t,e=this){this.x=e.x*t;this.y=e.y*t;this.z=e.z*t;this.w=e.w*t;return this}mul2(t,e){const s=t.x;const i=t.y;const n=t.z;const r=t.w;const a=e.x;const o=e.y;const l=e.z;const h=e.w;this.x=r*a+s*h+i*l-n*o;this.y=r*o+i*h+n*a-s*l;this.z=r*l+n*h+s*o-i*a;this.w=r*h-s*a-i*o-n*l;return this}normalize(t=this){let e=t.length();if(e===0){this.x=this.y=this.z=0;this.w=1}else{e=1/e;this.x=t.x*e;this.y=t.y*e;this.z=t.z*e;this.w=t.w*e}return this}set(t,e,s,i){this.x=t;this.y=e;this.z=s;this.w=i;return this}setFromAxisAngle(t,e){e*=.5*wt.DEG_TO_RAD;const s=Math.sin(e);const i=Math.cos(e);this.x=s*t.x;this.y=s*t.y;this.z=s*t.z;this.w=i;return this}setFromEulerAngles(t,e,s){if(t instanceof It){const i=t;t=i.x;e=i.y;s=i.z}const i=.5*wt.DEG_TO_RAD;t*=i;e*=i;s*=i;const n=Math.sin(t);const r=Math.cos(t);const a=Math.sin(e);const o=Math.cos(e);const l=Math.sin(s);const h=Math.cos(s);this.x=n*o*h-r*a*l;this.y=r*a*h+n*o*l;this.z=r*o*l-n*a*h;this.w=r*o*h+n*a*l;return this}setFromMat4(t){const e=t.data;let s=e[0];let i=e[1];let n=e[2];let r=e[4];let a=e[5];let o=e[6];let l=e[8];let h=e[9];let c=e[10];let d;d=s*s+i*i+n*n;if(d===0)return this.set(0,0,0,1);d=1/Math.sqrt(d);s*=d;i*=d;n*=d;d=r*r+a*a+o*o;if(d===0)return this.set(0,0,0,1);d=1/Math.sqrt(d);r*=d;a*=d;o*=d;d=l*l+h*h+c*c;if(d===0)return this.set(0,0,0,1);d=1/Math.sqrt(d);l*=d;h*=d;c*=d;if(c<0){if(s>a){this.set(1+s-a-c,i+r,l+n,o-h)}else{this.set(i+r,1-s+a-c,o+h,l-n)}}else{if(s<-a){this.set(l+n,o+h,1-s-a+c,i-r)}else{this.set(o-h,l-n,i-r,1+s+a+c)}}return this.mulScalar(1/this.length())}setFromDirections(t,e){const s=1+t.dot(e);if(s<Number.EPSILON){if(Math.abs(t.x)>Math.abs(t.y)){this.x=-t.z;this.y=0;this.z=t.x;this.w=0}else{this.x=0;this.y=-t.z;this.z=t.y;this.w=0}}else{this.x=t.y*e.z-t.z*e.y;this.y=t.z*e.x-t.x*e.z;this.z=t.x*e.y-t.y*e.x;this.w=s}return this.normalize()}slerp(t,e,s){const i=t.x;const n=t.y;const r=t.z;const a=t.w;let o=e.x;let l=e.y;let h=e.z;let c=e.w;let d=a*c+i*o+n*l+r*h;if(d<0){c=-c;o=-o;l=-l;h=-h;d=-d}if(Math.abs(d)>=1){this.w=a;this.x=i;this.y=n;this.z=r;return this}const u=Math.acos(d);const f=Math.sqrt(1-d*d);if(Math.abs(f)<.001){this.w=a*.5+c*.5;this.x=i*.5+o*.5;this.y=n*.5+l*.5;this.z=r*.5+h*.5;return this}const p=Math.sin((1-s)*u)/f;const m=Math.sin(s*u)/f;this.w=a*p+c*m;this.x=i*p+o*m;this.y=n*p+l*m;this.z=r*p+h*m;return this}transformVector(t,e=new It){const s=t.x,i=t.y,n=t.z;const r=this.x,a=this.y,o=this.z,l=this.w;const h=l*s+a*n-o*i;const c=l*i+o*s-r*n;const d=l*n+r*i-a*s;const u=-r*s-a*i-o*n;e.x=h*l+u*-r+c*-o-d*-a;e.y=c*l+u*-a+d*-r-h*-o;e.z=d*l+u*-o+h*-a-c*-r;return e}fromArray(t,e=0){this.x=t[e]??this.x;this.y=t[e+1]??this.y;this.z=t[e+2]??this.z;this.w=t[e+3]??this.w;return this}toString(){return`[${this.x}, ${this.y}, ${this.z}, ${this.w}]`}toArray(t=[],e=0){t[e]=this.x;t[e+1]=this.y;t[e+2]=this.z;t[e+3]=this.w;return t}static{this.IDENTITY=Object.freeze(new Gt(0,0,0,1))}static{this.ZERO=Object.freeze(new Gt(0,0,0,0))}}const Ht=new It;const Wt=new It;const Xt=new It;const qt=new It;const $t=new It;class jt{constructor(t,e){this.center=new It;this.halfExtents=new It(.5,.5,.5);this._min=new It;this._max=new It;if(t){this.center.copy(t)}if(e){this.halfExtents.copy(e)}}add(t){const e=this.center;const s=e.x;const i=e.y;const n=e.z;const r=this.halfExtents;const a=r.x;const o=r.y;const l=r.z;let h=s-a;let c=s+a;let d=i-o;let u=i+o;let f=n-l;let p=n+l;const m=t.center;const _=m.x;const g=m.y;const v=m.z;const y=t.halfExtents;const S=y.x;const x=y.y;const T=y.z;const w=_-S;const b=_+S;const E=g-x;const A=g+x;const C=v-T;const P=v+T;if(w<h)h=w;if(b>c)c=b;if(E<d)d=E;if(A>u)u=A;if(C<f)f=C;if(P>p)p=P;e.x=(h+c)*.5;e.y=(d+u)*.5;e.z=(f+p)*.5;r.x=(c-h)*.5;r.y=(u-d)*.5;r.z=(p-f)*.5}copy(t){this.center.copy(t.center);this.halfExtents.copy(t.halfExtents)}clone(){return new jt(this.center,this.halfExtents)}intersects(t){const e=this.getMax();const s=this.getMin();const i=t.getMax();const n=t.getMin();return s.x<=i.x&&e.x>=n.x&&s.y<=i.y&&e.y>=n.y&&s.z<=i.z&&e.z>=n.z}_intersectsRay(t,e){const s=Ht.copy(this.getMin()).sub(t.origin);const i=Wt.copy(this.getMax()).sub(t.origin);const n=t.direction;if(n.x===0){s.x=s.x<0?-Number.MAX_VALUE:Number.MAX_VALUE;i.x=i.x<0?-Number.MAX_VALUE:Number.MAX_VALUE}else{s.x/=n.x;i.x/=n.x}if(n.y===0){s.y=s.y<0?-Number.MAX_VALUE:Number.MAX_VALUE;i.y=i.y<0?-Number.MAX_VALUE:Number.MAX_VALUE}else{s.y/=n.y;i.y/=n.y}if(n.z===0){s.z=s.z<0?-Number.MAX_VALUE:Number.MAX_VALUE;i.z=i.z<0?-Number.MAX_VALUE:Number.MAX_VALUE}else{s.z/=n.z;i.z/=n.z}const r=Xt.set(Math.min(s.x,i.x),Math.min(s.y,i.y),Math.min(s.z,i.z));const a=qt.set(Math.max(s.x,i.x),Math.max(s.y,i.y),Math.max(s.z,i.z));const o=Math.min(Math.min(a.x,a.y),a.z);const l=Math.max(Math.max(r.x,r.y),r.z);const h=o>=l&&l>=0;if(h){e.copy(t.direction).mulScalar(l).add(t.origin)}return h}_fastIntersectsRay(t){const e=Ht;const s=Wt;const i=Xt;const n=qt;const r=$t;const a=t.direction;e.sub2(t.origin,this.center);n.set(Math.abs(e.x),Math.abs(e.y),Math.abs(e.z));i.mul2(e,a);if(n.x>this.halfExtents.x&&i.x>=0){return false}if(n.y>this.halfExtents.y&&i.y>=0){return false}if(n.z>this.halfExtents.z&&i.z>=0){return false}r.set(Math.abs(a.x),Math.abs(a.y),Math.abs(a.z));s.cross(a,e);s.set(Math.abs(s.x),Math.abs(s.y),Math.abs(s.z));if(s.x>this.halfExtents.y*r.z+this.halfExtents.z*r.y){return false}if(s.y>this.halfExtents.x*r.z+this.halfExtents.z*r.x){return false}if(s.z>this.halfExtents.x*r.y+this.halfExtents.y*r.x){return false}return true}intersectsRay(t,e){if(e){return this._intersectsRay(t,e)}return this._fastIntersectsRay(t)}setMinMax(t,e){this.center.add2(e,t).mulScalar(.5);this.halfExtents.sub2(e,t).mulScalar(.5)}getMin(){return this._min.copy(this.center).sub(this.halfExtents)}getMax(){return this._max.copy(this.center).add(this.halfExtents)}containsPoint(t){const e=this.getMin();const s=this.getMax();if(t.x<e.x||t.x>s.x||t.y<e.y||t.y>s.y||t.z<e.z||t.z>s.z){return false}return true}setFromTransformedAabb(t,e,s=false){const i=t.center;const n=t.halfExtents;const r=e.data;let a=r[0];let o=r[4];let l=r[8];let h=r[1];let c=r[5];let d=r[9];let u=r[2];let f=r[6];let p=r[10];if(s){let t=a*a+o*o+l*l;if(t>0){const e=1/Math.sqrt(t);a*=e;o*=e;l*=e}t=h*h+c*c+d*d;if(t>0){const e=1/Math.sqrt(t);h*=e;c*=e;d*=e}t=u*u+f*f+p*p;if(t>0){const e=1/Math.sqrt(t);u*=e;f*=e;p*=e}}this.center.set(r[12]+a*i.x+o*i.y+l*i.z,r[13]+h*i.x+c*i.y+d*i.z,r[14]+u*i.x+f*i.y+p*i.z);this.halfExtents.set(Math.abs(a)*n.x+Math.abs(o)*n.y+Math.abs(l)*n.z,Math.abs(h)*n.x+Math.abs(c)*n.y+Math.abs(d)*n.z,Math.abs(u)*n.x+Math.abs(f)*n.y+Math.abs(p)*n.z)}static computeMinMax(t,e,s,i=t.length/3){if(i>0){let n=t[0];let r=t[1];let a=t[2];let o=n;let l=r;let h=a;const c=i*3;for(let e=3;e<c;e+=3){const s=t[e];const i=t[e+1];const c=t[e+2];if(s<n)n=s;if(i<r)r=i;if(c<a)a=c;if(s>o)o=s;if(i>l)l=i;if(c>h)h=c}e.set(n,r,a);s.set(o,l,h)}}compute(t,e){jt.computeMinMax(t,Ht,Wt,e);this.setMinMax(Ht,Wt)}intersectsBoundingSphere(t){const e=this._distanceToBoundingSphereSq(t);if(e<=t.radius*t.radius){return true}return false}_distanceToBoundingSphereSq(t){const e=this.getMin();const s=this.getMax();let i=0;const n=["x","y","z"];for(let r=0;r<3;++r){let a=0;const o=t.center[n[r]];const l=e[n[r]];const h=s[n[r]];let c=0;if(o<l){c=l-o;a+=c*c}if(o>h){c=o-h;a+=c*c}i+=a}return i}_expand(t,e){Ht.add2(this.getMin(),t);Wt.add2(this.getMax(),e);this.setMinMax(Ht,Wt)}}const Yt=new It;const Kt=new It;class Zt{constructor(t=new It,e=.5){this.center=t;this.radius=e}containsPoint(t){const e=Yt.sub2(t,this.center).lengthSq();const s=this.radius;return e<s*s}intersectsRay(t,e){const s=Yt.copy(t.origin).sub(this.center);const i=s.dot(Kt.copy(t.direction).normalize());const n=s.dot(s)-this.radius*this.radius;if(n>0&&i>0){return false}const r=i*i-n;if(r<0){return false}const a=Math.abs(-i-Math.sqrt(r));if(e){e.copy(t.direction).mulScalar(a).add(t.origin)}return true}intersectsBoundingSphere(t){Yt.sub2(t.center,this.center);const e=t.radius+this.radius;if(Yt.lengthSq()<=e*e){return true}return false}}class Qt{constructor(t=It.UP,e=0){this.normal=new It;this.normal.copy(t);this.distance=e}clone(){const t=this.constructor;return(new t).copy(this)}copy(t){this.normal.copy(t.normal);this.distance=t.distance;return this}intersectsLine(t,e,s){const i=this.distance;const n=this.normal.dot(t)+i;const r=this.normal.dot(e)+i;const a=n/(n-r);const o=a>=0&&a<=1;if(o&&s){s.lerp(t,e,a)}return o}intersectsRay(t,e){const s=this.normal.dot(t.direction);if(s===0){return false}const i=-(this.normal.dot(t.origin)+this.distance)/s;if(i>=0&&e){e.copy(t.direction).mulScalar(i).add(t.origin)}return i>=0}normalize(){const t=1/this.normal.length();this.normal.mulScalar(t);this.distance*=t;return this}set(t,e,s,i){this.normal.set(t,e,s);this.distance=i;return this}setFromPointNormal(t,e){this.normal.copy(e);this.distance=-this.normal.dot(t);return this}}class Jt{constructor(){this.planes=[];for(let t=0;t<6;t++){this.planes[t]=new Qt}}clone(){const t=this.constructor;return(new t).copy(this)}copy(t){for(let e=0;e<6;e++){this.planes[e].copy(t.planes[e])}return this}setFromMat4(t){const[e,s,i,n,r,a,o,l,h,c,d,u,f,p,m,_]=t.data;const g=this.planes;g[0].set(n-e,l-r,u-h,_-f).normalize();g[1].set(n+e,l+r,u+h,_+f).normalize();g[2].set(n+s,l+a,u+c,_+p).normalize();g[3].set(n-s,l-a,u-c,_-p).normalize();g[4].set(n-i,l-o,u-d,_-m).normalize();g[5].set(n+i,l+o,u+d,_+m).normalize()}containsPoint(t){for(let e=0;e<6;e++){const{normal:s,distance:i}=this.planes[e];if(s.dot(t)+i<=0){return false}}return true}containsSphere(t){const{center:e,radius:s}=t;let i=0;for(let t=0;t<6;t++){const{normal:n,distance:r}=this.planes[t];const a=n.dot(e)+r;if(a<=-s){return 0}if(a>s){i++}}return i===6?2:1}}class te{constructor(t,e){this.origin=new It;this.direction=It.FORWARD.clone();if(t){this.origin.copy(t)}if(e){this.direction.copy(e)}}set(t,e){this.origin.copy(t);this.direction.copy(e);return this}copy(t){return this.set(t.origin,t.direction)}clone(){return new this.constructor(this.origin,this.direction)}}const ee=new te;const se=new It;const ie=new Zt;const ne=new Vt;class re{constructor(t=new Vt,e){this.halfExtents=new It(.5,.5,.5);if(e){this.halfExtents.copy(e)}this._modelTransform=t.clone().invert();this._worldTransform=t.clone();this._aabb=new jt(new It,this.halfExtents)}set worldTransform(t){this._worldTransform.copy(t);this._modelTransform.copy(t).invert()}get worldTransform(){return this._worldTransform}intersectsRay(t,e){this._modelTransform.transformPoint(t.origin,ee.origin);this._modelTransform.transformVector(t.direction,ee.direction);if(e){const t=this._aabb._intersectsRay(ee,e);ne.copy(this._modelTransform).invert().transformPoint(e,e);return t}return this._aabb._fastIntersectsRay(ee)}containsPoint(t){this._modelTransform.transformPoint(t,se);return this._aabb.containsPoint(se)}intersectsBoundingSphere(t){this._modelTransform.transformPoint(t.center,ie.center);ie.radius=t.radius;if(this._aabb.intersectsBoundingSphere(ie)){return true}return false}}const ae=new It;const oe=new It;const le=new It;const he=new It;const ce=new It;const de=1e-6;class ue{constructor(t=It.ZERO,e=It.ZERO,s=It.ZERO){this.v0=new It;this.v1=new It;this.v2=new It;this.set(t,e,s)}set(t,e,s){this.v0.copy(t);this.v1.copy(e);this.v2.copy(s);return this}intersectsRay(t,e){ae.sub2(this.v1,this.v0);oe.sub2(this.v2,this.v0);le.cross(t.direction,oe);const s=ae.dot(le);if(s>-1e-6&&s<de){return false}const i=1/s;he.sub2(t.origin,this.v0);const n=i*he.dot(le);if(n<0||n>1){return false}ce.cross(he,ae);const r=i*t.direction.dot(ce);if(r<0||n+r>1){return false}const a=i*oe.dot(ce);if(a>de){if(e instanceof It){e.copy(t.direction).mulScalar(a).add(t.origin)}return true}return false}toString(){return`[${this.v0.toString()}, ${this.v1.toString()}, ${this.v2.toString()}]`}}const fe=0;const pe=1;const me=2;const _e=0;const ge=1;const ve=2;const ye=3;const Se=4;const xe=5;const Te=6;const we=7;const be=8;const Ee=9;const Ae=10;const Ce=11;const Pe=12;const Le=0;const De=1;const Me=2;const Ie=3;const Re=4;const Oe=1;const Fe=2;const Ne=4;const ke=8;const Be=16;const Ue=32;const ze=64;const Ve=128;const Ge=256;const He=0;const We=1;const Xe=2;const qe=3;const $e=1;const je=2;const Ye=4;const Ke=0;const Ze=1;const Qe=2;const Je=3;const ts=4;const es=5;const ss=0;const is=1;const ns=2;const rs=3;const as=0;const os=1;const ls=2;const hs=3;const cs=4;const ds=5;const us=0;const fs=1;const ps=2;const ms=3;const _s=4;const gs=5;const vs=6;const ys=7;const Ss=0;const xs=1;const Ts=2;const ws=0;const bs=1;const Es=2;const As=3;const Cs=4;const Ps=5;const Ls=6;const Ds=7;const Ms=8;const Is=9;const Rs=10;const Os=11;const Fs=12;const Ns=13;const ks=14;const Bs=15;const Us=16;const zs=17;const Vs=18;const Gs=19;const Hs=20;const Ws=21;const Xs=22;const qs=23;const $s=24;const js=25;const Ys=26;const Ks=27;const Zs=28;const Qs=29;const Js=30;const ti=31;const ei=32;const si=33;const ii=34;const ni=35;const ri=36;const ai=37;const oi=38;const li=39;const hi=40;const ci=41;const di=42;const ui=43;const fi=44;const pi=45;const mi=46;const _i=47;const gi=48;const vi=49;const yi=50;const Si=51;const xi=52;const Ti=53;const wi=54;const bi=55;const Ei=56;const Ai=61;const Ci=62;const Pi=63;const Li=64;const Di=65;const Mi=66;const Ii=67;const Ri=68;const Oi=69;const Fi=new Map([[ws,{name:"A8",size:1,ldr:true}],[xi,{name:"R8",size:1,ldr:true}],[bs,{name:"L8",size:1,ldr:true}],[Es,{name:"LA8",size:2,ldr:true}],[Ti,{name:"RG8",size:2,ldr:true}],[As,{name:"RGB565",size:2,ldr:true}],[Cs,{name:"RGBA5551",size:2,ldr:true}],[Ps,{name:"RGBA4",size:2,ldr:true}],[Ls,{name:"RGB8",size:4,ldr:true}],[Ds,{name:"RGBA8",size:4,ldr:true,srgbFormat:Hs}],[yi,{name:"R16F",size:2}],[Si,{name:"RG16F",size:4}],[Os,{name:"RGB16F",size:8}],[Fs,{name:"RGBA16F",size:8}],[Ns,{name:"RGB32F",size:16}],[ks,{name:"RGBA32F",size:16}],[Bs,{name:"R32F",size:4}],[Us,{name:"DEPTH",size:4}],[Oi,{name:"DEPTH16",size:2}],[zs,{name:"DEPTHSTENCIL",size:4}],[Vs,{name:"111110F",size:4}],[Gs,{name:"SRGB8",size:4,ldr:true,srgb:true}],[Hs,{name:"SRGBA8",size:4,ldr:true,srgb:true}],[ti,{name:"BGRA8",size:4,ldr:true}],[Li,{name:"SBGRA8",size:4,ldr:true,srgb:true}],[Ms,{name:"DXT1",blockSize:8,ldr:true,srgbFormat:wi}],[Is,{name:"DXT3",blockSize:16,ldr:true,srgbFormat:bi}],[Rs,{name:"DXT5",blockSize:16,ldr:true,srgbFormat:Ei}],[Ws,{name:"ETC1",blockSize:8,ldr:true}],[Xs,{name:"ETC2_RGB",blockSize:8,ldr:true,srgbFormat:Ai}],[qs,{name:"ETC2_RGBA",blockSize:16,ldr:true,srgbFormat:Ci}],[$s,{name:"PVRTC_2BPP_RGB_1",ldr:true,blockSize:8}],[js,{name:"PVRTC_2BPP_RGBA_1",ldr:true,blockSize:8}],[Ys,{name:"PVRTC_4BPP_RGB_1",ldr:true,blockSize:8}],[Ks,{name:"PVRTC_4BPP_RGBA_1",ldr:true,blockSize:8}],[Zs,{name:"ASTC_4x4",blockSize:16,ldr:true,srgbFormat:Pi}],[Qs,{name:"ATC_RGB",blockSize:8,ldr:true}],[Js,{name:"ATC_RGBA",blockSize:16,ldr:true}],[Di,{name:"BC6H_RGBF",blockSize:16}],[Mi,{name:"BC6H_RGBUF",blockSize:16}],[Ii,{name:"BC7_RGBA",blockSize:16,ldr:true,srgbFormat:Ri}],[wi,{name:"DXT1_SRGB",blockSize:8,ldr:true,srgb:true}],[bi,{name:"DXT3_SRGBA",blockSize:16,ldr:true,srgb:true}],[Ei,{name:"DXT5_SRGBA",blockSize:16,ldr:true,srgb:true}],[Ai,{name:"ETC2_SRGB",blockSize:8,ldr:true,srgb:true}],[Ci,{name:"ETC2_SRGBA",blockSize:16,ldr:true,srgb:true}],[Pi,{name:"ASTC_4x4_SRGB",blockSize:16,ldr:true,srgb:true}],[Ri,{name:"BC7_SRGBA",blockSize:16,ldr:true,srgb:true}],[ei,{name:"R8I",size:1,isInt:true}],[si,{name:"R8U",size:1,isInt:true}],[ii,{name:"R16I",size:2,isInt:true}],[ni,{name:"R16U",size:2,isInt:true}],[ri,{name:"R32I",size:4,isInt:true}],[ai,{name:"R32U",size:4,isInt:true}],[oi,{name:"RG8I",size:2,isInt:true}],[li,{name:"RG8U",size:2,isInt:true}],[hi,{name:"RG16I",size:4,isInt:true}],[ci,{name:"RG16U",size:4,isInt:true}],[di,{name:"RG32I",size:8,isInt:true}],[ui,{name:"RG32U",size:8,isInt:true}],[fi,{name:"RGBA8I",size:4,isInt:true}],[pi,{name:"RGBA8U",size:4,isInt:true}],[mi,{name:"RGBA16I",size:8,isInt:true}],[_i,{name:"RGBA16U",size:8,isInt:true}],[gi,{name:"RGBA32I",size:16,isInt:true}],[vi,{name:"RGBA32U",size:16,isInt:true}]]);const Ni=t=>Fi.get(t)?.blockSize!==undefined;const ki=t=>Fi.get(t)?.srgb===true;const Bi=t=>Fi.get(t)?.isInt===true;const Ui=t=>Fi.get(t)?.srgbFormat||t;const zi=t=>{for(const[e,s]of Fi){if(s.srgbFormat===t){return e}}return t};const Vi=t=>{const e=Fi.get(t);return!!(e?.ldr&&!e?.srgb)};const Gi=t=>{switch(t){case Bs:case Ns:case ks:return Float32Array;case ri:case di:case gi:return Int32Array;case ai:case ui:case vi:return Uint32Array;case ii:case hi:case mi:return Int16Array;case Ti:case ni:case ci:case _i:case As:case Cs:case Ps:case yi:case Si:case Os:case Fs:return Uint16Array;case ei:case oi:case fi:return Int8Array;default:return Uint8Array}};const Hi=0;const Wi=1;const Xi=2;const qi=3;const $i=4;const ji=5;const Yi=6;const Ki="POSITION";const Zi="NORMAL";const Qi="TANGENT";const Ji="BLENDWEIGHT";const tn="BLENDINDICES";const en="COLOR";const sn="TEXCOORD";const nn="TEXCOORD0";const rn="TEXCOORD1";const an="TEXCOORD2";const on="TEXCOORD3";const ln="TEXCOORD4";const hn="TEXCOORD5";const cn="TEXCOORD6";const dn="TEXCOORD7";const un="ATTR0";const fn="ATTR1";const pn="ATTR2";const mn="ATTR3";const _n="ATTR4";const gn="ATTR5";const vn="ATTR6";const yn="ATTR7";const Sn="ATTR8";const xn="ATTR9";const Tn="ATTR10";const wn="ATTR11";const bn="ATTR12";const En="ATTR13";const An="ATTR14";const Cn="ATTR15";const Pn=1;const Ln=0;const Dn=1;const Mn=2;const In=3;const Rn=4;const On=5;const Fn=6;const Nn=7;const kn=0;const Bn=1;const Un=2;const zn="default";const Vn="rgbm";const Gn="rgbe";const Hn="rgbp";const Wn="swizzleGGGR";const Xn=0;const qn=1;const $n=2;const jn=3;const Yn="1d";const Kn="2d";const Zn="2d-array";const Qn="cube";const Jn="cube-array";const tr="3d";const er=0;const sr=1;const ir=2;const nr=3;const rr=4;const ar="none";const or="cube";const lr="equirect";const hr="octahedral";const cr="glsl";const dr="wgsl";const ur=0;const fr=1;const pr=2;const mr=3;const _r=4;const gr=5;const vr=6;const yr=7;const Sr=0;const xr=1;const Tr=2;const wr=3;const br=4;const Er=5;const Ar=6;const Cr=7;const Pr=8;const Lr=9;const Dr=10;const Mr=11;const Ir=12;const Rr=13;const Or=14;const Fr=15;const Nr=16;const kr=17;const Br=18;const Ur=19;const zr=20;const Vr=21;const Gr=22;const Hr=23;const Wr=24;const Xr=25;const qr=26;const $r=27;const jr=28;const Yr=29;const Kr=30;const Zr=31;const Qr=32;const Jr=33;const ta=34;const ea=35;const sa=36;const ia=37;const na=38;const ra=39;const aa=40;const oa=41;const la=42;const ha=43;const ca=44;const da=45;const ua=46;const fa=47;const pa=48;const ma=49;const _a=["bool","int","float","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","mat2","mat3","mat4","sampler2D","samplerCube","","sampler2DShadow","samplerCubeShadow","sampler3D","","","","","sampler2DArray","uint","uvec2","uvec3","uvec4","","","","","","","","","","","","","isampler2D","usampler2D","isamplerCube","usamplerCube","isampler3D","usampler3D","isampler2DArray","usampler2DArray"];const ga=[["bool"],["i32"],["f32"],["vec2f","vec2<f32>"],["vec3f","vec3<f32>"],["vec4f","vec4<f32>"],["vec2i","vec2<i32>"],["vec3i","vec3<i32>"],["vec4i","vec4<i32>"],["vec2<bool>"],["vec3<bool>"],["vec4<bool>"],["mat2x2f","mat2x2<f32>"],["mat3x3f","mat3x3<f32>"],["mat4x4f","mat4x4<f32>"],["texture_2d<f32>"],["texture_cube<f32>"],["array<f32>"],["texture_depth_2d"],["texture_depth_cube"],["texture_3d<f32>"],["array<vec2<f32>>"],["array<vec3<f32>>"],["array<vec4<f32>>"],["array<mat4x4<f32>>"],["texture_2d_array<f32>"],["u32"],["vec2u","vec2<u32>"],["vec3u","vec3<u32>"],["vec4u","vec4<u32>"],["array<i32>"],["array<u32>"],["array<bool>"],["array<vec2i>","array<vec2<i32>>"],["array<vec2u>","array<vec2<u32>>"],["array<vec2b>","array<vec2<bool>>"],["array<vec3i>","array<vec3<i32>>"],["array<vec3u>","array<vec3<u32>>"],["array<vec3b>","array<vec3<bool>>"],["array<vec4i>","array<vec4<i32>>"],["array<vec4u>","array<vec4<u32>>"],["array<vec4b>","array<vec4<bool>>"],["texture_2d<i32>"],["texture_2d<u32>"],["texture_cube<i32>"],["texture_cube<u32>"],["texture_3d<i32>"],["texture_3d<u32>"],["texture_2d_array<i32>"],["texture_2d_array<u32>"]];const va=new Map;ga.forEach(((t,e)=>{t.forEach((t=>va.set(t,e)))}));const ya=new Uint8Array([_r,_r,vr,vr,vr,vr,_r,_r,_r,_r,_r,_r,vr,vr,vr,_r,_r,vr,_r,_r,_r,vr,vr,vr,vr,_r,gr,gr,gr,gr,_r,gr,_r,_r,gr,_r,_r,gr,_r,_r,gr,_r,_r,gr,_r,gr,_r,gr,_r,gr]);const Sa="webgl2";const xa="webgpu";const Ta="null";const wa=1;const ba=2;const Ea=4;const Aa="ldr";const Ca="ldr_srgb";const Pa="hdr";const La=1;const Da=2;const Ma=4;const Ia=8;const Ra=16;const Oa=32;const Fa=64;const Na=128;const ka=255;const Ba=0;const Ua=1;const za=2;const Va=["view","mesh","mesh_ub"];const Ga="default";const Ha="_unused_float_uniform";const Wa=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Uint16Array];const Xa=[1,1,2,2,4,4,4,2];const qa=["INT8","UINT8","INT16","UINT16","INT32","UINT32","FLOAT32","FLOAT16"];const $a={Int8Array:ur,Uint8Array:fr,Int16Array:pr,Uint16Array:mr,Int32Array:_r,Uint32Array:gr,Float32Array:vr};const ja=[Uint8Array,Uint16Array,Uint32Array];const Ya=[1,2,4];const Ka=new Map([["float","f32"],["vec2","vec2f"],["vec3","vec3f"],["vec4","vec4f"],["int","i32"],["ivec2","vec2i"],["ivec3","vec3i"],["ivec4","vec4i"],["uint","u32"],["uvec2","vec2u"],["uvec3","vec3u"],["uvec4","vec4u"]]);const Za={};Za[Ki]=0;Za[Zi]=1;Za[Ji]=2;Za[tn]=3;Za[en]=4;Za[nn]=5;Za[rn]=6;Za[an]=7;Za[on]=8;Za[ln]=9;Za[hn]=10;Za[cn]=11;Za[dn]=12;Za[Qi]=13;Za[un]=0;Za[fn]=1;Za[pn]=2;Za[mn]=3;Za[_n]=4;Za[gn]=5;Za[vn]=6;Za[yn]=7;Za[Sn]=8;Za[xn]=9;Za[Tn]=10;Za[wn]=11;Za[bn]=12;Za[En]=13;Za[An]=14;Za[Cn]=15;let Qa=0;class Ja{constructor(t,e){this.slot=-1;this.scopeId=null;this.name=t;this.visibility=e}}class to extends Ja{}class eo extends Ja{constructor(t,e,s=false){super(t,e),this.format="";this.readOnly=s}}class so extends Ja{constructor(t,e,s=Kn,i=er,n=true,r=null){super(t,e);this.textureDimension=s;this.sampleType=i;this.hasSampler=n;this.samplerName=r??`${t}_sampler`}}class io extends Ja{constructor(t,e=Ds,s=Kn,i=true,n=false){super(t,Ea);this.format=e;this.textureDimension=s;this.write=i;this.read=n}}class no{constructor(t,e){this.uniformBufferFormats=[];this.textureFormats=[];this.storageTextureFormats=[];this.storageBufferFormats=[];this.id=Qa++;let s=0;e.forEach((t=>{t.slot=s++;if(t instanceof so&&t.hasSampler){s++}if(t instanceof to){this.uniformBufferFormats.push(t)}else if(t instanceof so){this.textureFormats.push(t)}else if(t instanceof io){this.storageTextureFormats.push(t)}else if(t instanceof eo){this.storageBufferFormats.push(t)}else;}));this.device=t;const i=t.scope;this.bufferFormatsMap=new Map;this.uniformBufferFormats.forEach(((t,e)=>this.bufferFormatsMap.set(t.name,e)));this.textureFormatsMap=new Map;this.textureFormats.forEach(((t,e)=>{this.textureFormatsMap.set(t.name,e);t.scopeId=i.resolve(t.name)}));this.storageTextureFormatsMap=new Map;this.storageTextureFormats.forEach(((t,e)=>{this.storageTextureFormatsMap.set(t.name,e);t.scopeId=i.resolve(t.name)}));this.storageBufferFormatsMap=new Map;this.storageBufferFormats.forEach(((t,e)=>{this.storageBufferFormatsMap.set(t.name,e);t.scopeId=i.resolve(t.name)}));this.impl=t.createBindGroupFormatImpl(this)}destroy(){this.impl.destroy()}getTexture(t){const e=this.textureFormatsMap.get(t);if(e!==undefined){return this.textureFormats[e]}return null}getStorageTexture(t){const e=this.storageTextureFormatsMap.get(t);if(e!==undefined){return this.storageTextureFormats[e]}return null}loseContext(){}}class ro{get(t,e){if(!this._cache.has(t)){this._cache.set(t,e());t.on("destroy",(()=>{this.remove(t)}));t.on("devicelost",(()=>{this._cache.get(t)?.loseContext?.(t)}))}return this._cache.get(t)}remove(t){this._cache.get(t)?.destroy?.(t);this._cache.delete(t)}constructor(){this._cache=new Map}}class ao{static calcLevelDimension(t,e){return Math.max(t>>e,1)}static calcMipLevelsCount(t,e,s=1){return 1+Math.floor(Math.log2(Math.max(t,e,s)))}static calcLevelGpuSize(t,e,s,i){const n=Fi.get(i);const r=Fi.get(i)?.size??0;if(r>0){return t*e*s*r}const a=n.blockSize??0;let o=Math.floor((t+3)/4);const l=Math.floor((e+3)/4);const h=Math.floor((s+3)/4);if(i===$s||i===js){o=Math.max(Math.floor(o/2),1)}return o*l*h*a}static calcGpuSize(t,e,s,i,n,r){let a=0;while(1){a+=ao.calcLevelGpuSize(t,e,s,i);if(!n||t===1&&e===1&&s===1){break}t=Math.max(t>>1,1);e=Math.max(e>>1,1);s=Math.max(s>>1,1)}return a*(r?6:1)}}let oo=0;class lo{constructor(t,e={}){this._gpuSize=0;this.id=oo++;this._invalid=false;this._lockedLevel=-1;this._lockedMode=kn;this.renderVersionDirty=0;this._storage=false;this._numLevels=0;this.device=t;this.name=e.name??"";this._width=Math.floor(e.width??4);this._height=Math.floor(e.height??4);this._format=e.format??Ds;this._compressed=Ni(this._format);this._integerFormat=Bi(this._format);if(this._integerFormat){e.minFilter=as;e.magFilter=as}this._volume=e.volume??false;this._depth=Math.floor(e.depth??1);this._arrayLength=Math.floor(e.arrayLength??0);this._storage=e.storage??false;this._cubemap=e.cubemap??false;this._flipY=e.flipY??false;this._premultiplyAlpha=e.premultiplyAlpha??false;this._mipmaps=e.mipmaps??true;this._numLevelsRequested=e.numLevels;if(e.numLevels!==undefined){this._numLevels=e.numLevels}this._updateNumLevel();this._minFilter=e.minFilter??ds;this._magFilter=e.magFilter??os;this._anisotropy=e.anisotropy??1;this._addressU=e.addressU??fe;this._addressV=e.addressV??fe;this._addressW=e.addressW??fe;this._compareOnRead=e.compareOnRead??false;this._compareFunc=e.compareFunc??fs;this._type=e.type??zn;this.projection=ar;if(this._cubemap){this.projection=or}else if(e.projection&&e.projection!==or){this.projection=e.projection}this._levels=e.levels;const s=!!e.levels;if(!this._levels){this._clearLevels()}this.recreateImpl(s);t.textures.push(this)}destroy(){const t=this.device;if(t){const e=t.textures.indexOf(this);if(e!==-1){t.textures.splice(e,1)}t.scope.removeValue(this);this.impl.destroy(t);this.adjustVramSizeTracking(t._vram,-this._gpuSize);this._levels=null;this.device=null}}recreateImpl(t=true){const{device:e}=this;this.impl?.destroy(e);this.impl=null;this.impl=e.createTextureImpl(this);this.dirtyAll();if(t){this.upload()}}_clearLevels(){this._levels=this._cubemap?[[null,null,null,null,null,null]]:[null]}resize(t,e,s=1){const i=this.device;this.adjustVramSizeTracking(i._vram,-this._gpuSize);this.impl.destroy(i);this._clearLevels();this._width=Math.floor(t);this._height=Math.floor(e);this._depth=Math.floor(s);this._updateNumLevel();this.impl=i.createTextureImpl(this);this.dirtyAll()}loseContext(){this.impl.loseContext();this.dirtyAll()}adjustVramSizeTracking(t,e){t.tex+=e}propertyChanged(t){this.impl.propertyChanged(t);this.renderVersionDirty=this.device.renderVersion}_updateNumLevel(){const t=this.mipmaps?ao.calcMipLevelsCount(this.width,this.height):1;const e=this._numLevelsRequested;this._numLevels=Math.min(e??t,t);this._mipmaps=this._numLevels>1}get lockedMode(){return this._lockedMode}set minFilter(t){if(this._minFilter!==t){if(Bi(this._format));else{this._minFilter=t;this.propertyChanged(La)}}}get minFilter(){return this._minFilter}set magFilter(t){if(this._magFilter!==t){if(Bi(this._format));else{this._magFilter=t;this.propertyChanged(Da)}}}get magFilter(){return this._magFilter}set addressU(t){if(this._addressU!==t){this._addressU=t;this.propertyChanged(Ma)}}get addressU(){return this._addressU}set addressV(t){if(this._addressV!==t){this._addressV=t;this.propertyChanged(Ia)}}get addressV(){return this._addressV}set addressW(t){if(!this._volume){return}if(t!==this._addressW){this._addressW=t;this.propertyChanged(Ra)}}get addressW(){return this._addressW}set compareOnRead(t){if(this._compareOnRead!==t){this._compareOnRead=t;this.propertyChanged(Oa)}}get compareOnRead(){return this._compareOnRead}set compareFunc(t){if(this._compareFunc!==t){this._compareFunc=t;this.propertyChanged(Fa)}}get compareFunc(){return this._compareFunc}set anisotropy(t){if(this._anisotropy!==t){this._anisotropy=t;this.propertyChanged(Na)}}get anisotropy(){return this._anisotropy}set mipmaps(t){if(this._mipmaps!==t){if(this.device.isWebGPU);else if(Bi(this._format));else{this._mipmaps=t}if(t)this._needsMipmapsUpload=true}}get mipmaps(){return this._mipmaps}get numLevels(){return this._numLevels}get storage(){return this._storage}get width(){return this._width}get height(){return this._height}get depth(){return this._depth}get format(){return this._format}get cubemap(){return this._cubemap}get gpuSize(){const t=this.pot&&this._mipmaps&&!(this._compressed&&this._levels.length===1);return ao.calcGpuSize(this._width,this._height,this._depth,this._format,t,this._cubemap)}get array(){return this._arrayLength>0}get arrayLength(){return this._arrayLength}get volume(){return this._volume}set type(t){if(this._type!==t){this._type=t;this.device._shadersDirty=true}}get type(){return this._type}set srgb(t){const e=ki(this.format);if(t!==e){if(t){const t=Ui(this.format);if(this._format!==t){this._format=t;this.recreateImpl();this.device._shadersDirty=true}}else{const t=zi(this.format);if(this._format!==t){this._format=t;this.recreateImpl();this.device._shadersDirty=true}}}}get srgb(){return ki(this.format)}set flipY(t){if(this._flipY!==t){this._flipY=t;this._needsUpload=true}}get flipY(){return this._flipY}set premultiplyAlpha(t){if(this._premultiplyAlpha!==t){this._premultiplyAlpha=t;this._needsUpload=true}}get premultiplyAlpha(){return this._premultiplyAlpha}get pot(){return wt.powerOfTwo(this._width)&&wt.powerOfTwo(this._height)}get encoding(){switch(this.type){case Vn:return"rgbm";case Gn:return"rgbe";case Hn:return"rgbp"}return Vi(this.format)?"srgb":"linear"}dirtyAll(){this._levelsUpdated=this._cubemap?[[true,true,true,true,true,true]]:[true];this._needsUpload=true;this._needsMipmapsUpload=this._mipmaps;this._mipmapsUploaded=false;this.propertyChanged(ka)}lock(t={}){t.level??=0;t.face??=0;t.mode??=Un;this._lockedMode=t.mode;this._lockedLevel=t.level;const e=this.cubemap?this._levels[t.face]:this._levels;if(e[t.level]===null){const s=Math.max(1,this._width>>t.level);const i=Math.max(1,this._height>>t.level);const n=Math.max(1,this._depth>>t.level);const r=new ArrayBuffer(ao.calcLevelGpuSize(s,i,n,this._format));e[t.level]=new(Gi(this._format))(r)}return e[t.level]}setSource(t,e=0){let s=false;let i,n;if(this._cubemap){if(t[0]){i=t[0].width||0;n=t[0].height||0;for(let e=0;e<6;e++){const r=t[e];if(!r||r.width!==i||r.height!==n||!this.device._isBrowserInterface(r)){s=true;break}}}else{s=true}if(!s){for(let s=0;s<6;s++){if(this._levels[e][s]!==t[s]){this._levelsUpdated[e][s]=true}}}}else{if(!this.device._isBrowserInterface(t)){s=true}if(!s){if(t!==this._levels[e]){this._levelsUpdated[e]=true}if(t instanceof HTMLVideoElement){i=t.videoWidth;n=t.videoHeight}else{i=t.width;n=t.height}}}if(s){this._width=4;this._height=4;if(this._cubemap){for(let t=0;t<6;t++){this._levels[e][t]=null;this._levelsUpdated[e][t]=true}}else{this._levels[e]=null;this._levelsUpdated[e]=true}}else{if(e===0){this._width=i;this._height=n}this._levels[e]=t}if(this._invalid!==s||!s){this._invalid=s;this.upload()}}getSource(t=0){return this._levels[t]}unlock(){if(this._lockedMode===kn);if(this._lockedMode===Un){this.upload()}this._lockedLevel=-1;this._lockedMode=kn}upload(){this._needsUpload=true;this._needsMipmapsUpload=this._mipmaps;this.impl.uploadImmediate?.(this.device,this)}read(t,e,s,i,n={}){return this.impl.read?.(t,e,s,i,n)}write(t,e,s,i,n){return this.impl.write?.(t,e,s,i,n)}}const ho={white:[255,255,255,255],gray:[128,128,128,255],black:[0,0,0,255],normal:[128,128,255,255],pink:[255,128,255,255]};class co{destroy(){this.map.forEach((t=>{t.destroy()}))}constructor(){this.map=new Map}}const uo=new ro;const fo=(t,e)=>{const s=uo.get(t,(()=>new co));if(!s.map.has(e)){const i=new lo(t,{name:`built-in-texture-${e}`,width:1,height:1,format:Ds});const n=i.lock();const r=ho[e];n.set(r);i.unlock();s.map.set(e,i)}return s.map.get(e)};let po=0;class mo{constructor(){this.offsets=[]}}class _o{constructor(t,e,s){this.renderVersionUpdated=-1;this.uniformBufferOffsets=[];this.id=po++;this.device=t;this.format=e;this.dirty=true;this.impl=t.createBindGroupImpl(this);this.textures=[];this.storageTextures=[];this.storageBuffers=[];this.uniformBuffers=[];this.defaultUniformBuffer=s;if(s){this.setUniformBuffer(Ga,s)}}destroy(){this.impl.destroy();this.impl=null;this.format=null;this.defaultUniformBuffer=null}setUniformBuffer(t,e){const s=this.format.bufferFormatsMap.get(t);if(this.uniformBuffers[s]!==e){this.uniformBuffers[s]=e;this.dirty=true}}setStorageBuffer(t,e){const s=this.format.storageBufferFormatsMap.get(t);if(this.storageBuffers[s]!==e){this.storageBuffers[s]=e;this.dirty=true}}setTexture(t,e){const s=this.format.textureFormatsMap.get(t);if(this.textures[s]!==e){this.textures[s]=e;this.dirty=true}else if(this.renderVersionUpdated<e.renderVersionDirty){this.dirty=true}}setStorageTexture(t,e){const s=this.format.storageTextureFormatsMap.get(t);if(this.storageTextures[s]!==e){this.storageTextures[s]=e;this.dirty=true}else if(this.renderVersionUpdated<e.renderVersionDirty){this.dirty=true}}updateUniformBuffers(){for(let t=0;t<this.uniformBuffers.length;t++){this.uniformBuffers[t].update()}}update(){const{textureFormats:t,storageTextureFormats:e,storageBufferFormats:s}=this.format;for(let e=0;e<t.length;e++){const s=t[e];let i=s.scopeId.value;if(!i){if(s.name==="uSceneDepthMap"){i=fo(this.device,"white")}if(s.name==="uSceneColorMap"){i=fo(this.device,"pink")}if(!i){i=fo(this.device,"pink")}}this.setTexture(s.name,i)}for(let t=0;t<e.length;t++){const s=e[t];const i=s.scopeId.value;this.setStorageTexture(s.name,i)}for(let t=0;t<s.length;t++){const e=s[t];const i=e.scopeId.value;this.setStorageBuffer(e.name,i)}this.uniformBufferOffsets.length=this.uniformBuffers.length;for(let t=0;t<this.uniformBuffers.length;t++){const e=this.uniformBuffers[t];this.uniformBufferOffsets[t]=e.offset;if(this.renderVersionUpdated<e.renderVersionDirty){this.dirty=true}}if(this.dirty){this.dirty=false;this.renderVersionUpdated=this.device.renderVersion;this.impl.update(this)}}}const go={set(t,e,s,i=1){const n=t&~(i<<s);return n|e<<s},get(t,e,s=1){return t>>e&s},all(t,e,s=1){const i=s<<e;return(t&i)===i},any(t,e,s=1){return(t&s<<e)!==0}};const vo=7;const yo=15;const So=0;const xo=3;const To=7;const wo=11;const bo=14;const Eo=18;const Ao=22;const Co=23;const Po=24;const Lo=25;const Do=26;const Mo=15;const Io=Ao;class Ro{constructor(t=false,e=Le,s=ge,i=_e,n,r,a,o=true,l=true,h=true,c=true){this.target0=0;this.setColorBlend(e,s,i);this.setAlphaBlend(n??e,r??s,a??i);this.setColorWrite(o,l,h,c);this.blend=t}set blend(t){this.target0=go.set(this.target0,t?1:0,Do)}get blend(){return go.all(this.target0,Do)}setColorBlend(t,e,s){this.target0=go.set(this.target0,t,So,vo);this.target0=go.set(this.target0,e,xo,yo);this.target0=go.set(this.target0,s,To,yo)}setAlphaBlend(t,e,s){this.target0=go.set(this.target0,t,wo,vo);this.target0=go.set(this.target0,e,bo,yo);this.target0=go.set(this.target0,s,Eo,yo)}setColorWrite(t,e,s,i){this.redWrite=t;this.greenWrite=e;this.blueWrite=s;this.alphaWrite=i}get colorOp(){return go.get(this.target0,So,vo)}get colorSrcFactor(){return go.get(this.target0,xo,yo)}get colorDstFactor(){return go.get(this.target0,To,yo)}get alphaOp(){return go.get(this.target0,wo,vo)}get alphaSrcFactor(){return go.get(this.target0,bo,yo)}get alphaDstFactor(){return go.get(this.target0,Eo,yo)}set redWrite(t){this.target0=go.set(this.target0,t?1:0,Ao)}get redWrite(){return go.all(this.target0,Ao)}set greenWrite(t){this.target0=go.set(this.target0,t?1:0,Co)}get greenWrite(){return go.all(this.target0,Co)}set blueWrite(t){this.target0=go.set(this.target0,t?1:0,Po)}get blueWrite(){return go.all(this.target0,Po)}set alphaWrite(t){this.target0=go.set(this.target0,t?1:0,Lo)}get alphaWrite(){return go.all(this.target0,Lo)}get allWrite(){return go.get(this.target0,Io,Mo)}copy(t){this.target0=t.target0;return this}clone(){const t=new this.constructor;return t.copy(this)}get key(){return this.target0}equals(t){return this.target0===t.target0}static{this.NOBLEND=Object.freeze(new Ro)}static{this.NOWRITE=Object.freeze(new Ro(undefined,undefined,undefined,undefined,undefined,undefined,undefined,false,false,false,false))}static{this.ALPHABLEND=Object.freeze(new Ro(true,Le,Te,be))}static{this.ADDBLEND=Object.freeze(new Ro(true,Le,ge,ge))}}class Oo{get(t){let e=this.map.get(t);if(e===undefined){e=this.id++;this.map.set(t,e)}return e}constructor(){this.map=new Map;this.id=0}}const Fo=new Oo;const No=7;const ko=0;const Bo=3;class Uo{constructor(t=ms,e=true){this.data=0;this._depthBias=0;this._depthBiasSlope=0;this.key=0;this.func=t;this.write=e}set test(t){this.func=t?ms:ys;this.updateKey()}get test(){return this.func!==ys}set write(t){this.data=go.set(this.data,t?1:0,Bo);this.updateKey()}get write(){return go.all(this.data,Bo)}set func(t){this.data=go.set(this.data,t,ko,No);this.updateKey()}get func(){return go.get(this.data,ko,No)}set depthBias(t){this._depthBias=t;this.updateKey()}get depthBias(){return this._depthBias}set depthBiasSlope(t){this._depthBiasSlope=t;this.updateKey()}get depthBiasSlope(){return this._depthBiasSlope}copy(t){this.data=t.data;this._depthBias=t._depthBias;this._depthBiasSlope=t._depthBiasSlope;this.key=t.key;return this}clone(){const t=new this.constructor;return t.copy(this)}updateKey(){const{data:t,_depthBias:e,_depthBiasSlope:s}=this;const i=`${t}-${e}-${s}`;this.key=Fo.get(i)}equals(t){return this.key===t.key}static{this.DEFAULT=Object.freeze(new Uo)}static{this.NODEPTH=Object.freeze(new Uo(ys,false))}static{this.WRITEDEPTH=Object.freeze(new Uo(ys,true))}}class zo{equals(t){return this.globalId===t.globalId&&this.revision===t.revision}copy(t){this.globalId=t.globalId;this.revision=t.revision}reset(){this.globalId=0;this.revision=0}constructor(){this.globalId=0;this.revision=0}}let Vo=0;class Go{constructor(){Vo++;this.version=new zo;this.version.globalId=Vo}increment(){this.version.revision++}}class Ho{constructor(t){this.name=t;this.value=null;this.versionObject=new Go}toJSON(t){return undefined}setValue(t){this.value=t;this.versionObject.increment()}getValue(){return this.value}}class Wo{constructor(t){this.name=t;this.variables=new Map}resolve(t){if(!this.variables.has(t)){this.variables.set(t,new Ho(t))}return this.variables.get(t)}removeValue(t){for(const e in this.variables){const s=this.variables[e];if(s.value===t){s.value=null}}}}let Xo=0;class qo{constructor(t,e,s,i){this.usage=He;this.usage=i?.usage??He;this.device=t;this.format=e;this.numVertices=s;this.id=Xo++;this.impl=t.createVertexBufferImpl(this,e,i);this.numBytes=e.verticesByteSize?e.verticesByteSize:e.size*s;this.adjustVramSizeTracking(t._vram,this.numBytes);const n=i?.data;if(n){this.setData(n)}else{this.storage=new ArrayBuffer(this.numBytes)}this.device.buffers.push(this)}destroy(){const t=this.device;const e=t.buffers.indexOf(this);if(e!==-1){t.buffers.splice(e,1)}if(this.impl.initialized){this.impl.destroy(t);this.adjustVramSizeTracking(t._vram,-this.storage.byteLength)}}adjustVramSizeTracking(t,e){t.vb+=e}loseContext(){this.impl.loseContext()}getFormat(){return this.format}getUsage(){return this.usage}getNumVertices(){return this.numVertices}lock(){return this.storage}unlock(){this.impl.unlock(this)}setData(t){if(t.byteLength!==this.numBytes){return false}this.storage=t;this.unlock();return true}}function $o(t){if(t===null||t===undefined){return 0}let e=0;for(let s=0,i=t.length;s<i;s++){e=(e<<5)-e+t.charCodeAt(s);e|=0}return e}function jo(t){const e=16777619;let s=2166136261;for(let i=0;i<t.length;i++){s^=t[i];s*=e}return s>>>0}const Yo=new Oo;const Ko=[2,4,8,12,16];const Zo=new ro;class Qo{constructor(t,e,s){this.device=t;this._elements=[];this.hasUv0=false;this.hasUv1=false;this.hasColor=false;this.hasTangents=false;this.verticesByteSize=0;this.vertexCount=s;this.interleaved=s===undefined;this.instancing=false;this.size=e.reduce(((t,e)=>t+Math.ceil(e.components*Xa[e.type]/4)*4),0);let i=0,n;for(let t=0,r=e.length;t<r;t++){const r=e[t];n=r.components*Xa[r.type];if(s){i=wt.roundUp(i,n)}const a=r.asInt??false;const o=a?false:r.normalize??false;const l={name:r.semantic,offset:s?i:r.hasOwnProperty("offset")?r.offset:i,stride:s?n:r.hasOwnProperty("stride")?r.stride:this.size,dataType:r.type,numComponents:r.components,normalize:o,size:n,asInt:a};this._elements.push(l);if(s){i+=n*s}else{i+=Math.ceil(n/4)*4}if(r.semantic===nn){this.hasUv0=true}else if(r.semantic===rn){this.hasUv1=true}else if(r.semantic===en){this.hasColor=true}else if(r.semantic===Qi){this.hasTangents=true}}if(s){this.verticesByteSize=i}this._evaluateHash()}get elements(){return this._elements}static getDefaultInstancingFormat(t){return Zo.get(t,(()=>new Qo(t,[{semantic:wn,components:4,type:vr},{semantic:bn,components:4,type:vr},{semantic:An,components:4,type:vr},{semantic:Cn,components:4,type:vr}])))}static isElementValid(t,e){const s=e.components*Xa[e.type];if(t.isWebGPU&&!Ko.includes(s)){return false}return true}update(){this._evaluateHash()}_evaluateHash(){const t=[];const e=[];const s=this._elements.length;for(let i=0;i<s;i++){const{name:s,dataType:n,numComponents:r,normalize:a,offset:o,stride:l,size:h,asInt:c}=this._elements[i];const d=s+n+r+a+c;t.push(d);const u=d+o+l+h;e.push(u)}t.sort();const i=t.join();this.batchingHash=$o(i);this.shaderProcessingHashString=i;this.renderingHashString=e.join("_");this.renderingHash=Yo.get(this.renderingHashString)}}const Jo=new Oo;class tl{set func(t){this._func=t;this._dirty=true}get func(){return this._func}set ref(t){this._ref=t;this._dirty=true}get ref(){return this._ref}set fail(t){this._fail=t;this._dirty=true}get fail(){return this._fail}set zfail(t){this._zfail=t;this._dirty=true}get zfail(){return this._zfail}set zpass(t){this._zpass=t;this._dirty=true}get zpass(){return this._zpass}set readMask(t){this._readMask=t;this._dirty=true}get readMask(){return this._readMask}set writeMask(t){this._writeMask=t;this._dirty=true}get writeMask(){return this._writeMask}constructor(t={}){this._dirty=true;this._func=t.func??ys;this._ref=t.ref??0;this._readMask=t.readMask??255;this._writeMask=t.writeMask??255;this._fail=t.fail??Ln;this._zfail=t.zfail??Ln;this._zpass=t.zpass??Ln;this._evalKey()}_evalKey(){const{_func:t,_ref:e,_fail:s,_zfail:i,_zpass:n,_readMask:r,_writeMask:a}=this;const o=`${t},${e},${s},${i},${n},${r},${a}`;this._key=Jo.get(o);this._dirty=false}get key(){if(this._dirty){this._evalKey()}return this._key}copy(t){this._func=t._func;this._ref=t._ref;this._readMask=t._readMask;this._writeMask=t._writeMask;this._fail=t._fail;this._zfail=t._zfail;this._zpass=t._zpass;this._dirty=t._dirty;this._key=t._key;return this}clone(){const t=new this.constructor;return t.copy(this)}static{this.DEFAULT=Object.freeze(new tl)}}class el extends at{static{this.EVENT_RESIZE="resizecanvas"}constructor(t,e){super(),this.backBuffer=null,this.backBufferSize=new Ot,this.backBufferAntialias=false,this.isWebGPU=false,this.isWebGL2=false,this.isHdr=false,this.maxIndirectDrawCount=1024,this.maxColorAttachments=1,this.maxSamples=1,this.supportsCompute=false,this.supportsStorageTextureRead=false,this.renderTarget=null,this.shaders=[],this.textures=[],this.targets=new Set,this.renderVersion=0,this.insideRenderPass=false,this.supportsUniformBuffers=false,this.supportsClipDistances=false,this.textureRG11B10Renderable=false,this.textureFloatFilterable=false,this.blendState=new Ro,this.depthState=new Uo,this.stencilEnabled=false,this.stencilFront=new tl,this.stencilBack=new tl,this.defaultClearOptions={color:[0,0,0,1],depth:1,stencil:0,flags:$e|je},this.clientRect={width:0,height:0},this._shadersDirty=false,this.capsDefines=new Map,this.mapsToClear=new Set;this.canvas=t;if("setAttribute"in t){t.setAttribute("data-engine",`PlayCanvas ${T}`)}this.initOptions={...e};this.initOptions.alpha??=true;this.initOptions.depth??=true;this.initOptions.stencil??=true;this.initOptions.antialias??=true;this.initOptions.powerPreference??="high-performance";this.initOptions.displayFormat??=Aa;this._maxPixelRatio=B.browser?Math.min(1,window.devicePixelRatio):1;this.buffers=[];this._vram={tex:0,vb:0,ib:0,ub:0,sb:0};this._shaderStats={vsCompiled:0,fsCompiled:0,linked:0,materialShaders:0,compileTime:0};this.initializeContextCaches();this._drawCallsPerFrame=0;this._shaderSwitchesPerFrame=0;this._primsPerFrame=[];for(let t=Hi;t<=Yi;t++){this._primsPerFrame[t]=0}this._renderTargetCreationTime=0;this.scope=new Wo("Device");this.textureBias=this.scope.resolve("textureBias");this.textureBias.setValue(0)}postInit(){const t=new Qo(this,[{semantic:Ki,components:2,type:vr}]);const e=new Float32Array([-1,-1,1,-1,-1,1,1,1]);this.quadVertexBuffer=new qo(this,t,4,{data:e})}initCapsDefines(){const{capsDefines:t}=this;t.clear();if(this.textureFloatFilterable)t.set("CAPS_TEXTURE_FLOAT_FILTERABLE","");if(this.textureFloatRenderable)t.set("CAPS_TEXTURE_FLOAT_RENDERABLE","")}destroy(){this.fire("destroy");this.quadVertexBuffer?.destroy();this.quadVertexBuffer=null;this.dynamicBuffers?.destroy();this.dynamicBuffers=null;this.gpuProfiler?.destroy();this.gpuProfiler=null}onDestroyShader(t){this.fire("destroy:shader",t);const e=this.shaders.indexOf(t);if(e!==-1){this.shaders.splice(e,1)}}postDestroy(){this.scope=null;this.canvas=null}loseContext(){this.contextLost=true;this.backBufferSize.set(-1,-1);for(const t of this.textures){t.loseContext()}for(const t of this.buffers){t.loseContext()}for(const t of this.targets){t.loseContext()}this.gpuProfiler?.loseContext()}restoreContext(){this.contextLost=false;this.initializeRenderState();this.initializeContextCaches();for(const t of this.buffers){t.unlock()}this.gpuProfiler?.restoreContext?.()}toJSON(t){return undefined}initializeContextCaches(){this.vertexBuffers=[];this.shader=null;this.shaderValid=undefined;this.shaderAsyncCompile=false;this.renderTarget=null}initializeRenderState(){this.blendState=new Ro;this.depthState=new Uo;this.cullMode=is;this.vx=this.vy=this.vw=this.vh=0;this.sx=this.sy=this.sw=this.sh=0;this.blendColor=new bt(0,0,0,0)}setStencilState(t,e){}setBlendState(t){}setBlendColor(t,e,s,i){}setDepthState(t){}setCullMode(t){}setRenderTarget(t){this.renderTarget=t}setVertexBuffer(t){if(t){this.vertexBuffers.push(t)}}clearVertexBuffer(){this.vertexBuffers.length=0}getIndirectDrawSlot(){return 0}get indirectDrawBuffer(){return null}getRenderTarget(){return this.renderTarget}initRenderTarget(t){if(t.initialized)return;t.init();this.targets.add(t)}draw(t,e,s,i,n=true,r=true){}_isBrowserInterface(t){return this._isImageBrowserInterface(t)||this._isImageCanvasInterface(t)||this._isImageVideoInterface(t)}_isImageBrowserInterface(t){return typeof ImageBitmap!=="undefined"&&t instanceof ImageBitmap||typeof HTMLImageElement!=="undefined"&&t instanceof HTMLImageElement}_isImageCanvasInterface(t){return typeof HTMLCanvasElement!=="undefined"&&t instanceof HTMLCanvasElement}_isImageVideoInterface(t){return typeof HTMLVideoElement!=="undefined"&&t instanceof HTMLVideoElement}resizeCanvas(t,e){const s=Math.min(this._maxPixelRatio,B.browser?window.devicePixelRatio:1);const i=Math.floor(t*s);const n=Math.floor(e*s);if(i!==this.canvas.width||n!==this.canvas.height){this.setResolution(i,n)}}setResolution(t,e){this.canvas.width=t;this.canvas.height=e;this.fire(el.EVENT_RESIZE,t,e)}update(){this.updateClientRect()}updateClientRect(){if(B.worker){this.clientRect.width=this.canvas.width;this.clientRect.height=this.canvas.height}else{const t=this.canvas.getBoundingClientRect();this.clientRect.width=t.width;this.clientRect.height=t.height}}get width(){return this.canvas.width}get height(){return this.canvas.height}set fullscreen(t){}get fullscreen(){return false}set maxPixelRatio(t){this._maxPixelRatio=t}get maxPixelRatio(){return this._maxPixelRatio}get deviceType(){return this._deviceType}startRenderPass(t){}endRenderPass(t){}startComputePass(t){}endComputePass(){}frameStart(){this.renderPassIndex=0;this.renderVersion++}frameEnd(){this.mapsToClear.forEach((t=>t.clear()));this.mapsToClear.clear()}computeDispatch(t,e="Unnamed"){}getRenderableHdrFormat(t=[Vs,Fs,ks],e=true,s=1){for(let i=0;i<t.length;i++){const n=t[i];switch(n){case Vs:{if(this.textureRG11B10Renderable){return n}break}case Fs:if(this.textureHalfFloatRenderable){return n}break;case ks:if(this.isWebGPU&&s>1){continue}if(this.textureFloatRenderable&&(!e||this.textureFloatFilterable)){return n}break}}return undefined}validateAttributes(t,e,s){}}let sl=0;class il{constructor(t={}){this.id=sl++;const e=t.colorBuffer?.device??t.colorBuffers?.[0].device??t.depthBuffer?.device??t.graphicsDevice;this._device=e;const{maxSamples:s}=this._device;this._samples=Math.min(t.samples??1,s);if(e.isWebGPU){this._samples=this._samples>1?s:1}this._colorBuffer=t.colorBuffer;if(t.colorBuffer){this._colorBuffers=[t.colorBuffer]}this._depthBuffer=t.depthBuffer;this._face=t.face??0;if(this._depthBuffer){const t=this._depthBuffer._format;if(t===Us||t===Oi){this._depth=true;this._stencil=false}else if(t===zs){this._depth=true;this._stencil=true}else if(t===Bs&&this._depthBuffer.device.isWebGPU&&this._samples>1){this._depth=true;this._stencil=false}else{this._depth=false;this._stencil=false}}else{this._depth=t.depth??true;this._stencil=t.stencil??false}if(t.colorBuffers){if(!this._colorBuffers){this._colorBuffers=[...t.colorBuffers];this._colorBuffer=t.colorBuffers[0]}}this.autoResolve=t.autoResolve??true;this.name=t.name;if(!this.name){this.name=this._colorBuffer?.name}if(!this.name){this.name=this._depthBuffer?.name}if(!this.name){this.name="Untitled"}this.flipY=t.flipY??false;this._mipLevel=t.mipLevel??0;if(this._mipLevel>0&&this._depth){this._mipLevel=0}this._mipmaps=t.mipLevel===undefined;this.validateMrt();this.impl=e.createRenderTargetImpl(this)}destroy(){const t=this._device;if(t){t.targets.delete(this);if(t.renderTarget===this){t.setRenderTarget(null)}this.destroyFrameBuffers()}}destroyFrameBuffers(){const t=this._device;if(t){this.impl.destroy(t)}}destroyTextureBuffers(){this._depthBuffer?.destroy();this._depthBuffer=null;this._colorBuffers?.forEach((t=>{t.destroy()}));this._colorBuffers=null;this._colorBuffer=null}resize(t,e){if(this.width!==t||this.height!==e){if(this.mipLevel>0){return}const s=this._device;this.destroyFrameBuffers();if(s.renderTarget===this){s.setRenderTarget(null)}this._depthBuffer?.resize(t,e);this._colorBuffers?.forEach((s=>{s.resize(t,e)}));this.validateMrt();this.impl=s.createRenderTargetImpl(this)}}validateMrt(){}init(){this.impl.init(this._device,this)}get initialized(){return this.impl.initialized}get device(){return this._device}loseContext(){this.impl.loseContext()}resolve(t=true,e=!!this._depthBuffer){if(this._device&&this._samples>1){this.impl.resolve(this._device,this,t,e)}}copy(t,e,s){if(!this._device){if(t._device){this._device=t._device}else{return false}}const i=this._device.copyRenderTarget(t,this,e,s);return i}get samples(){return this._samples}get depth(){return this._depth}get stencil(){return this._stencil}get colorBuffer(){return this._colorBuffer}getColorBuffer(t){return this._colorBuffers?.[t]}get depthBuffer(){return this._depthBuffer}get face(){return this._face}get mipLevel(){return this._mipLevel}get mipmaps(){return this._mipmaps}get width(){let t=this._colorBuffer?.width||this._depthBuffer?.width||this._device.width;if(this._mipLevel>0){t=ao.calcLevelDimension(t,this._mipLevel)}return t}get height(){let t=this._colorBuffer?.height||this._depthBuffer?.height||this._device.height;if(this._mipLevel>0){t=ao.calcLevelDimension(t,this._mipLevel)}return t}isColorBufferSrgb(t=0){if(this.device.backBuffer===this){return ki(this.device.backBufferFormat)}const e=this.getColorBuffer(t);return e?ki(e.format):false}}class nl{update(t){this.destroy();const e=t.device;const s=this.createDescriptor(e,t);this.bindGroup=e.wgpu.createBindGroup(s)}destroy(){this.bindGroup=null}createDescriptor(t,e){const s=[];const i=e.format;const n=e.format.uniformBufferFormats;e.uniformBuffers.forEach(((t,e)=>{const i=n[e].slot;const r=t.persistent?t.impl.buffer:t.allocation.gpuBuffer.buffer;s.push({binding:i,resource:{buffer:r,offset:0,size:t.format.byteSize}})}));const r=e.format.textureFormats;e.textures.forEach(((e,n)=>{const a=e.impl;const o=i.textureFormats[n];const l=r[n].slot;const h=a.getView(t);s.push({binding:l,resource:h});if(o.hasSampler){const e=a.getSampler(t,o.sampleType);s.push({binding:l+1,resource:e})}}));const a=e.format.storageTextureFormats;e.storageTextures.forEach(((e,i)=>{const n=e.impl;const r=a[i].slot;const o=n.getView(t);s.push({binding:r,resource:o})}));const o=e.format.storageBufferFormats;e.storageBuffers.forEach(((t,e)=>{const i=t.impl.buffer;const n=o[e].slot;s.push({binding:n,resource:{buffer:i}})}));const l={layout:e.format.impl.bindGroupLayout,entries:s};return l}}class rl{static shaderStage(t){let e=0;if(t&wa)e|=GPUShaderStage.VERTEX;if(t&ba)e|=GPUShaderStage.FRAGMENT;if(t&Ea)e|=GPUShaderStage.COMPUTE;return e}}const al=[];al[ws]="";al[bs]="";al[Es]="";al[xi]="r8unorm";al[Ti]="rg8unorm";al[As]="";al[Cs]="";al[Ps]="";al[Ls]="rgba8unorm";al[Ds]="rgba8unorm";al[Ms]="bc1-rgba-unorm";al[Is]="bc2-rgba-unorm";al[Rs]="bc3-rgba-unorm";al[Os]="";al[Fs]="rgba16float";al[yi]="r16float";al[Si]="rg16float";al[Ns]="";al[ks]="rgba32float";al[Bs]="r32float";al[Us]="depth32float";al[Oi]="depth16unorm";al[zs]="depth24plus-stencil8";al[Vs]="rg11b10ufloat";al[Gs]="";al[Hs]="rgba8unorm-srgb";al[Ws]="";al[Xs]="etc2-rgb8unorm";al[qs]="etc2-rgba8unorm";al[$s]="";al[js]="";al[Ys]="";al[Ks]="";al[Zs]="astc-4x4-unorm";al[Qs]="";al[Js]="";al[ti]="bgra8unorm";al[Li]="bgra8unorm-srgb";al[ei]="r8sint";al[si]="r8uint";al[ii]="r16sint";al[ni]="r16uint";al[ri]="r32sint";al[ai]="r32uint";al[oi]="rg8sint";al[li]="rg8uint";al[hi]="rg16sint";al[ci]="rg16uint";al[di]="rg32sint";al[ui]="rg32uint";al[fi]="rgba8sint";al[pi]="rgba8uint";al[mi]="rgba16sint";al[_i]="rgba16uint";al[gi]="rgba32sint";al[vi]="rgba32uint";al[Di]="bc6h-rgb-float";al[Mi]="bc6h-rgb-ufloat";al[Ii]="bc7-rgba-unorm";al[wi]="bc1-rgba-unorm-srgb";al[bi]="bc2-rgba-unorm-srgb";al[Ei]="bc3-rgba-unorm-srgb";al[Ai]="etc2-rgb8unorm-srgb";al[Ci]="etc2-rgba8unorm-srgb";al[Ri]="bc7-rgba-unorm-srgb";al[Pi]="astc-4x4-unorm-srgb";const ol=[];ol[er]="filtering";ol[sr]="non-filtering";ol[ir]="comparison";ol[nr]="comparison";ol[rr]="comparison";const ll=[];ll[er]="float";ll[sr]="unfilterable-float";ll[ir]="depth";ll[nr]="sint";ll[rr]="uint";const hl=new Oo;class cl{constructor(t){const e=t.device;const{key:s,desc:i}=this.createDescriptor(t);this.key=hl.get(s);this.bindGroupLayout=e.wgpu.createBindGroupLayout(i)}destroy(){this.bindGroupLayout=null}loseContext(){}createDescriptor(t){const e=[];let s="";t.uniformBufferFormats.forEach((t=>{const i=rl.shaderStage(t.visibility);s+=`#${t.slot}U:${i}`;e.push({binding:t.slot,visibility:i,buffer:{type:"uniform",hasDynamicOffset:true}})}));t.textureFormats.forEach((t=>{const i=rl.shaderStage(t.visibility);const n=t.sampleType;const r=t.textureDimension;const a=false;const o=ll[n];s+=`#${t.slot}T:${i}-${o}-${r}-${a}`;e.push({binding:t.slot,visibility:i,texture:{sampleType:o,viewDimension:r,multisampled:a}});if(t.hasSampler){const r=ol[n];s+=`#${t.slot+1}S:${i}-${r}`;e.push({binding:t.slot+1,visibility:i,sampler:{type:r}})}}));t.storageTextureFormats.forEach((t=>{const{format:i,textureDimension:n}=t;const{read:r,write:a}=t;s+=`#${t.slot}ST:${i}-${n}-${r?"r1":"r0"}-${a?"w1":"w0"}`;e.push({binding:t.slot,visibility:GPUShaderStage.COMPUTE,storageTexture:{access:r?a?"read-write":"read-only":"write-only",format:al[i],viewDimension:n}})}));t.storageBufferFormats.forEach((t=>{const i=t.readOnly;const n=rl.shaderStage(t.visibility);s+=`#${t.slot}SB:${n}-${i?"ro":"rw"}`;e.push({binding:t.slot,visibility:n,buffer:{type:i?"read-only-storage":"storage"}})}));const i={entries:e};return{key:s,desc:i}}}class dl{constructor(t=0){this.buffer=null;this.usageFlags=0;this.usageFlags=t}destroy(t){if(this.buffer){this.buffer.destroy();this.buffer=null}}get initialized(){return!!this.buffer}loseContext(){}allocate(t,e){this.buffer=t.wgpu.createBuffer({size:e,usage:this.usageFlags})}unlock(t,e){const s=t.wgpu;if(!this.buffer){const s=e.byteLength+3&-4;this.usageFlags|=GPUBufferUsage.COPY_DST;this.allocate(t,s)}const i=e.byteOffset??0;const n=new Uint8Array(e.buffer??e,i,e.byteLength);const r=new Uint8Array(this.buffer.size);r.set(n);s.queue.writeBuffer(this.buffer,0,r,0,r.length)}read(t,e,s,i,n){return t.readStorageBuffer(this,e,s,i,n)}write(t,e,s,i,n){t.writeStorageBuffer(this,e,s,i,n)}clear(t,e,s){t.clearStorageBuffer(this,e,s)}}class ul extends dl{constructor(t,e){super(Be|(e?.storage?Ve:0)),this.format=null;this.format=t.format===xs?"uint16":"uint32"}unlock(t){const e=t.device;super.unlock(e,t.storage)}}const fl={equals(t,e){if(t.length!==e.length){return false}for(let s=0;s<t.length;s++){if(t[s]!==e[s]){return false}}return true}};const pl=[];pl[ur]="sint8";pl[fr]="uint8";pl[pr]="sint16";pl[mr]="uint16";pl[_r]="sint32";pl[gr]="uint32";pl[vr]="float32";pl[yr]="float16";const ml=[];ml[ur]="snorm8";ml[fr]="unorm8";ml[pr]="snorm16";ml[mr]="unorm16";ml[_r]="sint32";ml[gr]="uint32";ml[vr]="float32";ml[yr]="float16";class _l{get(t,e=null){const s=this.getKey(t,e);let i=this.cache.get(s);if(!i){i=this.create(t,e);this.cache.set(s,i)}return i}getKey(t,e=null){return`${t?.renderingHashString}-${e?.renderingHashString}`}create(t,e){const s=[];const i=t=>{const e=t.interleaved;const i=t.instancing?"instance":"vertex";let n=[];const r=t.elements.length;for(let a=0;a<r;a++){const o=t.elements[a];const l=Za[o.name];const h=o.normalize?ml:pl;n.push({shaderLocation:l,offset:e?o.offset:0,format:`${h[o.dataType]}${o.numComponents>1?`x${o.numComponents}`:""}`});if(!e||a===r-1){s.push({attributes:n,arrayStride:o.stride,stepMode:i});n=[]}}};if(t){i(t)}if(e){i(e)}return s}constructor(){this.cache=new Map}}class gl{constructor(t){this.device=t}getPipelineLayout(t){const e=[];t.forEach((t=>{e.push(t.bindGroupLayout)}));const s={bindGroupLayouts:e};const i=this.device.wgpu.createPipelineLayout(s);return i}}const vl=["point-list","line-list",undefined,"line-strip","triangle-list","triangle-strip",undefined];const yl=["add","subtract","reverse-subtract","min","max"];const Sl=["zero","one","src","one-minus-src","dst","one-minus-dst","src-alpha","src-alpha-saturated","one-minus-src-alpha","dst-alpha","one-minus-dst-alpha","constant","one-minus-constant"];const xl=["never","less","equal","less-equal","greater","not-equal","greater-equal","always"];const Tl=["none","back","front"];const wl=["keep","zero","replace","increment-clamp","increment-wrap","decrement-clamp","decrement-wrap","invert"];const bl=["","uint16","uint32"];class El{}class Al extends gl{constructor(t){super(t),this.lookupHashes=new Uint32Array(14);this.vertexBufferLayout=new _l;this.cache=new Map}get(t,e,s,i,n,r,a,o,l,h,c,d,u){const f=t.type;if(i&&f!==qi&&f!==ji){i=undefined}const p=this.lookupHashes;p[0]=f;p[1]=n.id;p[2]=h;p[3]=l.key;p[4]=o.key;p[5]=e?.renderingHash??0;p[6]=s?.renderingHash??0;p[7]=r.impl.key;p[8]=a[0]?.key??0;p[9]=a[1]?.key??0;p[10]=a[2]?.key??0;p[11]=c?d.key:0;p[12]=c?u.key:0;p[13]=i??0;const m=jo(p);let _=this.cache.get(m);if(_){for(let t=0;t<_.length;t++){const e=_[t];if(fl.equals(e.hashes,p)){return e.pipeline}}}const g=vl[f];const v=this.getPipelineLayout(a);const y=this.vertexBufferLayout.get(e,s);const S=new El;S.hashes=new Uint32Array(p);S.pipeline=this.create(g,i,n,r,v,o,l,y,h,c,d,u);if(_){_.push(S)}else{_=[S]}this.cache.set(m,_);return S.pipeline}getBlend(t){let e;if(t.blend){e={color:{operation:yl[t.colorOp],srcFactor:Sl[t.colorSrcFactor],dstFactor:Sl[t.colorDstFactor]},alpha:{operation:yl[t.alphaOp],srcFactor:Sl[t.alphaSrcFactor],dstFactor:Sl[t.alphaDstFactor]}}}return e}getDepthStencil(t,e,s,i,n,r){let a;const{depth:o,stencil:l}=e;if(o||l){a={format:e.impl.depthAttachment.format};if(o){a.depthWriteEnabled=t.write;a.depthCompare=xl[t.func];const e=r==="triangle-list"||r==="triangle-strip";a.depthBias=e?t.depthBias:0;a.depthBiasSlopeScale=e?t.depthBiasSlope:0}else{a.depthWriteEnabled=false;a.depthCompare="always"}if(l&&s){a.stencilReadMas=i.readMask;a.stencilWriteMask=i.writeMask;a.stencilFront={compare:xl[i.func],failOp:wl[i.fail],passOp:wl[i.zpass],depthFailOp:wl[i.zfail]};a.stencilBack={compare:xl[n.func],failOp:wl[n.fail],passOp:wl[n.zpass],depthFailOp:wl[n.zfail]}}}return a}create(t,e,s,i,n,r,a,o,l,h,c,d){const u=this.device.wgpu;const f=s.impl;const p={vertex:{module:f.getVertexShaderModule(),entryPoint:f.vertexEntryPoint,buffers:o},primitive:{topology:t,frontFace:"ccw",cullMode:Tl[l]},depthStencil:this.getDepthStencil(a,i,h,c,d,t),multisample:{count:i.samples},layout:n};if(e){p.primitive.stripIndexFormat=bl[e]}p.fragment={module:f.getFragmentShaderModule(),entryPoint:f.fragmentEntryPoint,targets:[]};const m=i.impl.colorAttachments;if(m.length>0){let t=0;if(r.redWrite)t|=GPUColorWrite.RED;if(r.greenWrite)t|=GPUColorWrite.GREEN;if(r.blueWrite)t|=GPUColorWrite.BLUE;if(r.alphaWrite)t|=GPUColorWrite.ALPHA;const e=this.getBlend(r);m.forEach((s=>{p.fragment.targets.push({format:s.format,writeMask:t,blend:e})}))}const _=u.createRenderPipeline(p);return _}}class Cl extends gl{get(t,e){const s=this.getPipelineLayout([e.impl]);const i=this.create(t,s);return i}create(t,e){const s=this.device.wgpu;const i=t.impl;const n={compute:{module:i.getComputeShaderModule(),entryPoint:i.computeEntryPoint},layout:e};const r=s.createComputePipeline(n);return r}}class Pl{incRefCount(){this._refCount++}decRefCount(){this._refCount--}get refCount(){return this._refCount}constructor(){this._refCount=0}}class Ll extends Pl{constructor(t){super();this.object=t;this.incRefCount()}}class Dl{destroy(){this.cache.forEach((t=>{t.object?.destroy()}));this.cache.clear()}clear(){this.cache.clear()}get(t){const e=this.cache.get(t);if(e){e.incRefCount();return e.object}return null}set(t,e){this.cache.set(t,new Ll(e))}release(t){const e=this.cache.get(t);if(e){e.decRefCount();if(e.refCount===0){this.cache.delete(t);e.object?.destroy()}}}constructor(){this.cache=new Map}}class Ml extends Dl{loseContext(t){this.clear()}}const Il=new ro;const Rl=t=>Il.get(t,(()=>new Ml));const Ol=new Oo;class Fl{destroy(){this.multisampledBuffer?.destroy();this.multisampledBuffer=null}}class Nl{constructor(t){this.depthTexture=null;this.depthTextureInternal=false;this.multisampledDepthBuffer=null;this.format=t;this.hasStencil=t==="depth24plus-stencil8"}destroy(t){if(this.depthTextureInternal){this.depthTexture?.destroy();this.depthTexture=null}if(this.multisampledDepthBuffer){this.multisampledDepthBuffer=null;Rl(t).release(this.multisampledDepthBufferKey)}}}class kl{constructor(t){this.initialized=false;this.colorAttachments=[];this.depthAttachment=null;this.assignedColorTexture=null;this.renderPassDescriptor={};this.isBackbuffer=false;this.renderTarget=t}destroy(t){this.initialized=false;this.assignedColorTexture=null;this.colorAttachments.forEach((t=>{t.destroy()}));this.colorAttachments.length=0;this.depthAttachment?.destroy(t);this.depthAttachment=null}updateKey(){const t=this.renderTarget;let e=`${t.samples}:${this.depthAttachment?this.depthAttachment.format:"nodepth"}`;this.colorAttachments.forEach((t=>{e+=`:${t.format}`}));this.key=Ol.get(e)}assignColorTexture(t,e){this.assignedColorTexture=e;const s=e.createView({format:t.backBufferViewFormat});const i=this.renderPassDescriptor.colorAttachments[0];const n=this.renderTarget.samples;if(n>1){i.resolveTarget=s}else{i.view=s}this.setColorAttachment(0,undefined,t.backBufferViewFormat);this.updateKey()}setColorAttachment(t,e,s){if(!this.colorAttachments[t]){this.colorAttachments[t]=new Fl}if(e){this.colorAttachments[t].multisampledBuffer=e}if(s){this.colorAttachments[t].format=s}}init(t,e){const s=t.wgpu;this.initDepthStencil(t,s,e);if(e._colorBuffers){e._colorBuffers.forEach(((t,e)=>{this.setColorAttachment(e,undefined,t.impl.format)}))}this.renderPassDescriptor.colorAttachments=[];const i=this.isBackbuffer?1:e._colorBuffers?.length??0;for(let n=0;n<i;++n){const i=this.initColor(t,s,e,n);const r=n===0&&this.colorAttachments[0]?.format;if(i.view||r){this.renderPassDescriptor.colorAttachments.push(i)}}this.updateKey();this.initialized=true}initDepthStencil(t,e,s){const{samples:i,width:n,height:r,depth:a,depthBuffer:o}=s;if(a||o){let s;if(!o){this.depthAttachment=new Nl("depth24plus-stencil8");const t={size:[n,r,1],dimension:"2d",sampleCount:i,format:this.depthAttachment.format,usage:GPUTextureUsage.RENDER_ATTACHMENT};if(i>1){t.usage|=GPUTextureUsage.TEXTURE_BINDING}else{t.usage|=GPUTextureUsage.COPY_SRC}const a=e.createTexture(t);this.depthAttachment.depthTexture=a;this.depthAttachment.depthTextureInternal=true;s=a.createView()}else{this.depthAttachment=new Nl(o.impl.format);if(i>1){const a="depth24plus-stencil8";this.depthAttachment.format=a;this.depthAttachment.hasStencil=a==="depth24plus-stencil8";const l=`${o.id}:${n}:${r}:${i}:${a}`;const h=Rl(t);let c=h.get(l);if(!c){const t={size:[n,r,1],dimension:"2d",sampleCount:i,format:a,usage:GPUTextureUsage.RENDER_ATTACHMENT|(a!==o.impl.format?GPUTextureUsage.TEXTURE_BINDING:0)};c=e.createTexture(t);h.set(l,c)}this.depthAttachment.multisampledDepthBuffer=c;this.depthAttachment.multisampledDepthBufferKey=l;s=c.createView()}else{const t=o.impl.gpuTexture;this.depthAttachment.depthTexture=t;s=t.createView()}}this.renderPassDescriptor.depthStencilAttachment={view:s}}}initColor(t,e,s,i){const n={};const{samples:r,width:a,height:o,mipLevel:l}=s;const h=s.getColorBuffer(i);let c=null;if(h){const t=1;if(h.cubemap){c=h.impl.createView({dimension:"2d",baseArrayLayer:s.face,arrayLayerCount:1,mipLevelCount:t,baseMipLevel:l})}else{c=h.impl.createView({mipLevelCount:t,baseMipLevel:l})}}if(r>1){const s=this.isBackbuffer?t.backBufferViewFormat:h.impl.format;const l={size:[a,o,1],dimension:"2d",sampleCount:r,format:s,usage:GPUTextureUsage.RENDER_ATTACHMENT};const d=e.createTexture(l);this.setColorAttachment(i,d,l.format);n.view=d.createView();n.resolveTarget=c}else{n.view=c}return n}setupForRenderPass(t,e){const s=this.renderPassDescriptor.colorAttachments?.length??0;for(let i=0;i<s;++i){const s=this.renderPassDescriptor.colorAttachments[i];const n=t.colorArrayOps[i];const r=e.isColorBufferSrgb(i);s.clearValue=r?n.clearValueLinear:n.clearValue;s.loadOp=n.clear?"clear":"load";s.storeOp=n.store?"store":"discard"}const i=this.renderPassDescriptor.depthStencilAttachment;if(i){i.depthClearValue=t.depthStencilOps.clearDepthValue;i.depthLoadOp=t.depthStencilOps.clearDepth?"clear":"load";i.depthStoreOp=t.depthStencilOps.storeDepth?"store":"discard";i.depthReadOnly=false;if(this.depthAttachment.hasStencil){i.stencilClearValue=t.depthStencilOps.clearStencilValue;i.stencilLoadOp=t.depthStencilOps.clearStencil?"clear":"load";i.stencilStoreOp=t.depthStencilOps.storeStencil?"store":"discard";i.stencilReadOnly=false}}}loseContext(){this.initialized=false}resolve(t,e,s,i){}}const Bl=[];Bl[Tr]=1;Bl[wr]=2;Bl[br]=3;Bl[Er]=4;Bl[xr]=1;Bl[Ar]=2;Bl[Cr]=3;Bl[Pr]=4;Bl[Sr]=1;Bl[Lr]=2;Bl[Dr]=3;Bl[Mr]=4;Bl[Ir]=8;Bl[Rr]=12;Bl[Or]=16;Bl[qr]=1;Bl[$r]=2;Bl[jr]=3;Bl[Yr]=4;class Ul{get isArrayType(){return this.count>0}constructor(t,e,s=0){this.shortName=t;this.name=s?`${t}[0]`:t;this.type=e;this.numComponents=Bl[e];this.updateType=e;if(s>0){switch(e){case Tr:this.updateType=kr;break;case xr:this.updateType=Kr;break;case qr:this.updateType=Zr;break;case Sr:this.updateType=Qr;break;case wr:this.updateType=Vr;break;case Ar:this.updateType=Jr;break;case $r:this.updateType=ta;break;case Lr:this.updateType=ea;break;case br:this.updateType=Gr;break;case Cr:this.updateType=sa;break;case jr:this.updateType=ia;break;case Dr:this.updateType=na;break;case Er:this.updateType=Hr;break;case Pr:this.updateType=ra;break;case Yr:this.updateType=aa;break;case Mr:this.updateType=oa;break;case Or:this.updateType=Wr;break}}this.count=s;let i=this.numComponents;if(s){i=wt.roundUp(i,4)}this.byteSize=i*4;if(s){this.byteSize*=s}}calculateOffset(t){let e=this.byteSize<=8?this.byteSize:16;if(this.count){e=16}t=wt.roundUp(t,e);this.offset=t/4}}class zl{constructor(t,e){this.byteSize=0;this.map=new Map;this.scope=t.scope;this.uniforms=e;let s=0;for(let t=0;t<e.length;t++){const i=e[t];i.calculateOffset(s);s=i.offset*4+i.byteSize;i.scopeId=this.scope.resolve(i.name);this.map.set(i.name,i)}this.byteSize=wt.roundUp(s,16)}get(t){return this.map.get(t)}}const Vl=/[ \t]*(\battribute\b|\bvarying\b|\buniform\b)/g;const Gl=/(\battribute\b|\bvarying\b|\bout\b|\buniform\b)[ \t]*([^;]+)(;+)/g;const Hl="@@@";const Wl=/([\w-]+)\[(.*?)\]/;const Xl=new Set(["highp","mediump","lowp"]);const ql=new Set(["sampler2DShadow","samplerCubeShadow","sampler2DArrayShadow"]);const $l={sampler2D:Kn,sampler3D:tr,samplerCube:Qn,samplerCubeShadow:Qn,sampler2DShadow:Kn,sampler2DArray:Zn,sampler2DArrayShadow:Zn,isampler2D:Kn,usampler2D:Kn,isampler3D:tr,usampler3D:tr,isamplerCube:Qn,usamplerCube:Qn,isampler2DArray:Zn,usampler2DArray:Zn};const jl={[Kn]:"texture2D",[Qn]:"textureCube",[tr]:"texture3D",[Zn]:"texture2DArray"};class Yl{constructor(t,e){this.line=t;const s=t.trim().split(/\s+/);if(Xl.has(s[0])){this.precision=s.shift()}this.type=s.shift();if(t.includes(","));if(t.includes("[")){const t=s.join(" ");const i=Wl.exec(t);this.name=i[1];this.arraySize=Number(i[2]);if(isNaN(this.arraySize)){e.failed=true}}else{this.name=s.shift();this.arraySize=0}this.isSampler=this.type.indexOf("sampler")!==-1;this.isSignedInt=this.type.indexOf("isampler")!==-1;this.isUnsignedInt=this.type.indexOf("usampler")!==-1}}class Kl{static run(t,e,s){const i=new Map;const n=Kl.extract(e.vshader);const r=Kl.extract(e.fshader);const a=new Map;const o=Kl.processAttributes(n.attributes,e.attributes,a,e.processingOptions);const l=Kl.processVaryings(n.varyings,i,true);const h=Kl.processVaryings(r.varyings,i,false);const c=Kl.processOuts(r.outs);const d=n.uniforms.concat(r.uniforms);const u=Array.from(new Set(d));const f=u.map((t=>new Yl(t,s)));const p=Kl.processUniforms(t,f,e.processingOptions,s);const m=`${o}\n${l}\n${p.code}`;const _=n.src.replace(Hl,m);const g=`${h}\n${c}\n${p.code}`;const v=r.src.replace(Hl,g);return{vshader:_,fshader:v,attributes:a,meshUniformBufferFormat:p.meshUniformBufferFormat,meshBindGroupFormat:p.meshBindGroupFormat}}static extract(t){const e=[];const s=[];const i=[];const n=[];let r=`${Hl}\n`;let a;while((a=Vl.exec(t))!==null){const o=a[1];switch(o){case"attribute":case"varying":case"uniform":case"out":{Gl.lastIndex=a.index;const l=Gl.exec(t);if(o==="attribute"){e.push(l[2])}else if(o==="varying"){s.push(l[2])}else if(o==="out"){i.push(l[2])}else if(o==="uniform"){n.push(l[2])}t=Kl.cutOut(t,a.index,Gl.lastIndex,r);Vl.lastIndex=a.index+r.length;r="";break}}}return{src:t,attributes:e,varyings:s,outs:i,uniforms:n}}static processUniforms(t,e,s,i){const n=[];const r=[];e.forEach((t=>{if(t.isSampler){n.push(t)}else{r.push(t)}}));const a=[];r.forEach((t=>{if(!s.hasUniform(t.name)){const e=_a.indexOf(t.type);const s=new Ul(t.name,e,t.arraySize);a.push(s)}}));if(a.length===0){a.push(new Ul(Ha,Tr))}const o=a.length?new zl(t,a):null;const l=[];n.forEach((t=>{if(!s.hasTexture(t.name)){let e=er;if(t.isSignedInt){e=nr}else if(t.isUnsignedInt){e=rr}else{if(t.precision==="highp"){e=sr}if(ql.has(t.type)){e=ir}}const s=$l[t.type];l.push(new so(t.name,wa|ba,s,e))}}));const h=new no(t,l);let c="";s.uniformFormats.forEach(((t,e)=>{if(t){c+=Kl.getUniformShaderDeclaration(t,e,0)}}));if(o){c+=Kl.getUniformShaderDeclaration(o,za,0)}s.bindGroupFormats.forEach(((t,e)=>{if(t){c+=Kl.getTexturesShaderDeclaration(t,e)}}));c+=Kl.getTexturesShaderDeclaration(h,Ua);return{code:c,meshUniformBufferFormat:o,meshBindGroupFormat:h}}static processVaryings(t,e,s){let i="";const n=s?"out":"in";t.forEach(((t,r)=>{const a=Kl.splitToWords(t);const o=a.slice(0,-1).join(" ");const l=a[a.length-1];if(s){e.set(l,r)}else{r=e.get(l)}i+=`layout(location = ${r}) ${n} ${o} ${l};\n`}));return i}static processOuts(t){let e="";t.forEach(((t,s)=>{e+=`layout(location = ${s}) out ${t};\n`}));return e}static getTypeCount(t){const e=t.substring(t.length-1);const s=parseInt(e,10);return isNaN(s)?1:s}static processAttributes(t,e,s,i){let n="";t.forEach((t=>{const r=Kl.splitToWords(t);let a=r[0];let o=r[1];if(e.hasOwnProperty(o)){const t=e[o];const r=Za[t];s.set(r,o);let l;const h=i.getVertexElement(t);if(h){const t=h.dataType;if(t!==vr&&t!==yr&&!h.normalize&&!h.asInt){const e=Kl.getTypeCount(a);const s=`_private_${o}`;l=`vec${e} ${o} = vec${e}(${s});\n`;o=s;const i=t===ur||t===pr||t===_r;if(e===1){a=i?"int":"uint"}else{a=i?`ivec${e}`:`uvec${e}`}}}n+=`layout(location = ${r}) in ${a} ${o};\n`;if(l){n+=l}}}));return n}static splitToWords(t){t=t.replace(/\s+/g," ").trim();return t.split(" ")}static cutOut(t,e,s,i){return t.substring(0,e)+i+t.substring(s)}static getUniformShaderDeclaration(t,e,s){const i=Va[e];let n=`layout(set = ${e}, binding = ${s}, std140) uniform ub_${i} {\n`;t.uniforms.forEach((t=>{const e=_a[t.type];n+=`    ${e} ${t.shortName}${t.count?`[${t.count}]`:""};\n`}));return`${n}};\n`}static getTexturesShaderDeclaration(t,e){let s="";t.textureFormats.forEach((t=>{let i=jl[t.textureDimension];const n=i==="texture2DArray";const r=t.sampleType===rr?"u":t.sampleType===nr?"i":"";i=`${r}${i}`;let a="";let o="";if(n){a="_texture";o=`#define ${t.name} ${r}sampler2DArray(${t.name}${a}, ${t.name}_sampler)\n`}s+=`layout(set = ${e}, binding = ${t.slot}) uniform ${i} ${t.name}${a};\n`;if(t.hasSampler){s+=`layout(set = ${e}, binding = ${t.slot+1}) uniform sampler ${t.name}_sampler;\n`}s+=o}));return s}}const Zl=/^[ \t]*(attribute|varying|uniform)[\t ]+/gm;const Ql=/^[ \t]*(attribute|varying|uniform)[ \t]*([^;]+)(;+)/gm;const Jl=/^[ \t]*var\s*(?:(<storage,[^>]*>)\s*([\w\d_]+)\s*:\s*(.*?)\s*;|(<(?!storage,)[^>]*>)?\s*([\w\d_]+)\s*:\s*(texture_.*|storage_texture_.*|storage\w.*|external_texture|sampler(?:_comparison)?)\s*;)\s*$/gm;const th=/(?:@interpolate\([^)]*\)\s*)?([\w]+)\s*:/;const eh="@@@";const sh=/(@vertex|@fragment)\s*fn\s+\w+\s*\(\s*(\w+)\s*:[\s\S]*?\{/;const ih={texture_1d:{viewDimension:Yn,baseSampleType:er},texture_2d:{viewDimension:Kn,baseSampleType:er},texture_2d_array:{viewDimension:Zn,baseSampleType:er},texture_3d:{viewDimension:tr,baseSampleType:er},texture_cube:{viewDimension:Qn,baseSampleType:er},texture_cube_array:{viewDimension:Jn,baseSampleType:er},texture_multisampled_2d:{viewDimension:Kn,baseSampleType:er},texture_depth_2d:{viewDimension:Kn,baseSampleType:ir},texture_depth_2d_array:{viewDimension:Zn,baseSampleType:ir},texture_depth_cube:{viewDimension:Qn,baseSampleType:ir},texture_depth_cube_array:{viewDimension:Jn,baseSampleType:ir},texture_external:{viewDimension:Kn,baseSampleType:sr}};const nh=(t,e)=>{const s=ih[t];let i=s.baseSampleType;if(s.baseSampleType===er&&t!=="texture_multisampled_2d"){switch(e){case"u32":i=rr;break;case"i32":i=nr;break;case"f32":i=er;break;case"uff":i=sr;break}}return{viewDimension:s.viewDimension,sampleType:i}};const rh=(t,e)=>{if(e===ir){switch(t){case Kn:return"texture_depth_2d";case Zn:return"texture_depth_2d_array";case Qn:return"texture_depth_cube";case Jn:return"texture_depth_cube_array"}}let s;switch(t){case Yn:s="texture_1d";break;case Kn:s="texture_2d";break;case Zn:s="texture_2d_array";break;case tr:s="texture_3d";break;case Qn:s="texture_cube";break;case Jn:s="texture_cube_array";break}let i;switch(e){case er:case sr:i="f32";break;case rr:i="u32";break;case nr:i="i32";break}return`${s}<${i}>`};const ah={f32:"WrappedF32",i32:"WrappedI32",u32:"WrappedU32",vec2f:"WrappedVec2F",vec2i:"WrappedVec2I",vec2u:"WrappedVec2U"};const oh=t=>{t=t.replace(/\s+/g," ").trim();return t.split(/[\s:]+/)};const lh=/array<([^,]+),\s*([^>]+)>/;class hh{constructor(t,e){this.ubName=null;this.arraySize=0;this.line=t;const s=oh(t);if(s.length<2){e.failed=true;return}this.name=s[0];this.type=s.slice(1).join(" ");if(this.type.includes("array<")){const t=lh.exec(this.type);this.type=t[1].trim();this.arraySize=Number(t[2]);if(isNaN(this.arraySize)){e.failed=true}}}}const ch=/^\s*var\s+(\w+)\s*:\s*(texture_\w+)(?:<(\w+)>)?;\s*$/;const dh=/^\s*var\s+([\w\d_]+)\s*:\s*(texture_storage_2d|texture_storage_2d_array)<([\w\d_]+),\s*(\w+)>\s*;\s*$/;const uh=/^\s*var\s*<storage,\s*(read|write)?>\s*([\w\d_]+)\s*:\s*(.*)\s*;\s*$/;const fh=/^\s*var\s+([\w\d_]+)\s*:\s*texture_external;\s*$/;const ph=/^\s*var\s+([\w\d_]+)\s*:\s*(sampler|sampler_comparison)\s*;\s*$/;class mh{constructor(t,e){this.originalLine=t;this.line=t;this.isTexture=false;this.isSampler=false;this.isStorageTexture=false;this.isStorageBuffer=false;this.isExternalTexture=false;this.type="";this.matchedElements=[];const s=this.line.match(ch);if(s){this.name=s[1];this.type=s[2];this.textureFormat=s[3];this.isTexture=true;this.matchedElements.push(...s);const t=nh(this.type,this.textureFormat);this.textureDimension=t.viewDimension;this.sampleType=t.sampleType}const i=this.line.match(dh);if(i){this.isStorageTexture=true;this.name=i[1];this.textureType=i[2];this.format=i[3];this.access=i[4];this.matchedElements.push(...i)}const n=this.line.match(uh);if(n){this.isStorageBuffer=true;this.accessMode=n[1]||"none";this.name=n[2];this.type=n[3];this.matchedElements.push(...n)}const r=this.line.match(fh);if(r){this.name=r[1];this.isExternalTexture=true;this.matchedElements.push(...n)}const a=this.line.match(ph);if(a){this.name=a[1];this.samplerType=a[2];this.isSampler=true;this.matchedElements.push(...a)}if(this.matchedElements.length===0){e.failed=true}}equals(t){if(this.name!==t.name)return false;if(this.type!==t.type)return false;if(this.isTexture!==t.isTexture)return false;if(this.isSampler!==t.isSampler)return false;if(this.isStorageTexture!==t.isStorageTexture)return false;if(this.isStorageBuffer!==t.isStorageBuffer)return false;if(this.isExternalTexture!==t.isExternalTexture)return false;if(this.textureFormat!==t.textureFormat)return false;if(this.textureDimension!==t.textureDimension)return false;if(this.sampleType!==t.sampleType)return false;if(this.textureType!==t.textureType)return false;if(this.format!==t.format)return false;if(this.access!==t.access)return false;if(this.accessMode!==t.accessMode)return false;if(this.samplerType!==t.samplerType)return false;return true}}class _h{static run(t,e,s){const i=new Map;const n=_h.extract(e.vshader);const r=_h.extract(e.fshader);const a=new Map;const o=_h.processAttributes(n.attributes,e.attributes,a,e.processingOptions,s);const l=_h.processVaryings(n.varyings,i,true);const h=_h.processVaryings(r.varyings,i,false);const c=n.uniforms.concat(r.uniforms);const d=Array.from(new Set(c));const u=d.map((t=>new hh(t,s)));const f=_h.processUniforms(t,u,e.processingOptions,s);n.src=_h.renameUniformAccess(n.src,u);r.src=_h.renameUniformAccess(r.src,u);const p=_h.mergeResources(n.resources,r.resources,s);const m=_h.processResources(t,p,e.processingOptions,s);const _=_h.generateFragmentOutputStruct(r.src,t.maxColorAttachments);n.src=_h.copyInputs(n.src,s);r.src=_h.copyInputs(r.src,s);const g=`${o}\n${l}\n${f.code}\n${m.code}\n`;const v=n.src.replace(eh,g);const y=`${h}\n${_}\n${f.code}\n${m.code}\n`;const S=r.src.replace(eh,y);return{vshader:v,fshader:S,attributes:a,meshUniformBufferFormat:f.meshUniformBufferFormat,meshBindGroupFormat:m.meshBindGroupFormat}}static extract(t){const e=[];const s=[];const i=[];const n=[];let r=`${eh}\n`;let a;while((a=Zl.exec(t))!==null){const n=a[1];Ql.lastIndex=a.index;const o=Ql.exec(t);if(n==="attribute"){e.push(o[2])}else if(n==="varying"){s.push(o[2])}else if(n==="uniform"){i.push(o[2])}t=_h.cutOut(t,a.index,Ql.lastIndex,r);Zl.lastIndex=a.index+r.length;r=""}while((a=Jl.exec(t))!==null){n.push(a[0]);t=_h.cutOut(t,a.index,Jl.lastIndex,r);Jl.lastIndex=a.index+r.length;r=""}return{src:t,attributes:e,varyings:s,uniforms:i,resources:n}}static processUniforms(t,e,s,i){const n=[];e.forEach((t=>{if(!s.hasUniform(t.name)){t.ubName="ub_mesh_ub";const e=va.get(t.type);const s=new Ul(t.name,e,t.arraySize);n.push(s)}else{t.ubName="ub_view"}}));if(n.length===0){n.push(new Ul(Ha,Tr))}const r=new zl(t,n);let a="";s.uniformFormats.forEach(((t,e)=>{if(t){a+=_h.getUniformShaderDeclaration(t,e,0)}}));if(r){a+=_h.getUniformShaderDeclaration(r,za,0)}return{code:a,meshUniformBufferFormat:r}}static renameUniformAccess(t,e){e.forEach((e=>{const s=`uniform.${e.name}`;const i=`${e.ubName}.${e.name}`;const n=new RegExp(`\\b${s}\\b`,"g");t=t.replace(n,i)}));return t}static mergeResources(t,e,s){const i=t.map((t=>new mh(t,s)));const n=e.map((t=>new mh(t,s)));n.forEach((t=>{const e=i.find((e=>e.name===t.name));if(e){if(!e.equals(t)){s.failed=true}}else{i.push(t)}}));return i}static processResources(t,e,s,i){const n=[];for(let t=0;t<e.length;t++){const s=e[t];if(s.isTexture){const i=e[t+1];const r=i?.isSampler;const a=s.sampleType;const o=s.textureDimension;n.push(new so(s.name,wa|ba,o,a,r,r?i.name:null));if(r)t++}if(s.isStorageBuffer){const t=s.accessMode!=="read_write";const e=new eo(s.name,wa|ba,t);e.format=s.type;n.push(e)}}const r=new no(t,n);let a="";s.bindGroupFormats.forEach(((t,e)=>{if(t){a+=_h.getTextureShaderDeclaration(t,e,1)}}));a+=_h.getTextureShaderDeclaration(r,Ua,0);return{code:a,meshBindGroupFormat:r}}static getUniformShaderDeclaration(t,e,s){const i=Va[e];const n=`struct_ub_${i}`;let r=`struct ${n} {\n`;t.uniforms.forEach((t=>{let e=ga[t.type][0];if(t.count>0){if(ah.hasOwnProperty(e)){e=ah[e]}r+=`    ${t.shortName}: array<${e}, ${t.count}>,\n`}else{r+=`    ${t.shortName}: ${e},\n`}}));r+="};\n";r+=`@group(${e}) @binding(${s}) var<uniform> ub_${i} : ${n};\n\n`;return r}static getTextureShaderDeclaration(t,e,s){let i="";let n=s;t.textureFormats.forEach((t=>{const s=rh(t.textureDimension,t.sampleType);i+=`@group(${e}) @binding(${n}) var ${t.name}: ${s};\n`;n++;if(t.hasSampler){const s=t.sampleType===ir?"sampler_comparison":"sampler";i+=`@group(${e}) @binding(${n}) var ${t.samplerName}: ${s};\n`;n++}}));t.storageBufferFormats.forEach((t=>{const s=t.readOnly?"read":"read_write";i+=`@group(${e}) @binding(${n}) var<storage, ${s}> ${t.name} : ${t.format};\n`;n++}));return i}static processVaryings(t,e,s){let i="";let n="";let r="";t.forEach(((t,a)=>{const o=t.match(th);if(o){const l=o[1];if(s){e.set(l,a)}else{a=e.get(l)}i+=`    @location(${a}) ${t},\n`;if(!s){n+=`    var<private> ${t};\n`;r+=`    ${l} = input.${l};\n`}}}));if(s){i+="    @builtin(position) position : vec4f,\n"}else{i+="    @builtin(position) position : vec4f,\n";i+="    @builtin(front_facing) frontFacing : bool,\n";i+="    @builtin(sample_index) sampleIndex : u32\n"}const a=s?"":`\n\t\t\t\t\t\tvar<private> pcPosition: vec4f;\n\t\t\t\t\t\tvar<private> pcFrontFacing: bool;\n\t\t\t\t\t\tvar<private> pcSampleIndex: u32;\n\t\t\t\t\t\t${n}\n\t\t\t\t\t\t\n\t\t\t\t\t\t// function to copy inputs (varyings) to private global variables\n\t\t\t\t\t\tfn _pcCopyInputs(input: FragmentInput) {\n\t\t\t\t\t\t\t\t${r}\n\t\t\t\t\t\t\t\tpcPosition = input.position;\n\t\t\t\t\t\t\t\tpcFrontFacing = input.frontFacing;\n\t\t\t\t\t\t\t\tpcSampleIndex = input.sampleIndex;\n\t\t\t\t\t\t}\n\t\t\t\t`;const o=s?"VertexOutput":"FragmentInput";return`\n\t\t\t\t\t\tstruct ${o} {\n\t\t\t\t\t\t\t\t${i}\n\t\t\t\t\t\t};\n\t\t\t\t\t\t${a}\n\t\t\t\t`}static generateFragmentOutputStruct(t,e){let s="struct FragmentOutput {\n";for(let t=0;t<e;t++){s+=`    @location(${t}) color${t>0?t:""} : pcOutType${t},\n`}const i=t.search(/\.fragDepth\s*=/)!==-1;if(i){s+="    @builtin(frag_depth) fragDepth : f32\n"}return`${s}};\n`}static floatAttributeToInt(t,e){const s={f32:"f32","vec2<f32>":"vec2f","vec3<f32>":"vec3f","vec4<f32>":"vec4f"};const i=s[t]||t;const n={f32:e?"i32":"u32",vec2f:e?"vec2i":"vec2u",vec3f:e?"vec3i":"vec3u",vec4f:e?"vec4i":"vec4u"};return n[i]||null}static processAttributes(t,e={},s,i,n){let r="";let a="";let o="";t.forEach((t=>{const n=oh(t);const l=n[0];let h=n[1];const c=h;if(e.hasOwnProperty(l)){const n=e[l];const d=Za[n];s.set(d,l);const u=i.getVertexElement(n);if(u){const t=u.dataType;if(t!==vr&&t!==yr&&!u.normalize&&!u.asInt){const e=t===ur||t===pr||t===_r;h=_h.floatAttributeToInt(h,e)}}r+=`    @location(${d}) ${l}: ${h},\n`;a+=`    var<private> ${t};\n`;o+=`    ${l} = ${c}(input.${l});\n`}}));return`\n\t\t\t\t\t\tstruct VertexInput {\n\t\t\t\t\t\t\t\t${r}\n\t\t\t\t\t\t\t\t@builtin(vertex_index) vertexIndex : u32,       // built-in vertex index\n\t\t\t\t\t\t\t\t@builtin(instance_index) instanceIndex : u32    // built-in instance index\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t${a}\n\t\t\t\t\t\tvar<private> pcVertexIndex: u32;\n\t\t\t\t\t\tvar<private> pcInstanceIndex: u32;\n\n\t\t\t\t\t\tfn _pcCopyInputs(input: VertexInput) {\n\t\t\t\t\t\t\t\t${o}\n\t\t\t\t\t\t\t\tpcVertexIndex = input.vertexIndex;\n\t\t\t\t\t\t\t\tpcInstanceIndex = input.instanceIndex;\n\t\t\t\t\t\t}\n\t\t\t\t`}static copyInputs(t,e){const s=t.match(sh);if(!s||!s[2]){return t}const i=s[2];const n=s.index+s[0].length-1;const r=t.slice(0,n+1);const a=t.slice(n+1);const o=`\n    _pcCopyInputs(${i});`;return r+o+a}static cutOut(t,e,s,i){return t.substring(0,e)+i+t.substring(s)}}class gh{constructor(t){this._vertexCode=null;this._fragmentCode=null;this._computeCode=null;this.vertexEntryPoint="main";this.fragmentEntryPoint="main";this.computeEntryPoint="main";this.shader=t;const e=t.definition;if(e.shaderLanguage===dr){if(e.cshader){this._computeCode=e.cshader??null;this.computeUniformBufferFormats=e.computeUniformBufferFormats;this.computeBindGroupFormat=e.computeBindGroupFormat}else{this.vertexEntryPoint="vertexMain";this.fragmentEntryPoint="fragmentMain";if(e.processingOptions){this.processWGSL()}else{this._vertexCode=e.vshader??null;this._fragmentCode=e.fshader??null;t.meshUniformBufferFormat=e.meshUniformBufferFormat;t.meshBindGroupFormat=e.meshBindGroupFormat}}t.ready=true}else{if(e.processingOptions){this.processGLSL()}}}destroy(t){this._vertexCode=null;this._fragmentCode=null}createShaderModule(t,e){const s=this.shader.device;const i=s.wgpu;const n=i.createShaderModule({code:t});return n}getVertexShaderModule(){return this.createShaderModule(this._vertexCode,"Vertex")}getFragmentShaderModule(){return this.createShaderModule(this._fragmentCode,"Fragment")}getComputeShaderModule(){return this.createShaderModule(this._computeCode,"Compute")}processGLSL(){const t=this.shader;const e=Kl.run(t.device,t.definition,t);this._vertexCode=this.transpile(e.vshader,"vertex",t.definition.vshader);this._fragmentCode=this.transpile(e.fshader,"fragment",t.definition.fshader);if(!(this._vertexCode&&this._fragmentCode)){t.failed=true}else{t.ready=true}t.meshUniformBufferFormat=e.meshUniformBufferFormat;t.meshBindGroupFormat=e.meshBindGroupFormat;t.attributes=e.attributes}processWGSL(){const t=this.shader;const e=_h.run(t.device,t.definition,t);this._vertexCode=e.vshader;this._fragmentCode=e.fshader;t.meshUniformBufferFormat=e.meshUniformBufferFormat;t.meshBindGroupFormat=e.meshBindGroupFormat;t.attributes=e.attributes}transpile(t,e,s){const i=this.shader.device;if(!i.glslang||!i.twgsl){console.error(`Cannot transpile shader [${this.shader.label}] - shader transpilers (glslang/twgsl) are not available. Make sure to provide glslangUrl and twgslUrl when creating the device.`,{shader:this.shader});return null}try{const s=i.glslang.compileGLSL(t,e);const n=i.twgsl.convertSpirV2WGSL(s);return n}catch(i){console.error(`Failed to transpile webgl ${e} shader [${this.shader.label}] to WebGPU while rendering ${void 0}, error:\n [${i.stack}]`,{processed:t,original:s,shader:this.shader,error:i,stack:i.stack})}}get vertexCode(){return this._vertexCode}get fragmentCode(){return this._fragmentCode}loseContext(){}restoreContext(t,e){}}const vh=[];vh[fe]="repeat";vh[pe]="clamp-to-edge";vh[me]="mirror-repeat";const yh=[];yh[as]={level:"nearest",mip:"nearest"};yh[os]={level:"linear",mip:"nearest"};yh[ls]={level:"nearest",mip:"nearest"};yh[hs]={level:"nearest",mip:"linear"};yh[cs]={level:"linear",mip:"nearest"};yh[ds]={level:"linear",mip:"linear"};const Sh=t=>{};class xh{constructor(t){this.samplers=[];this.texture=t;this.format=al[t.format];this.create(t.device)}create(t){const e=this.texture;const s=t.wgpu;const i=e.numLevels;this.desc={size:{width:e.width,height:e.height,depthOrArrayLayers:e.cubemap?6:e.array?e.arrayLength:1},format:this.format,mipLevelCount:i,sampleCount:1,dimension:e.volume?"3d":"2d",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC|(Ni(e.format)?0:GPUTextureUsage.RENDER_ATTACHMENT)|(e.storage?GPUTextureUsage.STORAGE_BINDING:0)};this.gpuTexture=s.createTexture(this.desc);let n;if(this.texture.format===zs){n={format:"depth24plus",aspect:"depth-only"}}this.view=this.createView(n)}destroy(t){}propertyChanged(t){this.samplers.length=0}getView(t){this.uploadImmediate(t,this.texture);return this.view}createView(t){const e=t??{};const s=this.desc;const i=this.texture;const n=()=>{if(i.cubemap)return"cube";if(i.volume)return"3d";if(i.array)return"2d-array";return"2d"};const r={format:e.format??s.format,dimension:e.dimension??n(),aspect:e.aspect??"all",baseMipLevel:e.baseMipLevel??0,mipLevelCount:e.mipLevelCount??s.mipLevelCount,baseArrayLayer:e.baseArrayLayer??0,arrayLayerCount:e.arrayLayerCount??s.depthOrArrayLayers};const a=this.gpuTexture.createView(r);return a}getSampler(t,e){let s=this.samplers[e];if(!s){const i=this.texture;const n={addressModeU:vh[i.addressU],addressModeV:vh[i.addressV],addressModeW:vh[i.addressW]};if(!e&&i.compareOnRead){e=ir}if(e===ir||e===nr||e===rr){n.compare="less";n.magFilter="linear";n.minFilter="linear"}else if(e===sr){n.magFilter="nearest";n.minFilter="nearest";n.mipmapFilter="nearest"}else{const e=!t.textureFloatFilterable&&(i.format===ks||i.format===Fs);if(e||this.texture.format===zs||Bi(this.texture.format)){n.magFilter="nearest";n.minFilter="nearest";n.mipmapFilter="nearest"}else{n.magFilter=yh[i.magFilter].level;n.minFilter=yh[i.minFilter].level;n.mipmapFilter=yh[i.minFilter].mip}}const r=n.minFilter==="linear"&&n.magFilter==="linear"&&n.mipmapFilter==="linear";n.maxAnisotropy=r?wt.clamp(Math.round(i._anisotropy),1,t.maxTextureAnisotropy):1;s=t.wgpu.createSampler(n);this.samplers[e]=s}return s}loseContext(){}uploadImmediate(t,e){if(e._needsUpload||e._needsMipmapsUpload){this.uploadData(t);e._needsUpload=false;e._needsMipmapsUpload=false}}uploadData(t){const e=this.texture;if(e._levels){let s=false;let i=false;const n=e.numLevels;for(let r=0;r<n;r++){const n=e._levels[r];if(n){if(e.cubemap){for(let e=0;e<6;e++){const a=n[e];if(a){if(this.isExternalImage(a)){this.uploadExternalImage(t,a,r,e);s=true}else if(ArrayBuffer.isView(a)){this.uploadTypedArrayData(t,a,r,e);s=true}else;}else{i=true}}}else if(e._volume);else if(e.array){if(e.arrayLength===n.length){for(let i=0;i<e._arrayLength;i++){const e=n[i];if(this.isExternalImage(e)){this.uploadExternalImage(t,e,r,i);s=true}else if(ArrayBuffer.isView(e)){this.uploadTypedArrayData(t,e,r,i);s=true}else;}}else{i=true}}else{if(this.isExternalImage(n)){this.uploadExternalImage(t,n,r,0);s=true}else if(ArrayBuffer.isView(n)){this.uploadTypedArrayData(t,n,r,0);s=true}else;}}else{i=true}}if(s&&i&&e.mipmaps&&!Ni(e.format)&&!Bi(e.format)){t.mipmapRenderer.generate(this)}if(e._gpuSize){e.adjustVramSizeTracking(t._vram,-e._gpuSize)}e._gpuSize=e.gpuSize;e.adjustVramSizeTracking(t._vram,e._gpuSize)}}isExternalImage(t){return typeof ImageBitmap!=="undefined"&&t instanceof ImageBitmap||typeof HTMLVideoElement!=="undefined"&&t instanceof HTMLVideoElement||typeof HTMLCanvasElement!=="undefined"&&t instanceof HTMLCanvasElement||typeof OffscreenCanvas!=="undefined"&&t instanceof OffscreenCanvas}uploadExternalImage(t,e,s,i){const n={source:e,origin:[0,0],flipY:false};const r={texture:this.gpuTexture,mipLevel:s,origin:[0,0,i],aspect:"all"};const a={width:this.desc.size.width,height:this.desc.size.height,depthOrArrayLayers:1};t.submit();Sh(e instanceof HTMLCanvasElement&&e.getContext("2d"));t.wgpu.queue.copyExternalImageToTexture(n,r,a)}uploadTypedArrayData(t,e,s,i){const n=this.texture;const r=t.wgpu;const a={texture:this.gpuTexture,origin:[0,0,i],mipLevel:s};const o=ao.calcLevelDimension(n.width,s);const l=ao.calcLevelDimension(n.height,s);ao.calcLevelGpuSize(o,l,1,n.format);const h=Fi.get(n.format);let c;let d;if(h.size){c={offset:0,bytesPerRow:h.size*o,rowsPerImage:l};d={width:o,height:l}}else if(h.blockSize){const t=t=>Math.floor((t+3)/4);c={offset:0,bytesPerRow:h.blockSize*t(o),rowsPerImage:t(l)};d={width:Math.max(4,o),height:Math.max(4,l)}}else;t.submit();r.queue.writeTexture(a,e,c,d)}read(t,e,s,i,n){const r=n.mipLevel??0;const a=n.face??0;const o=n.data??null;const l=n.immediate??false;const h=this.texture;const c=Fi.get(h.format);const d=s*c.size;const u=wt.roundUp(d,256);const f=u*i;const p=h.device;const m=p.createBufferImpl(Oe|ke);m.allocate(p,f);const _={texture:this.gpuTexture,mipLevel:r,origin:[t,e,a]};const g={buffer:m.buffer,offset:0,bytesPerRow:u};const v={width:s,height:i,depthOrArrayLayers:1};const y=p.getCommandEncoder();y.copyTextureToBuffer(_,g,v);return p.readBuffer(m,f,null,l).then((t=>{const e=o?.constructor===Uint8Array?o:new Uint8Array(o?.buffer??i*d);for(let s=0;s<i;s++){const i=s*u;const n=s*d;const r=t.subarray(i,i+d);e.set(r,n)}return o??e}))}}class Th extends dl{constructor(t){super(ze)}unlock(t){const e=t.device;super.unlock(e,t.storageInt32.buffer)}}class wh extends dl{constructor(t,e,s){super(Ue|(s?.storage?Ve:0))}unlock(t){const e=t.device;super.unlock(e,t.storage)}}const bh=/[ \t]*#(ifn?def|if|endif|else|elif|define|undef|extension|include)/g;const Eh=/define[ \t]+([^\n]+)\r?(?:\n|$)/g;const Ah=/extension[ \t]+([\w-]+)[ \t]*:[ \t]*(enable|require)/g;const Ch=/undef[ \t]+([^\n]+)\r?(?:\n|$)/g;const Ph=/(ifdef|ifndef|if)[ \t]*([^\r\n]+)\r?\n/g;const Lh=/(endif|else|elif)(?:[ \t]+([^\r\n]*))?\r?\n?/g;const Dh=/\{?[\w-]+\}?/;const Mh=/(!|\s)?defined\(([\w-]+)\)/;const Ih=/!?defined\s*\([^)]*\)/g;const Rh=/!?defined\s*$/;const Oh=/([a-z_]\w*)\s*(==|!=|<|<=|>|>=)\s*([\w"']+)/i;const Fh=/[+\-]/g;const Nh=/include[ \t]+"([\w-]+)(?:\s*,\s*([\w-]+))?"/g;const kh=/\{i\}/g;const Bh=/(pcFragColor[1-8])\b/g;class Uh{static run(t,e=new Map,s={}){Uh.sourceName=s.sourceName;t=this.stripComments(t);t=t.split(/\r?\n/).map((t=>t.trimEnd())).join("\n");const i=new Map;const n=new Map;t=this._preprocess(t,i,n,e,s.stripDefines);if(t===null)return null;const r=new Map;i.forEach(((t,e)=>{if(Number.isInteger(parseFloat(t))&&!t.includes(".")){r.set(e,t)}}));t=this.stripComments(t);t=this.stripUnusedColorAttachments(t,s);t=this.RemoveEmptyLines(t);t=this.processArraySize(t,r);t=this.injectDefines(t,n);return t}static stripUnusedColorAttachments(t,e){if(e.stripUnusedColorAttachments){const e=new Map;const s=t.match(Bh);s?.forEach((t=>{const s=parseInt(t.charAt(t.length-1),10);e.set(s,(e.get(s)??0)+1)}));const i=Array.from(e.values()).some((t=>t===1));if(i){const s=t.split("\n");const i=[];for(let t=0;t<s.length;t++){const n=s[t].match(Bh);if(n){const t=parseInt(n[0].charAt(n[0].length-1),10);if(t>0&&e.get(t)===1){continue}}i.push(s[t])}t=i.join("\n")}}return t}static stripComments(t){return t.replace(/\/\*[\s\S]*?\*\/|([^\\:]|^)\/\/.*$/gm,"$1")}static processArraySize(t,e){if(t!==null){e.forEach(((e,s)=>{t=t.replace(new RegExp(`\\[${s}\\]`,"g"),`[${e}]`)}))}return t}static injectDefines(t,e){if(t!==null&&e.size>0){const s=t.split("\n");e.forEach(((t,e)=>{const i=new RegExp(e,"g");for(let e=0;e<s.length;e++){if(!s[e].includes("#")){s[e]=s[e].replace(i,t)}}}));t=s.join("\n")}return t}static RemoveEmptyLines(t){if(t!==null){t=t.split(/\r?\n/).map((t=>t.trim()===""?"":t)).join("\n");t=t.replace(/(\n\n){3,}/g,"\n\n")}return t}static _preprocess(t,e=new Map,s,i,n){const r=t;const a=[];let o=false;let l;while((l=bh.exec(t))!==null&&!o){const h=l[1];switch(h){case"define":{Eh.lastIndex=l.index;const i=Eh.exec(t);o||=i===null;const r=i[1];Dh.lastIndex=i.index;const h=Dh.exec(r);const c=h[0];let d=r.substring(c.length).trim();if(d==="")d="true";const u=Uh._keep(a);let f=n;if(u){const n=c.startsWith("{")&&c.endsWith("}");if(n){f=true}if(n){s.set(c,d)}else{e.set(c,d)}if(f){t=t.substring(0,i.index-1)+t.substring(Eh.lastIndex);bh.lastIndex=i.index-1}}if(!f){bh.lastIndex=i.index+i[0].length}break}case"undef":{Ch.lastIndex=l.index;const s=Ch.exec(t);const i=s[1].trim();const r=Uh._keep(a);if(r){e.delete(i);if(n){t=t.substring(0,s.index-1)+t.substring(Ch.lastIndex);bh.lastIndex=s.index-1}}if(!n){bh.lastIndex=s.index+s[0].length}break}case"extension":{Ah.lastIndex=l.index;const s=Ah.exec(t);o||=s===null;if(s){const t=s[1];const i=Uh._keep(a);if(i){e.set(t,"true")}}bh.lastIndex=s.index+s[0].length;break}case"ifdef":case"ifndef":case"if":{Ph.lastIndex=l.index;const s=Ph.exec(t);const i=s[2];const n=Uh.evaluate(i,e);o||=n.error;let r=n.result;if(h==="ifndef"){r=!r}a.push({anyKeep:r,keep:r,start:l.index,end:Ph.lastIndex});bh.lastIndex=s.index+s[0].length;break}case"endif":case"else":case"elif":{Lh.lastIndex=l.index;const s=Lh.exec(t);const i=a.pop();if(!i){console.error(`Shader preprocessing encountered "#${s[1]}" without a preceding #if #ifdef #ifndef while preprocessing ${Uh.sourceName} on line:\n ${t.substring(l.index,l.index+100)}...`,{source:r});o=true;continue}const n=i.keep?t.substring(i.end,l.index):"";t=t.substring(0,i.start)+n+t.substring(Lh.lastIndex);bh.lastIndex=i.start+n.length;const h=s[1];if(h==="else"||h==="elif"){let t=false;if(!i.anyKeep){if(h==="else"){t=!i.keep}else{const i=Uh.evaluate(s[2],e);t=i.result;o||=i.error}}a.push({anyKeep:i.anyKeep||t,keep:t,start:bh.lastIndex,end:bh.lastIndex})}break}case"include":{Nh.lastIndex=l.index;const s=Nh.exec(t);o||=s===null;if(!s){o=true;continue}const n=s[1].trim();const h=s[2]?.trim();const c=Uh._keep(a);if(c){let a=i?.get(n);if(a!==undefined){a=this.stripComments(a);if(h){const s=e.get(h);const i=parseFloat(s);if(Number.isInteger(i)){let t="";for(let e=0;e<i;e++){t+=a.replace(kh,String(e))}a=t}else{console.error(`Include Count identifier "${h}" not resolved while preprocessing ${Uh.sourceName} on line:\n ${t.substring(l.index,l.index+100)}...`,{originalSource:r,source:t});o=true}}t=t.substring(0,s.index-1)+a+t.substring(Nh.lastIndex);bh.lastIndex=s.index-1}else{console.error(`Include "${n}" not resolved while preprocessing ${Uh.sourceName}`,{originalSource:r,source:t});o=true;continue}}break}}}if(a.length>0){console.error(`Shader preprocessing reached the end of the file without encountering the necessary #endif to close a preceding #if, #ifdef, or #ifndef block. ${Uh.sourceName}`);o=true}if(o){console.error("Failed to preprocess shader: ",{source:r});return null}return t}static _keep(t){for(let e=0;e<t.length;e++){if(!t[e].keep){return false}}return true}static evaluateAtomicExpression(t,e){let s=false;t=t.trim();let i=false;if(t==="true"){return{result:true,error:s}}if(t==="false"){return{result:false,error:s}}const n=Mh.exec(t);if(n){i=n[1]==="!";t=n[2].trim();const r=e.has(t);return{result:i?!r:r,error:s}}const r=Oh.exec(t);if(r){const t=e.get(r[1].trim())??r[1].trim();const i=e.get(r[3].trim())??r[3].trim();const n=r[2].trim();let a=false;switch(n){case"==":a=t===i;break;case"!=":a=t!==i;break;case"<":a=t<i;break;case"<=":a=t<=i;break;case">":a=t>i;break;case">=":a=t>=i;break;default:s=true}return{result:a,error:s}}const a=e.has(t);return{result:a,error:s}}static processParentheses(t,e){let s=false;let i=t.trim();while(i.startsWith("(")&&i.endsWith(")")){let t=0;let e=true;for(let s=0;s<i.length-1;s++){if(i[s]==="(")t++;else if(i[s]===")"){t--;if(t===0){e=false;break}}}if(e){i=i.slice(1,-1).trim()}else{break}}while(true){let t=false;let n=0;let r=0;let a=-1;let o=-1;let l=0;for(let e=0;e<i.length;e++){if(i[e]==="("){const s=i.substring(0,e);if(Rh.test(s)){l++}else if(l===0){n++;if(n>r){r=n;a=e}t=true}}else if(i[e]===")"){if(l>0){l--}else if(n>0){if(n===r&&a!==-1){o=e}n--}}}if(!t||a===-1||o===-1){break}const h=i.substring(a+1,o);const{result:c,error:d}=Uh.evaluate(h,e);s=s||d;i=i.substring(0,a)+(c?"true":"false")+i.substring(o+1)}return{expression:i,error:s}}static evaluate(t,e){const s=Fh.exec(t)===null;let i=t;let n=false;const r=t.replace(Ih,"");if(r.indexOf("(")!==-1){const s=Uh.processParentheses(t,e);i=s.expression;n=s.error}if(n){return{result:false,error:true}}const a=i.split("||");for(const t of a){const i=t.split("&&");let n=true;for(const t of i){const{result:s,error:i}=Uh.evaluateAtomicExpression(t.trim(),e);if(!s||i){n=false;break}}if(n){return{result:true,error:!s}}}return{result:false,error:!s}}}var zh=`\n#ifndef outType_0\n#define outType_0 vec4\n#endif\nlayout(location = 0) out highp outType_0 pcFragColor0;\n#if COLOR_ATTACHMENT_1\nlayout(location = 1) out highp outType_1 pcFragColor1;\n#endif\n#if COLOR_ATTACHMENT_2\nlayout(location = 2) out highp outType_2 pcFragColor2;\n#endif\n#if COLOR_ATTACHMENT_3\nlayout(location = 3) out highp outType_3 pcFragColor3;\n#endif\n#if COLOR_ATTACHMENT_4\nlayout(location = 4) out highp outType_4 pcFragColor4;\n#endif\n#if COLOR_ATTACHMENT_5\nlayout(location = 5) out highp outType_5 pcFragColor5;\n#endif\n#if COLOR_ATTACHMENT_6\nlayout(location = 6) out highp outType_6 pcFragColor6;\n#endif\n#if COLOR_ATTACHMENT_7\nlayout(location = 7) out highp outType_7 pcFragColor7;\n#endif\n#define gl_FragColor pcFragColor0\n#define varying in\n#define texture2D texture\n#define texture2DBias texture\n#define textureCube texture\n#define texture2DProj textureProj\n#define texture2DLod textureLod\n#define texture2DProjLod textureProjLod\n#define textureCubeLod textureLod\n#define texture2DGrad textureGrad\n#define texture2DProjGrad textureProjGrad\n#define textureCubeGrad textureGrad\n#define utexture2D texture\n#define itexture2D texture\n#define texture2DLodEXT texture2DLodEXT_is_no_longer_supported_use_texture2DLod_instead\n#define texture2DProjLodEXT texture2DProjLodEXT_is_no_longer_supported_use_texture2DProjLod\n#define textureCubeLodEXT textureCubeLodEXT_is_no_longer_supported_use_textureCubeLod_instead\n#define texture2DGradEXT texture2DGradEXT_is_no_longer_supported_use_texture2DGrad_instead\n#define texture2DProjGradEXT texture2DProjGradEXT_is_no_longer_supported_use_texture2DProjGrad_instead\n#define textureCubeGradEXT textureCubeGradEXT_is_no_longer_supported_use_textureCubeGrad_instead\n#define textureShadow(res, uv) textureGrad(res, uv, vec2(1, 1), vec2(1, 1))\n#define SHADOWMAP_PASS(name) name\n#define SHADOWMAP_ACCEPT(name) sampler2DShadow name\n#define TEXTURE_PASS(name) name\n#define TEXTURE_ACCEPT(name) sampler2D name\n#define TEXTURE_ACCEPT_HIGHP(name) highp sampler2D name\n#define GL2\n`;var Vh=`\n#define attribute in\n#define varying out\n#define texture2D texture\n#define utexture2D texture\n#define itexture2D texture\n#define GL2\n#define VERTEXSHADER\n#define TEXTURE_PASS(name) name\n#define TEXTURE_ACCEPT(name) sampler2D name\n#define TEXTURE_ACCEPT_HIGHP(name) highp sampler2D name\n`;var Gh=`\n#extension GL_EXT_samplerless_texture_functions : require\n#ifndef outType_0\n#define outType_0 vec4\n#endif\n#ifndef outType_1\n#define outType_1 vec4\n#endif\n#ifndef outType_2\n#define outType_2 vec4\n#endif\n#ifndef outType_3\n#define outType_3 vec4\n#endif\n#ifndef outType_4\n#define outType_4 vec4\n#endif\n#ifndef outType_5\n#define outType_5 vec4\n#endif\n#ifndef outType_6\n#define outType_6 vec4\n#endif\n#ifndef outType_7\n#define outType_7 vec4\n#endif\nlayout(location = 0) out highp outType_0 pcFragColor0;\nlayout(location = 1) out highp outType_1 pcFragColor1;\nlayout(location = 2) out highp outType_2 pcFragColor2;\nlayout(location = 3) out highp outType_3 pcFragColor3;\nlayout(location = 4) out highp outType_4 pcFragColor4;\nlayout(location = 5) out highp outType_5 pcFragColor5;\nlayout(location = 6) out highp outType_6 pcFragColor6;\nlayout(location = 7) out highp outType_7 pcFragColor7;\n#define gl_FragColor pcFragColor0\n#define texture2D(res, uv) texture(sampler2D(res, res ## _sampler), uv)\n#define texture2DBias(res, uv, bias) texture(sampler2D(res, res ## _sampler), uv, bias)\n#define texture2DLod(res, uv, lod) textureLod(sampler2D(res, res ## _sampler), uv, lod)\n#define textureCube(res, uv) texture(samplerCube(res, res ## _sampler), uv)\n#define textureCubeLod(res, uv, lod) textureLod(samplerCube(res, res ## _sampler), uv, lod)\n#define textureShadow(res, uv) textureLod(sampler2DShadow(res, res ## _sampler), uv, 0.0)\n#define itexture2D(res, uv) texture(isampler2D(res, res ## _sampler), uv)\n#define utexture2D(res, uv) texture(usampler2D(res, res ## _sampler), uv)\n#define texture2DLodEXT texture2DLodEXT_is_no_longer_supported_use_texture2DLod_instead\n#define texture2DProjLodEXT texture2DProjLodEXT_is_no_longer_supported_use_texture2DProjLod\n#define textureCubeLodEXT textureCubeLodEXT_is_no_longer_supported_use_textureCubeLod_instead\n#define texture2DGradEXT texture2DGradEXT_is_no_longer_supported_use_texture2DGrad_instead\n#define texture2DProjGradEXT texture2DProjGradEXT_is_no_longer_supported_use_texture2DProjGrad_instead\n#define textureCubeGradEXT textureCubeGradEXT_is_no_longer_supported_use_textureCubeGrad_instead\n#define SHADOWMAP_PASS(name) name, name ## _sampler\n#define SHADOWMAP_ACCEPT(name) texture2D name, sampler name ## _sampler\n#define TEXTURE_PASS(name) name, name ## _sampler\n#define TEXTURE_ACCEPT(name) texture2D name, sampler name ## _sampler\n#define TEXTURE_ACCEPT_HIGHP TEXTURE_ACCEPT\n#define GL2\n#define WEBGPU\n`;var Hh=`\n#extension GL_EXT_samplerless_texture_functions : require\n#define texture2D(res, uv) texture(sampler2D(res, res ## _sampler), uv)\n#define itexture2D(res, uv) texture(isampler2D(res, res ## _sampler), uv)\n#define utexture2D(res, uv) texture(usampler2D(res, res ## _sampler), uv)\n#define TEXTURE_PASS(name) name, name ## _sampler\n#define TEXTURE_ACCEPT(name) texture2D name, sampler name ## _sampler\n#define TEXTURE_ACCEPT_HIGHP TEXTURE_ACCEPT\n#define GL2\n#define WEBGPU\n#define VERTEXSHADER\n#define gl_VertexID gl_VertexIndex\n#define gl_InstanceID gl_InstanceIndex\n`;var Wh=`\n`;var Xh=`\n#define VERTEXSHADER\n`;var qh=`\nvec2 getGrabScreenPos(vec4 clipPos) {\n\tvec2 uv = (clipPos.xy / clipPos.w) * 0.5 + 0.5;\n\t#ifdef WEBGPU\n\t\tuv.y = 1.0 - uv.y;\n\t#endif\n\treturn uv;\n}\nvec2 getImageEffectUV(vec2 uv) {\n\t#ifdef WEBGPU\n\t\tuv.y = 1.0 - uv.y;\n\t#endif\n\treturn uv;\n}\n`;var $h=`\nfn getGrabScreenPos(clipPos: vec4<f32>) -> vec2<f32> {\n\tvar uv: vec2<f32> = (clipPos.xy / clipPos.w) * 0.5 + vec2<f32>(0.5);\n\tuv.y = 1.0 - uv.y;\n\treturn uv;\n}\nfn getImageEffectUV(uv: vec2<f32>) -> vec2<f32> {\n\tvar modifiedUV: vec2<f32> = uv;\n\tmodifiedUV.y = 1.0 - modifiedUV.y;\n\treturn modifiedUV;\n}\nstruct WrappedF32 { @size(16) element: f32 }\nstruct WrappedI32 { @size(16) element: i32 }\nstruct WrappedU32 { @size(16) element: u32 }\nstruct WrappedVec2F { @size(16) element: vec2f }\nstruct WrappedVec2I { @size(16) element: vec2i }\nstruct WrappedVec2U { @size(16) element: vec2u }\n`;const jh={vertex_position:Ki,vertex_normal:Zi,vertex_tangent:Qi,vertex_texCoord0:nn,vertex_texCoord1:rn,vertex_texCoord2:an,vertex_texCoord3:on,vertex_texCoord4:ln,vertex_texCoord5:hn,vertex_texCoord6:cn,vertex_texCoord7:dn,vertex_color:en,vertex_boneIndices:tn,vertex_boneWeights:Ji};class Yh{static createDefinition(t,e){const s=t=>{let e=t.fragmentOutputTypes??"vec4";if(!Array.isArray(e)){e=[e]}return e};const i=(e,i,n,r)=>{const a=t.isWebGPU?e:i;let o="";if(!n){const e=s(r);for(let s=0;s<t.maxColorAttachments;s++){o+=`#define COLOR_ATTACHMENT_${s}\n`;const t=e[s]??"vec4";o+=`#define outType_${s} ${t}\n`}}return o+a};const n=(e,i)=>{let n="";if(!e){const e=s(i);for(let s=0;s<t.maxColorAttachments;s++){const t=e[s]??"vec4";const i=Ka.get(t);n+=`alias pcOutType${s} = ${i};\n`}}return n};const r=e.name??"Untitled";let a;let o;const l=Yh.getDefinesCode(t,e.vertexDefines);const h=Yh.getDefinesCode(t,e.fragmentDefines);const c=e.shaderLanguage===dr;if(c){a=`\n\t\t\t\t\t\t\t\t${n(true,e)}\n\t\t\t\t\t\t\t\t${Xh}\n\t\t\t\t\t\t\t\t${$h}\n\t\t\t\t\t\t\t\t${l}\n\t\t\t\t\t\t\t\t${e.vertexCode}\n\t\t\t\t\t\t`;o=`\n\t\t\t\t\t\t\t\t${n(false,e)}\n\t\t\t\t\t\t\t\t${Wh}\n\t\t\t\t\t\t\t\t${$h}\n\t\t\t\t\t\t\t\t${h}\n\t\t\t\t\t\t\t\t${e.fragmentCode}\n\t\t\t\t\t\t`}else{a=`${Yh.versionCode(t)+i(Hh,Vh,true,e)+l+Yh.precisionCode(t)}\n\t\t\t\t\t\t\t\t${qh}\n\t\t\t\t\t\t\t\t${Yh.getShaderNameCode(r)}\n\t\t\t\t\t\t\t\t${e.vertexCode}`;o=`${(e.fragmentPreamble||"")+Yh.versionCode(t)+i(Gh,zh,false,e)+h+Yh.precisionCode(t)}\n\t\t\t\t\t\t\t\t${qh}\n\t\t\t\t\t\t\t\t${Yh.getShaderNameCode(r)}\n\t\t\t\t\t\t\t\t${e.fragmentCode}`}return{name:r,shaderLanguage:e.shaderLanguage??cr,attributes:e.attributes,vshader:a,vincludes:e.vertexIncludes,fincludes:e.fragmentIncludes,fshader:o,useTransformFeedback:e.useTransformFeedback,meshUniformBufferFormat:e.meshUniformBufferFormat,meshBindGroupFormat:e.meshBindGroupFormat}}static getDefinesCode(t,e){let s="";t.capsDefines.forEach(((t,e)=>{s+=`#define ${e} ${t}\n`}));s+="\n";e?.forEach(((t,e)=>{s+=`#define ${e} ${t}\n`}));s+="\n";return s}static getShaderNameCode(t){return`#define SHADER_NAME ${t}\n`}static versionCode(t){return t.isWebGPU?"#version 450\n":"#version 300 es\n"}static precisionCode(t,e){if(e&&e!=="highp"&&e!=="mediump"&&e!=="lowp"){e=null}if(e){if(e==="highp"&&t.maxPrecision!=="highp"){e="mediump"}if(e==="mediump"&&t.maxPrecision==="lowp"){e="lowp"}}const s=e?e:t.precision;const i=`\n\t\t\t\t\t\tprecision ${s} float;\n\t\t\t\t\t\tprecision ${s} int;\n\t\t\t\t\t\tprecision ${s} usampler2D;\n\t\t\t\t\t\tprecision ${s} isampler2D;\n\t\t\t\t\t\tprecision ${s} sampler2DShadow;\n\t\t\t\t\t\tprecision ${s} samplerCubeShadow;\n\t\t\t\t\t\tprecision ${s} sampler2DArray;\n\t\t\t\t`;return i}static collectAttributes(t){const e={};let s=0;let i=t.indexOf("attribute");while(i>=0){if(i>0&&t[i-1]==="/")break;let n=false;if(i>0){let e=t.lastIndexOf("\n",i);e=e!==-1?e+1:0;const s=t.substring(e,i);if(s.includes("#")){n=true}}if(!n){const n=t.indexOf(";",i);const r=t.lastIndexOf(" ",n);const a=t.substring(r+1,n);if(e[a]);else{const t=jh[a];if(t!==undefined){e[a]=t}else{e[a]=`ATTR${s}`;s++}}}i=t.indexOf("attribute",i+1)}return e}}let Kh=0;class Zh{constructor(t,e){this.attributes=new Map;this.id=Kh++;this.device=t;this.definition=e;this.name=e.name||"Untitled";this.init();if(e.cshader){e.cshader=Uh.run(e.cshader,e.cincludes,{sourceName:`compute shader for ${this.label}`,stripDefines:true})}else{const s=e.shaderLanguage===dr;e.vshader=Uh.run(e.vshader,e.vincludes,{sourceName:`vertex shader for ${this.label}`,stripDefines:s});if(e.shaderLanguage===cr){e.attributes??=Yh.collectAttributes(e.vshader)}const i=t.isWebGL2&&(B.name==="osx"||B.name==="ios");e.fshader=Uh.run(e.fshader,e.fincludes,{stripUnusedColorAttachments:i,stripDefines:s,sourceName:`fragment shader for ${this.label}`});if(!e.vshader||!e.fshader){this.failed=true;return}}this.impl=t.createShaderImpl(this)}init(){this.ready=false;this.failed=false}get label(){return`Shader Id ${this.id} (${this.definition.shaderLanguage===dr?"WGSL":"GLSL"}) ${this.name}`}destroy(){this.device.onDestroyShader(this);this.impl.destroy(this)}loseContext(){this.init();this.impl.loseContext()}restoreContext(){this.impl.restoreContext(this.device,this)}}class Qh{}class Jh{}class tc{constructor(t,e,s){this.gpuBuffers=[];this.stagingBuffers=[];this.usedBuffers=[];this.activeBuffer=null;this.device=t;this.bufferSize=e;this.bufferAlignment=s}destroy(){this.gpuBuffers.forEach((t=>{t.destroy(this.device)}));this.gpuBuffers=null;this.stagingBuffers.forEach((t=>{t.destroy(this.device)}));this.stagingBuffers=null;this.usedBuffers=null;this.activeBuffer=null}alloc(t,e){if(this.activeBuffer){const t=wt.roundUp(this.activeBuffer.size,this.bufferAlignment);const s=this.bufferSize-t;if(s<e){this.scheduleSubmit()}}if(!this.activeBuffer){let t=this.gpuBuffers.pop();if(!t){t=this.createBuffer(this.device,this.bufferSize,false)}let e=this.stagingBuffers.pop();if(!e){e=this.createBuffer(this.device,this.bufferSize,true)}this.activeBuffer=new Qh;this.activeBuffer.stagingBuffer=e;this.activeBuffer.gpuBuffer=t;this.activeBuffer.offset=0;this.activeBuffer.size=0}const s=this.activeBuffer;const i=wt.roundUp(s.size,this.bufferAlignment);t.gpuBuffer=s.gpuBuffer;t.offset=i;t.storage=s.stagingBuffer.alloc(i,e);s.size=i+e}scheduleSubmit(){if(this.activeBuffer){this.usedBuffers.push(this.activeBuffer);this.activeBuffer=null}}submit(){this.scheduleSubmit()}}const ec=[];ec[Tr]=function(t,e,s){const i=t.storageFloat32;i[s]=e};ec[wr]=(t,e,s)=>{const i=t.storageFloat32;i[s]=e[0];i[s+1]=e[1]};ec[br]=(t,e,s)=>{const i=t.storageFloat32;i[s]=e[0];i[s+1]=e[1];i[s+2]=e[2]};ec[Er]=(t,e,s)=>{const i=t.storageFloat32;i[s]=e[0];i[s+1]=e[1];i[s+2]=e[2];i[s+3]=e[3]};ec[xr]=function(t,e,s){const i=t.storageInt32;i[s]=e};ec[Ar]=function(t,e,s){const i=t.storageInt32;i[s]=e[0];i[s+1]=e[1]};ec[Cr]=function(t,e,s){const i=t.storageInt32;i[s]=e[0];i[s+1]=e[1];i[s+2]=e[2]};ec[Pr]=function(t,e,s){const i=t.storageInt32;i[s]=e[0];i[s+1]=e[1];i[s+2]=e[2];i[s+3]=e[3]};ec[Ir]=(t,e,s)=>{const i=t.storageFloat32;i[s]=e[0];i[s+1]=e[1];i[s+4]=e[2];i[s+5]=e[3];i[s+8]=e[4];i[s+9]=e[5]};ec[Rr]=(t,e,s)=>{const i=t.storageFloat32;i[s]=e[0];i[s+1]=e[1];i[s+2]=e[2];i[s+4]=e[3];i[s+5]=e[4];i[s+6]=e[5];i[s+8]=e[6];i[s+9]=e[7];i[s+10]=e[8]};ec[kr]=function(t,e,s,i){const n=t.storageFloat32;for(let t=0;t<i;t++){n[s+t*4]=e[t]}};ec[Vr]=(t,e,s,i)=>{const n=t.storageFloat32;for(let t=0;t<i;t++){n[s+t*4]=e[t*2];n[s+t*4+1]=e[t*2+1]}};ec[Gr]=(t,e,s,i)=>{const n=t.storageFloat32;for(let t=0;t<i;t++){n[s+t*4]=e[t*3];n[s+t*4+1]=e[t*3+1];n[s+t*4+2]=e[t*3+2]}};ec[qr]=(t,e,s,i)=>{const n=t.storageUint32;n[s]=e};ec[$r]=(t,e,s,i)=>{const n=t.storageUint32;n[s]=e[0];n[s+1]=e[1]};ec[jr]=(t,e,s,i)=>{const n=t.storageUint32;n[s]=e[0];n[s+1]=e[1];n[s+2]=e[2]};ec[Yr]=(t,e,s,i)=>{const n=t.storageUint32;n[s]=e[0];n[s+1]=e[1];n[s+2]=e[2];n[s+3]=e[3]};ec[Kr]=function(t,e,s,i){const n=t.storageInt32;for(let t=0;t<i;t++){n[s+t*4]=e[t]}};ec[Qr]=ec[Kr];ec[Zr]=function(t,e,s,i){const n=t.storageUint32;for(let t=0;t<i;t++){n[s+t*4]=e[t]}};ec[Jr]=(t,e,s,i)=>{const n=t.storageInt32;for(let t=0;t<i;t++){n[s+t*4]=e[t*2];n[s+t*4+1]=e[t*2+1]}};ec[ea]=ec[Jr];ec[ta]=(t,e,s,i)=>{const n=t.storageUint32;for(let t=0;t<i;t++){n[s+t*4]=e[t*2];n[s+t*4+1]=e[t*2+1]}};ec[sa]=(t,e,s,i)=>{const n=t.storageInt32;for(let t=0;t<i;t++){n[s+t*4]=e[t*3];n[s+t*4+1]=e[t*3+1];n[s+t*4+2]=e[t*3+2]}};ec[na]=ec[sa];ec[ia]=(t,e,s,i)=>{const n=t.storageUint32;for(let t=0;t<i;t++){n[s+t*4]=e[t*3];n[s+t*4+1]=e[t*3+1];n[s+t*4+2]=e[t*3+2]}};class sc{constructor(t,e,s=true){this.renderVersionDirty=0;this.device=t;this.format=e;this.persistent=s;if(s){this.impl=t.createUniformBufferImpl(this);const s=new ArrayBuffer(e.byteSize);this.assignStorage(new Int32Array(s));t._vram.ub+=this.format.byteSize}else{this.allocation=new Jh}}destroy(){if(this.persistent){const t=this.device;this.impl.destroy(t);t._vram.ub-=this.format.byteSize}}get offset(){return this.persistent?0:this.allocation.offset}assignStorage(t){this.storageInt32=t;this.storageUint32=new Uint32Array(t.buffer,t.byteOffset,t.byteLength/4);this.storageFloat32=new Float32Array(t.buffer,t.byteOffset,t.byteLength/4)}loseContext(){this.impl?.loseContext()}setUniform(t,e){const s=t.offset;if(e!==null&&e!==undefined){const i=ec[t.updateType];if(i){i(this,e,s,t.count)}else{this.storageFloat32.set(e,s)}}}set(t,e){const s=this.format.map.get(t);if(s){this.setUniform(s,e)}}startUpdate(t){if(!this.persistent){const e=this.allocation;const s=e.gpuBuffer;this.device.dynamicBuffers.alloc(e,this.format.byteSize);this.assignStorage(e.storage);if(t){t.bindGroup=e.gpuBuffer.getBindGroup(this);t.offsets[0]=e.offset}if(s!==e.gpuBuffer){this.renderVersionDirty=this.device.renderVersion}}}endUpdate(){if(this.persistent){this.impl.unlock(this)}else{this.storageFloat32=null;this.storageInt32=null}}update(t){this.startUpdate(t);const e=this.format.uniforms;for(let t=0;t<e.length;t++){const s=e[t].scopeId.value;this.setUniform(e[t],s)}this.endUpdate()}}const ic={type:ji,base:0,baseVertex:0,count:4,indexed:false};class nc{constructor(t){const e=`\n\n\t\t\t\t\t\tstruct ub_mesh {\n\t\t\t\t\t\t\t\tcolor : vec4f,\n\t\t\t\t\t\t\t\tdepth: f32\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@group(2) @binding(0) var<uniform> ubMesh : ub_mesh;\n\n\t\t\t\t\t\tvar<private> pos : array<vec2f, 4> = array<vec2f, 4>(\n\t\t\t\t\t\t\t\tvec2(-1.0, 1.0), vec2(1.0, 1.0),\n\t\t\t\t\t\t\t\tvec2(-1.0, -1.0), vec2(1.0, -1.0)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tstruct VertexOutput {\n\t\t\t\t\t\t\t\t@builtin(position) position : vec4f\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@vertex\n\t\t\t\t\t\tfn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> VertexOutput {\n\t\t\t\t\t\t\t\tvar output : VertexOutput;\n\t\t\t\t\t\t\t\toutput.position = vec4(pos[vertexIndex], ubMesh.depth, 1.0);\n\t\t\t\t\t\t\t\treturn output;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@fragment\n\t\t\t\t\t\tfn fragmentMain() -> @location(0) vec4f {\n\t\t\t\t\t\t\t\treturn ubMesh.color;\n\t\t\t\t\t\t}\n\t\t\t\t`;this.shader=new Zh(t,{name:"WebGPUClearRendererShader",shaderLanguage:dr,vshader:e,fshader:e});this.uniformBuffer=new sc(t,new zl(t,[new Ul("color",Er),new Ul("depth",Tr)]),false);this.dynamicBindGroup=new mo;this.colorData=new Float32Array(4)}destroy(){this.shader.destroy();this.shader=null;this.uniformBuffer.destroy();this.uniformBuffer=null}clear(t,e,s,i){s=s||i;const n=s.flags??i.flags;if(n!==0){const{uniformBuffer:r,dynamicBindGroup:a}=this;r.startUpdate(a);t.setBindGroup(za,a.bindGroup,a.offsets);t.setBindGroup(Ua,t.emptyBindGroup);if(n&$e&&(e.colorBuffer||e.impl.assignedColorTexture)){const e=s.color??i.color;this.colorData.set(e);t.setBlendState(Ro.NOBLEND)}else{t.setBlendState(Ro.NOWRITE)}r.set("color",this.colorData);if(n&je&&e.depth){const e=s.depth??i.depth;r.set("depth",e);t.setDepthState(Uo.WRITEDEPTH)}else{r.set("depth",1);t.setDepthState(Uo.NODEPTH)}if(n&Ye&&e.stencil);r.endUpdate();t.setCullMode(ss);t.setShader(this.shader);t.draw(ic)}}}class rc{constructor(t){this.device=t;const e=`\n \n\t\t\t\t\t\tvar<private> pos : array<vec2f, 4> = array<vec2f, 4>(\n\t\t\t\t\t\t\t\tvec2(-1.0, 1.0), vec2(1.0, 1.0),\n\t\t\t\t\t\t\t\tvec2(-1.0, -1.0), vec2(1.0, -1.0)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tstruct VertexOutput {\n\t\t\t\t\t\t\t\t@builtin(position) position : vec4f,\n\t\t\t\t\t\t\t\t@location(0) texCoord : vec2f\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t@vertex\n\t\t\t\t\t\tfn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> VertexOutput {\n\t\t\t\t\t\t\tvar output : VertexOutput;\n\t\t\t\t\t\t\toutput.texCoord = pos[vertexIndex] * vec2f(0.5, -0.5) + vec2f(0.5);\n\t\t\t\t\t\t\toutput.position = vec4f(pos[vertexIndex], 0, 1);\n\t\t\t\t\t\t\treturn output;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@group(0) @binding(0) var imgSampler : sampler;\n\t\t\t\t\t\t@group(0) @binding(1) var img : texture_2d<f32>;\n\n\t\t\t\t\t\t@fragment\n\t\t\t\t\t\tfn fragmentMain(@location(0) texCoord : vec2f) -> @location(0) vec4f {\n\t\t\t\t\t\t\treturn textureSample(img, imgSampler, texCoord);\n\t\t\t\t\t\t}\n\t\t\t\t`;this.shader=new Zh(t,{name:"WebGPUMipmapRendererShader",shaderLanguage:dr,vshader:e,fshader:e});this.minSampler=t.wgpu.createSampler({minFilter:"linear"})}destroy(){this.shader.destroy();this.shader=null}generate(t){const e=t.desc;if(e.mipLevelCount<=1){return}if(t.texture.volume){return}const s=this.device;const i=s.wgpu;const n=this.shader.impl;const r=i.createRenderPipeline({layout:"auto",vertex:{module:n.getVertexShaderModule(),entryPoint:n.vertexEntryPoint},fragment:{module:n.getFragmentShaderModule(),entryPoint:n.fragmentEntryPoint,targets:[{format:e.format}]},primitive:{topology:"triangle-strip"}});const a=t.texture;const o=a.cubemap?6:a.array?a.arrayLength:1;const l=[];for(let e=0;e<o;e++){l.push(t.createView({dimension:"2d",baseMipLevel:0,mipLevelCount:1,baseArrayLayer:e}))}const h=s.getCommandEncoder();for(let s=1;s<e.mipLevelCount;s++){for(let e=0;e<o;e++){const n=t.createView({dimension:"2d",baseMipLevel:s,mipLevelCount:1,baseArrayLayer:e});const a=h.beginRenderPass({colorAttachments:[{view:n,loadOp:"clear",storeOp:"store"}]});const o=i.createBindGroup({layout:r.getBindGroupLayout(0),entries:[{binding:0,resource:this.minSampler},{binding:1,resource:l[e]}]});a.setPipeline(r);a.setBindGroup(0,o);a.draw(4);a.end();l[e]=n}}s.pipeline=null}}class ac{constructor(t){this.bindGroupCache=new Map;this.device=t;this.bindGroupFormat=new no(this.device,[new to(Ga,wa|ba)])}getBindGroup(t){const e=t.format.byteSize;let s=this.bindGroupCache.get(e);if(!s){s=new _o(this.device,this.bindGroupFormat,t);s.update();this.bindGroupCache.set(e,s)}return s}}class oc extends ac{constructor(t,e,s){super(t),this.buffer=null,this.mappedRange=null;this.buffer=t.wgpu.createBuffer({size:e,usage:s?GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,mappedAtCreation:s});if(s){this.onAvailable()}t._vram.ub+=e}destroy(t){t._vram.ub-=this.buffer.size;this.buffer.destroy();this.buffer=null}onAvailable(){this.mappedRange=this.buffer.getMappedRange()}alloc(t,e){return new Int32Array(this.mappedRange,t,e/4)}}class lc extends tc{createBuffer(t,e,s){return new oc(t,e,s)}submit(){super.submit();const t=this.usedBuffers.length;if(t){const e=this.device;const s=this.gpuBuffers;const i=e.wgpu.createCommandEncoder();for(let e=t-1;e>=0;e--){const t=this.usedBuffers[e];const{stagingBuffer:n,gpuBuffer:r,offset:a,size:o}=t;const l=n.buffer;l.unmap();i.copyBufferToBuffer(l,a,r.buffer,a,o);s.push(r)}const n=i.finish();e.addCommandBuffer(n,true);for(let e=0;e<t;e++){const t=this.usedBuffers[e].stagingBuffer;this.pendingStagingBuffers.push(t)}this.usedBuffers.length=0}}onCommandBuffersSubmitted(){const t=this.pendingStagingBuffers.length;if(t){for(let e=0;e<t;e++){const t=this.pendingStagingBuffers[e];t.buffer.mapAsync(GPUMapMode.WRITE).then((()=>{if(this.stagingBuffers){t.onAvailable();this.stagingBuffers.push(t)}}))}this.pendingStagingBuffers.length=0}}constructor(...t){super(...t),this.pendingStagingBuffers=[]}}class hc{loseContext(){this.pastFrameAllocations.clear()}set enabled(t){this._enableRequest=t}get enabled(){return this._enableRequest}processEnableRequest(){if(this._enableRequest!==this._enabled){this._enabled=this._enableRequest;if(!this._enabled){this._frameTime=0}}}request(t){this.pastFrameAllocations.set(t,this.frameAllocations);this.frameAllocations=[]}report(t,e){if(e){const s=this.pastFrameAllocations.get(t);if(e.length>0){this._frameTime=e.reduce(((t,e)=>t+e),0)}if(vt.get(x)){let t=0;for(let i=0;i<s.length;++i){s[i];t+=e[i]}}}this.pastFrameAllocations.delete(t)}getSlot(t){const e=this.frameAllocations.length;this.frameAllocations.push(t);return e}get slotCount(){return this.frameAllocations.length}constructor(){this.frameAllocations=[];this.pastFrameAllocations=new Map;this._enabled=false;this._enableRequest=false;this._frameTime=0}}class cc{constructor(t,e,s){this.stagingBuffers=[];this.activeStagingBuffer=null;this.device=t;this.capacity=s;this.bytesPerSlot=e?8:4;const i=t.wgpu;this.querySet=i.createQuerySet({type:e?"timestamp":"occlusion",count:s});this.queryBuffer=i.createBuffer({size:this.bytesPerSlot*s,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST})}destroy(){this.querySet?.destroy();this.querySet=null;this.queryBuffer?.destroy();this.queryBuffer=null;this.activeStagingBuffer=null;this.stagingBuffers.forEach((t=>{t.destroy()}));this.stagingBuffers=null}getStagingBuffer(){let t=this.stagingBuffers.pop();if(!t){t=this.device.wgpu.createBuffer({size:this.queryBuffer.size,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}return t}resolve(t){const e=this.device;const s=e.getCommandEncoder();s.resolveQuerySet(this.querySet,0,t,this.queryBuffer,0);const i=this.getStagingBuffer();this.activeStagingBuffer=i;s.copyBufferToBuffer(this.queryBuffer,0,i,0,this.bytesPerSlot*t)}request(t,e){const s=this.activeStagingBuffer;this.activeStagingBuffer=null;return s.mapAsync(GPUMapMode.READ).then((()=>{const i=new BigInt64Array(s.getMappedRange());const n=[];for(let e=0;e<t;e++){n.push(Number(i[e*2+1]-i[e*2])*1e-6)}s.unmap();this.stagingBuffers?.push(s);return{renderVersion:e,timings:n}}))}}class dc extends hc{constructor(t){super();this.device=t;this.timestampQueriesSet=t.supportsTimestampQuery?new cc(t,true,512):null}destroy(){this.timestampQueriesSet?.destroy();this.timestampQueriesSet=null}frameStart(){this.processEnableRequest()}frameEnd(){if(this._enabled){this.timestampQueriesSet?.resolve(this.slotCount*2)}}request(){if(this._enabled){const t=this.device.renderVersion;this.timestampQueriesSet?.request(this.slotCount,t).then((t=>{this.report(t.renderVersion,t.timings)}));super.request(t)}}}class uc{constructor(t){this.pipelineCache=new Map;this.device=t;const e=`\n \n\t\t\t\t\t\tvar<private> pos : array<vec2f, 4> = array<vec2f, 4>(\n\t\t\t\t\t\t\t\tvec2(-1.0, 1.0), vec2(1.0, 1.0), vec2(-1.0, -1.0), vec2(1.0, -1.0)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tstruct VertexOutput {\n\t\t\t\t\t\t\t\t@builtin(position) position : vec4f,\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t@vertex\n\t\t\t\t\t\tfn vertexMain(@builtin(vertex_index) vertexIndex : u32) -> VertexOutput {\n\t\t\t\t\t\t\tvar output : VertexOutput;\n\t\t\t\t\t\t\toutput.position = vec4f(pos[vertexIndex], 0, 1);\n\t\t\t\t\t\t\treturn output;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t@group(0) @binding(0) var img : texture_depth_multisampled_2d;\n\n\t\t\t\t\t\t@fragment\n\t\t\t\t\t\tfn fragmentMain(@builtin(position) fragColor: vec4f) -> @location(0) vec4f {\n\t\t\t\t\t\t\t\t// load th depth value from sample index 0\n\t\t\t\t\t\t\t\tvar depth = textureLoad(img, vec2i(fragColor.xy), 0u);\n\t\t\t\t\t\t\t\treturn vec4f(depth, 0.0, 0.0, 0.0);\n\t\t\t\t\t\t}\n\t\t\t\t`;this.shader=new Zh(t,{name:"WebGPUResolverDepthShader",shaderLanguage:dr,vshader:e,fshader:e})}destroy(){this.shader.destroy();this.shader=null;this.pipelineCache=null}getPipeline(t){let e=this.pipelineCache.get(t);if(!e){e=this.createPipeline(t);this.pipelineCache.set(t,e)}return e}createPipeline(t){const e=this.shader.impl;const s=this.device.wgpu.createRenderPipeline({layout:"auto",vertex:{module:e.getVertexShaderModule(),entryPoint:e.vertexEntryPoint},fragment:{module:e.getFragmentShaderModule(),entryPoint:e.fragmentEntryPoint,targets:[{format:t}]},primitive:{topology:"triangle-strip"}});return s}resolveDepth(t,e,s){const i=this.device;const n=i.wgpu;const r=this.getPipeline(s.format);const a=e.depthOrArrayLayers;for(let i=0;i<a;i++){const a=e.createView({dimension:"2d",aspect:"depth-only",baseMipLevel:0,mipLevelCount:1,baseArrayLayer:i});const o=s.createView({dimension:"2d",baseMipLevel:0,mipLevelCount:1,baseArrayLayer:i});const l=t.beginRenderPass({colorAttachments:[{view:o,loadOp:"clear",storeOp:"store"}]});const h=n.createBindGroup({layout:r.getBindGroupLayout(0),entries:[{binding:0,resource:a}]});l.setPipeline(r);l.setBindGroup(0,h);l.draw(4);l.end()}i.pipeline=null}}class fc{constructor(t){this.uniformBuffers=[];this.bindGroup=null;this.compute=t;const{device:e,shader:s}=t;const{computeBindGroupFormat:i,computeUniformBufferFormats:n}=s.impl;this.bindGroup=new _o(e,i);if(n){for(const t in n){if(n.hasOwnProperty(t)){const s=new sc(e,n[t],true);this.uniformBuffers.push(s);this.bindGroup.setUniformBuffer(t,s)}}}this.pipeline=e.computePipeline.get(s,i)}destroy(){this.uniformBuffers.forEach((t=>t.destroy()));this.uniformBuffers.length=0;this.bindGroup.destroy();this.bindGroup=null}updateBindGroup(){const{bindGroup:t}=this;t.updateUniformBuffers();t.update()}dispatch(t,e,s){const i=this.compute.device;i.setBindGroup(0,this.bindGroup);const n=i.passEncoder;n.setPipeline(this.pipeline);n.dispatchWorkgroups(t,e,s)}}let pc=0;class mc{constructor(t,e,s=0){this.id=pc++;this.device=t;this.byteSize=e;this.bufferUsage=s;this.impl=t.createBufferImpl(Ve|s);this.impl.allocate(t,e);this.device.buffers.push(this);this.adjustVramSizeTracking(t._vram,this.byteSize)}destroy(){const t=this.device;const e=t.buffers.indexOf(this);if(e!==-1){t.buffers.splice(e,1)}this.adjustVramSizeTracking(t._vram,-this.byteSize);this.impl.destroy(t)}adjustVramSizeTracking(t,e){t.sb+=e}read(t=0,e=this.byteSize,s=null,i=false){return this.impl.read(this.device,t,e,s,i)}write(t=0,e,s=0,i){this.impl.write(this.device,t,e,s,i)}clear(t=0,e=this.byteSize){this.impl.clear(this.device,t,e)}}const _c=new Map;const gc=5*4;class vc extends el{constructor(t,e={}){super(t,e),this.renderPipeline=new Al(this),this.computePipeline=new Cl(this),this._indirectDrawBuffer=null,this._indirectDrawBufferCount=0,this._indirectDrawNextIndex=0,this.pipeline=null,this.bindGroupFormats=[],this.commandEncoder=null,this.commandBuffers=[],this.glslang=null,this.twgsl=null;e=this.initOptions;e.alpha=e.alpha??true;this.backBufferAntialias=e.antialias??false;this.isWebGPU=true;this._deviceType=xa;this.scope.resolve(Ha).setValue(0)}destroy(){this.clearRenderer.destroy();this.clearRenderer=null;this.mipmapRenderer.destroy();this.mipmapRenderer=null;this.resolver.destroy();this.resolver=null;super.destroy()}initDeviceCaps(){const t=this.wgpu?.limits;this.limits=t;this.precision="highp";this.maxPrecision="highp";this.maxSamples=4;this.maxTextures=16;this.maxTextureSize=t.maxTextureDimension2D;this.maxCubeMapSize=t.maxTextureDimension2D;this.maxVolumeSize=t.maxTextureDimension3D;this.maxColorAttachments=t.maxColorAttachments;this.maxPixelRatio=1;this.maxAnisotropy=16;this.fragmentUniformsCount=t.maxUniformBufferBindingSize/16;this.vertexUniformsCount=t.maxUniformBufferBindingSize/16;this.supportsUniformBuffers=true;this.supportsAreaLights=true;this.supportsGpuParticles=true;this.supportsCompute=true;this.textureFloatRenderable=true;this.textureHalfFloatRenderable=true;this.supportsImageBitmap=true;this.samples=this.backBufferAntialias?4:1;const e=window.navigator.gpu.wgslLanguageFeatures;this.supportsStorageTextureRead=e?.has("readonly_and_readwrite_storage_textures");this.initCapsDefines()}async initWebGpu(t,e){if(!window.navigator.gpu){throw new Error("Unable to retrieve GPU. Ensure you are using a browser that supports WebGPU rendering.")}if(t&&e){const s=t=>new URL(t,window.location.href).toString();const i=await Promise.all([import(`${s(e)}`).then((t=>twgsl(e.replace(".js",".wasm")))),import(`${s(t)}`).then((t=>t.default()))]);this.twgsl=i[0];this.glslang=i[1]}return this.createDevice()}async createDevice(){const t={powerPreference:this.initOptions.powerPreference!=="default"?this.initOptions.powerPreference:undefined,xrCompatible:this.initOptions.xrCompatible};this.gpuAdapter=await window.navigator.gpu.requestAdapter(t);const e=[];const s=t=>{const s=this.gpuAdapter.features.has(t);if(s){e.push(t)}return s};this.textureFloatFilterable=s("float32-filterable");this.textureFloatBlendable=s("float32-blendable");this.extCompressedTextureS3TC=s("texture-compression-bc");this.extCompressedTextureETC=s("texture-compression-etc2");this.extCompressedTextureASTC=s("texture-compression-astc");this.supportsTimestampQuery=s("timestamp-query");this.supportsDepthClip=s("depth-clip-control");this.supportsDepth32Stencil=s("depth32float-stencil8");this.supportsIndirectFirstInstance=s("indirect-first-instance");this.supportsShaderF16=s("shader-f16");this.supportsStorageRGBA8=s("bgra8unorm-storage");this.textureRG11B10Renderable=s("rg11b10ufloat-renderable");this.supportsClipDistances=s("clip-distances");const i=this.gpuAdapter?.limits;const n={};if(i){for(const t in i){if(t==="minSubgroupSize"||t==="maxSubgroupSize"){continue}n[t]=i[t]}}const r={requiredFeatures:e,requiredLimits:n,defaultQueue:{label:"Default Queue"}};this.wgpu=await this.gpuAdapter.requestDevice(r);this.wgpu.lost?.then(this.handleDeviceLost.bind(this));this.initDeviceCaps();this.gpuContext=this.canvas.getContext("webgpu");let a="standard";let o=window.navigator.gpu.getPreferredCanvasFormat();const l=this.initOptions.displayFormat;this.backBufferFormat=o==="rgba8unorm"?l===Ca?Hs:Ds:l===Ca?Li:ti;this.backBufferViewFormat=l===Ca?`${o}-srgb`:o;if(l===Pa&&this.textureFloatFilterable){const t=window.matchMedia("(dynamic-range: high)");if(t?.matches){this.backBufferFormat=Fs;this.backBufferViewFormat="rgba16float";o="rgba16float";this.isHdr=true;a="extended"}}this.canvasConfig={device:this.wgpu,colorSpace:"srgb",alphaMode:this.initOptions.alpha?"premultiplied":"opaque",format:o,toneMapping:{mode:a},usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC|GPUTextureUsage.COPY_DST,viewFormats:l===Ca?[this.backBufferViewFormat]:[]};this.gpuContext?.configure(this.canvasConfig);this.createBackbuffer();this.clearRenderer=new nc(this);this.mipmapRenderer=new rc(this);this.resolver=new uc(this);this.postInit();return this}async handleDeviceLost(t){if(t.reason!=="destroyed"){super.loseContext();await this.createDevice();super.restoreContext()}}postInit(){super.postInit();this.initializeRenderState();this.setupPassEncoderDefaults();this.gpuProfiler=new dc(this);this.dynamicBuffers=new lc(this,100*1024,this.limits.minUniformBufferOffsetAlignment);this.emptyBindGroup=new _o(this,new no(this,[]));this.emptyBindGroup.update()}createBackbuffer(){this.supportsStencil=this.initOptions.stencil;this.backBuffer=new il({name:"WebgpuFramebuffer",graphicsDevice:this,depth:this.initOptions.depth,stencil:this.supportsStencil,samples:this.samples});this.backBuffer.impl.isBackbuffer=true}frameStart(){super.frameStart();this.gpuProfiler.frameStart();this.submit();const t=this.gpuContext?.getCurrentTexture?.()??this.externalBackbuffer?.impl.gpuTexture;if(this.backBufferSize.x!==t.width||this.backBufferSize.y!==t.height){this.backBufferSize.set(t.width,t.height);this.backBuffer.destroy();this.backBuffer=null;this.createBackbuffer()}const e=this.backBuffer;const s=e.impl;s.setColorAttachment(0,undefined,this.backBufferViewFormat);this.initRenderTarget(e);s.assignColorTexture(this,t)}frameEnd(){super.frameEnd();this.gpuProfiler.frameEnd();this.submit();if(!this.contextLost){this.gpuProfiler.request()}this._indirectDrawNextIndex=0}createBufferImpl(t){return new dl(t)}createUniformBufferImpl(t){return new Th(t)}createVertexBufferImpl(t,e,s){return new wh(t,e,s)}createIndexBufferImpl(t,e){return new ul(t,e)}createShaderImpl(t){return new gh(t)}createTextureImpl(t){return new xh(t)}createRenderTargetImpl(t){return new kl(t)}createBindGroupFormatImpl(t){return new cl(t)}createBindGroupImpl(t){return new nl}createComputeImpl(t){return new fc(t)}get indirectDrawBuffer(){this.allocateIndirectDrawBuffer();return this._indirectDrawBuffer}allocateIndirectDrawBuffer(){if(this._indirectDrawNextIndex===0&&this._indirectDrawBufferCount<this.maxIndirectDrawCount){this._indirectDrawBuffer?.destroy();this._indirectDrawBuffer=null}if(this._indirectDrawBuffer===null){this._indirectDrawBuffer=new mc(this,this.maxIndirectDrawCount*4,Ge|ke);this._indirectDrawBufferCount=this.maxIndirectDrawCount}}getIndirectDrawSlot(){this.allocateIndirectDrawBuffer();const t=this._indirectDrawNextIndex;this._indirectDrawNextIndex++;return t}setBindGroup(t,e,s){if(this.passEncoder){this.passEncoder.setBindGroup(t,e.impl.bindGroup,s??e.uniformBufferOffsets);this.bindGroupFormats[t]=e.format.impl}}submitVertexBuffer(t,e){const s=t.format;const{interleaved:i,elements:n}=s;const r=n.length;const a=t.impl.buffer;if(i){this.passEncoder.setVertexBuffer(e,a);return 1}for(let t=0;t<r;t++){this.passEncoder.setVertexBuffer(e+t,a,n[t].offset)}return r}validateVBLocations(t,e){const s=t=>{const{elements:e}=t.format;for(let t=0;t<e.length;t++){const s=e[t].name;const i=Za[s];if(_c.has(i));_c.set(i,s)}};s(t);s(e);_c.clear()}draw(t,e,s=1,i,n=true,r=true){if(this.shader.ready&&!this.shader.failed){const r=this.passEncoder;let a=this.pipeline;const o=this.vertexBuffers[0];const l=this.vertexBuffers[1];if(n){if(o){const t=this.submitVertexBuffer(o,0);if(l){this.submitVertexBuffer(l,t)}}a=this.renderPipeline.get(t,o?.format,l?.format,e?.format,this.shader,this.renderTarget,this.bindGroupFormats,this.blendState,this.depthState,this.cullMode,this.stencilEnabled,this.stencilFront,this.stencilBack);if(this.pipeline!==a){this.pipeline=a;r.setPipeline(a)}}if(e){r.setIndexBuffer(e.impl.buffer,e.impl.format)}if(i!==undefined){const t=i*gc;const s=this.indirectDrawBuffer.impl.buffer;if(e){r.drawIndexedIndirect(s,t)}else{r.drawIndirect(s,t)}}else{if(e){r.drawIndexed(t.count,s,t.base,t.baseVertex??0,0)}else{r.draw(t.count,s,t.base,0)}}}if(r){this.clearVertexBuffer();this.pipeline=null}}setShader(t,e=false){if(t!==this.shader){this.shader=t}}setBlendState(t){this.blendState.copy(t)}setDepthState(t){this.depthState.copy(t)}setStencilState(t,e){if(t||e){this.stencilEnabled=true;this.stencilFront.copy(t??tl.DEFAULT);this.stencilBack.copy(e??tl.DEFAULT);const s=this.stencilFront.ref;if(this.stencilRef!==s){this.stencilRef=s;this.passEncoder.setStencilReference(s)}}else{this.stencilEnabled=false}}setBlendColor(t,e,s,i){const n=this.blendColor;if(t!==n.r||e!==n.g||s!==n.b||i!==n.a){n.set(t,e,s,i);this.passEncoder.setBlendConstant(n)}}setCullMode(t){this.cullMode=t}setAlphaToCoverage(t){}initializeContextCaches(){super.initializeContextCaches()}setupPassEncoderDefaults(){this.pipeline=null;this.stencilRef=0;this.blendColor.set(0,0,0,0)}_uploadDirtyTextures(){this.textures.forEach((t=>{if(t._needsUpload||t._needsMipmaps){t.upload()}}))}setupTimeStampWrites(t,e){if(this.gpuProfiler._enabled){if(this.gpuProfiler.timestampQueriesSet){const s=this.gpuProfiler.getSlot(e);t=t??{};t.timestampWrites={querySet:this.gpuProfiler.timestampQueriesSet.querySet,beginningOfPassWriteIndex:s*2,endOfPassWriteIndex:s*2+1}}}return t}startRenderPass(t){this._uploadDirtyTextures();const e=t.renderTarget||this.backBuffer;this.renderTarget=e;const s=e.impl;if(e!==this.backBuffer){this.initRenderTarget(e)}s.setupForRenderPass(t,e);const i=s.renderPassDescriptor;this.setupTimeStampWrites(i,t.name);const n=this.getCommandEncoder();this.passEncoder=n.beginRenderPass(i);this.passEncoder.label=`${t.name}-PassEncoder RT:${e.name}`;this.setupPassEncoderDefaults();const{width:r,height:a}=e;this.setViewport(0,0,r,a);this.setScissor(0,0,r,a);this.insideRenderPass=true}endRenderPass(t){this.passEncoder.end();this.passEncoder=null;this.insideRenderPass=false;this.bindGroupFormats.length=0;const e=this.renderTarget;if(e){if(e.depthBuffer&&t.depthStencilOps.resolveDepth){if(t.samples>1&&e.autoResolve){const t=e.impl.depthAttachment;const s=e.depthBuffer.impl.gpuTexture;if(t&&s){this.resolver.resolveDepth(this.commandEncoder,t.multisampledDepthBuffer,s)}}}}for(let e=0;e<t.colorArrayOps.length;e++){const s=t.colorArrayOps[e];if(s.genMipmaps){this.mipmapRenderer.generate(t.renderTarget._colorBuffers[e].impl)}}}startComputePass(t){this.pipeline=null;const e=this.setupTimeStampWrites(undefined,t);const s=this.getCommandEncoder();this.passEncoder=s.beginComputePass(e);this.insideRenderPass=true}endComputePass(){this.passEncoder.end();this.passEncoder=null;this.insideRenderPass=false;this.bindGroupFormats.length=0}computeDispatch(t,e="Unnamed"){this.startComputePass(e);for(let e=0;e<t.length;e++){const s=t[e];s.applyParameters();s.impl.updateBindGroup()}for(let e=0;e<t.length;e++){const s=t[e];s.impl.dispatch(s.countX,s.countY,s.countZ)}this.endComputePass()}getCommandEncoder(){let t=this.commandEncoder;if(!t){t=this.wgpu.createCommandEncoder();this.commandEncoder=t}return t}endCommandEncoder(){const{commandEncoder:t}=this;if(t){const e=t.finish();this.addCommandBuffer(e);this.commandEncoder=null}}addCommandBuffer(t,e=false){if(e){this.commandBuffers.unshift(t)}else{this.commandBuffers.push(t)}}submit(){this.endCommandEncoder();if(this.commandBuffers.length>0){this.dynamicBuffers.submit();this.wgpu.queue.submit(this.commandBuffers);this.commandBuffers.length=0;this.dynamicBuffers.onCommandBuffersSubmitted()}}clear(t){if(t.flags){this.clearRenderer.clear(this,this.renderTarget,t,this.defaultClearOptions)}}setViewport(t,e,s,i){if(this.passEncoder){if(!this.renderTarget.flipY){e=this.renderTarget.height-e-i}this.vx=t;this.vy=e;this.vw=s;this.vh=i;this.passEncoder.setViewport(t,e,s,i,0,1)}}setScissor(t,e,s,i){if(this.passEncoder){if(!this.renderTarget.flipY){e=this.renderTarget.height-e-i}this.sx=t;this.sy=e;this.sw=s;this.sh=i;this.passEncoder.setScissorRect(t,e,s,i)}}clearStorageBuffer(t,e=0,s=t.byteSize){const i=this.getCommandEncoder();i.clearBuffer(t.buffer,e,s)}readStorageBuffer(t,e=0,s=t.byteSize-e,i=null,n=false){const r=this.createBufferImpl(Oe|ke);r.allocate(this,s);const a=r.buffer;const o=this.getCommandEncoder();o.copyBufferToBuffer(t.buffer,e,a,0,s);return this.readBuffer(r,s,i,n)}readBuffer(t,e,s=null,i=false){const n=t.buffer;return new Promise(((r,a)=>{const o=()=>{n?.mapAsync(GPUMapMode.READ).then((()=>{s??=new Uint8Array(e);const i=n.getMappedRange(0,e);const a=s.constructor;s.set(new a(i));n.unmap();t.destroy(this);r(s)}))};if(i){this.submit();o()}else{setTimeout((()=>{o()}))}}))}writeStorageBuffer(t,e=0,s,i=0,n){this.wgpu.queue.writeBuffer(t.buffer,e,s,i,n)}copyRenderTarget(t,e,s,i){const n={width:t?t.width:e.width,height:t?t.height:e.height,depthOrArrayLayers:1};const r=this.getCommandEncoder();if(s){const s={texture:t?t.colorBuffer.impl.gpuTexture:this.backBuffer.impl.assignedColorTexture,mipLevel:0};const i={texture:e?e.colorBuffer.impl.gpuTexture:this.backBuffer.impl.assignedColorTexture,mipLevel:0};r.copyTextureToTexture(s,i,n)}if(i){const s=t?t:this.renderTarget;const i=s.impl.depthAttachment.depthTexture;if(t.samples>1){const t=e.colorBuffer.impl.gpuTexture;this.resolver.resolveDepth(r,i,t)}else{const t=e?e.depthBuffer.impl.gpuTexture:this.renderTarget.impl.depthAttachment.depthTexture;const s={texture:i,mipLevel:0};const a={texture:t,mipLevel:0};r.copyTextureToTexture(s,a,n)}}return true}}class yc{destroy(t){if(this.bufferId){t.gl.deleteBuffer(this.bufferId);this.bufferId=null}}get initialized(){return!!this.bufferId}loseContext(){this.bufferId=null}unlock(t,e,s,i){const n=t.gl;if(!this.bufferId){let t;switch(e){case He:t=n.STATIC_DRAW;break;case We:t=n.DYNAMIC_DRAW;break;case Xe:t=n.STREAM_DRAW;break;case qe:t=n.DYNAMIC_COPY;break}this.bufferId=n.createBuffer();n.bindBuffer(s,this.bufferId);n.bufferData(s,i,t)}else{n.bindBuffer(s,this.bufferId);n.bufferSubData(s,0,i)}}constructor(){this.bufferId=null}}class Sc extends yc{destroy(t){super.destroy(t);t.unbindVertexArray()}loseContext(){super.loseContext();this.vao=null}unlock(t){const e=t.device;super.unlock(e,t.usage,e.gl.ARRAY_BUFFER,t.storage)}constructor(...t){super(...t),this.vao=null}}class xc extends yc{constructor(t){super();const e=t.device.gl;const s=t.format;if(s===Ss){this.glFormat=e.UNSIGNED_BYTE}else if(s===xs){this.glFormat=e.UNSIGNED_SHORT}else if(s===Ts){this.glFormat=e.UNSIGNED_INT}}unlock(t){const e=t.device;super.unlock(e,t.usage,e.gl.ELEMENT_ARRAY_BUFFER,t.storage)}}class Tc{constructor(t,e,s,i){this.locationId=i;this.scopeId=t.scope.resolve(e);this.version=new zo;if(e.substring(e.length-3)==="[0]"){switch(s){case Tr:s=kr;break;case xr:s=Kr;break;case qr:s=Zr;break;case Sr:s=Qr;break;case wr:s=Vr;break;case Ar:s=Jr;break;case $r:s=ta;break;case Lr:s=ea;break;case br:s=Gr;break;case Cr:s=sa;break;case jr:s=ia;break;case Dr:s=na;break;case Er:s=Hr;break;case Pr:s=ra;break;case Yr:s=aa;break;case Mr:s=oa;break}}this.dataType=s;this.value=[null,null,null,null];this.array=[]}}const wc=new Set(["gl_VertexID","gl_InstanceID","gl_DrawID","gl_BaseVertex","gl_BaseInstance"]);class bc{destroy(t){this.map.forEach((e=>{t.gl.deleteShader(e)}))}loseContext(t){this.map.clear()}constructor(){this.map=new Map}}const Ec=new ro;const Ac=new ro;class Cc{constructor(t){this.compileDuration=0;this.init();this.compile(t.device,t);this.link(t.device,t);t.device.shaders.push(t)}destroy(t){if(this.glProgram){t.device.gl.deleteProgram(this.glProgram);this.glProgram=null}}init(){this.uniforms=[];this.samplers=[];this.attributes=[];this.glProgram=null;this.glVertexShader=null;this.glFragmentShader=null}loseContext(){this.init()}restoreContext(t,e){this.compile(t,e);this.link(t,e)}compile(t,e){const s=e.definition;this.glVertexShader=this._compileShaderSource(t,s.vshader,true);this.glFragmentShader=this._compileShaderSource(t,s.fshader,false)}link(t,e){if(this.glProgram){return}const s=t.gl;if(s.isContextLost()){return}const i=s.createProgram();this.glProgram=i;s.attachShader(i,this.glVertexShader);s.attachShader(i,this.glFragmentShader);const n=e.definition;const r=n.attributes;if(n.useTransformFeedback){const t=[];for(const e in r){if(r.hasOwnProperty(e)){t.push(`out_${e}`)}}s.transformFeedbackVaryings(i,t,s.INTERLEAVED_ATTRIBS)}for(const t in r){if(r.hasOwnProperty(t)){const e=r[t];const n=Za[e];s.bindAttribLocation(i,n,t)}}s.linkProgram(i)}_compileShaderSource(t,e,s){const i=t.gl;if(i.isContextLost()){return null}const n=s?Ec:Ac;const r=n.get(t,(()=>new bc));let a=r.map.get(e);if(!a){a=i.createShader(s?i.VERTEX_SHADER:i.FRAGMENT_SHADER);i.shaderSource(a,e);i.compileShader(a);r.map.set(e,a)}return a}finalize(t,e){const s=t.gl;if(s.isContextLost()){return true}const i=this.glProgram;const n=e.definition;const r=s.getProgramParameter(i,s.LINK_STATUS);if(!r){if(!this._isCompiled(t,e,this.glVertexShader,n.vshader,"vertex")){return false}if(!this._isCompiled(t,e,this.glFragmentShader,n.fshader,"fragment")){return false}const r=`Failed to link shader program. Error: ${s.getProgramInfoLog(i)}`;console.error(r);return false}const a=s.getProgramParameter(i,s.ACTIVE_ATTRIBUTES);e.attributes.clear();for(let t=0;t<a;t++){const r=s.getActiveAttrib(i,t);const a=s.getAttribLocation(i,r.name);if(wc.has(r.name)){continue}if(n.attributes[r.name]===undefined){console.error(`Vertex shader attribute "${r.name}" is not mapped to a semantic in shader definition, shader [${e.label}]`,e);e.failed=true}else{e.attributes.set(a,r.name)}}const o=t._samplerTypes;const l=s.getProgramParameter(i,s.ACTIVE_UNIFORMS);for(let e=0;e<l;e++){const n=s.getActiveUniform(i,e);const r=s.getUniformLocation(i,n.name);const a=new Tc(t,n.name,t.pcUniformType[n.type],r);if(o.has(n.type)){this.samplers.push(a)}else{this.uniforms.push(a)}}e.ready=true;return true}_isCompiled(t,e,s,i,n){const r=t.gl;if(!r.getShaderParameter(s,r.COMPILE_STATUS)){const t=r.getShaderInfoLog(s);const[e,a]=this._processError(i,t);const o=`Failed to compile ${n} shader:\n\n${t}\n${e} while rendering ${void 0}`;console.error(o);return false}return true}isLinked(t){const{extParallelShaderCompile:e}=t;if(e){return t.gl.getProgramParameter(this.glProgram,e.COMPLETION_STATUS_KHR)}return true}_processError(t,e){const s={};let i="";if(t){const n=t.split("\n");let r=0;let a=n.length;if(e&&e.startsWith("ERROR:")){const t=e.match(/^ERROR:\s(\d+):(\d+):\s*(.+)/);if(t){s.message=t[3];s.line=parseInt(t[2],10);r=Math.max(0,s.line-6);a=Math.min(n.length,s.line+5)}}for(let t=r;t<a;t++){const e=t+1===s.line?"> ":"  ";i+=`${e}${t+1}:\t${n[t]}\n`}s.source=t}return[i,s]}}function Pc(t,e){const s=t.width;const i=t.height;if(s>e||i>e){const n=e/Math.max(s,i);const r=Math.floor(s*n);const a=Math.floor(i*n);const o=document.createElement("canvas");o.width=r;o.height=a;const l=o.getContext("2d");l.drawImage(t,0,0,s,i,0,0,r,a);return o}return t}class Lc{constructor(t){this._glTexture=null;this.dirtyParameterFlags=0;this.texture=t}destroy(t){if(this._glTexture){for(let e=0;e<t.textureUnits.length;e++){const s=t.textureUnits[e];for(let t=0;t<s.length;t++){if(s[t]===this._glTexture){s[t]=null}}}t.gl.deleteTexture(this._glTexture);this._glTexture=null}}loseContext(){this._glTexture=null}propertyChanged(t){this.dirtyParameterFlags|=t}initialize(t,e){const s=t.gl;this._glTexture=s.createTexture();this._glTarget=e._cubemap?s.TEXTURE_CUBE_MAP:e._volume?s.TEXTURE_3D:e.array?s.TEXTURE_2D_ARRAY:s.TEXTURE_2D;switch(e._format){case ws:this._glFormat=s.ALPHA;this._glInternalFormat=s.ALPHA;this._glPixelType=s.UNSIGNED_BYTE;break;case bs:this._glFormat=s.LUMINANCE;this._glInternalFormat=s.LUMINANCE;this._glPixelType=s.UNSIGNED_BYTE;break;case Es:this._glFormat=s.LUMINANCE_ALPHA;this._glInternalFormat=s.LUMINANCE_ALPHA;this._glPixelType=s.UNSIGNED_BYTE;break;case xi:this._glFormat=s.RED;this._glInternalFormat=s.R8;this._glPixelType=s.UNSIGNED_BYTE;break;case Ti:this._glFormat=s.RG;this._glInternalFormat=s.RG8;this._glPixelType=s.UNSIGNED_BYTE;break;case As:this._glFormat=s.RGB;this._glInternalFormat=s.RGB565;this._glPixelType=s.UNSIGNED_SHORT_5_6_5;break;case Cs:this._glFormat=s.RGBA;this._glInternalFormat=s.RGB5_A1;this._glPixelType=s.UNSIGNED_SHORT_5_5_5_1;break;case Ps:this._glFormat=s.RGBA;this._glInternalFormat=s.RGBA4;this._glPixelType=s.UNSIGNED_SHORT_4_4_4_4;break;case Ls:this._glFormat=s.RGB;this._glInternalFormat=s.RGB8;this._glPixelType=s.UNSIGNED_BYTE;break;case Ds:this._glFormat=s.RGBA;this._glInternalFormat=s.RGBA8;this._glPixelType=s.UNSIGNED_BYTE;break;case ti:case Li:break;case Ms:this._glFormat=s.RGB;this._glInternalFormat=t.extCompressedTextureS3TC.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case Is:this._glFormat=s.RGBA;this._glInternalFormat=t.extCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case Rs:this._glFormat=s.RGBA;this._glInternalFormat=t.extCompressedTextureS3TC.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;case Ws:this._glFormat=s.RGB;this._glInternalFormat=t.extCompressedTextureETC1.COMPRESSED_RGB_ETC1_WEBGL;break;case $s:this._glFormat=s.RGB;this._glInternalFormat=t.extCompressedTexturePVRTC.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;break;case js:this._glFormat=s.RGBA;this._glInternalFormat=t.extCompressedTexturePVRTC.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;break;case Ys:this._glFormat=s.RGB;this._glInternalFormat=t.extCompressedTexturePVRTC.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;break;case Ks:this._glFormat=s.RGBA;this._glInternalFormat=t.extCompressedTexturePVRTC.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;break;case Xs:this._glFormat=s.RGB;this._glInternalFormat=t.extCompressedTextureETC.COMPRESSED_RGB8_ETC2;break;case qs:this._glFormat=s.RGBA;this._glInternalFormat=t.extCompressedTextureETC.COMPRESSED_RGBA8_ETC2_EAC;break;case Zs:this._glFormat=s.RGBA;this._glInternalFormat=t.extCompressedTextureASTC.COMPRESSED_RGBA_ASTC_4x4_KHR;break;case Qs:this._glFormat=s.RGB;this._glInternalFormat=t.extCompressedTextureATC.COMPRESSED_RGB_ATC_WEBGL;break;case Js:this._glFormat=s.RGBA;this._glInternalFormat=t.extCompressedTextureATC.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL;break;case Di:this._glFormat=s.RGB;this._glInternalFormat=t.extTextureCompressionBPTC.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;break;case Mi:this._glFormat=s.RGB;this._glInternalFormat=t.extTextureCompressionBPTC.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;break;case Ii:this._glFormat=s.RGBA;this._glInternalFormat=t.extTextureCompressionBPTC.COMPRESSED_RGBA_BPTC_UNORM_EXT;break;case wi:this._glFormat=s.SRGB;this._glInternalFormat=t.extCompressedTextureS3TC_SRGB.COMPRESSED_SRGB_S3TC_DXT1_EXT;break;case bi:this._glFormat=s.SRGB_ALPHA;this._glInternalFormat=t.extCompressedTextureS3TC_SRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;break;case Ei:this._glFormat=s.SRGB_ALPHA;this._glInternalFormat=t.extCompressedTextureS3TC_SRGB.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;break;case Ai:this._glFormat=s.SRGB;this._glInternalFormat=t.extCompressedTextureETC.COMPRESSED_SRGB8_ETC2;break;case Ci:this._glFormat=s.SRGB_ALPHA;this._glInternalFormat=t.extCompressedTextureETC.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC;break;case Pi:this._glFormat=s.SRGB_ALPHA;this._glInternalFormat=t.extCompressedTextureASTC.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR;break;case Ri:this._glFormat=s.RGBA;this._glInternalFormat=t.extTextureCompressionBPTC.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT;break;case yi:this._glFormat=s.RED;this._glInternalFormat=s.R16F;this._glPixelType=s.HALF_FLOAT;break;case Si:this._glFormat=s.RG;this._glInternalFormat=s.RG16F;this._glPixelType=s.HALF_FLOAT;break;case Os:this._glFormat=s.RGB;this._glInternalFormat=s.RGB16F;this._glPixelType=s.HALF_FLOAT;break;case Fs:this._glFormat=s.RGBA;this._glInternalFormat=s.RGBA16F;this._glPixelType=s.HALF_FLOAT;break;case Ns:this._glFormat=s.RGB;this._glInternalFormat=s.RGB32F;this._glPixelType=s.FLOAT;break;case ks:this._glFormat=s.RGBA;this._glInternalFormat=s.RGBA32F;this._glPixelType=s.FLOAT;break;case Bs:this._glFormat=s.RED;this._glInternalFormat=s.R32F;this._glPixelType=s.FLOAT;break;case Us:this._glFormat=s.DEPTH_COMPONENT;this._glInternalFormat=s.DEPTH_COMPONENT32F;this._glPixelType=s.FLOAT;break;case Oi:this._glFormat=s.DEPTH_COMPONENT;this._glInternalFormat=s.DEPTH_COMPONENT16;this._glPixelType=s.UNSIGNED_SHORT;break;case zs:this._glFormat=s.DEPTH_STENCIL;this._glInternalFormat=s.DEPTH24_STENCIL8;this._glPixelType=s.UNSIGNED_INT_24_8;break;case Vs:this._glFormat=s.RGB;this._glInternalFormat=s.R11F_G11F_B10F;this._glPixelType=s.UNSIGNED_INT_10F_11F_11F_REV;break;case Gs:this._glFormat=s.RGB;this._glInternalFormat=s.SRGB8;this._glPixelType=s.UNSIGNED_BYTE;break;case Hs:this._glFormat=s.RGBA;this._glInternalFormat=s.SRGB8_ALPHA8;this._glPixelType=s.UNSIGNED_BYTE;break;case ei:this._glFormat=s.RED_INTEGER;this._glInternalFormat=s.R8I;this._glPixelType=s.BYTE;break;case si:this._glFormat=s.RED_INTEGER;this._glInternalFormat=s.R8UI;this._glPixelType=s.UNSIGNED_BYTE;break;case ii:this._glFormat=s.RED_INTEGER;this._glInternalFormat=s.R16I;this._glPixelType=s.SHORT;break;case ni:this._glFormat=s.RED_INTEGER;this._glInternalFormat=s.R16UI;this._glPixelType=s.UNSIGNED_SHORT;break;case ri:this._glFormat=s.RED_INTEGER;this._glInternalFormat=s.R32I;this._glPixelType=s.INT;break;case ai:this._glFormat=s.RED_INTEGER;this._glInternalFormat=s.R32UI;this._glPixelType=s.UNSIGNED_INT;break;case oi:this._glFormat=s.RG_INTEGER;this._glInternalFormat=s.RG8I;this._glPixelType=s.BYTE;break;case li:this._glFormat=s.RG_INTEGER;this._glInternalFormat=s.RG8UI;this._glPixelType=s.UNSIGNED_BYTE;break;case hi:this._glFormat=s.RG_INTEGER;this._glInternalFormat=s.RG16I;this._glPixelType=s.SHORT;break;case ci:this._glFormat=s.RG_INTEGER;this._glInternalFormat=s.RG16UI;this._glPixelType=s.UNSIGNED_SHORT;break;case di:this._glFormat=s.RG_INTEGER;this._glInternalFormat=s.RG32I;this._glPixelType=s.INT;break;case ui:this._glFormat=s.RG_INTEGER;this._glInternalFormat=s.RG32UI;this._glPixelType=s.UNSIGNED_INT;break;case fi:this._glFormat=s.RGBA_INTEGER;this._glInternalFormat=s.RGBA8I;this._glPixelType=s.BYTE;break;case pi:this._glFormat=s.RGBA_INTEGER;this._glInternalFormat=s.RGBA8UI;this._glPixelType=s.UNSIGNED_BYTE;break;case mi:this._glFormat=s.RGBA_INTEGER;this._glInternalFormat=s.RGBA16I;this._glPixelType=s.SHORT;break;case _i:this._glFormat=s.RGBA_INTEGER;this._glInternalFormat=s.RGBA16UI;this._glPixelType=s.UNSIGNED_SHORT;break;case gi:this._glFormat=s.RGBA_INTEGER;this._glInternalFormat=s.RGBA32I;this._glPixelType=s.INT;break;case vi:this._glFormat=s.RGBA_INTEGER;this._glInternalFormat=s.RGBA32UI;this._glPixelType=s.UNSIGNED_INT;break}this._glCreated=false}upload(t,e){const s=t.gl;if(!e._needsUpload&&(e._needsMipmapsUpload&&e._mipmapsUploaded||!e.pot)){return}let i=0;let n;let r;const a=e.numLevels;if(e.array){s.texStorage3D(s.TEXTURE_2D_ARRAY,a,this._glInternalFormat,e._width,e._height,e._arrayLength)}while(e._levels[i]||i===0){if(!e._needsUpload&&i===0){i++;continue}else if(i&&(!e._needsMipmapsUpload||!e._mipmaps)){break}n=e._levels[i];r=1/Math.pow(2,i);if(i===1&&!e._compressed&&!e._integerFormat&&e._levels.length<a){s.generateMipmap(this._glTarget);e._mipmapsUploaded=true}if(e._cubemap){let a;if(t._isBrowserInterface(n[0])){for(a=0;a<6;a++){if(!e._levelsUpdated[0][a]){continue}let r=n[a];if(t._isImageBrowserInterface(r)){if(r.width>t.maxCubeMapSize||r.height>t.maxCubeMapSize){r=Pc(r,t.maxCubeMapSize);if(i===0){e._width=r.width;e._height=r.height}}}t.setUnpackFlipY(false);t.setUnpackPremultiplyAlpha(e._premultiplyAlpha);if(this._glCreated){s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,i,0,0,this._glFormat,this._glPixelType,r)}else{s.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,i,this._glInternalFormat,this._glFormat,this._glPixelType,r)}}}else{r=1/Math.pow(2,i);for(a=0;a<6;a++){if(!e._levelsUpdated[0][a]){continue}const o=n[a];if(e._compressed){if(this._glCreated&&o){s.compressedTexSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,i,0,0,Math.max(e._width*r,1),Math.max(e._height*r,1),this._glInternalFormat,o)}else{s.compressedTexImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,i,this._glInternalFormat,Math.max(e._width*r,1),Math.max(e._height*r,1),0,o)}}else{t.setUnpackFlipY(false);t.setUnpackPremultiplyAlpha(e._premultiplyAlpha);if(this._glCreated&&o){s.texSubImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,i,0,0,Math.max(e._width*r,1),Math.max(e._height*r,1),this._glFormat,this._glPixelType,o)}else{s.texImage2D(s.TEXTURE_CUBE_MAP_POSITIVE_X+a,i,this._glInternalFormat,Math.max(e._width*r,1),Math.max(e._height*r,1),0,this._glFormat,this._glPixelType,o)}}}}}else if(e._volume){if(e._compressed){s.compressedTexImage3D(s.TEXTURE_3D,i,this._glInternalFormat,Math.max(e._width*r,1),Math.max(e._height*r,1),Math.max(e._depth*r,1),0,n)}else{t.setUnpackFlipY(false);t.setUnpackPremultiplyAlpha(e._premultiplyAlpha);s.texImage3D(s.TEXTURE_3D,i,this._glInternalFormat,Math.max(e._width*r,1),Math.max(e._height*r,1),Math.max(e._depth*r,1),0,this._glFormat,this._glPixelType,n)}}else if(e.array&&typeof n==="object"){if(e._arrayLength===n.length){if(e._compressed){for(let t=0;t<e._arrayLength;t++){s.compressedTexSubImage3D(s.TEXTURE_2D_ARRAY,i,0,0,t,Math.max(Math.floor(e._width*r),1),Math.max(Math.floor(e._height*r),1),1,this._glInternalFormat,n[t])}}else{for(let t=0;t<e._arrayLength;t++){s.texSubImage3D(s.TEXTURE_2D_ARRAY,i,0,0,t,Math.max(Math.floor(e._width*r),1),Math.max(Math.floor(e._height*r),1),1,this._glFormat,this._glPixelType,n[t])}}}}else{if(t._isBrowserInterface(n)){if(t._isImageBrowserInterface(n)){if(n.width>t.maxTextureSize||n.height>t.maxTextureSize){n=Pc(n,t.maxTextureSize);if(i===0){e._width=n.width;e._height=n.height}}}const r=n.width||n.videoWidth;const a=n.height||n.videoHeight;t.setUnpackFlipY(e._flipY);t.setUnpackPremultiplyAlpha(e._premultiplyAlpha);if(this._glCreated&&e._width===r&&e._height===a&&!t._isImageVideoInterface(n)){s.texSubImage2D(s.TEXTURE_2D,i,0,0,this._glFormat,this._glPixelType,n)}else{s.texImage2D(s.TEXTURE_2D,i,this._glInternalFormat,this._glFormat,this._glPixelType,n);if(i===0){e._width=r;e._height=a}}}else{r=1/Math.pow(2,i);if(e._compressed){if(this._glCreated&&n){s.compressedTexSubImage2D(s.TEXTURE_2D,i,0,0,Math.max(Math.floor(e._width*r),1),Math.max(Math.floor(e._height*r),1),this._glInternalFormat,n)}else{s.compressedTexImage2D(s.TEXTURE_2D,i,this._glInternalFormat,Math.max(Math.floor(e._width*r),1),Math.max(Math.floor(e._height*r),1),0,n)}}else{t.setUnpackFlipY(false);t.setUnpackPremultiplyAlpha(e._premultiplyAlpha);if(this._glCreated&&n){s.texSubImage2D(s.TEXTURE_2D,i,0,0,Math.max(e._width*r,1),Math.max(e._height*r,1),this._glFormat,this._glPixelType,n)}else{s.texImage2D(s.TEXTURE_2D,i,this._glInternalFormat,Math.max(e._width*r,1),Math.max(e._height*r,1),0,this._glFormat,this._glPixelType,n)}}}if(i===0){e._mipmapsUploaded=false}else{e._mipmapsUploaded=true}}i++}if(e._needsUpload){if(e._cubemap){for(let t=0;t<6;t++){e._levelsUpdated[0][t]=false}}else{e._levelsUpdated[0]=false}}if(!e._compressed&&!e._integerFormat&&e._mipmaps&&e._needsMipmapsUpload&&e._levels.length===1){s.generateMipmap(this._glTarget);e._mipmapsUploaded=true}if(e._gpuSize){e.adjustVramSizeTracking(t._vram,-e._gpuSize)}e._gpuSize=e.gpuSize;e.adjustVramSizeTracking(t._vram,e._gpuSize);this._glCreated=true}read(t,e,s,i,n){const r=this.texture;const a=r.device;return a.readTextureAsync(r,t,e,s,i,n)}write(t,e,s,i,n){const{texture:r}=this;const{device:a}=r;a.setTexture(r,0);return a.writeTextureAsync(r,t,e,s,i,n)}}class Dc{constructor(t,e){this.msaaFB=t;this.resolveFB=e}destroy(t){if(this.msaaFB){t.deleteRenderbuffer(this.msaaFB);this.msaaFB=null}if(this.resolveFB){t.deleteRenderbuffer(this.resolveFB);this.resolveFB=null}}}class Mc{destroy(t){const e=t.gl;this._isInitialized=false;if(this._glFrameBuffer){if(this._glFrameBuffer!==this.suppliedColorFramebuffer){e.deleteFramebuffer(this._glFrameBuffer)}this._glFrameBuffer=null}if(this._glDepthBuffer){e.deleteRenderbuffer(this._glDepthBuffer);this._glDepthBuffer=null}if(this._glResolveFrameBuffer){if(this._glResolveFrameBuffer!==this.suppliedColorFramebuffer){e.deleteFramebuffer(this._glResolveFrameBuffer)}this._glResolveFrameBuffer=null}this._glMsaaColorBuffers.forEach((t=>{e.deleteRenderbuffer(t)}));this._glMsaaColorBuffers.length=0;this.colorMrtFramebuffers?.forEach((t=>{t.destroy(e)}));this.colorMrtFramebuffers=null;if(this._glMsaaDepthBuffer){this._glMsaaDepthBuffer=null;if(this.msaaDepthBufferKey){Rl(t).release(this.msaaDepthBufferKey)}}this.suppliedColorFramebuffer=undefined}get initialized(){return this._isInitialized}init(t,e){const s=t.gl;this._isInitialized=true;const i=[];if(this.suppliedColorFramebuffer!==undefined){this._glFrameBuffer=this.suppliedColorFramebuffer}else{this._glFrameBuffer=s.createFramebuffer();t.setFramebuffer(this._glFrameBuffer);const n=e._colorBuffers?.length??0;const r=s.COLOR_ATTACHMENT0;for(let a=0;a<n;++a){const n=e.getColorBuffer(a);if(n){if(!n.impl._glTexture){n._width=Math.min(n.width,t.maxRenderBufferSize);n._height=Math.min(n.height,t.maxRenderBufferSize);t.setTexture(n,0)}s.framebufferTexture2D(s.FRAMEBUFFER,r+a,n._cubemap?s.TEXTURE_CUBE_MAP_POSITIVE_X+e._face:s.TEXTURE_2D,n.impl._glTexture,e.mipLevel);i.push(r+a)}}s.drawBuffers(i);const a=e._depthBuffer;if(a||e._depth){const i=e._stencil?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;if(a){if(!a.impl._glTexture){a._width=Math.min(a.width,t.maxRenderBufferSize);a._height=Math.min(a.height,t.maxRenderBufferSize);t.setTexture(a,0)}s.framebufferTexture2D(s.FRAMEBUFFER,i,a._cubemap?s.TEXTURE_CUBE_MAP_POSITIVE_X+e._face:s.TEXTURE_2D,e._depthBuffer.impl._glTexture,e.mipLevel)}else{const t=e._samples>1;if(!t){if(!this._glDepthBuffer){this._glDepthBuffer=s.createRenderbuffer()}const t=e._stencil?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT32F;s.bindRenderbuffer(s.RENDERBUFFER,this._glDepthBuffer);s.renderbufferStorage(s.RENDERBUFFER,t,e.width,e.height);s.framebufferRenderbuffer(s.FRAMEBUFFER,i,s.RENDERBUFFER,this._glDepthBuffer);s.bindRenderbuffer(s.RENDERBUFFER,null)}}}}if(e._samples>1){this._glResolveFrameBuffer=this._glFrameBuffer;this._glFrameBuffer=s.createFramebuffer();t.setFramebuffer(this._glFrameBuffer);const n=e._colorBuffers?.length??0;if(this.suppliedColorFramebuffer!==undefined){const i=s.createRenderbuffer();this._glMsaaColorBuffers.push(i);const n=t.backBufferFormat===Ds?s.RGBA8:s.RGB8;s.bindRenderbuffer(s.RENDERBUFFER,i);s.renderbufferStorageMultisample(s.RENDERBUFFER,e._samples,n,e.width,e.height);s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0,s.RENDERBUFFER,i)}else{for(let t=0;t<n;++t){const i=e.getColorBuffer(t);if(i){const n=s.createRenderbuffer();this._glMsaaColorBuffers.push(n);s.bindRenderbuffer(s.RENDERBUFFER,n);s.renderbufferStorageMultisample(s.RENDERBUFFER,e._samples,i.impl._glInternalFormat,e.width,e.height);s.framebufferRenderbuffer(s.FRAMEBUFFER,s.COLOR_ATTACHMENT0+t,s.RENDERBUFFER,n)}}}if(e._depth){const i=e._stencil?s.DEPTH24_STENCIL8:s.DEPTH_COMPONENT32F;const n=e._stencil?s.DEPTH_STENCIL_ATTACHMENT:s.DEPTH_ATTACHMENT;let r;const a=e._depthBuffer;if(a){r=`${a.id}:${e.width}:${e.height}:${e._samples}:${i}:${n}`;this._glMsaaDepthBuffer=Rl(t).get(r)}if(!this._glMsaaDepthBuffer){this._glMsaaDepthBuffer=s.createRenderbuffer();s.bindRenderbuffer(s.RENDERBUFFER,this._glMsaaDepthBuffer);s.renderbufferStorageMultisample(s.RENDERBUFFER,e._samples,i,e.width,e.height);this._glMsaaDepthBuffer.destroy=function(){s.deleteRenderbuffer(this)};if(a){Rl(t).set(r,this._glMsaaDepthBuffer)}}this.msaaDepthBufferKey=r;s.framebufferRenderbuffer(s.FRAMEBUFFER,n,s.RENDERBUFFER,this._glMsaaDepthBuffer)}if(n>1){this._createMsaaMrtFramebuffers(t,e,n);t.setFramebuffer(this._glFrameBuffer);s.drawBuffers(i)}}}_createMsaaMrtFramebuffers(t,e,s){const i=t.gl;this.colorMrtFramebuffers=[];for(let n=0;n<s;++n){const s=e.getColorBuffer(n);const r=i.createFramebuffer();t.setFramebuffer(r);const a=this._glMsaaColorBuffers[n];i.bindRenderbuffer(i.RENDERBUFFER,a);i.renderbufferStorageMultisample(i.RENDERBUFFER,e._samples,s.impl._glInternalFormat,e.width,e.height);i.framebufferRenderbuffer(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,i.RENDERBUFFER,a);i.drawBuffers([i.COLOR_ATTACHMENT0]);const o=i.createFramebuffer();t.setFramebuffer(o);i.framebufferTexture2D(i.FRAMEBUFFER,i.COLOR_ATTACHMENT0,s._cubemap?i.TEXTURE_CUBE_MAP_POSITIVE_X+e._face:i.TEXTURE_2D,s.impl._glTexture,0);this.colorMrtFramebuffers[n]=new Dc(r,o)}}_checkFbo(t,e,s=""){const i=t.gl;const n=i.checkFramebufferStatus(i.FRAMEBUFFER);switch(n){case i.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:break;case i.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:break;case i.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:break;case i.FRAMEBUFFER_UNSUPPORTED:break}}loseContext(){this._glFrameBuffer=null;this._glDepthBuffer=null;this._glResolveFrameBuffer=null;this._glMsaaColorBuffers.length=0;this._glMsaaDepthBuffer=null;this.msaaDepthBufferKey=undefined;this.colorMrtFramebuffers=null;this.suppliedColorFramebuffer=undefined;this._isInitialized=false}internalResolve(t,e,s,i,n){t.setScissor(0,0,i.width,i.height);const r=t.gl;r.bindFramebuffer(r.READ_FRAMEBUFFER,e);r.bindFramebuffer(r.DRAW_FRAMEBUFFER,s);r.blitFramebuffer(0,0,i.width,i.height,0,0,i.width,i.height,n,r.NEAREST)}resolve(t,e,s,i){const n=t.gl;if(this.colorMrtFramebuffers){if(s){for(let s=0;s<this.colorMrtFramebuffers.length;s++){const i=this.colorMrtFramebuffers[s];this.internalResolve(t,i.msaaFB,i.resolveFB,e,n.COLOR_BUFFER_BIT)}}if(i){this.internalResolve(t,this._glFrameBuffer,this._glResolveFrameBuffer,e,n.DEPTH_BUFFER_BIT)}}else{this.internalResolve(t,this._glFrameBuffer,this._glResolveFrameBuffer,e,(s?n.COLOR_BUFFER_BIT:0)|(i?n.DEPTH_BUFFER_BIT:0))}n.bindFramebuffer(n.FRAMEBUFFER,this._glFrameBuffer)}constructor(){this._glFrameBuffer=null;this._glDepthBuffer=null;this._glResolveFrameBuffer=null;this.colorMrtFramebuffers=null;this._glMsaaColorBuffers=[];this._glMsaaDepthBuffer=null;this._isInitialized=false}}class Ic{destroy(t){this.queries.forEach((e=>t.deleteQuery(e)));this.queries=null}constructor(){this.queries=[]}}class Rc extends hc{constructor(t){super(),this.freeQueries=[],this.frameQueries=[],this.previousFrameQueries=[],this.timings=[];this.device=t;this.ext=t.extDisjointTimerQuery}destroy(){this.freeQueries.forEach((t=>this.device.gl.deleteQuery(t)));this.frameQueries.forEach((t=>this.device.gl.deleteQuery(t)));this.previousFrameQueries.forEach((t=>t.destroy(this.device.gl)));this.freeQueries=null;this.frameQueries=null;this.previousFrameQueries=null}loseContext(){super.loseContext();this.freeQueries=[];this.frameQueries=[];this.previousFrameQueries=[]}restoreContext(){this.ext=this.device.extDisjointTimerQuery}getQuery(){return this.freeQueries.pop()??this.device.gl.createQuery()}start(t){if(this.ext){const e=this.getSlot(t);const s=this.getQuery();this.frameQueries[e]=s;this.device.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,s);return e}return undefined}end(t){if(t!==undefined){this.device.gl.endQuery(this.ext.TIME_ELAPSED_EXT)}}frameStart(){this.processEnableRequest();if(this._enabled){this.frameGPUMarkerSlot=this.start("GpuFrame")}}frameEnd(){if(this._enabled){this.end(this.frameGPUMarkerSlot)}}request(){if(this._enabled){const t=this.ext;const e=this.device.gl;const s=this.device.renderVersion;const i=this.frameQueries;if(i.length>0){this.frameQueries=[];const t=new Ic;t.queries=i;t.renderVersion=s;this.previousFrameQueries.push(t)}if(this.previousFrameQueries.length>0){const s=this.previousFrameQueries[0];const i=s.queries;const n=i[i.length-1];const r=e.getQueryParameter(n,e.QUERY_RESULT_AVAILABLE);const a=e.getParameter(t.GPU_DISJOINT_EXT);if(r&&!a){this.previousFrameQueries.shift();const t=this.timings;t.length=0;for(let s=0;s<i.length;s++){const n=i[s];const r=e.getQueryParameter(n,e.QUERY_RESULT);t[s]=r*1e-6;this.freeQueries.push(n)}this.report(s.renderVersion,t)}if(a){this.previousFrameQueries.forEach((t=>{this.report(t.renderVersion,null);t.destroy(e)}));this.previousFrameQueries.length=0}}super.request(s)}}}const Oc=[];class Fc extends el{constructor(t,e={}){super(t,e),this._defaultFramebuffer=null,this._defaultFramebufferChanged=false;e=this.initOptions;this.updateClientRect();this.initTextureUnits();this.contextLost=false;this._contextLostHandler=t=>{t.preventDefault();this.loseContext();this.fire("devicelost")};this._contextRestoredHandler=()=>{this.restoreContext();this.fire("devicerestored")};const s=typeof navigator!=="undefined"&&navigator.userAgent;this.forceDisableMultisampling=s&&s.includes("AppleWebKit")&&(s.includes("15.4")||s.includes("15_4"));if(this.forceDisableMultisampling){e.antialias=false}if(B.browserName==="firefox"){const t=typeof navigator!=="undefined"?navigator.userAgent:"";const s=t.match(/Firefox\/(\d+(\.\d+)*)/);const i=s?s[1]:null;if(i){const t=parseFloat(i);const s=B.name==="windows"&&(t>=120||t===115)||B.name==="android"&&t>=132;if(s){e.antialias=false}}}this.backBufferAntialias=e.antialias??false;e.antialias=false;const i=e.gl??t.getContext("webgl2",e);if(!i){throw new Error("WebGL not supported")}this.gl=i;this.isWebGL2=true;this._deviceType=Sa;this.updateBackbufferFormat(null);const n=B.browserName==="chrome";const r=B.browserName==="safari";const a=B.browser&&navigator.appVersion.indexOf("Mac")!==-1;this._tempEnableSafariTextureUnitWorkaround=r;this._tempMacChromeBlitFramebufferWorkaround=a&&n&&!e.alpha;t.addEventListener("webglcontextlost",this._contextLostHandler,false);t.addEventListener("webglcontextrestored",this._contextRestoredHandler,false);this.initializeExtensions();this.initializeCapabilities();this.initializeRenderState();this.initializeContextCaches();this.createBackbuffer(null);this.supportsImageBitmap=!r&&typeof ImageBitmap!=="undefined";this._samplerTypes=new Set([i.SAMPLER_2D,i.SAMPLER_CUBE,i.UNSIGNED_INT_SAMPLER_2D,i.INT_SAMPLER_2D,i.SAMPLER_2D_SHADOW,i.SAMPLER_CUBE_SHADOW,i.SAMPLER_3D,i.INT_SAMPLER_3D,i.UNSIGNED_INT_SAMPLER_3D,i.SAMPLER_2D_ARRAY,i.INT_SAMPLER_2D_ARRAY,i.UNSIGNED_INT_SAMPLER_2D_ARRAY]);this.glAddress=[i.REPEAT,i.CLAMP_TO_EDGE,i.MIRRORED_REPEAT];this.glBlendEquation=[i.FUNC_ADD,i.FUNC_SUBTRACT,i.FUNC_REVERSE_SUBTRACT,i.MIN,i.MAX];this.glBlendFunctionColor=[i.ZERO,i.ONE,i.SRC_COLOR,i.ONE_MINUS_SRC_COLOR,i.DST_COLOR,i.ONE_MINUS_DST_COLOR,i.SRC_ALPHA,i.SRC_ALPHA_SATURATE,i.ONE_MINUS_SRC_ALPHA,i.DST_ALPHA,i.ONE_MINUS_DST_ALPHA,i.CONSTANT_COLOR,i.ONE_MINUS_CONSTANT_COLOR];this.glBlendFunctionAlpha=[i.ZERO,i.ONE,i.SRC_COLOR,i.ONE_MINUS_SRC_COLOR,i.DST_COLOR,i.ONE_MINUS_DST_COLOR,i.SRC_ALPHA,i.SRC_ALPHA_SATURATE,i.ONE_MINUS_SRC_ALPHA,i.DST_ALPHA,i.ONE_MINUS_DST_ALPHA,i.CONSTANT_ALPHA,i.ONE_MINUS_CONSTANT_ALPHA];this.glComparison=[i.NEVER,i.LESS,i.EQUAL,i.LEQUAL,i.GREATER,i.NOTEQUAL,i.GEQUAL,i.ALWAYS];this.glStencilOp=[i.KEEP,i.ZERO,i.REPLACE,i.INCR,i.INCR_WRAP,i.DECR,i.DECR_WRAP,i.INVERT];this.glClearFlag=[0,i.COLOR_BUFFER_BIT,i.DEPTH_BUFFER_BIT,i.COLOR_BUFFER_BIT|i.DEPTH_BUFFER_BIT,i.STENCIL_BUFFER_BIT,i.STENCIL_BUFFER_BIT|i.COLOR_BUFFER_BIT,i.STENCIL_BUFFER_BIT|i.DEPTH_BUFFER_BIT,i.STENCIL_BUFFER_BIT|i.COLOR_BUFFER_BIT|i.DEPTH_BUFFER_BIT];this.glCull=[0,i.BACK,i.FRONT,i.FRONT_AND_BACK];this.glFilter=[i.NEAREST,i.LINEAR,i.NEAREST_MIPMAP_NEAREST,i.NEAREST_MIPMAP_LINEAR,i.LINEAR_MIPMAP_NEAREST,i.LINEAR_MIPMAP_LINEAR];this.glPrimitive=[i.POINTS,i.LINES,i.LINE_LOOP,i.LINE_STRIP,i.TRIANGLES,i.TRIANGLE_STRIP,i.TRIANGLE_FAN];this.glType=[i.BYTE,i.UNSIGNED_BYTE,i.SHORT,i.UNSIGNED_SHORT,i.INT,i.UNSIGNED_INT,i.FLOAT,i.HALF_FLOAT];this.pcUniformType={};this.pcUniformType[i.BOOL]=Sr;this.pcUniformType[i.INT]=xr;this.pcUniformType[i.FLOAT]=Tr;this.pcUniformType[i.FLOAT_VEC2]=wr;this.pcUniformType[i.FLOAT_VEC3]=br;this.pcUniformType[i.FLOAT_VEC4]=Er;this.pcUniformType[i.INT_VEC2]=Ar;this.pcUniformType[i.INT_VEC3]=Cr;this.pcUniformType[i.INT_VEC4]=Pr;this.pcUniformType[i.BOOL_VEC2]=Lr;this.pcUniformType[i.BOOL_VEC3]=Dr;this.pcUniformType[i.BOOL_VEC4]=Mr;this.pcUniformType[i.FLOAT_MAT2]=Ir;this.pcUniformType[i.FLOAT_MAT3]=Rr;this.pcUniformType[i.FLOAT_MAT4]=Or;this.pcUniformType[i.SAMPLER_2D]=Fr;this.pcUniformType[i.SAMPLER_CUBE]=Nr;this.pcUniformType[i.UNSIGNED_INT]=qr;this.pcUniformType[i.UNSIGNED_INT_VEC2]=$r;this.pcUniformType[i.UNSIGNED_INT_VEC3]=jr;this.pcUniformType[i.UNSIGNED_INT_VEC4]=Yr;this.pcUniformType[i.SAMPLER_2D_SHADOW]=Br;this.pcUniformType[i.SAMPLER_CUBE_SHADOW]=Ur;this.pcUniformType[i.SAMPLER_2D_ARRAY]=Xr;this.pcUniformType[i.SAMPLER_3D]=zr;this.pcUniformType[i.INT_SAMPLER_2D]=la;this.pcUniformType[i.UNSIGNED_INT_SAMPLER_2D]=ha;this.pcUniformType[i.INT_SAMPLER_CUBE]=ca;this.pcUniformType[i.UNSIGNED_INT_SAMPLER_2D]=da;this.pcUniformType[i.INT_SAMPLER_3D]=ua;this.pcUniformType[i.UNSIGNED_INT_SAMPLER_3D]=fa;this.pcUniformType[i.INT_SAMPLER_2D_ARRAY]=pa;this.pcUniformType[i.UNSIGNED_INT_SAMPLER_2D_ARRAY]=ma;this.targetToSlot={};this.targetToSlot[i.TEXTURE_2D]=0;this.targetToSlot[i.TEXTURE_CUBE_MAP]=1;this.targetToSlot[i.TEXTURE_3D]=2;let o,l,h,c;let d;this.commitFunction=[];this.commitFunction[Sr]=function(t,e){if(t.value!==e){i.uniform1i(t.locationId,e);t.value=e}};this.commitFunction[xr]=this.commitFunction[Sr];this.commitFunction[Tr]=function(t,e){if(t.value!==e){i.uniform1f(t.locationId,e);t.value=e}};this.commitFunction[wr]=function(t,e){d=t.value;o=e[0];l=e[1];if(d[0]!==o||d[1]!==l){i.uniform2fv(t.locationId,e);d[0]=o;d[1]=l}};this.commitFunction[br]=function(t,e){d=t.value;o=e[0];l=e[1];h=e[2];if(d[0]!==o||d[1]!==l||d[2]!==h){i.uniform3fv(t.locationId,e);d[0]=o;d[1]=l;d[2]=h}};this.commitFunction[Er]=function(t,e){d=t.value;o=e[0];l=e[1];h=e[2];c=e[3];if(d[0]!==o||d[1]!==l||d[2]!==h||d[3]!==c){i.uniform4fv(t.locationId,e);d[0]=o;d[1]=l;d[2]=h;d[3]=c}};this.commitFunction[Ar]=function(t,e){d=t.value;o=e[0];l=e[1];if(d[0]!==o||d[1]!==l){i.uniform2iv(t.locationId,e);d[0]=o;d[1]=l}};this.commitFunction[Lr]=this.commitFunction[Ar];this.commitFunction[Cr]=function(t,e){d=t.value;o=e[0];l=e[1];h=e[2];if(d[0]!==o||d[1]!==l||d[2]!==h){i.uniform3iv(t.locationId,e);d[0]=o;d[1]=l;d[2]=h}};this.commitFunction[Dr]=this.commitFunction[Cr];this.commitFunction[Pr]=function(t,e){d=t.value;o=e[0];l=e[1];h=e[2];c=e[3];if(d[0]!==o||d[1]!==l||d[2]!==h||d[3]!==c){i.uniform4iv(t.locationId,e);d[0]=o;d[1]=l;d[2]=h;d[3]=c}};this.commitFunction[Mr]=this.commitFunction[Pr];this.commitFunction[Ir]=function(t,e){i.uniformMatrix2fv(t.locationId,false,e)};this.commitFunction[Rr]=function(t,e){i.uniformMatrix3fv(t.locationId,false,e)};this.commitFunction[Or]=function(t,e){i.uniformMatrix4fv(t.locationId,false,e)};this.commitFunction[kr]=function(t,e){i.uniform1fv(t.locationId,e)};this.commitFunction[Vr]=function(t,e){i.uniform2fv(t.locationId,e)};this.commitFunction[Gr]=function(t,e){i.uniform3fv(t.locationId,e)};this.commitFunction[Hr]=function(t,e){i.uniform4fv(t.locationId,e)};this.commitFunction[qr]=function(t,e){if(t.value!==e){i.uniform1ui(t.locationId,e);t.value=e}};this.commitFunction[$r]=function(t,e){d=t.value;o=e[0];l=e[1];if(d[0]!==o||d[1]!==l){i.uniform2uiv(t.locationId,e);d[0]=o;d[1]=l}};this.commitFunction[jr]=function(t,e){d=t.value;o=e[0];l=e[1];h=e[2];if(d[0]!==o||d[1]!==l||d[2]!==h){i.uniform3uiv(t.locationId,e);d[0]=o;d[1]=l;d[2]=h}};this.commitFunction[Yr]=function(t,e){d=t.value;o=e[0];l=e[1];h=e[2];c=e[3];if(d[0]!==o||d[1]!==l||d[2]!==h||d[3]!==c){i.uniform4uiv(t.locationId,e);d[0]=o;d[1]=l;d[2]=h;d[3]=c}};this.commitFunction[Kr]=function(t,e){i.uniform1iv(t.locationId,e)};this.commitFunction[Zr]=function(t,e){i.uniform1uiv(t.locationId,e)};this.commitFunction[Qr]=this.commitFunction[Kr];this.commitFunction[Jr]=function(t,e){i.uniform2iv(t.locationId,e)};this.commitFunction[ta]=function(t,e){i.uniform2uiv(t.locationId,e)};this.commitFunction[ea]=this.commitFunction[Jr];this.commitFunction[sa]=function(t,e){i.uniform3iv(t.locationId,e)};this.commitFunction[ia]=function(t,e){i.uniform3uiv(t.locationId,e)};this.commitFunction[na]=this.commitFunction[sa];this.commitFunction[ra]=function(t,e){i.uniform4iv(t.locationId,e)};this.commitFunction[aa]=function(t,e){i.uniform4uiv(t.locationId,e)};this.commitFunction[oa]=this.commitFunction[ra];this.commitFunction[Wr]=function(t,e){i.uniformMatrix4fv(t.locationId,false,e)};this.constantTexSource=this.scope.resolve("source");this.postInit()}postInit(){super.postInit();this.gpuProfiler=new Rc(this)}destroy(){super.destroy();const t=this.gl;if(this.feedback){t.deleteTransformFeedback(this.feedback)}this.clearVertexArrayObjectCache();this.canvas.removeEventListener("webglcontextlost",this._contextLostHandler,false);this.canvas.removeEventListener("webglcontextrestored",this._contextRestoredHandler,false);this._contextLostHandler=null;this._contextRestoredHandler=null;this.gl=null;super.postDestroy()}createBackbuffer(t){this.supportsStencil=this.initOptions.stencil;this.backBuffer=new il({name:"WebglFramebuffer",graphicsDevice:this,depth:this.initOptions.depth,stencil:this.supportsStencil,samples:this.samples});this.backBuffer.impl.suppliedColorFramebuffer=t}updateBackbufferFormat(t){const e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,t);const s=this.gl.getParameter(this.gl.ALPHA_BITS);this.backBufferFormat=s?Ds:Ls}updateBackbuffer(){const t=this.canvas.width!==this.backBufferSize.x||this.canvas.height!==this.backBufferSize.y;if(this._defaultFramebufferChanged||t){if(this._defaultFramebufferChanged){this.updateBackbufferFormat(this._defaultFramebuffer)}this._defaultFramebufferChanged=false;this.backBufferSize.set(this.canvas.width,this.canvas.height);this.backBuffer.destroy();this.createBackbuffer(this._defaultFramebuffer)}}createVertexBufferImpl(t,e){return new Sc}createIndexBufferImpl(t){return new xc(t)}createShaderImpl(t){return new Cc(t)}createTextureImpl(t){return new Lc(t)}createRenderTargetImpl(t){return new Mc}getPrecision(){const t=this.gl;let e="highp";if(t.getShaderPrecisionFormat){const s=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.HIGH_FLOAT);const i=t.getShaderPrecisionFormat(t.VERTEX_SHADER,t.MEDIUM_FLOAT);const n=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.HIGH_FLOAT);const r=t.getShaderPrecisionFormat(t.FRAGMENT_SHADER,t.MEDIUM_FLOAT);if(s&&i&&n&&r){const t=s.precision>0&&n.precision>0;const a=i.precision>0&&r.precision>0;if(!t){if(a){e="mediump"}else{e="lowp"}}}}return e}getExtension(){for(let t=0;t<arguments.length;t++){if(this.supportedExtensions.indexOf(arguments[t])!==-1){return this.gl.getExtension(arguments[t])}}return null}get extDisjointTimerQuery(){if(!this._extDisjointTimerQuery){this._extDisjointTimerQuery=this.getExtension("EXT_disjoint_timer_query_webgl2","EXT_disjoint_timer_query")}return this._extDisjointTimerQuery}initializeExtensions(){const t=this.gl;this.supportedExtensions=t.getSupportedExtensions()??[];this._extDisjointTimerQuery=null;this.textureRG11B10Renderable=true;this.extColorBufferFloat=this.getExtension("EXT_color_buffer_float");this.textureFloatRenderable=!!this.extColorBufferFloat;this.extColorBufferHalfFloat=this.getExtension("EXT_color_buffer_half_float");this.textureHalfFloatRenderable=!!this.extColorBufferHalfFloat||!!this.extColorBufferFloat;this.extDebugRendererInfo=this.getExtension("WEBGL_debug_renderer_info");this.extTextureFloatLinear=this.getExtension("OES_texture_float_linear");this.textureFloatFilterable=!!this.extTextureFloatLinear;this.extFloatBlend=this.getExtension("EXT_float_blend");this.extTextureFilterAnisotropic=this.getExtension("EXT_texture_filter_anisotropic","WEBKIT_EXT_texture_filter_anisotropic");this.extParallelShaderCompile=this.getExtension("KHR_parallel_shader_compile");this.extCompressedTextureETC1=this.getExtension("WEBGL_compressed_texture_etc1");this.extCompressedTextureETC=this.getExtension("WEBGL_compressed_texture_etc");this.extCompressedTexturePVRTC=this.getExtension("WEBGL_compressed_texture_pvrtc","WEBKIT_WEBGL_compressed_texture_pvrtc");this.extCompressedTextureS3TC=this.getExtension("WEBGL_compressed_texture_s3tc","WEBKIT_WEBGL_compressed_texture_s3tc");this.extCompressedTextureS3TC_SRGB=this.getExtension("WEBGL_compressed_texture_s3tc_srgb");this.extCompressedTextureATC=this.getExtension("WEBGL_compressed_texture_atc");this.extCompressedTextureASTC=this.getExtension("WEBGL_compressed_texture_astc");this.extTextureCompressionBPTC=this.getExtension("EXT_texture_compression_bptc")}initializeCapabilities(){const t=this.gl;let e;const s=typeof navigator!=="undefined"?navigator.userAgent:"";this.maxPrecision=this.precision=this.getPrecision();const i=t.getContextAttributes();this.supportsMsaa=i?.antialias??false;this.supportsStencil=i?.stencil??false;this.maxTextureSize=t.getParameter(t.MAX_TEXTURE_SIZE);this.maxCubeMapSize=t.getParameter(t.MAX_CUBE_MAP_TEXTURE_SIZE);this.maxRenderBufferSize=t.getParameter(t.MAX_RENDERBUFFER_SIZE);this.maxTextures=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS);this.maxCombinedTextures=t.getParameter(t.MAX_COMBINED_TEXTURE_IMAGE_UNITS);this.maxVertexTextures=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS);this.vertexUniformsCount=t.getParameter(t.MAX_VERTEX_UNIFORM_VECTORS);this.fragmentUniformsCount=t.getParameter(t.MAX_FRAGMENT_UNIFORM_VECTORS);this.maxColorAttachments=t.getParameter(t.MAX_COLOR_ATTACHMENTS);this.maxVolumeSize=t.getParameter(t.MAX_3D_TEXTURE_SIZE);e=this.extDebugRendererInfo;this.unmaskedRenderer=e?t.getParameter(e.UNMASKED_RENDERER_WEBGL):"";this.unmaskedVendor=e?t.getParameter(e.UNMASKED_VENDOR_WEBGL):"";const n=/\bMali-G52+/;const r=/SM-[a-zA-Z0-9]+/;this.supportsGpuParticles=!(this.unmaskedVendor==="ARM"&&s.match(r))&&!this.unmaskedRenderer.match(n);e=this.extTextureFilterAnisotropic;this.maxAnisotropy=e?t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT):1;const a=!this.forceDisableMultisampling;this.maxSamples=a?t.getParameter(t.MAX_SAMPLES):1;this.maxSamples=Math.min(this.maxSamples,4);this.samples=a&&this.backBufferAntialias?this.maxSamples:1;this.supportsAreaLights=!B.android;if(this.maxTextures<=8){this.supportsAreaLights=false}this.initCapsDefines()}initializeRenderState(){super.initializeRenderState();const t=this.gl;t.disable(t.BLEND);t.blendFunc(t.ONE,t.ZERO);t.blendEquation(t.FUNC_ADD);t.colorMask(true,true,true,true);t.blendColor(0,0,0,0);t.enable(t.CULL_FACE);this.cullFace=t.BACK;t.cullFace(t.BACK);t.enable(t.DEPTH_TEST);t.depthFunc(t.LEQUAL);t.depthMask(true);this.stencil=false;t.disable(t.STENCIL_TEST);this.stencilFuncFront=this.stencilFuncBack=ys;this.stencilRefFront=this.stencilRefBack=0;this.stencilMaskFront=this.stencilMaskBack=255;t.stencilFunc(t.ALWAYS,0,255);this.stencilFailFront=this.stencilFailBack=Ln;this.stencilZfailFront=this.stencilZfailBack=Ln;this.stencilZpassFront=this.stencilZpassBack=Ln;this.stencilWriteMaskFront=255;this.stencilWriteMaskBack=255;t.stencilOp(t.KEEP,t.KEEP,t.KEEP);t.stencilMask(255);this.alphaToCoverage=false;this.raster=true;t.disable(t.SAMPLE_ALPHA_TO_COVERAGE);t.disable(t.RASTERIZER_DISCARD);this.depthBiasEnabled=false;t.disable(t.POLYGON_OFFSET_FILL);this.clearDepth=1;t.clearDepth(1);this.clearColor=new bt(0,0,0,0);t.clearColor(0,0,0,0);this.clearStencil=0;t.clearStencil(0);t.hint(t.FRAGMENT_SHADER_DERIVATIVE_HINT,t.NICEST);t.enable(t.SCISSOR_TEST);t.pixelStorei(t.UNPACK_COLORSPACE_CONVERSION_WEBGL,t.NONE);this.unpackFlipY=false;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,false);this.unpackPremultiplyAlpha=false;t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,false);t.pixelStorei(t.UNPACK_ALIGNMENT,1)}initTextureUnits(t=16){this.textureUnits=[];for(let e=0;e<t;e++){this.textureUnits.push([null,null,null])}}initializeContextCaches(){super.initializeContextCaches();this._vaoMap=new Map;this.boundVao=null;this.activeFramebuffer=null;this.feedback=null;this.transformFeedbackBuffer=null;this.textureUnit=0;this.initTextureUnits(this.maxCombinedTextures)}loseContext(){super.loseContext();for(const t of this.shaders){t.loseContext()}}restoreContext(){this.initializeExtensions();this.initializeCapabilities();super.restoreContext();for(const t of this.shaders){t.restoreContext()}}setViewport(t,e,s,i){if(this.vx!==t||this.vy!==e||this.vw!==s||this.vh!==i){this.gl.viewport(t,e,s,i);this.vx=t;this.vy=e;this.vw=s;this.vh=i}}setScissor(t,e,s,i){if(this.sx!==t||this.sy!==e||this.sw!==s||this.sh!==i){this.gl.scissor(t,e,s,i);this.sx=t;this.sy=e;this.sw=s;this.sh=i}}setFramebuffer(t){if(this.activeFramebuffer!==t){const e=this.gl;e.bindFramebuffer(e.FRAMEBUFFER,t);this.activeFramebuffer=t}}copyRenderTarget(t,e,s,i){const n=this.gl;if(t===this.backBuffer){t=null}if(s){if(!e){if(!t._colorBuffer){return false}}else if(t){if(!t._colorBuffer||!e._colorBuffer){return false}if(t._colorBuffer._format!==e._colorBuffer._format){return false}}}if(i&&t){if(!t._depth){if(!t._depthBuffer||!e._depthBuffer){return false}if(t._depthBuffer._format!==e._depthBuffer._format){return false}}}const r=this.renderTarget;this.renderTarget=e;this.updateBegin();const a=t?t.impl._glFrameBuffer:this.backBuffer?.impl._glFrameBuffer;const o=e?e.impl._glFrameBuffer:this.backBuffer?.impl._glFrameBuffer;n.bindFramebuffer(n.READ_FRAMEBUFFER,a);n.bindFramebuffer(n.DRAW_FRAMEBUFFER,o);const l=t?t.width:e?e.width:this.width;const h=t?t.height:e?e.height:this.height;n.blitFramebuffer(0,0,l,h,0,0,l,h,(s?n.COLOR_BUFFER_BIT:0)|(i?n.DEPTH_BUFFER_BIT:0),n.NEAREST);this.renderTarget=r;n.bindFramebuffer(n.FRAMEBUFFER,r?r.impl._glFrameBuffer:null);return true}frameStart(){super.frameStart();this.updateBackbuffer();this.gpuProfiler.frameStart()}frameEnd(){super.frameEnd();this.gpuProfiler.frameEnd();this.gpuProfiler.request()}startRenderPass(t){const e=t.renderTarget??this.backBuffer;this.renderTarget=e;this.updateBegin();const{width:s,height:i}=e;this.setViewport(0,0,s,i);this.setScissor(0,0,s,i);const n=t.colorOps;const r=t.depthStencilOps;if(n?.clear||r.clearDepth||r.clearStencil){let t=0;const e={};if(n?.clear){t|=$e;e.color=[n.clearValue.r,n.clearValue.g,n.clearValue.b,n.clearValue.a]}if(r.clearDepth){t|=je;e.depth=r.clearDepthValue}if(r.clearStencil){t|=Ye;e.stencil=r.clearStencilValue}e.flags=t;this.clear(e)}this.insideRenderPass=true}endRenderPass(t){this.unbindVertexArray();const e=this.renderTarget;const s=t.colorArrayOps.length;if(e){Oc.length=0;const i=this.gl;for(let e=0;e<s;e++){const s=t.colorArrayOps[e];if(!(s.store||s.resolve)){Oc.push(i.COLOR_ATTACHMENT0+e)}}if(e!==this.backBuffer){if(!t.depthStencilOps.storeDepth){Oc.push(i.DEPTH_ATTACHMENT)}if(!t.depthStencilOps.storeStencil){Oc.push(i.STENCIL_ATTACHMENT)}}if(Oc.length>0){if(t.fullSizeClearRect){i.invalidateFramebuffer(i.DRAW_FRAMEBUFFER,Oc)}}if(s&&t.colorOps?.resolve){if(t.samples>1&&e.autoResolve){e.resolve(true,false)}}if(e.depthBuffer&&t.depthStencilOps.resolveDepth){if(t.samples>1&&e.autoResolve){e.resolve(false,true)}}for(let i=0;i<s;i++){const s=t.colorArrayOps[i];if(s.genMipmaps){const t=e._colorBuffers[i];if(t&&t.impl._glTexture&&t.mipmaps){this.activeTexture(this.maxCombinedTextures-1);this.bindTexture(t);this.gl.generateMipmap(t.impl._glTarget)}}}}this.insideRenderPass=false}set defaultFramebuffer(t){if(this._defaultFramebuffer!==t){this._defaultFramebuffer=t;this._defaultFramebufferChanged=true}}get defaultFramebuffer(){return this._defaultFramebuffer}updateBegin(){this.boundVao=null;if(this._tempEnableSafariTextureUnitWorkaround){for(let t=0;t<this.textureUnits.length;++t){for(let e=0;e<3;++e){this.textureUnits[t][e]=null}}}const t=this.renderTarget??this.backBuffer;const e=t.impl;if(!e.initialized){this.initRenderTarget(t)}this.setFramebuffer(e._glFrameBuffer)}updateEnd(){this.unbindVertexArray();const t=this.renderTarget;if(t&&t!==this.backBuffer){if(t._samples>1&&t.autoResolve){t.resolve()}const e=t._colorBuffer;if(e&&e.impl._glTexture&&e.mipmaps){this.activeTexture(this.maxCombinedTextures-1);this.bindTexture(e);this.gl.generateMipmap(e.impl._glTarget)}}}setUnpackFlipY(t){if(this.unpackFlipY!==t){this.unpackFlipY=t;const e=this.gl;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,t)}}setUnpackPremultiplyAlpha(t){if(this.unpackPremultiplyAlpha!==t){this.unpackPremultiplyAlpha=t;const e=this.gl;e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t)}}activeTexture(t){if(this.textureUnit!==t){this.gl.activeTexture(this.gl.TEXTURE0+t);this.textureUnit=t}}bindTexture(t){const e=t.impl;const s=e._glTarget;const i=e._glTexture;const n=this.textureUnit;const r=this.targetToSlot[s];if(this.textureUnits[n][r]!==i){this.gl.bindTexture(s,i);this.textureUnits[n][r]=i}}bindTextureOnUnit(t,e){const s=t.impl;const i=s._glTarget;const n=s._glTexture;const r=this.targetToSlot[i];if(this.textureUnits[e][r]!==n){this.activeTexture(e);this.gl.bindTexture(i,n);this.textureUnits[e][r]=n}}setTextureParameters(t){const e=this.gl;const s=t.impl.dirtyParameterFlags;const i=t.impl._glTarget;if(s&La){let s=t._minFilter;if(!t._mipmaps||t._compressed&&t._levels.length===1){if(s===ls||s===hs){s=as}else if(s===cs||s===ds){s=os}}e.texParameteri(i,e.TEXTURE_MIN_FILTER,this.glFilter[s])}if(s&Da){e.texParameteri(i,e.TEXTURE_MAG_FILTER,this.glFilter[t._magFilter])}if(s&Ma){e.texParameteri(i,e.TEXTURE_WRAP_S,this.glAddress[t._addressU])}if(s&Ia){e.texParameteri(i,e.TEXTURE_WRAP_T,this.glAddress[t._addressV])}if(s&Ra){e.texParameteri(i,e.TEXTURE_WRAP_R,this.glAddress[t._addressW])}if(s&Oa){e.texParameteri(i,e.TEXTURE_COMPARE_MODE,t._compareOnRead?e.COMPARE_REF_TO_TEXTURE:e.NONE)}if(s&Fa){e.texParameteri(i,e.TEXTURE_COMPARE_FUNC,this.glComparison[t._compareFunc])}if(s&Na){const s=this.extTextureFilterAnisotropic;if(s){e.texParameterf(i,s.TEXTURE_MAX_ANISOTROPY_EXT,wt.clamp(Math.round(t._anisotropy),1,this.maxAnisotropy))}}}setTexture(t,e){const s=t.impl;if(!s._glTexture){s.initialize(this,t)}if(s.dirtyParameterFlags>0||t._needsUpload||t._needsMipmapsUpload){this.activeTexture(e);this.bindTexture(t);if(s.dirtyParameterFlags){this.setTextureParameters(t);s.dirtyParameterFlags=0}if(t._needsUpload||t._needsMipmapsUpload){s.upload(this,t);t._needsUpload=false;t._needsMipmapsUpload=false}}else{this.bindTextureOnUnit(t,e)}}createVertexArray(t){let e,s;const i=t.length>1;if(i){e="";for(let s=0;s<t.length;s++){const i=t[s];e+=i.id+i.format.renderingHash}s=this._vaoMap.get(e)}if(!s){const n=this.gl;s=n.createVertexArray();n.bindVertexArray(s);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,null);for(let e=0;e<t.length;e++){const s=t[e];n.bindBuffer(n.ARRAY_BUFFER,s.impl.bufferId);const i=s.format.elements;for(let t=0;t<i.length;t++){const e=i[t];const r=Za[e.name];if(e.asInt){n.vertexAttribIPointer(r,e.numComponents,this.glType[e.dataType],e.stride,e.offset)}else{n.vertexAttribPointer(r,e.numComponents,this.glType[e.dataType],e.normalize,e.stride,e.offset)}n.enableVertexAttribArray(r);if(s.format.instancing){n.vertexAttribDivisor(r,1)}}}n.bindVertexArray(null);n.bindBuffer(n.ARRAY_BUFFER,null);if(i){this._vaoMap.set(e,s)}}return s}unbindVertexArray(){if(this.boundVao){this.boundVao=null;this.gl.bindVertexArray(null)}}setBuffers(t){const e=this.gl;let s;if(this.vertexBuffers.length===1){const t=this.vertexBuffers[0];if(!t.impl.vao){t.impl.vao=this.createVertexArray(this.vertexBuffers)}s=t.impl.vao}else{s=this.createVertexArray(this.vertexBuffers)}if(this.boundVao!==s){this.boundVao=s;e.bindVertexArray(s)}const i=t?t.impl.bufferId:null;e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,i)}draw(t,e,s,i,n=true,r=true){const a=this.shader;if(a){this.activateShader();if(this.shaderValid){const i=this.gl;if(n){this.setBuffers(e)}let r=0;const o=a.impl.samplers;for(let t=0,e=o.length;t<e;t++){const e=o[t];let s=e.scopeId.value;if(!s){const t=e.scopeId.name;if(t==="uSceneDepthMap"){s=fo(this,"white")}if(t==="uSceneColorMap"){s=fo(this,"pink")}if(!s){s=fo(this,"pink")}}if(s instanceof lo){const t=s;this.setTexture(t,r);if(e.slot!==r){i.uniform1i(e.locationId,r);e.slot=r}r++}else{e.array.length=0;const t=s.length;for(let i=0;i<t;i++){const t=s[i];this.setTexture(t,r);e.array[i]=r;r++}i.uniform1iv(e.locationId,e.array)}}const l=a.impl.uniforms;for(let t=0,e=l.length;t<e;t++){const e=l[t];const s=e.scopeId;const i=e.version;const n=s.versionObject.version;if(i.globalId!==n.globalId||i.revision!==n.revision){i.globalId=n.globalId;i.revision=n.revision;const t=s.value;if(t!==null&&t!==undefined){this.commitFunction[e.dataType](e,t)}}}if(this.transformFeedbackBuffer){i.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,0,this.transformFeedbackBuffer.impl.bufferId);i.beginTransformFeedback(i.POINTS)}const h=this.glPrimitive[t.type];const c=t.count;if(t.indexed){const n=e.impl.glFormat;const r=t.base*e.bytesPerIndex;if(s>0){i.drawElementsInstanced(h,c,n,r,s)}else{i.drawElements(h,c,n,r)}}else{const e=t.base;if(s>0){i.drawArraysInstanced(h,e,c,s)}else{i.drawArrays(h,e,c)}}if(this.transformFeedbackBuffer){i.endTransformFeedback();i.bindBufferBase(i.TRANSFORM_FEEDBACK_BUFFER,0,null)}this._drawCallsPerFrame++}}if(r){this.clearVertexBuffer()}}clear(t){const e=this.defaultClearOptions;t=t||e;const s=t.flags??e.flags;if(s!==0){const i=this.gl;if(s&$e){const s=t.color??e.color;const i=s[0];const n=s[1];const r=s[2];const a=s[3];const o=this.clearColor;if(i!==o.r||n!==o.g||r!==o.b||a!==o.a){this.gl.clearColor(i,n,r,a);this.clearColor.set(i,n,r,a)}this.setBlendState(Ro.NOBLEND)}if(s&je){const s=t.depth??e.depth;if(s!==this.clearDepth){this.gl.clearDepth(s);this.clearDepth=s}this.setDepthState(Uo.WRITEDEPTH)}if(s&Ye){const s=t.stencil??e.stencil;if(s!==this.clearStencil){this.gl.clearStencil(s);this.clearStencil=s}i.stencilMask(255);this.stencilWriteMaskFront=255;this.stencilWriteMaskBack=255}i.clear(this.glClearFlag[s])}}submit(){this.gl.flush()}readPixels(t,e,s,i,n){const r=this.gl;r.readPixels(t,e,s,i,r.RGBA,r.UNSIGNED_BYTE,n)}clientWaitAsync(t,e){const s=this.gl;const i=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);this.submit();return new Promise(((n,r)=>{function a(){const o=s.clientWaitSync(i,t,0);if(o===s.TIMEOUT_EXPIRED){setTimeout(a,e)}else{s.deleteSync(i);if(o===s.WAIT_FAILED){r(new Error("webgl clientWaitSync sync failed"))}else{n()}}}a()}))}async readPixelsAsync(t,e,s,i,n){const r=this.gl;const a=this.renderTarget.colorBuffer?.impl;const o=a?._glFormat??r.RGBA;const l=a?._glPixelType??r.UNSIGNED_BYTE;const h=r.createBuffer();r.bindBuffer(r.PIXEL_PACK_BUFFER,h);r.bufferData(r.PIXEL_PACK_BUFFER,n.byteLength,r.STREAM_READ);r.readPixels(t,e,s,i,o,l,0);r.bindBuffer(r.PIXEL_PACK_BUFFER,null);await this.clientWaitAsync(0,16);r.bindBuffer(r.PIXEL_PACK_BUFFER,h);r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,n);r.bindBuffer(r.PIXEL_PACK_BUFFER,null);r.deleteBuffer(h);return n}readTextureAsync(t,e,s,i,n,r){const a=r.face??0;const o=r.renderTarget??new il({colorBuffer:t,depth:false,face:a});const l=new ArrayBuffer(ao.calcLevelGpuSize(i,n,1,t._format));const h=r.data??new(Gi(t._format))(l);this.setRenderTarget(o);this.initRenderTarget(o);return new Promise(((t,a)=>{this.readPixelsAsync(e,s,i,n,h).then((e=>{if(!r.renderTarget){o.destroy()}t(e)})).catch(a)}))}async writeTextureAsync(t,e,s,i,n,r){const a=this.gl;const o=t.impl;const l=o?._glFormat??a.RGBA;const h=o?._glPixelType??a.UNSIGNED_BYTE;const c=a.createBuffer();a.bindBuffer(a.PIXEL_UNPACK_BUFFER,c);a.bufferData(a.PIXEL_UNPACK_BUFFER,r,a.STREAM_DRAW);a.bindTexture(a.TEXTURE_2D,o._glTexture);a.texSubImage2D(a.TEXTURE_2D,0,e,s,i,n,l,h,0);a.bindBuffer(a.PIXEL_UNPACK_BUFFER,null);t._needsUpload=false;t._mipmapsUploaded=false;await this.clientWaitAsync(0,16)}setAlphaToCoverage(t){if(this.alphaToCoverage!==t){this.alphaToCoverage=t;if(t){this.gl.enable(this.gl.SAMPLE_ALPHA_TO_COVERAGE)}else{this.gl.disable(this.gl.SAMPLE_ALPHA_TO_COVERAGE)}}}setTransformFeedbackBuffer(t){if(this.transformFeedbackBuffer!==t){this.transformFeedbackBuffer=t;const e=this.gl;if(t){if(!this.feedback){this.feedback=e.createTransformFeedback()}e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,this.feedback)}else{e.bindTransformFeedback(e.TRANSFORM_FEEDBACK,null)}}}setRaster(t){if(this.raster!==t){this.raster=t;if(t){this.gl.disable(this.gl.RASTERIZER_DISCARD)}else{this.gl.enable(this.gl.RASTERIZER_DISCARD)}}}setStencilTest(t){if(this.stencil!==t){const e=this.gl;if(t){e.enable(e.STENCIL_TEST)}else{e.disable(e.STENCIL_TEST)}this.stencil=t}}setStencilFunc(t,e,s){if(this.stencilFuncFront!==t||this.stencilRefFront!==e||this.stencilMaskFront!==s||this.stencilFuncBack!==t||this.stencilRefBack!==e||this.stencilMaskBack!==s){this.gl.stencilFunc(this.glComparison[t],e,s);this.stencilFuncFront=this.stencilFuncBack=t;this.stencilRefFront=this.stencilRefBack=e;this.stencilMaskFront=this.stencilMaskBack=s}}setStencilFuncFront(t,e,s){if(this.stencilFuncFront!==t||this.stencilRefFront!==e||this.stencilMaskFront!==s){const i=this.gl;i.stencilFuncSeparate(i.FRONT,this.glComparison[t],e,s);this.stencilFuncFront=t;this.stencilRefFront=e;this.stencilMaskFront=s}}setStencilFuncBack(t,e,s){if(this.stencilFuncBack!==t||this.stencilRefBack!==e||this.stencilMaskBack!==s){const i=this.gl;i.stencilFuncSeparate(i.BACK,this.glComparison[t],e,s);this.stencilFuncBack=t;this.stencilRefBack=e;this.stencilMaskBack=s}}setStencilOperation(t,e,s,i){if(this.stencilFailFront!==t||this.stencilZfailFront!==e||this.stencilZpassFront!==s||this.stencilFailBack!==t||this.stencilZfailBack!==e||this.stencilZpassBack!==s){this.gl.stencilOp(this.glStencilOp[t],this.glStencilOp[e],this.glStencilOp[s]);this.stencilFailFront=this.stencilFailBack=t;this.stencilZfailFront=this.stencilZfailBack=e;this.stencilZpassFront=this.stencilZpassBack=s}if(this.stencilWriteMaskFront!==i||this.stencilWriteMaskBack!==i){this.gl.stencilMask(i);this.stencilWriteMaskFront=i;this.stencilWriteMaskBack=i}}setStencilOperationFront(t,e,s,i){if(this.stencilFailFront!==t||this.stencilZfailFront!==e||this.stencilZpassFront!==s){this.gl.stencilOpSeparate(this.gl.FRONT,this.glStencilOp[t],this.glStencilOp[e],this.glStencilOp[s]);this.stencilFailFront=t;this.stencilZfailFront=e;this.stencilZpassFront=s}if(this.stencilWriteMaskFront!==i){this.gl.stencilMaskSeparate(this.gl.FRONT,i);this.stencilWriteMaskFront=i}}setStencilOperationBack(t,e,s,i){if(this.stencilFailBack!==t||this.stencilZfailBack!==e||this.stencilZpassBack!==s){this.gl.stencilOpSeparate(this.gl.BACK,this.glStencilOp[t],this.glStencilOp[e],this.glStencilOp[s]);this.stencilFailBack=t;this.stencilZfailBack=e;this.stencilZpassBack=s}if(this.stencilWriteMaskBack!==i){this.gl.stencilMaskSeparate(this.gl.BACK,i);this.stencilWriteMaskBack=i}}setBlendState(t){const e=this.blendState;if(!e.equals(t)){const s=this.gl;const{blend:i,colorOp:n,alphaOp:r,colorSrcFactor:a,colorDstFactor:o,alphaSrcFactor:l,alphaDstFactor:h}=t;if(e.blend!==i){if(i){s.enable(s.BLEND)}else{s.disable(s.BLEND)}}if(e.colorOp!==n||e.alphaOp!==r){const t=this.glBlendEquation;s.blendEquationSeparate(t[n],t[r])}if(e.colorSrcFactor!==a||e.colorDstFactor!==o||e.alphaSrcFactor!==l||e.alphaDstFactor!==h){s.blendFuncSeparate(this.glBlendFunctionColor[a],this.glBlendFunctionColor[o],this.glBlendFunctionAlpha[l],this.glBlendFunctionAlpha[h])}if(e.allWrite!==t.allWrite){this.gl.colorMask(t.redWrite,t.greenWrite,t.blueWrite,t.alphaWrite)}e.copy(t)}}setBlendColor(t,e,s,i){const n=this.blendColor;if(t!==n.r||e!==n.g||s!==n.b||i!==n.a){this.gl.blendColor(t,e,s,i);n.set(t,e,s,i)}}setStencilState(t,e){if(t||e){this.setStencilTest(true);if(t===e){this.setStencilFunc(t.func,t.ref,t.readMask);this.setStencilOperation(t.fail,t.zfail,t.zpass,t.writeMask)}else{t??=tl.DEFAULT;this.setStencilFuncFront(t.func,t.ref,t.readMask);this.setStencilOperationFront(t.fail,t.zfail,t.zpass,t.writeMask);e??=tl.DEFAULT;this.setStencilFuncBack(e.func,e.ref,e.readMask);this.setStencilOperationBack(e.fail,e.zfail,e.zpass,e.writeMask)}}else{this.setStencilTest(false)}}setDepthState(t){const e=this.depthState;if(!e.equals(t)){const s=this.gl;const i=t.write;if(e.write!==i){s.depthMask(i)}let{func:n,test:r}=t;if(!r&&i){r=true;n=ys}if(e.func!==n){s.depthFunc(this.glComparison[n])}if(e.test!==r){if(r){s.enable(s.DEPTH_TEST)}else{s.disable(s.DEPTH_TEST)}}const{depthBias:a,depthBiasSlope:o}=t;if(a||o){if(!this.depthBiasEnabled){this.depthBiasEnabled=true;this.gl.enable(this.gl.POLYGON_OFFSET_FILL)}s.polygonOffset(o,a)}else{if(this.depthBiasEnabled){this.depthBiasEnabled=false;this.gl.disable(this.gl.POLYGON_OFFSET_FILL)}}e.copy(t)}}setCullMode(t){if(this.cullMode!==t){if(t===ss){this.gl.disable(this.gl.CULL_FACE)}else{if(this.cullMode===ss){this.gl.enable(this.gl.CULL_FACE)}const e=this.glCull[t];if(this.cullFace!==e){this.gl.cullFace(e);this.cullFace=e}}this.cullMode=t}}setShader(t,e=false){if(t!==this.shader){this.shader=t;this.shaderAsyncCompile=e;this.shaderValid=undefined}}activateShader(){const{shader:t}=this;const{impl:e}=t;if(this.shaderValid===undefined){if(t.failed){this.shaderValid=false}else if(!t.ready){if(this.shaderAsyncCompile){if(e.isLinked(this)){if(!e.finalize(this,t)){t.failed=true;this.shaderValid=false}}else{this.shaderValid=false}}else{if(!e.finalize(this,t)){t.failed=true;this.shaderValid=false}}}}if(this.shaderValid===undefined){this.gl.useProgram(e.glProgram);this.shaderValid=true}}clearVertexArrayObjectCache(){const t=this.gl;this._vaoMap.forEach(((e,s,i)=>{t.deleteVertexArray(e)}));this._vaoMap.clear()}set fullscreen(t){if(t){const t=this.gl.canvas;t.requestFullscreen()}else{document.exitFullscreen()}}get fullscreen(){return!!document.fullscreenElement}}class Nc{unlock(t){}}class kc{destroy(t){}init(t,e){}loseContext(){}resolve(t,e,s,i){}}class Bc{destroy(t){}loseContext(){}restoreContext(t,e){}}class Uc{destroy(t){}propertyChanged(t){}loseContext(){}}class zc{destroy(t){}unlock(t){}}class Vc extends el{constructor(t,e={}){super(t,e);e=this.initOptions;this.isNull=true;this._deviceType=Ta;this.samples=1;this.backBuffer=new il({name:"Framebuffer",graphicsDevice:this,depth:this.initOptions.depth,stencil:this.supportsStencil,samples:this.samples});this.initDeviceCaps()}destroy(){super.destroy()}initDeviceCaps(){this.disableParticleSystem=true;this.precision="highp";this.maxPrecision="highp";this.maxSamples=4;this.maxTextures=16;this.maxTextureSize=4096;this.maxCubeMapSize=4096;this.maxVolumeSize=4096;this.maxColorAttachments=8;this.maxPixelRatio=1;this.maxAnisotropy=16;this.supportsUniformBuffers=false;this.supportsAreaLights=true;this.supportsGpuParticles=false;this.textureFloatRenderable=true;this.textureHalfFloatRenderable=true;this.supportsImageBitmap=false}postInit(){super.postInit()}frameStart(){super.frameStart()}frameEnd(){super.frameEnd()}updateBegin(){}updateEnd(){}readPixels(t,e,s,i,n){}createVertexBufferImpl(t,e){return new zc(t,e)}createIndexBufferImpl(t){return new Nc(t)}createShaderImpl(t){return new Bc(t)}createTextureImpl(t){return new Uc(t)}createRenderTargetImpl(t){return new kc(t)}draw(t,e,s,i,n=true,r=true){}setShader(t,e=false){}setBlendState(t){}setDepthState(t){}setStencilState(t,e){}setBlendColor(t,e,s,i){}setCullMode(t){}setAlphaToCoverage(t){}initializeContextCaches(){super.initializeContextCaches()}clear(t){}setViewport(t,e,s,i){}setScissor(t,e,s,i){}copyRenderTarget(t,e,s,i){return true}}function Gc(t,e={}){const s=e.deviceTypes??[];if(!s.includes(Sa)){s.push(Sa)}if(!s.includes(Ta)){s.push(Ta)}if(B.browser&&!!navigator.xr){e.xrCompatible??=true}const i=[];for(let n=0;n<s.length;n++){const r=s[n];if(r===xa&&window?.navigator?.gpu){i.push((()=>{const s=new vc(t,e);return s.initWebGpu(e.glslangUrl,e.twgslUrl)}))}if(r===Sa){i.push((()=>new Fc(t,e)))}if(r===Ta){i.push((()=>new Vc(t,e)))}}return new Promise(((t,e)=>{let s=0;const n=()=>{if(s>=i.length){e(new Error("Failed to create a graphics device"))}else{Promise.resolve(i[s++]()).then((e=>{if(e){t(e)}else{n()}})).catch((t=>{console.log(t);n()}))}};n()}))}class Hc{constructor(){this.scopeId=null}}class Wc{constructor(t,e,s="Unnamed"){this.shader=null;this.parameters=new Map;this.countX=1;this.device=t;this.shader=e;this.name=s;if(t.supportsCompute){this.impl=t.createComputeImpl(this)}}setParameter(t,e){let s=this.parameters.get(t);if(!s){s=new Hc;s.scopeId=this.device.scope.resolve(t);this.parameters.set(t,s)}s.value=e}getParameter(t){return this.parameters.get(t)?.value}deleteParameter(t){this.parameters.delete(t)}applyParameters(){for(const[,t]of this.parameters){t.scopeId.setValue(t.value)}}setupDispatch(t,e,s){this.countX=t;this.countY=e;this.countZ=s}}let Xc=0;class qc{constructor(t,e,s,i=He,n,r){this.device=t;this.format=e;this.numIndices=s;this.usage=i;this.id=Xc++;this.impl=t.createIndexBufferImpl(this,r);const a=Ya[e];this.bytesPerIndex=a;this.numBytes=this.numIndices*a;if(n){this.setData(n)}else{this.storage=new ArrayBuffer(this.numBytes)}this.adjustVramSizeTracking(t._vram,this.numBytes);this.device.buffers.push(this)}destroy(){const t=this.device;const e=t.buffers.indexOf(this);if(e!==-1){t.buffers.splice(e,1)}if(this.device.indexBuffer===this){this.device.indexBuffer=null}if(this.impl.initialized){this.impl.destroy(t);this.adjustVramSizeTracking(t._vram,-this.storage.byteLength)}}adjustVramSizeTracking(t,e){t.ib+=e}loseContext(){this.impl.loseContext()}getFormat(){return this.format}getNumIndices(){return this.numIndices}lock(){return this.storage}unlock(){this.impl.unlock(this)}setData(t){if(t.byteLength!==this.numBytes){return false}this.storage=t;this.unlock();return true}_lockTypedArray(){const t=this.lock();const e=this.format===Ts?new Uint32Array(t):this.format===xs?new Uint16Array(t):new Uint8Array(t);return e}writeData(t,e){const s=this._lockTypedArray();if(t.length>e){if(ArrayBuffer.isView(t)){t=t.subarray(0,e);s.set(t)}else{for(let i=0;i<e;i++){s[i]=t[i]}}}else{s.set(t)}this.unlock()}readData(t){const e=this._lockTypedArray();const s=this.numIndices;if(ArrayBuffer.isView(t)){t.set(e)}else{t.length=0;for(let i=0;i<s;i++){t[i]=e[i]}}return s}}class $c{constructor(){this.clearValue=new bt(0,0,0,1);this.clearValueLinear=new bt(0,0,0,1);this.clear=false;this.store=false;this.resolve=true;this.genMipmaps=false}}class jc{constructor(){this.clearDepthValue=1;this.clearStencilValue=0;this.clearDepth=false;this.clearStencil=false;this.storeDepth=false;this.resolveDepth=false;this.storeStencil=false}}class Yc{get colorOps(){return this.colorArrayOps[0]}constructor(t){this._enabled=true;this._skipStart=false;this._skipEnd=false;this.executeEnabled=true;this.samples=0;this.colorArrayOps=[];this.requiresCubemaps=true;this.fullSizeClearRect=true;this.beforePasses=[];this.afterPasses=[];this.device=t}set name(t){this._name=t}get name(){if(!this._name){this._name=this.constructor.name}return this._name}set scaleX(t){this._options.scaleX=t}get scaleX(){return this._options.scaleX}set scaleY(t){this._options.scaleY=t}get scaleY(){return this._options.scaleY}set options(t){this._options=t;if(t){this.scaleX=this.scaleX??1;this.scaleY=this.scaleY??1}}get options(){return this._options}init(t=null,e){this.options=e;this.renderTarget=t;this.samples=Math.max(this.renderTarget?this.renderTarget.samples:this.device.samples,1);this.allocateAttachments();this.postInit()}allocateAttachments(){const t=this.renderTarget;this.depthStencilOps=new jc;if(t?.depthBuffer){this.depthStencilOps.storeDepth=true}const e=t?t._colorBuffers?.length??0:1;this.colorArrayOps.length=0;for(let t=0;t<e;t++){const e=new $c;this.colorArrayOps[t]=e;if(this.samples===1){e.store=true;e.resolve=false}const s=this.renderTarget?._colorBuffers?.[t];if(this.renderTarget?.mipmaps&&s?.mipmaps){const t=Bi(s._format);e.genMipmaps=!t}}}destroy(){}postInit(){}frameUpdate(){if(this._options&&this.renderTarget){const t=this._options.resizeSource??this.device.backBuffer;const e=Math.floor(t.width*this.scaleX);const s=Math.floor(t.height*this.scaleY);this.renderTarget.resize(e,s)}}before(){}execute(){}after(){}onEnable(){}onDisable(){}set enabled(t){if(this._enabled!==t){this._enabled=t;if(t){this.onEnable()}else{this.onDisable()}}}get enabled(){return this._enabled}setClearColor(t){const e=this.colorArrayOps.length;for(let s=0;s<e;s++){const e=this.colorArrayOps[s];if(t){e.clearValue.copy(t);e.clearValueLinear.linear(t)}e.clear=!!t}}setClearDepth(t){if(t){this.depthStencilOps.clearDepthValue=t}this.depthStencilOps.clearDepth=t!==undefined}setClearStencil(t){if(t){this.depthStencilOps.clearStencilValue=t}this.depthStencilOps.clearStencil=t!==undefined}render(){if(this.enabled){const t=this.device;const e=this.renderTarget!==undefined;this.before();if(this.executeEnabled){if(e&&!this._skipStart){t.startRenderPass(this)}this.execute();if(e&&!this._skipEnd){t.endRenderPass(this)}}this.after();t.renderPassIndex++}}}class Kc{constructor(t,e=qe){this.device=t.device;const s=this.device.gl;this._inputBuffer=t;if(e===qe&&t.usage!==e){s.bindBuffer(s.ARRAY_BUFFER,t.impl.bufferId);s.bufferData(s.ARRAY_BUFFER,t.storage,s.DYNAMIC_COPY)}this._outputBuffer=new qo(t.device,t.format,t.numVertices,{usage:e,data:t.storage})}static createShader(t,e,s){return new Zh(t,Yh.createDefinition(t,{name:s,vertexCode:e,useTransformFeedback:true,fragmentCode:"void main(void) {gl_FragColor = vec4(0.0);}"}))}destroy(){this._outputBuffer.destroy()}process(t,e=true){const s=this.device;const i=s.getRenderTarget();s.setRenderTarget(null);s.updateBegin();s.setVertexBuffer(this._inputBuffer,0);s.setRaster(false);s.setTransformFeedbackBuffer(this._outputBuffer);s.setShader(t);s.draw({type:Hi,base:0,baseVertex:0,count:this._inputBuffer.numVertices,indexed:false});s.setTransformFeedbackBuffer(null);s.setRaster(true);s.updateEnd();s.setRenderTarget(i);if(e){let t=this._inputBuffer.impl.bufferId;this._inputBuffer.impl.bufferId=this._outputBuffer.impl.bufferId;this._outputBuffer.impl.bufferId=t;t=this._inputBuffer.impl.vao;this._inputBuffer.impl.vao=this._outputBuffer.impl.vao;this._outputBuffer.impl.vao=t}}get inputBuffer(){return this._inputBuffer}get outputBuffer(){return this._outputBuffer}}function Zc(t){this.array[this.index]=t}function Qc(t,e){this.array[this.index]=t;this.array[this.index+1]=e}function Jc(t,e,s){this.array[this.index]=t;this.array[this.index+1]=e;this.array[this.index+2]=s}function td(t,e,s,i){this.array[this.index]=t;this.array[this.index+1]=e;this.array[this.index+2]=s;this.array[this.index+3]=i}function ed(t,e,s){this.array[t]=e[s]}function sd(t,e,s){this.array[t]=e[s];this.array[t+1]=e[s+1]}function id(t,e,s){this.array[t]=e[s];this.array[t+1]=e[s+1];this.array[t+2]=e[s+2]}function nd(t,e,s){this.array[t]=e[s];this.array[t+1]=e[s+1];this.array[t+2]=e[s+2];this.array[t+3]=e[s+3]}function rd(t,e,s){e[s]=this.array[t]}function ad(t,e,s){e[s]=this.array[t];e[s+1]=this.array[t+1]}function od(t,e,s){e[s]=this.array[t];e[s+1]=this.array[t+1];e[s+2]=this.array[t+2]}function ld(t,e,s){e[s]=this.array[t];e[s+1]=this.array[t+1];e[s+2]=this.array[t+2];e[s+3]=this.array[t+3]}class hd{constructor(t,e,s){this.index=0;this.numComponents=e.numComponents;if(s.interleaved){this.array=new Wa[e.dataType](t,e.offset)}else{this.array=new Wa[e.dataType](t,e.offset,s.vertexCount*e.numComponents)}this.stride=e.stride/this.array.constructor.BYTES_PER_ELEMENT;switch(e.numComponents){case 1:this.set=Zc;this.getToArray=rd;this.setFromArray=ed;break;case 2:this.set=Qc;this.getToArray=ad;this.setFromArray=sd;break;case 3:this.set=Jc;this.getToArray=od;this.setFromArray=id;break;case 4:this.set=td;this.getToArray=ld;this.setFromArray=nd;break}}get(t){return this.array[this.index+t]}set(t,e,s,i){}getToArray(t,e,s){}setFromArray(t,e,s){}}class cd{constructor(t){this.vertexBuffer=t;this.vertexFormatSize=t.getFormat().size;this.buffer=this.vertexBuffer.lock();this.accessors=[];this.element={};const e=this.vertexBuffer.getFormat();for(let t=0;t<e.elements.length;t++){const s=e.elements[t];this.accessors[t]=new hd(this.buffer,s,e);this.element[s.name]=this.accessors[t]}}next(t=1){let e=0;const s=this.accessors;const i=this.accessors.length;while(e<i){const i=s[e++];i.index+=t*i.stride}}end(){this.vertexBuffer.unlock()}writeData(t,e,s){const i=this.element[t];if(i){if(s>this.vertexBuffer.numVertices){s=this.vertexBuffer.numVertices}const t=i.numComponents;if(this.vertexBuffer.getFormat().interleaved){let n=0;for(let r=0;r<s;r++){i.setFromArray(n,e,r*t);n+=i.stride}}else{if(e.length>s*t){const n=s*t;if(ArrayBuffer.isView(e)){e=e.subarray(0,n);i.array.set(e)}else{for(let t=0;t<n;t++){i.array[t]=e[t]}}}else{i.array.set(e)}}}}readData(t,e){const s=this.element[t];let i=0;if(s){i=this.vertexBuffer.numVertices;let t;const n=s.numComponents;if(this.vertexBuffer.getFormat().interleaved){if(Array.isArray(e)){e.length=0}s.index=0;let r=0;for(t=0;t<i;t++){s.getToArray(r,e,t*n);r+=s.stride}}else{if(ArrayBuffer.isView(e)){e.set(s.array)}else{e.length=0;const r=i*n;for(t=0;t<r;t++){e[t]=s.array[t]}}}}return i}}const dd="mouse";const ud="keyboard";const fd="gamepad";const pd="mousex";const md="mousey";const _d="padlx";const gd="padly";const vd="padrx";const yd="padry";const Sd="key";const xd=8;const Td=9;const wd=13;const bd=13;const Ed=16;const Ad=17;const Cd=18;const Pd=19;const Ld=20;const Dd=27;const Md=32;const Id=33;const Rd=34;const Od=35;const Fd=36;const Nd=37;const kd=38;const Bd=39;const Ud=40;const zd=44;const Vd=45;const Gd=46;const Hd=48;const Wd=49;const Xd=50;const qd=51;const $d=52;const jd=53;const Yd=54;const Kd=55;const Zd=56;const Qd=57;const Jd=59;const tu=61;const eu=65;const su=66;const iu=67;const nu=68;const ru=69;const au=70;const ou=71;const lu=72;const hu=73;const cu=74;const du=75;const uu=76;const fu=77;const pu=78;const mu=79;const _u=80;const gu=81;const vu=82;const yu=83;const Su=84;const xu=85;const Tu=86;const wu=87;const bu=88;const Eu=89;const Au=90;const Cu=91;const Pu=93;const Lu=96;const Du=97;const Mu=98;const Iu=99;const Ru=100;const Ou=101;const Fu=102;const Nu=103;const ku=104;const Bu=105;const Uu=106;const zu=107;const Vu=108;const Gu=109;const Hu=110;const Wu=111;const Xu=112;const qu=113;const $u=114;const ju=115;const Yu=116;const Ku=117;const Zu=118;const Qu=119;const Ju=120;const tf=121;const ef=122;const sf=123;const nf=188;const rf=190;const af=191;const of=219;const lf=220;const hf=221;const cf=224;const df=-1;const uf=0;const ff=1;const pf=2;const mf=0;const _f=1;const gf=2;const vf=3;const yf=0;const Sf=1;const xf=2;const Tf=3;const wf=4;const bf=5;const Ef=6;const Af=7;const Cf=8;const Pf=9;const Lf=10;const Df=11;const Mf=12;const If=13;const Rf=14;const Of=15;const Ff=16;const Nf=0;const kf=1;const Bf=2;const Uf=3;const zf=0;const Vf=1;const Gf=2;const Hf=3;const Wf=2;const Xf=0;const qf=1;const $f=3;const jf=4;const Yf=5;class Kf{constructor(t,e){this.key=null;this.element=null;this.event=null;if(e){this.key=e.keyCode;this.element=e.target;this.event=e}}}const Zf=new Kf;function Qf(t){Zf.key=t.keyCode;Zf.element=t.target;Zf.event=t;return Zf}function Jf(t){if(typeof t==="string"){return t.toUpperCase().charCodeAt(0)}return t}const tp={9:"Tab",13:"Enter",16:"Shift",17:"Control",18:"Alt",27:"Escape",37:"Left",38:"Up",39:"Right",40:"Down",46:"Delete",91:"Win"};class ep extends at{static{this.EVENT_KEYDOWN="keydown"}static{this.EVENT_KEYUP="keyup"}constructor(t,e={}){super(),this._element=null,this._keymap={},this._lastmap={};this._keyDownHandler=this._handleKeyDown.bind(this);this._keyUpHandler=this._handleKeyUp.bind(this);this._keyPressHandler=this._handleKeyPress.bind(this);this._visibilityChangeHandler=this._handleVisibilityChange.bind(this);this._windowBlurHandler=this._handleWindowBlur.bind(this);if(t){this.attach(t)}this.preventDefault=e.preventDefault||false;this.stopPropagation=e.stopPropagation||false}attach(t){if(this._element){this.detach()}this._element=t;this._element.addEventListener("keydown",this._keyDownHandler,false);this._element.addEventListener("keypress",this._keyPressHandler,false);this._element.addEventListener("keyup",this._keyUpHandler,false);document.addEventListener("visibilitychange",this._visibilityChangeHandler,false);window.addEventListener("blur",this._windowBlurHandler,false)}detach(){if(!this._element){return}this._element.removeEventListener("keydown",this._keyDownHandler);this._element.removeEventListener("keypress",this._keyPressHandler);this._element.removeEventListener("keyup",this._keyUpHandler);this._element=null;document.removeEventListener("visibilitychange",this._visibilityChangeHandler,false);window.removeEventListener("blur",this._windowBlurHandler,false)}toKeyIdentifier(t){t=Jf(t);const e=tp[t.toString()];if(e){return e}let s=t.toString(16).toUpperCase();const i=s.length;for(let t=0;t<4-i;t++){s=`0${s}`}return`U+${s}`}_handleKeyDown(t){const e=t.keyCode||t.charCode;if(e===undefined)return;const s=this.toKeyIdentifier(e);this._keymap[s]=true;this.fire("keydown",Qf(t));if(this.preventDefault){t.preventDefault()}if(this.stopPropagation){t.stopPropagation()}}_handleKeyUp(t){const e=t.keyCode||t.charCode;if(e===undefined)return;const s=this.toKeyIdentifier(e);delete this._keymap[s];this.fire("keyup",Qf(t));if(this.preventDefault){t.preventDefault()}if(this.stopPropagation){t.stopPropagation()}}_handleKeyPress(t){this.fire("keypress",Qf(t));if(this.preventDefault){t.preventDefault()}if(this.stopPropagation){t.stopPropagation()}}_handleVisibilityChange(){if(document.visibilityState==="hidden"){this._handleWindowBlur()}}_handleWindowBlur(){this._keymap={};this._lastmap={}}update(){for(const t in this._lastmap){delete this._lastmap[t]}for(const t in this._keymap){if(this._keymap.hasOwnProperty(t)){this._lastmap[t]=this._keymap[t]}}}isPressed(t){const e=Jf(t);const s=this.toKeyIdentifier(e);return!!this._keymap[s]}wasPressed(t){const e=Jf(t);const s=this.toKeyIdentifier(e);return!!this._keymap[s]&&!!!this._lastmap[s]}wasReleased(t){const e=Jf(t);const s=this.toKeyIdentifier(e);return!!!this._keymap[s]&&!!this._lastmap[s]}}function sp(){return!!(document.pointerLockElement||document.mozPointerLockElement||document.webkitPointerLockElement)}class ip{constructor(t,e){this.x=0;this.y=0;this.dx=0;this.dy=0;this.button=df;this.wheelDelta=0;this.ctrlKey=false;this.altKey=false;this.shiftKey=false;this.metaKey=false;let s={x:0,y:0};if(e){if(e instanceof ip){throw Error("Expected MouseEvent")}s=t._getTargetCoords(e)}else{e={}}if(s){this.x=s.x;this.y=s.y}else if(sp()){this.x=0;this.y=0}else{return}if(e.type==="wheel"){if(e.deltaY>0){this.wheelDelta=1}else if(e.deltaY<0){this.wheelDelta=-1}}if(sp()){this.dx=e.movementX||e.webkitMovementX||e.mozMovementX||0;this.dy=e.movementY||e.webkitMovementY||e.mozMovementY||0}else{this.dx=this.x-t._lastX;this.dy=this.y-t._lastY}if(e.type==="mousedown"||e.type==="mouseup"){this.button=e.button}this.buttons=t._buttons.slice(0);this.element=e.target;this.ctrlKey=e.ctrlKey??false;this.altKey=e.altKey??false;this.shiftKey=e.shiftKey??false;this.metaKey=e.metaKey??false;this.event=e}}class np extends at{static{this.EVENT_MOUSEMOVE="mousemove"}static{this.EVENT_MOUSEDOWN="mousedown"}static{this.EVENT_MOUSEUP="mouseup"}static{this.EVENT_MOUSEWHEEL="mousewheel"}constructor(t){super(),this._lastX=0,this._lastY=0,this._buttons=[false,false,false],this._lastbuttons=[false,false,false],this._target=null,this._attached=false;this._upHandler=this._handleUp.bind(this);this._downHandler=this._handleDown.bind(this);this._moveHandler=this._handleMove.bind(this);this._wheelHandler=this._handleWheel.bind(this);this._contextMenuHandler=t=>{t.preventDefault()};this.attach(t)}static isPointerLocked(){return sp()}attach(t){this._target=t;if(this._attached)return;this._attached=true;const e={passive:false};const s=B.passiveEvents?e:false;window.addEventListener("mouseup",this._upHandler,s);window.addEventListener("mousedown",this._downHandler,s);window.addEventListener("mousemove",this._moveHandler,s);window.addEventListener("wheel",this._wheelHandler,s)}detach(){if(!this._attached)return;this._attached=false;this._target=null;const t={passive:false};const e=B.passiveEvents?t:false;window.removeEventListener("mouseup",this._upHandler,e);window.removeEventListener("mousedown",this._downHandler,e);window.removeEventListener("mousemove",this._moveHandler,e);window.removeEventListener("wheel",this._wheelHandler,e)}disableContextMenu(){if(!this._target)return;this._target.addEventListener("contextmenu",this._contextMenuHandler)}enableContextMenu(){if(!this._target)return;this._target.removeEventListener("contextmenu",this._contextMenuHandler)}enablePointerLock(t,e){if(!document.body.requestPointerLock){if(e){e()}return}const s=()=>{t();document.removeEventListener("pointerlockchange",s)};const i=()=>{e();document.removeEventListener("pointerlockerror",i)};if(t){document.addEventListener("pointerlockchange",s,false)}if(e){document.addEventListener("pointerlockerror",i,false)}document.body.requestPointerLock()}disablePointerLock(t){if(!document.exitPointerLock){return}const e=()=>{t();document.removeEventListener("pointerlockchange",e)};if(t){document.addEventListener("pointerlockchange",e,false)}document.exitPointerLock()}update(){this._lastbuttons[0]=this._buttons[0];this._lastbuttons[1]=this._buttons[1];this._lastbuttons[2]=this._buttons[2]}isPressed(t){return this._buttons[t]}wasPressed(t){return this._buttons[t]&&!this._lastbuttons[t]}wasReleased(t){return!this._buttons[t]&&this._lastbuttons[t]}_handleUp(t){this._buttons[t.button]=false;const e=new ip(this,t);if(!e.event)return;this.fire("mouseup",e)}_handleDown(t){this._buttons[t.button]=true;const e=new ip(this,t);if(!e.event)return;this.fire("mousedown",e)}_handleMove(t){const e=new ip(this,t);if(!e.event)return;this.fire("mousemove",e);this._lastX=e.x;this._lastY=e.y}_handleWheel(t){const e=new ip(this,t);if(!e.event)return;this.fire("mousewheel",e)}_getTargetCoords(t){const e=this._target.getBoundingClientRect();const s=Math.floor(e.left);const i=Math.floor(e.top);if(t.clientX<s||t.clientX>=s+this._target.clientWidth||t.clientY<i||t.clientY>=i+this._target.clientHeight){return null}return{x:t.clientX-s,y:t.clientY-i}}}class rp{constructor(t,e={}){this._element=null;this._actions={};this._axes={};this._axesValues={};this._keyboard=e.keyboard||null;this._mouse=e.mouse||null;this._gamepads=e.gamepads||null;if(t){this.attach(t)}}attach(t){this._element=t;if(this._keyboard){this._keyboard.attach(t)}if(this._mouse){this._mouse.attach(t)}}detach(){if(this._keyboard){this._keyboard.detach()}if(this._mouse){this._mouse.detach()}this._element=null}disableContextMenu(){if(!this._mouse){this._enableMouse()}this._mouse.disableContextMenu()}enableContextMenu(){if(!this._mouse){this._enableMouse()}this._mouse.enableContextMenu()}update(t){if(this._keyboard){this._keyboard.update()}if(this._mouse){this._mouse.update()}if(this._gamepads){this._gamepads.update()}this._axesValues={};for(const t in this._axes){this._axesValues[t]=[]}}appendAction(t,e){this._actions[t]=this._actions[t]||[];this._actions[t].push(e)}registerKeys(t,e){if(!this._keyboard){this._enableKeyboard()}if(this._actions[t]){throw new Error(`Action: ${t} already registered`)}if(e===undefined){throw new Error("Invalid button")}if(!e.length){e=[e]}this.appendAction(t,{type:ud,keys:e})}registerMouse(t,e){if(!this._mouse){this._enableMouse()}if(e===undefined){throw new Error("Invalid button")}this.appendAction(t,{type:dd,button:e})}registerPadButton(t,e,s){if(s===undefined){throw new Error("Invalid button")}this.appendAction(t,{type:fd,button:s,pad:e})}registerAxis(t){const e=t.name;if(!this._axes[e]){this._axes[e]=[]}const s=this._axes[e].push(e);t=t||{};t.pad=t.pad||mf;const i=function(i,n,r,a){switch(n){case"mousex":i._mouse.on("mousemove",(t=>{i._axesValues[e][s]=t.dx/10}));break;case"mousey":i._mouse.on("mousemove",(t=>{i._axesValues[e][s]=t.dy/10}));break;case"key":i._axes[e].push((()=>i._keyboard.isPressed(a)?r:0));break;case"padrx":i._axes[e].push((()=>i._gamepads.getAxis(t.pad,Bf)));break;case"padry":i._axes[e].push((()=>i._gamepads.getAxis(t.pad,Uf)));break;case"padlx":i._axes[e].push((()=>i._gamepads.getAxis(t.pad,Nf)));break;case"padly":i._axes[e].push((()=>i._gamepads.getAxis(t.pad,kf)));break;default:throw new Error("Unknown axis")}};i(this,t.positive,1,t.positiveKey);if(t.negativeKey||t.negative!==t.positive){i(this,t.negative,-1,t.negativeKey)}}isPressed(t){if(!this._actions[t]){return false}const e=this._actions[t].length;for(let s=0;s<e;++s){const e=this._actions[t][s];switch(e.type){case ud:if(this._keyboard){const t=e.keys.length;for(let s=0;s<t;s++){if(this._keyboard.isPressed(e.keys[s])){return true}}}break;case dd:if(this._mouse&&this._mouse.isPressed(e.button)){return true}break;case fd:if(this._gamepads&&this._gamepads.isPressed(e.pad,e.button)){return true}break}}return false}wasPressed(t){if(!this._actions[t]){return false}const e=this._actions[t].length;for(let s=0;s<e;++s){const e=this._actions[t][s];switch(e.type){case ud:if(this._keyboard){const t=e.keys.length;for(let s=0;s<t;s++){if(this._keyboard.wasPressed(e.keys[s])){return true}}}break;case dd:if(this._mouse&&this._mouse.wasPressed(e.button)){return true}break;case fd:if(this._gamepads&&this._gamepads.wasPressed(e.pad,e.button)){return true}break}}return false}getAxis(t){let e=0;if(this._axes[t]){const s=this._axes[t].length;for(let i=0;i<s;i++){if(typeof this._axes[t][i]==="function"){const s=this._axes[t][i]();if(Math.abs(s)>Math.abs(e)){e=s}}else if(this._axesValues[t]){if(Math.abs(this._axesValues[t][i])>Math.abs(e)){e=this._axesValues[t][i]}}}}return e}_enableMouse(){this._mouse=new np;if(!this._element){throw new Error("Controller must be attached to an Element")}this._mouse.attach(this._element)}_enableKeyboard(){this._keyboard=new ep;if(!this._element){throw new Error("Controller must be attached to an Element")}this._keyboard.attach(this._element)}}const ap=Object.freeze([]);let op=function(){return ap};if(typeof navigator!=="undefined"){op=(navigator.getGamepads||navigator.webkitGetGamepads||op).bind(navigator)}const lp={buttons:{PAD_FACE_1:yf,PAD_FACE_2:Sf,PAD_FACE_3:xf,PAD_FACE_4:Tf,PAD_L_SHOULDER_1:wf,PAD_R_SHOULDER_1:bf,PAD_L_SHOULDER_2:Ef,PAD_R_SHOULDER_2:Af,PAD_SELECT:Cf,PAD_START:Pf,PAD_L_STICK_BUTTON:Lf,PAD_R_STICK_BUTTON:Df,PAD_UP:Mf,PAD_DOWN:If,PAD_LEFT:Rf,PAD_RIGHT:Of,PAD_VENDOR:Ff,XRPAD_TRIGGER:Xf,XRPAD_SQUEEZE:qf,XRPAD_TOUCHPAD_BUTTON:Wf,XRPAD_STICK_BUTTON:$f,XRPAD_A:jf,XRPAD_B:Yf},axes:{PAD_L_STICK_X:Nf,PAD_L_STICK_Y:kf,PAD_R_STICK_X:Bf,PAD_R_STICK_Y:Uf,XRPAD_TOUCHPAD_X:zf,XRPAD_TOUCHPAD_Y:Vf,XRPAD_STICK_X:Gf,XRPAD_STICK_Y:Hf}};const hp={DEFAULT:{buttons:["PAD_FACE_1","PAD_FACE_2","PAD_FACE_3","PAD_FACE_4","PAD_L_SHOULDER_1","PAD_R_SHOULDER_1","PAD_L_SHOULDER_2","PAD_R_SHOULDER_2","PAD_SELECT","PAD_START","PAD_L_STICK_BUTTON","PAD_R_STICK_BUTTON","PAD_UP","PAD_DOWN","PAD_LEFT","PAD_RIGHT","PAD_VENDOR"],axes:["PAD_L_STICK_X","PAD_L_STICK_Y","PAD_R_STICK_X","PAD_R_STICK_Y"]},DEFAULT_DUAL:{buttons:["PAD_FACE_1","PAD_FACE_2","PAD_FACE_3","PAD_FACE_4","PAD_L_SHOULDER_1","PAD_R_SHOULDER_1","PAD_L_SHOULDER_2","PAD_R_SHOULDER_2","PAD_SELECT","PAD_START","PAD_L_STICK_BUTTON","PAD_R_STICK_BUTTON","PAD_VENDOR"],axes:["PAD_L_STICK_X","PAD_L_STICK_Y","PAD_R_STICK_X","PAD_R_STICK_Y"],synthesizedButtons:{PAD_UP:{axis:0,min:0,max:1},PAD_DOWN:{axis:0,min:-1,max:0},PAD_LEFT:{axis:0,min:-1,max:0},PAD_RIGHT:{axis:0,min:0,max:1}}},PS3:{buttons:["PAD_FACE_1","PAD_FACE_2","PAD_FACE_4","PAD_FACE_3","PAD_L_SHOULDER_1","PAD_R_SHOULDER_1","PAD_L_SHOULDER_2","PAD_R_SHOULDER_2","PAD_SELECT","PAD_START","PAD_L_STICK_BUTTON","PAD_R_STICK_BUTTON","PAD_UP","PAD_DOWN","PAD_LEFT","PAD_RIGHT","PAD_VENDOR"],axes:["PAD_L_STICK_X","PAD_L_STICK_Y","PAD_R_STICK_X","PAD_R_STICK_Y"],mapping:"standard"},DEFAULT_XR:{buttons:["XRPAD_TRIGGER","XRPAD_SQUEEZE","XRPAD_TOUCHPAD_BUTTON","XRPAD_STICK_BUTTON","XRPAD_A","XRPAD_B"],axes:["XRPAD_TOUCHPAD_X","XRPAD_TOUCHPAD_Y","XRPAD_STICK_X","XRPAD_STICK_Y"],mapping:"xr-standard"}};const cp={"Product: 0268":"PS3"};const dp={};function up(t){const e=dp[t.id];if(e){return e}for(const e in cp){if(t.id.indexOf(e)!==-1){const s=cp[e];if(!t.mapping){const t=hp[`RAW_${s}`];if(t){return t}}return hp[s]}}if(t.mapping==="xr-standard"){return hp.DEFAULT_XR}const s=hp.DEFAULT;const i=t.buttons.length<s.buttons.length?hp.DEFAULT_DUAL:s;i.mapping=t.mapping;return i}let fp=.25;function pp(t){return new Promise((e=>{setTimeout(e,t)}))}class mp{constructor(t,e){this.value=0;this.pressed=false;this.touched=false;this.wasPressed=false;this.wasReleased=false;this.wasTouched=false;if(typeof t==="number"){this.value=t;this.pressed=t===1;this.touched=t>0}else{this.value=t.value;this.pressed=t.pressed;this.touched=t.touched??t.value>0}if(e){if(typeof e==="number"){this.wasPressed=e!==1&&this.pressed;this.wasReleased=e===1&&!this.pressed;this.wasTouched=e===0&&this.touched}else{this.wasPressed=!e.pressed&&this.pressed;this.wasReleased=e.pressed&&!this.pressed;this.wasTouched=!(e.touched??e.value>0)&&this.touched}}}update(t){const{value:e,pressed:s}=t;const i=t.touched??e>0;this.wasPressed=!this.pressed&&s;this.wasReleased=this.pressed&&!s;this.wasTouched=!this.touched&&i;this.value=e;this.pressed=s;this.touched=i}}const _p=Object.freeze(new mp(0));class gp{constructor(t,e){this._compiledMapping={buttons:[],axes:[]};this.id=t.id;this.index=t.index;this._buttons=t.buttons.map((t=>new mp(t)));this._axes=[...t.axes];this._previousAxes=[...t.axes];this.mapping=e.mapping;this.map=e;this.hand=t.hand||"none";this.pad=t;this._compileMapping()}get connected(){return this.pad.connected}_compileMapping(){const{axes:t,buttons:e}=this._compiledMapping;const s=lp.axes;const i=lp.buttons;t.length=0;e.length=0;const n=this.map.axes;if(n){this.map.axes.forEach(((e,i)=>{t[s[e]]=()=>this.pad.axes[i]||0}))}for(let e=0,s=t.length;e<s;e++){if(!t[e]){t[e]=()=>0}}const r=this.map.buttons;if(r){r.forEach(((t,s)=>{e[i[t]]=()=>this._buttons[s]||_p}))}const a=this.map.synthesizedButtons;if(a){Object.entries(a).forEach((t=>{const{axis:s,max:n,min:r}=t[1];e[i[t[0]]]=()=>new mp(Math.abs(wt.clamp(this._axes[s]??0,r,n)),Math.abs(wt.clamp(this._previousAxes[s]??0,r,n)))}))}for(let t=0,s=e.length;t<s;t++){if(!e[t]){e[t]=()=>_p}}}update(t){this.pad=t;const e=this._previousAxes;const s=this._axes;e.length=0;e.push(...s);s.length=0;s.push(...t.axes);const i=this._buttons;for(let e=0,s=i.length;e<s;e++){i[e].update(t.buttons[e])}return this}updateMap(t){t.mapping="custom";dp[this.id]=t;this.map=t;this.mapping="custom";this._compileMapping()}resetMap(){if(dp[this.id]){delete dp[this.id];const t=up(this.pad);this.map=t;this.mapping=t.mapping;this._compileMapping()}}get axes(){return this._compiledMapping.axes.map((t=>t()))}get buttons(){return this._compiledMapping.buttons.map((t=>t()))}async pulse(t,e,s){const i=this.pad.vibrationActuator?[this.pad.vibrationActuator]:this.pad.hapticActuators||ap;if(i.length){const n=s?.startDelay??0;const r=s?.strongMagnitude??t;const a=s?.weakMagnitude??t;const o=await Promise.all(i.map((async s=>{if(!s){return true}if(s.playEffect){return s.playEffect(s.type,{duration:e,startDelay:n,strongMagnitude:r,weakMagnitude:a})}else if(s.pulse){await pp(n);return s.pulse(t,e)}return false})));return o.some((t=>t===true||t==="complete"))}return false}getButton(t){const e=this._compiledMapping.buttons[t];return e?e():_p}isPressed(t){return this.getButton(t).pressed}wasPressed(t){return this.getButton(t).wasPressed}wasReleased(t){return this.getButton(t).wasReleased}isTouched(t){return this.getButton(t).touched}wasTouched(t){return this.getButton(t).wasTouched}getValue(t){return this.getButton(t).value}getAxis(t){const e=this.axes[t];return e&&Math.abs(e)>fp?e:0}}class vp extends at{static{this.EVENT_GAMEPADCONNECTED="gamepadconnected"}static{this.EVENT_GAMEPADDISCONNECTED="gamepaddisconnected"}constructor(){super();this.gamepadsSupported=B.gamepads;this.current=[];this._previous=[];this._ongamepadconnectedHandler=this._ongamepadconnected.bind(this);this._ongamepaddisconnectedHandler=this._ongamepaddisconnected.bind(this);window.addEventListener("gamepadconnected",this._ongamepadconnectedHandler,false);window.addEventListener("gamepaddisconnected",this._ongamepaddisconnectedHandler,false);this.poll()}set deadZone(t){fp=t}get deadZone(){return fp}get previous(){const t=this.current;for(let e=0,s=t.length;e<s;e++){const s=t[e]._buttons;if(!this._previous[e]){this._previous[e]=[]}for(let t=0,i=s.length;t<i;t++){const i=s[e];this.previous[e][t]=i?!i.wasPressed&&i.pressed||i.wasReleased:false}}this._previous.length=this.current.length;return this._previous}_ongamepadconnected(t){const e=new gp(t.gamepad,this.getMap(t.gamepad));const s=this.current;let i=s.findIndex((t=>t.index===e.index));while(i!==-1){s.splice(i,1);i=s.findIndex((t=>t.index===e.index))}s.push(e);this.fire("gamepadconnected",e)}_ongamepaddisconnected(t){const e=this.current;const s=e.findIndex((e=>e.index===t.gamepad.index));if(s!==-1){this.fire("gamepaddisconnected",e[s]);e.splice(s,1)}}update(){this.poll()}poll(t=[]){if(t.length>0){t.length=0}const e=op();for(let s=0,i=e.length;s<i;s++){if(e[s]){const i=this.findByIndex(e[s].index);if(i){t.push(i.update(e[s]))}else{const i=new gp(e[s],this.getMap(e[s]));this.current.push(i);t.push(i)}}}return t}destroy(){window.removeEventListener("gamepadconnected",this._ongamepadconnectedHandler,false);window.removeEventListener("gamepaddisconnected",this._ongamepaddisconnectedHandler,false)}getMap(t){return up(t)}isPressed(t,e){return this.current[t]?.isPressed(e)||false}wasPressed(t,e){return this.current[t]?.wasPressed(e)||false}wasReleased(t,e){return this.current[t]?.wasReleased(e)||false}getAxis(t,e){return this.current[t]?.getAxis(e)||0}pulse(t,e,s,i){const n=this.current[t];return n?n.pulse(e,s,i):Promise.resolve(false)}pulseAll(t,e,s){return Promise.all(this.current.map((i=>i.pulse(t,e,s))))}findById(t){return this.current.find((e=>e&&e.id===t))||null}findByIndex(t){return this.current.find((e=>e&&e.index===t))||null}}function yp(t){let e=0;let s=0;let i=t.target;while(!(i instanceof HTMLElement)&&i){i=i.parentNode}while(i){e+=i.offsetLeft-i.scrollLeft;s+=i.offsetTop-i.scrollTop;i=i.offsetParent}return{x:t.pageX-e,y:t.pageY-s}}class Sp{constructor(t){const e=yp(t);this.id=t.identifier;this.x=e.x;this.y=e.y;this.target=t.target;this.touch=t}}class xp{constructor(t,e){this.touches=[];this.changedTouches=[];this.element=e.target;this.event=e;this.touches=Array.from(e.touches).map((t=>new Sp(t)));this.changedTouches=Array.from(e.changedTouches).map((t=>new Sp(t)))}getTouchById(t,e){return e.find((e=>e.id===t))||null}}class Tp extends at{static{this.EVENT_TOUCHSTART="touchstart"}static{this.EVENT_TOUCHEND="touchend"}static{this.EVENT_TOUCHMOVE="touchmove"}static{this.EVENT_TOUCHCANCEL="touchcancel"}constructor(t){super();this._element=null;this._startHandler=this._handleTouchStart.bind(this);this._endHandler=this._handleTouchEnd.bind(this);this._moveHandler=this._handleTouchMove.bind(this);this._cancelHandler=this._handleTouchCancel.bind(this);this.attach(t)}attach(t){if(this._element){this.detach()}this._element=t;this._element.addEventListener("touchstart",this._startHandler,false);this._element.addEventListener("touchend",this._endHandler,false);this._element.addEventListener("touchmove",this._moveHandler,false);this._element.addEventListener("touchcancel",this._cancelHandler,false)}detach(){if(this._element){this._element.removeEventListener("touchstart",this._startHandler,false);this._element.removeEventListener("touchend",this._endHandler,false);this._element.removeEventListener("touchmove",this._moveHandler,false);this._element.removeEventListener("touchcancel",this._cancelHandler,false)}this._element=null}_handleTouchStart(t){this.fire("touchstart",new xp(this,t))}_handleTouchEnd(t){this.fire("touchend",new xp(this,t))}_handleTouchMove(t){t.preventDefault();this.fire("touchmove",new xp(this,t))}_handleTouchCancel(t){this.fire("touchcancel",new xp(this,t))}}class wp{static{this.ContentType={AAC:"audio/aac",BASIS:"image/basis",BIN:"application/octet-stream",DDS:"image/dds",FORM_URLENCODED:"application/x-www-form-urlencoded",GIF:"image/gif",GLB:"model/gltf-binary",JPEG:"image/jpeg",JSON:"application/json",MP3:"audio/mpeg",MP4:"audio/mp4",OGG:"audio/ogg",OPUS:'audio/ogg; codecs="opus"',PNG:"image/png",TEXT:"text/plain",WAV:"audio/x-wav",XML:"application/xml"}}static{this.ResponseType={TEXT:"text",ARRAY_BUFFER:"arraybuffer",BLOB:"blob",DOCUMENT:"document",JSON:"json"}}static{this.binaryExtensions=[".model",".wav",".ogg",".mp3",".mp4",".m4a",".aac",".dds",".basis",".glb",".opus"]}static{this.retryDelay=100}get(t,e,s){if(typeof e==="function"){s=e;e={}}const i=this.request("GET",t,e,s);const{progress:n}=e;if(n){const t=t=>{if(t.lengthComputable){n.fire("progress",t.loaded,t.total)}};const e=s=>{t(s);i.removeEventListener("loadstart",t);i.removeEventListener("progress",t);i.removeEventListener("loadend",e)};i.addEventListener("loadstart",t);i.addEventListener("progress",t);i.addEventListener("loadend",e)}return i}post(t,e,s,i){if(typeof s==="function"){i=s;s={}}s.postdata=e;return this.request("POST",t,s,i)}put(t,e,s,i){if(typeof s==="function"){i=s;s={}}s.postdata=e;return this.request("PUT",t,s,i)}del(t,e,s){if(typeof e==="function"){s=e;e={}}return this.request("DELETE",t,e,s)}request(t,e,s,i){let n,r,a;let o=false;if(typeof s==="function"){i=s;s={}}if(s.retry){s=Object.assign({retries:0,maxRetries:5},s)}s.callback=i;if(s.async==null){s.async=true}if(s.headers==null){s.headers={}}if(s.postdata!=null){if(s.postdata instanceof Document){a=s.postdata}else if(s.postdata instanceof FormData){a=s.postdata}else if(s.postdata instanceof Object){let t=s.headers["Content-Type"];if(t===undefined){s.headers["Content-Type"]=wp.ContentType.FORM_URLENCODED;t=s.headers["Content-Type"]}switch(t){case wp.ContentType.FORM_URLENCODED:{a="";let t=true;for(const e in s.postdata){if(s.postdata.hasOwnProperty(e)){if(t){t=false}else{a+="&"}const i=encodeURIComponent(e);const n=encodeURIComponent(s.postdata[e]);a+=`${i}=${n}`}}break}default:case wp.ContentType.JSON:if(t==null){s.headers["Content-Type"]=wp.ContentType.JSON}a=JSON.stringify(s.postdata);break}}else{a=s.postdata}}if(s.cache===false){const t=pt();n=new gt(e);if(!n.query){n.query=`ts=${t}`}else{n.query=`${n.query}&ts=${t}`}e=n.toString()}if(s.query){n=new gt(e);r=b(n.getQuery(),s.query);n.setQuery(r);e=n.toString()}const l=new XMLHttpRequest;l.open(t,e,s.async);l.withCredentials=s.withCredentials!==undefined?s.withCredentials:false;l.responseType=s.responseType||this._guessResponseType(e);for(const t in s.headers){if(s.headers.hasOwnProperty(t)){l.setRequestHeader(t,s.headers[t])}}l.onreadystatechange=()=>{this._onReadyStateChange(t,e,s,l)};l.onerror=()=>{this._onError(t,e,s,l);o=true};try{l.send(a)}catch(t){if(!o){s.error(l.status,l,t)}}return l}_guessResponseType(t){const e=new gt(t);const s=A.getExtension(e.path).toLowerCase();if(wp.binaryExtensions.indexOf(s)>=0){return wp.ResponseType.ARRAY_BUFFER}else if(s===".json"){return wp.ResponseType.JSON}else if(s===".xml"){return wp.ResponseType.DOCUMENT}return wp.ResponseType.TEXT}_isBinaryContentType(t){const e=[wp.ContentType.BASIS,wp.ContentType.BIN,wp.ContentType.DDS,wp.ContentType.GLB,wp.ContentType.MP3,wp.ContentType.MP4,wp.ContentType.OGG,wp.ContentType.OPUS,wp.ContentType.WAV];if(e.indexOf(t)>=0){return true}return false}_isBinaryResponseType(t){return t===wp.ResponseType.ARRAY_BUFFER||t===wp.ResponseType.BLOB||t===wp.ResponseType.JSON}_onReadyStateChange(t,e,s,i){if(i.readyState===4){switch(i.status){case 0:{if(i.responseURL&&i.responseURL.startsWith("file:///")){this._onSuccess(t,e,s,i)}else{this._onError(t,e,s,i)}break}case 200:case 201:case 206:case 304:{this._onSuccess(t,e,s,i);break}default:{this._onError(t,e,s,i);break}}}}_onSuccess(t,e,s,i){let n;let r;const a=i.getResponseHeader("Content-Type");if(a){const t=a.split(";");r=t[0].trim()}try{if(this._isBinaryContentType(r)||this._isBinaryResponseType(i.responseType)){n=i.response}else if(r===wp.ContentType.JSON||e.split("?")[0].endsWith(".json")){n=JSON.parse(i.responseText)}else if(i.responseType===wp.ResponseType.DOCUMENT||r===wp.ContentType.XML){n=i.responseXML}else{n=i.responseText}s.callback(null,n)}catch(t){s.callback(t)}}_onError(t,e,s,i){if(s.retrying){return}if(s.retry&&s.retries<s.maxRetries){s.retries++;s.retrying=true;const n=wt.clamp(Math.pow(2,s.retries)*wp.retryDelay,0,s.maxRetryDelay||5e3);console.log(`${t}: ${e} - Error ${i.status}. Retrying in ${n} ms`);setTimeout((()=>{s.retrying=false;this.request(t,e,s,s.callback)}),n)}else{s.callback(i.status===0?"Network error":i.status,null)}}}const bp=new wp;const Ep="linear";const Ap="inverse";const Cp="exponential";class Pp{constructor(t){this.position=new It;this.orientation=new Vt;this._manager=t}getPosition(){return this.position}setPosition(t){this.position.copy(t);const e=this.listener;if(e){if("positionX"in e){e.positionX.value=t.x;e.positionY.value=t.y;e.positionZ.value=t.z}else if(e.setPosition){e.setPosition(t.x,t.y,t.z)}}}setOrientation(t){this.orientation.copy(t);const e=this.listener;if(e){const s=t.data;if("forwardX"in e){e.forwardX.value=-s[8];e.forwardY.value=-s[9];e.forwardZ.value=-s[10];e.upX.value=s[4];e.upY.value=s[5];e.upZ.value=s[6]}else if(e.setOrientation){e.setOrientation(-s[8],-s[9],-s[10],s[4],s[5],s[6])}}}getOrientation(){return this.orientation}get listener(){const t=this._manager.context;return t?t.listener:null}}const Lp="running";const Dp=["click","touchstart","mousedown"];class Mp extends at{constructor(){super();this._context=null;this.AudioContext=typeof AudioContext!=="undefined"&&AudioContext||typeof webkitAudioContext!=="undefined"&&webkitAudioContext;if(!this.AudioContext);this._unlockHandlerFunc=this._unlockHandler.bind(this);this._userSuspended=false;this.listener=new Pp(this);this._volume=1}set volume(t){t=wt.clamp(t,0,1);this._volume=t;this.fire("volumechange",t)}get volume(){return this._volume}get suspended(){return this._userSuspended}get context(){if(!this._context&&this.AudioContext){this._context=new this.AudioContext;if(this._context.state!==Lp){this._registerUnlockListeners()}}return this._context}suspend(){if(!this._userSuspended){this._userSuspended=true;if(this._context&&this._context.state===Lp){this._suspend()}}}resume(){if(this._userSuspended){this._userSuspended=false;if(this._context&&this._context.state!==Lp){this._resume()}}}destroy(){this.fire("destroy");if(this._context){this._removeUnlockListeners();this._context?.close();this._context=null}}_resume(){this._context.resume().then((()=>{const t=this._context.createBufferSource();t.buffer=this._context.createBuffer(1,1,this._context.sampleRate);t.connect(this._context.destination);t.start(0);t.onended=e=>{t.disconnect(0);this.fire("resume")}}),(t=>{})).catch((t=>{}))}_suspend(){this._context.suspend().then((()=>{this.fire("suspend")}),(t=>{})).catch((t=>{}))}_unlockHandler(){this._removeUnlockListeners();if(!this._userSuspended&&this._context.state!==Lp){this._resume()}}_registerUnlockListeners(){Dp.forEach((t=>{window.addEventListener(t,this._unlockHandlerFunc,false)}))}_removeUnlockListeners(){Dp.forEach((t=>{window.removeEventListener(t,this._unlockHandlerFunc,false)}))}}class Ip{constructor(t){if(t instanceof Audio){this.audio=t}else{this.buffer=t}}get duration(){let t=0;if(this.buffer){t=this.buffer.duration}else if(this.audio){t=this.audio.duration}return t||0}}function Rp(){return!!(typeof AudioContext!=="undefined"||typeof webkitAudioContext!=="undefined")}const Op=0;const Fp=1;const Np=2;function kp(t,e){return t%e||0}class Bp extends at{static{this.EVENT_PLAY="play"}static{this.EVENT_PAUSE="pause"}static{this.EVENT_RESUME="resume"}static{this.EVENT_STOP="stop"}static{this.EVENT_END="end"}constructor(t,e,s){super(),this.source=null;this._manager=t;this._volume=s.volume!==undefined?wt.clamp(Number(s.volume)||0,0,1):1;this._pitch=s.pitch!==undefined?Math.max(.01,Number(s.pitch)||0):1;this._loop=!!(s.loop!==undefined?s.loop:false);this._sound=e;this._state=Np;this._suspended=false;this._suspendEndEvent=0;this._suspendInstanceEvents=false;this._playWhenLoaded=true;this._startTime=Math.max(0,Number(s.startTime)||0);this._duration=Math.max(0,Number(s.duration)||0);this._startOffset=null;this._onPlayCallback=s.onPlay;this._onPauseCallback=s.onPause;this._onResumeCallback=s.onResume;this._onStopCallback=s.onStop;this._onEndCallback=s.onEnd;if(Rp()){this._startedAt=0;this._currentTime=0;this._currentOffset=0;this._inputNode=null;this._connectorNode=null;this._firstNode=null;this._lastNode=null;this._waitingContextSuspension=false;this._initializeNodes();this._endedHandler=this._onEnded.bind(this)}else{this._isReady=false;this._loadedMetadataHandler=this._onLoadedMetadata.bind(this);this._timeUpdateHandler=this._onTimeUpdate.bind(this);this._endedHandler=this._onEnded.bind(this);this._createSource()}}set currentTime(t){if(t<0)return;if(this._state===Op){const e=this._suspendInstanceEvents;this._suspendInstanceEvents=true;this.stop();this._startOffset=t;this.play();this._suspendInstanceEvents=e}else{this._startOffset=t;this._currentTime=t}}get currentTime(){if(this._startOffset!==null){return this._startOffset}if(this._state===Fp){return this._currentTime}if(this._state===Np||!this.source){return 0}this._updateCurrentTime();return this._currentTime}set duration(t){this._duration=Math.max(0,Number(t)||0);const e=this._state===Op;this.stop();if(e){this.play()}}get duration(){if(!this._sound){return 0}if(this._duration){return kp(this._duration,this._sound.duration)}return this._sound.duration}get isPaused(){return this._state===Fp}get isPlaying(){return this._state===Op}get isStopped(){return this._state===Np}get isSuspended(){return this._suspended}set loop(t){this._loop=!!t;if(this.source){this.source.loop=this._loop}}get loop(){return this._loop}set pitch(t){this._currentOffset=this.currentTime;this._startedAt=this._manager.context.currentTime;this._pitch=Math.max(Number(t)||0,.01);if(this.source){this.source.playbackRate.value=this._pitch}}get pitch(){return this._pitch}set sound(t){this._sound=t;if(this._state!==Np){this.stop()}else{this._createSource()}}get sound(){return this._sound}set startTime(t){this._startTime=Math.max(0,Number(t)||0);const e=this._state===Op;this.stop();if(e){this.play()}}get startTime(){return this._startTime}set volume(t){t=wt.clamp(t,0,1);this._volume=t;if(this.gain){this.gain.gain.value=t*this._manager.volume}}get volume(){return this._volume}_onPlay(){this.fire("play");if(this._onPlayCallback){this._onPlayCallback(this)}}_onPause(){this.fire("pause");if(this._onPauseCallback){this._onPauseCallback(this)}}_onResume(){this.fire("resume");if(this._onResumeCallback){this._onResumeCallback(this)}}_onStop(){this.fire("stop");if(this._onStopCallback){this._onStopCallback(this)}}_onEnded(){if(this._suspendEndEvent>0){this._suspendEndEvent--;return}this.fire("end");if(this._onEndCallback){this._onEndCallback(this)}this.stop()}_onManagerVolumeChange(){this.volume=this._volume}_onManagerSuspend(){if(this._state===Op&&!this._suspended){this._suspended=true;this.pause()}}_onManagerResume(){if(this._suspended){this._suspended=false;this.resume()}}_initializeNodes(){this.gain=this._manager.context.createGain();this._inputNode=this.gain;this._connectorNode=this.gain;this._connectorNode.connect(this._manager.context.destination)}play(){if(this._state!==Np){this.stop()}this._state=Op;this._playWhenLoaded=false;if(this._waitingContextSuspension){return false}if(this._manager.suspended){this._manager.once("resume",this._playAudioImmediate,this);this._waitingContextSuspension=true;return false}this._playAudioImmediate();return true}_playAudioImmediate(){this._waitingContextSuspension=false;if(this._state!==Op){return}if(!this.source){this._createSource()}let t=kp(this._startOffset,this.duration);t=kp(this._startTime+t,this._sound.duration);this._startOffset=null;if(this._duration){this.source.start(0,t,this._duration)}else{this.source.start(0,t)}this._startedAt=this._manager.context.currentTime;this._currentTime=0;this._currentOffset=t;this.volume=this._volume;this.loop=this._loop;this.pitch=this._pitch;this._manager.on("volumechange",this._onManagerVolumeChange,this);this._manager.on("suspend",this._onManagerSuspend,this);this._manager.on("resume",this._onManagerResume,this);this._manager.on("destroy",this._onManagerDestroy,this);if(!this._suspendInstanceEvents){this._onPlay()}}pause(){this._playWhenLoaded=false;if(this._state!==Op){return false}this._state=Fp;if(this._waitingContextSuspension){return true}this._updateCurrentTime();this._suspendEndEvent++;this.source.stop(0);this.source=null;this._startOffset=null;if(!this._suspendInstanceEvents){this._onPause()}return true}resume(){if(this._state!==Fp){return false}let t=this.currentTime;this._state=Op;if(this._waitingContextSuspension){return true}if(!this.source){this._createSource()}if(this._startOffset!==null){t=kp(this._startOffset,this.duration);t=kp(this._startTime+t,this._sound.duration);this._startOffset=null}if(this._duration){this.source.start(0,t,this._duration)}else{this.source.start(0,t)}this._startedAt=this._manager.context.currentTime;this._currentOffset=t;this.volume=this._volume;this.loop=this._loop;this.pitch=this._pitch;this._playWhenLoaded=false;if(!this._suspendInstanceEvents){this._onResume()}return true}stop(){this._playWhenLoaded=false;if(this._state===Np){return false}const t=this._state===Op;this._state=Np;if(this._waitingContextSuspension){return true}this._manager.off("volumechange",this._onManagerVolumeChange,this);this._manager.off("suspend",this._onManagerSuspend,this);this._manager.off("resume",this._onManagerResume,this);this._manager.off("destroy",this._onManagerDestroy,this);this._startedAt=0;this._currentTime=0;this._currentOffset=0;this._startOffset=null;this._suspendEndEvent++;if(t&&this.source){this.source.stop(0)}this.source=null;if(!this._suspendInstanceEvents){this._onStop()}return true}setExternalNodes(t,e){if(!t){console.error("The firstNode must be a valid Audio Node");return}if(!e){e=t}const s=this._manager.context.destination;if(this._firstNode!==t){if(this._firstNode){this._connectorNode.disconnect(this._firstNode)}else{this._connectorNode.disconnect(s)}this._firstNode=t;this._connectorNode.connect(t)}if(this._lastNode!==e){if(this._lastNode){this._lastNode.disconnect(s)}this._lastNode=e;this._lastNode.connect(s)}}clearExternalNodes(){const t=this._manager.context.destination;if(this._firstNode){this._connectorNode.disconnect(this._firstNode);this._firstNode=null}if(this._lastNode){this._lastNode.disconnect(t);this._lastNode=null}this._connectorNode.connect(t)}getExternalNodes(){return[this._firstNode,this._lastNode]}_createSource(){if(!this._sound){return null}const t=this._manager.context;if(this._sound.buffer){this.source=t.createBufferSource();this.source.buffer=this._sound.buffer;this.source.connect(this._inputNode);this.source.onended=this._endedHandler;this.source.loopStart=kp(this._startTime,this.source.buffer.duration);if(this._duration){this.source.loopEnd=Math.max(this.source.loopStart,kp(this._startTime+this._duration,this.source.buffer.duration))}}return this.source}_updateCurrentTime(){this._currentTime=kp((this._manager.context.currentTime-this._startedAt)*this._pitch+this._currentOffset,this.duration)}_onManagerDestroy(){if(this.source&&this._state===Op){this.source.stop(0);this.source=null}}}if(!Rp()){Object.assign(Bp.prototype,{play:function(){if(this._state!==Np){this.stop()}if(!this.source){if(!this._createSource()){return false}}this.volume=this._volume;this.pitch=this._pitch;this.loop=this._loop;this.source.play();this._state=Op;this._playWhenLoaded=false;this._manager.on("volumechange",this._onManagerVolumeChange,this);this._manager.on("suspend",this._onManagerSuspend,this);this._manager.on("resume",this._onManagerResume,this);this._manager.on("destroy",this._onManagerDestroy,this);if(this._manager.suspended){this._onManagerSuspend()}if(!this._suspendInstanceEvents){this._onPlay()}return true},pause:function(){if(!this.source||this._state!==Op){return false}this._suspendEndEvent++;this.source.pause();this._playWhenLoaded=false;this._state=Fp;this._startOffset=null;if(!this._suspendInstanceEvents){this._onPause()}return true},resume:function(){if(!this.source||this._state!==Fp){return false}this._state=Op;this._playWhenLoaded=false;if(this.source.paused){this.source.play();if(!this._suspendInstanceEvents){this._onResume()}}return true},stop:function(){if(!this.source||this._state===Np){return false}this._manager.off("volumechange",this._onManagerVolumeChange,this);this._manager.off("suspend",this._onManagerSuspend,this);this._manager.off("resume",this._onManagerResume,this);this._manager.off("destroy",this._onManagerDestroy,this);this._suspendEndEvent++;this.source.pause();this._playWhenLoaded=false;this._state=Np;this._startOffset=null;if(!this._suspendInstanceEvents){this._onStop()}return true},setExternalNodes:function(){},clearExternalNodes:function(){},getExternalNodes:function(){return[null,null]},_onLoadedMetadata:function(){this.source.removeEventListener("loadedmetadata",this._loadedMetadataHandler);this._isReady=true;let t=kp(this._startOffset,this.duration);t=kp(this._startTime+t,this._sound.duration);this._startOffset=null;this.source.currentTime=t},_createSource:function(){if(this._sound&&this._sound.audio){this._isReady=false;this.source=this._sound.audio.cloneNode(true);this.source.addEventListener("loadedmetadata",this._loadedMetadataHandler);this.source.addEventListener("timeupdate",this._timeUpdateHandler);this.source.onended=this._endedHandler}return this.source},_onTimeUpdate:function(){if(!this._duration){return}if(this.source.currentTime>kp(this._startTime+this._duration,this.source.duration)){if(this.loop){this.source.currentTime=kp(this._startTime,this.source.duration)}else{this.source.removeEventListener("timeupdate",this._timeUpdateHandler);this.source.pause();this._onEnded()}}},_onManagerDestroy:function(){if(this.source){this.source.pause()}}});Object.defineProperty(Bp.prototype,"volume",{get:function(){return this._volume},set:function(t){t=wt.clamp(t,0,1);this._volume=t;if(this.source){this.source.volume=t*this._manager.volume}}});Object.defineProperty(Bp.prototype,"pitch",{get:function(){return this._pitch},set:function(t){this._pitch=Math.max(Number(t)||0,.01);if(this.source){this.source.playbackRate=this._pitch}}});Object.defineProperty(Bp.prototype,"sound",{get:function(){return this._sound},set:function(t){this.stop();this._sound=t}});Object.defineProperty(Bp.prototype,"currentTime",{get:function(){if(this._startOffset!==null){return this._startOffset}if(this._state===Np||!this.source){return 0}return this.source.currentTime-this._startTime},set:function(t){if(t<0)return;this._startOffset=t;if(this.source&&this._isReady){this.source.currentTime=kp(this._startTime+kp(t,this.duration),this._sound.duration);this._startOffset=null}}})}const Up=1e4;class zp extends Bp{constructor(t,e,s={}){super(t,e,s),this._position=new It,this._velocity=new It;if(s.position){this.position=s.position}this.maxDistance=s.maxDistance!==undefined?Number(s.maxDistance):Up;this.refDistance=s.refDistance!==undefined?Number(s.refDistance):1;this.rollOffFactor=s.rollOffFactor!==undefined?Number(s.rollOffFactor):1;this.distanceModel=s.distanceModel!==undefined?s.distanceModel:Ep}_initializeNodes(){this.gain=this._manager.context.createGain();this.panner=this._manager.context.createPanner();this.panner.connect(this.gain);this._inputNode=this.panner;this._connectorNode=this.gain;this._connectorNode.connect(this._manager.context.destination)}set position(t){this._position.copy(t);const e=this.panner;if("positionX"in e){e.positionX.value=t.x;e.positionY.value=t.y;e.positionZ.value=t.z}else if(e.setPosition){e.setPosition(t.x,t.y,t.z)}}get position(){return this._position}set velocity(t){this._velocity.copy(t)}get velocity(){return this._velocity}set maxDistance(t){this.panner.maxDistance=t}get maxDistance(){return this.panner.maxDistance}set refDistance(t){this.panner.refDistance=t}get refDistance(){return this.panner.refDistance}set rollOffFactor(t){this.panner.rolloffFactor=t}get rollOffFactor(){return this.panner.rolloffFactor}set distanceModel(t){this.panner.distanceModel=t}get distanceModel(){return this.panner.distanceModel}}if(!Rp()){let t=new It;const e=function(e,s,i,n,r,a){t=t.sub2(e,s);const o=t.length();if(o<i){return 1}else if(o>n){return 0}let l=0;if(a===Ep){l=1-r*(o-i)/(n-i)}else if(a===Ap){l=i/(i+r*(o-i))}else if(a===Cp){l=Math.pow(o/i,-r)}return wt.clamp(l,0,1)};Object.defineProperty(zp.prototype,"position",{get:function(){return this._position},set:function(t){this._position.copy(t);if(this.source){const t=this._manager.listener;const s=t.getPosition();const i=e(s,this._position,this.refDistance,this.maxDistance,this.rollOffFactor,this.distanceModel);const n=this.volume;this.source.volume=n*i*this._manager.volume}}});Object.defineProperty(zp.prototype,"maxDistance",{get:function(){return this._maxDistance},set:function(t){this._maxDistance=t}});Object.defineProperty(zp.prototype,"refDistance",{get:function(){return this._refDistance},set:function(t){this._refDistance=t}});Object.defineProperty(zp.prototype,"rollOffFactor",{get:function(){return this._rollOffFactor},set:function(t){this._rollOffFactor=t}});Object.defineProperty(zp.prototype,"distanceModel",{get:function(){return this._distanceModel},set:function(t){this._distanceModel=t}})}const Vp=0;const Gp=1;const Hp=2;const Wp=3;const Xp=4;const qp=5;const $p=6;const jp=7;const Yp=8;const Kp=9;const Zp=10;const Qp={[Vp]:"SUBTRACTIVE",[Gp]:"ADDITIVE",[Hp]:"NORMAL",[Wp]:"NONE",[Xp]:"PREMULTIPLIED",[qp]:"MULTIPLICATIVE",[$p]:"ADDITIVEALPHA",[jp]:"MULTIPLICATIVE2X",[Yp]:"SCREEN",[Kp]:"MIN",[Zp]:"MAX"};const Jp="none";const tm="linear";const em="exp";const sm="exp2";const im=0;const nm=2;const rm={[im]:"NONE",[nm]:"SCHLICK"};const am=0;const om=1;const lm=15;const hm=0;const cm=1;const dm=2;const um=3;const fm=4;const pm=0;const mm=1;const _m=mm;const gm=2;const vm=3;const ym={[pm]:"DIRECTIONAL",[mm]:"OMNI",[gm]:"SPOT"};const Sm=100;const xm=0;const Tm=1;const wm=2;const bm=3;const Em={[xm]:"PUNCTUAL",[Tm]:"RECT",[wm]:"DISK",[bm]:"SPHERE"};const Am=0;const Cm=1;const Pm={[Am]:"LINEAR",[Cm]:"INVERSESQUARED"};const Lm=0;const Dm=0;const Mm=2;const Im=2;const Rm=3;const Om=3;const Fm=4;const Nm=4;const km=5;const Bm=5;const Um=6;const zm=7;const Vm=8;const Gm=9;const Hm=new Map([[km,{name:"PCF1_32F",kind:"PCF1",format:Us,pcf:true}],[Lm,{name:"PCF3_32F",kind:"PCF3",format:Us,pcf:true}],[Fm,{name:"PCF5_32F",kind:"PCF5",format:Us,pcf:true}],[zm,{name:"PCF1_16F",kind:"PCF1",format:Oi,pcf:true}],[Vm,{name:"PCF3_16F",kind:"PCF3",format:Oi,pcf:true}],[Gm,{name:"PCF5_16F",kind:"PCF5",format:Oi,pcf:true}],[Mm,{name:"VSM_16F",kind:"VSM",format:Fs,vsm:true}],[Rm,{name:"VSM_32F",kind:"VSM",format:ks,vsm:true}],[Um,{name:"PCSS_32F",kind:"PCSS",format:Bs,pcss:true}]]);const Wm=1;const Xm=2;const qm=4;const $m=8;const jm=255;const Ym=0;const Km=1;const Zm=0;const Qm=1;const Jm=2;const t_=3;const e_=0;const s_=1;const i_=0;const n_=1;const r_=0;const a_=1;const o_=2;const l_=0;const h_=1;const c_=0;const d_=1;const u_=2;const f_=0;const p_=1;const m_={[f_]:"NONE",[p_]:"BOX"};const __="mul";const g_="add";const v_="screen";const y_="overlay";const S_="min";const x_="max";const T_=0;const w_=1;const b_={[T_]:"NONE",[w_]:"SRGB"};const E_=0;const A_=1;const C_=2;const P_=3;const L_=4;const D_=5;const M_=6;const I_=["LINEAR","FILMIC","HEJL","ACES","ACES2","NEUTRAL","NONE"];const R_=0;const O_=1;const F_=2;const N_={[R_]:"NONE",[O_]:"AO",[F_]:"GLOSSDEPENDENT"};const k_="none";const B_="envAtlas";const U_="envAtlasHQ";const z_="cubeMap";const V_="sphereMap";const G_={[k_]:"NONE",[B_]:"ENVATLAS",[U_]:"ENVATLASHQ",[z_]:"CUBEMAP",[V_]:"SPHEREMAP"};const H_="ambientSH";const W_="envAtlas";const X_="constant";const q_={[H_]:"AMBIENTSH",[W_]:"ENVALATLAS",[X_]:"CONSTANT"};const $_=1;const j_=2;const Y_=4;const K_=8;const Z_=16;const Q_=32;const J_=64;const tg=128;const eg=256;const sg=512;const ig=1024;const ng=2048;const rg=4096;const ag=8192;const og=16384;const lg=0;const hg=1;const cg=2;const dg=1;const ug=2;const fg=4;const pg=0;const mg=1;const _g=2;const gg=3;const vg="forward";const yg="debug_albedo";const Sg="debug_world_normal";const xg="debug_opacity";const Tg="debug_specularity";const wg="debug_gloss";const bg="debug_metalness";const Eg="debug_ao";const Ag="debug_emission";const Cg="debug_lighting";const Pg="debug_uv0";const Lg=0;const Dg=1;const Mg=2;const Ig={[Lg]:"SIMPLE",[Dg]:"SLICED",[Mg]:"TILED"};const Rg=0;const Og=1;const Fg=0;const Ng=1;const kg=2;const Bg=0;const Ug=1;const zg=2;const Vg=3;const Gg=4;const Hg=5;const Wg=0;const Xg=1;const qg=0;const $g=1;const jg="infinite";const Yg="box";const Kg="dome";const Zg="none";const Qg="bayer8";const Jg="bluenoise";const tv="ignnoise";const ev={[Zg]:"NONE",[Qg]:"BAYER8",[Jg]:"BLUENOISE",[tv]:"IGNNOISE"};const sv="prerender";const iv="postrender";const nv="prerender:layer";const rv="postrender:layer";const av="precull";const ov="postcull";const lv="cull:end";class hv{constructor(t,e,s){this.uniformFormats=[];this.bindGroupFormats=[];this.uniformFormats[Ba]=t;this.bindGroupFormats[Ba]=e;this.vertexFormat=s}hasUniform(t){for(let e=0;e<this.uniformFormats.length;e++){const s=this.uniformFormats[e];if(s?.get(t)){return true}}return false}hasTexture(t){for(let e=0;e<this.bindGroupFormats.length;e++){const s=this.bindGroupFormats[e];if(s?.getTexture(t)){return true}}return false}getVertexElement(t){return this.vertexFormat?.elements.find((e=>e.name===t))}generateKey(t){let e=JSON.stringify(this.uniformFormats)+JSON.stringify(this.bindGroupFormats);if(t.isWebGPU){e+=this.vertexFormat?.shaderProcessingHashString}return e}}const cv=new ro;function dv(t){const e=cv.get(t);return e}function uv(t,e){cv.get(t,(()=>e))}class fv{static definesHash(t){const e=Array.from(t).sort(((t,e)=>t[0]>e[0]?1:-1));return $o(JSON.stringify(e))}}const pv=new ro;class mv{constructor(t,e,s={}){this.defines=new Map;this.name=t;this.index=e;Object.assign(this,s);this.buildShaderDefines()}buildShaderDefines(){let t;if(this.isShadow){t="SHADOW"}else if(this.isForward){t="FORWARD"}else if(this.index===gg){t="PICK"}this.defines.set(`${t}_PASS`,"");this.defines.set(`${this.name.toUpperCase()}_PASS`,"")}}class _v{constructor(){this.passesNamed=new Map;this.passesIndexed=[];this.nextIndex=0;const t=(t,e,s)=>{this.allocate(t,s)};t("forward",pg,{isForward:true});t("prepass");t("shadow");t("pick")}static get(t){return pv.get(t,(()=>new _v))}allocate(t,e){let s=this.passesNamed.get(t);if(s===undefined){s=new mv(t,this.nextIndex,e);this.passesNamed.set(s.name,s);this.passesIndexed[s.index]=s;this.nextIndex++}return s}getByIndex(t){const e=this.passesIndexed[t];return e}getByName(t){return this.passesNamed.get(t)}}class gv extends Map{set(t,e){if(!this.has(t)||this.get(t)!==e){this.markDirty()}return super.set(t,e)}add(t){for(const[e,s]of Object.entries(t)){this.set(e,s)}return this}delete(t){const e=this.has(t);const s=super.delete(t);if(e&&s){this.markDirty()}return s}clear(){if(this.size>0){this.markDirty()}super.clear()}markDirty(){this._dirty=true;this._keyDirty=true}isDirty(){return this._dirty}resetDirty(){this._dirty=false}get key(){if(this._keyDirty){this._keyDirty=false;this._key=Array.from(this.entries()).sort((([t],[e])=>t<e?-1:t>e?1:0)).map((([t,e])=>`${t}=${$o(e)}`)).join(",")}return this._key}copy(t){this.clear();for(const[e,s]of t){this.set(e,s)}return this}constructor(...t){super(...t),this._keyDirty=false,this._key=""}}const vv=new ro;class yv{static get(t,e=cr){const s=vv.get(t,(()=>new yv));return e===cr?s.glsl:s.wgsl}get useWGSL(){return this.glsl.size===0||this.wgsl.size>0}get key(){return`GLSL:${this.glsl.key}|WGSL:${this.wgsl.key}|API:${this.version}`}isDirty(){return this.glsl.isDirty()||this.wgsl.isDirty()}resetDirty(){this.glsl.resetDirty();this.wgsl.resetDirty()}copy(t){this.version=t.version;this.glsl.copy(t.glsl);this.wgsl.copy(t.wgsl);return this}constructor(){this.glsl=new gv;this.wgsl=new gv;this.version=""}}class Sv{static merge(...t){const e=new Map(t[0]??[]);for(let s=1;s<t.length;s++){const i=t[s];if(i){for(const[t,s]of i){e.set(t,s)}}}return e}}class xv extends fv{constructor(t,e){super();this.key=t;this.shaderDefinition=e}generateKey(t){return this.key}createShaderDefinition(t,e){return this.shaderDefinition}}class Tv{static createShader(t,e){const s=dv(t);let i=s.getCachedShader(e.uniqueName);if(!i){const n=t.isWebGPU&&(!!e.vertexWGSL||!!e.vertexChunk)&&(!!e.fragmentWGSL||!!e.fragmentChunk);const r=yv.get(t,n?dr:cr);const a=e.vertexChunk?r.get(e.vertexChunk):n?e.vertexWGSL:e.vertexGLSL;const o=e.fragmentChunk?r.get(e.fragmentChunk):n?e.fragmentWGSL:e.fragmentGLSL;const l=Sv.merge(r,e.fragmentIncludes);const h=Sv.merge(r,e.vertexIncludes);i=new Zh(t,Yh.createDefinition(t,{name:e.uniqueName,shaderLanguage:n?dr:cr,attributes:e.attributes,vertexCode:a,fragmentCode:o,useTransformFeedback:e.useTransformFeedback,vertexIncludes:h,vertexDefines:e.vertexDefines,fragmentIncludes:l,fragmentDefines:e.fragmentDefines,fragmentOutputTypes:e.fragmentOutputTypes}));s.setCachedShader(e.uniqueName,i)}return i}static getCoreDefines(t,e){const s=new Map(t.defines);e.cameraShaderParams.defines.forEach(((t,e)=>s.set(e,t)));const i=_v.get(e.device).getByIndex(e.pass);i.defines.forEach(((t,e)=>s.set(e,t)));return s}static processShader(t,e){const s=t.definition;const i=s.name??"shader";const n=`${i}-id-${t.id}`;const r=new xv(n,s);const a="shader";const o=dv(t.device);o.register(a,r);const l=o.getProgram(a,{},e);o.unregister(a);return l}static addScreenDepthChunkDefines(t,e,s){if(e.sceneDepthMapLinear){s.set("SCENE_DEPTHMAP_LINEAR","")}if(t.textureFloatRenderable){s.set("SCENE_DEPTHMAP_FLOAT","")}}}function wv(t,e,s,i=false,n={}){}function bv(t,e,s,i,n,r=false,a={}){if(typeof r==="boolean"){a.useTransformFeedback=r}else if(typeof r==="object"){a={...a,...r}}const o=dv(t);let l=o.getCachedShader(i);if(!l){l=new Zh(t,Yh.createDefinition(t,{...a,name:i,vertexCode:e,fragmentCode:s,attributes:n}));o.setCachedShader(i,l)}return l}const Ev={type:ji,base:0,baseVertex:0,count:4,indexed:false};const Av=new Ft;const Cv=new Ft;const Pv=new mo;class Lv{constructor(t){const e=t.device;this.shader=t;if(e.supportsUniformBuffers){const s=new hv;this.shader=Tv.processShader(t,s);const i=this.shader.meshUniformBufferFormat;if(i){this.uniformBuffer=new sc(e,i,false)}const n=this.shader.meshBindGroupFormat;this.bindGroup=new _o(e,n)}}destroy(){this.uniformBuffer?.destroy();this.uniformBuffer=null;this.bindGroup?.destroy();this.bindGroup=null}render(t,e){const s=this.shader.device;if(t){Av.set(s.vx,s.vy,s.vw,s.vh);Cv.set(s.sx,s.sy,s.sw,s.sh);e=e??t;s.setViewport(t.x,t.y,t.z,t.w);s.setScissor(e.x,e.y,e.z,e.w)}s.setVertexBuffer(s.quadVertexBuffer,0);const i=this.shader;s.setShader(i);if(s.supportsUniformBuffers){s.setBindGroup(Ba,s.emptyBindGroup);const t=this.bindGroup;t.update();s.setBindGroup(Ua,t);const e=this.uniformBuffer;if(e){e.update(Pv);s.setBindGroup(za,Pv.bindGroup,Pv.offsets)}else{s.setBindGroup(za,s.emptyBindGroup)}}s.draw(Ev);if(t){s.setViewport(Av.x,Av.y,Av.z,Av.w);s.setScissor(Cv.x,Cv.y,Cv.z,Cv.w)}}}class Dv extends Yc{constructor(t,e,s,i){super(t);this.quad=e;this.rect=s;this.scissorRect=i}execute(){const{device:t}=this;t.setCullMode(ss);t.setDepthState(Uo.NODEPTH);t.setStencilState(null,null);this.quad.render(this.rect,this.scissorRect)}}const Mv=new Ft;function Iv(t,e,s,i,n){const r=new Lv(s);if(!i){i=Mv;i.x=0;i.y=0;i.z=e?e.width:t.width;i.w=e?e.height:t.height}const a=new Dv(t,r,i,n);a.init(e);a.colorOps.clear=false;a.depthStencilOps.clearDepth=false;if(t.isWebGPU&&e===null&&t.samples>1){a.colorOps.store=true}a.render();r.destroy()}class Rv{constructor(t,e,s){this._aabb=new jt;this.meshInstance=null;this.origMeshInstances=t;this.dynamic=e;this.batchGroupId=s}destroy(t,e){if(this.meshInstance){this.removeFromLayers(t,e);this.meshInstance.destroy();this.meshInstance=null}}addToLayers(t,e){for(let s=0;s<e.length;s++){const i=t.layers.getLayerById(e[s]);if(i){i.addMeshInstances([this.meshInstance])}}}removeFromLayers(t,e){for(let s=0;s<e.length;s++){const i=t.layers.getLayerById(e[s]);if(i){i.removeMeshInstances([this.meshInstance])}}}updateBoundingBox(){this._aabb.copy(this.origMeshInstances[0].aabb);for(let t=1;t<this.origMeshInstances.length;t++){this._aabb.add(this.origMeshInstances[t].aabb)}this.meshInstance.aabb=this._aabb;this.meshInstance._aabbVer=0}get model(){return undefined}}class Ov{constructor(t,e,s,i,n=[hm]){this._ui=false;this._sprite=false;this._obj={model:[],element:[],sprite:[],render:[]};this.id=t;this.name=e;this.dynamic=s;this.maxAabbSize=i;this.layers=n}static{this.MODEL="model"}static{this.ELEMENT="element"}static{this.SPRITE="sprite"}static{this.RENDER="render"}}const Fv=new Vt;class Nv{constructor(t){this._dirty=true;this._rootBone=null;this._skinUpdateIndex=-1;this._updateBeforeCull=true;if(t){this.initSkin(t)}}set rootBone(t){this._rootBone=t}get rootBone(){return this._rootBone}init(t,e){const s=e*3;let i=Math.ceil(Math.sqrt(s));i=wt.roundUp(i,3);const n=Math.ceil(s/i);this.boneTexture=new lo(t,{width:i,height:n,format:ks,mipmaps:false,minFilter:as,magFilter:as,name:"skin"});this.matrixPalette=this.boneTexture.lock({mode:Bn});this.boneTexture.unlock()}destroy(){if(this.boneTexture){this.boneTexture.destroy();this.boneTexture=null}}resolve(t,e){this.rootBone=t;const s=this.skin;const i=[];for(let n=0;n<s.boneNames.length;n++){const r=s.boneNames[n];let a=t.findByName(r);if(!a){a=e}i.push(a)}this.bones=i}initSkin(t){this.skin=t;this.bones=[];const e=t.inverseBindPose.length;this.init(t.device,e);this.matrices=[];for(let t=0;t<e;t++){this.matrices[t]=new Vt}}uploadBones(t){this.boneTexture.upload()}_updateMatrices(t,e){if(this._skinUpdateIndex!==e){this._skinUpdateIndex=e;Fv.copy(t.getWorldTransform()).invert();for(let t=this.bones.length-1;t>=0;t--){this.matrices[t].mulAffine2(Fv,this.bones[t].getWorldTransform());this.matrices[t].mulAffine2(this.matrices[t],this.skin.inverseBindPose[t])}}}updateMatrices(t,e){if(this._updateBeforeCull){this._updateMatrices(t,e)}}updateMatrixPalette(t,e){this._updateMatrices(t,e);const s=this.matrixPalette;const i=this.bones.length;for(let t=0;t<i;t++){const e=this.matrices[t].data;const i=t*12;s[i]=e[0];s[i+1]=e[4];s[i+2]=e[8];s[i+3]=e[12];s[i+4]=e[1];s[i+5]=e[5];s[i+6]=e[9];s[i+7]=e[13];s[i+8]=e[2];s[i+9]=e[6];s[i+10]=e[10];s[i+11]=e[14]}this.uploadBones(this.skin.device)}}class kv extends Nv{constructor(t,e,s){super();const i=e.length;this.init(t,i);this.device=t;this.rootNode=s;this.bones=e}updateMatrices(t,e){}updateMatrixPalette(t,e){const s=this.matrixPalette;const i=this.bones.length;for(let t=0;t<i;t++){const e=this.bones[t].getWorldTransform().data;const i=t*12;s[i]=e[0];s[i+1]=e[4];s[i+2]=e[8];s[i+3]=e[12];s[i+4]=e[1];s[i+5]=e[5];s[i+6]=e[9];s[i+7]=e[13];s[i+8]=e[2];s[i+9]=e[6];s[i+10]=e[10];s[i+11]=e[14]}this.uploadBones(this.device)}}let Bv=0;class Uv{constructor(){this.initDefaults()}initDefaults(){this.recreate=false;this.verticesUsage=He;this.indicesUsage=He;this.maxVertices=0;this.maxIndices=0;this.vertexCount=0;this.indexCount=0;this.vertexStreamsUpdated=false;this.indexStreamUpdated=false;this.vertexStreamDictionary={};this.indices=null}_changeVertexCount(t,e){if(!this.vertexCount){this.vertexCount=t}}static{this.DEFAULT_COMPONENTS_POSITION=3}static{this.DEFAULT_COMPONENTS_NORMAL=3}static{this.DEFAULT_COMPONENTS_UV=2}static{this.DEFAULT_COMPONENTS_COLORS=4}}class zv{constructor(t,e,s,i,n){this.data=t;this.componentCount=e;this.dataType=s;this.dataTypeNormalize=i;this.asInt=n}}class Vv extends Pl{constructor(t,e){super(),this.indexBuffer=[null],this.vertexBuffer=null,this.primitive=[{type:0,base:0,baseVertex:0,count:0}],this.skin=null,this.boneAabb=null,this._aabbVer=0,this._aabb=new jt,this._geometryData=null,this._morph=null,this._storageIndex=false,this._storageVertex=false;this.id=Bv++;this.device=t;this._storageIndex=e?.storageIndex||false;this._storageVertex=e?.storageVertex||false}static fromGeometry(t,e,s={}){const i=new Vv(t,s);const{positions:n,normals:r,tangents:a,colors:o,uvs:l,uvs1:h,blendIndices:c,blendWeights:d,indices:u}=e;if(n){i.setPositions(n)}if(r){i.setNormals(r)}if(a){i.setVertexStream(Qi,a,4)}if(o){i.setColors32(o)}if(l){i.setUvs(0,l)}if(h){i.setUvs(1,h)}if(c){i.setVertexStream(tn,c,4,c.length/4,fr)}if(d){i.setVertexStream(Ji,d,4)}if(u){i.setIndices(u)}i.update();return i}set morph(t){if(t!==this._morph){if(this._morph){this._morph.decRefCount()}this._morph=t;if(t){t.incRefCount()}}}get morph(){return this._morph}set aabb(t){this._aabb=t;this._aabbVer++}get aabb(){return this._aabb}destroy(){const t=this.morph;if(t){this.morph=null;if(t.refCount<1){t.destroy()}}if(this.vertexBuffer){this.vertexBuffer.destroy();this.vertexBuffer=null}for(let t=0;t<this.indexBuffer.length;t++){this._destroyIndexBuffer(t)}this.indexBuffer.length=0;this._geometryData=null}_destroyIndexBuffer(t){if(this.indexBuffer[t]){this.indexBuffer[t].destroy();this.indexBuffer[t]=null}}_initBoneAabbs(t){this.boneAabb=[];this.boneUsed=[];let e,s,i;let n,r;const a=[];const o=[];const l=this.boneUsed;const h=this.skin.boneNames.length;let c,d,u;for(let t=0;t<h;t++){a[t]=new It(Number.MAX_VALUE,Number.MAX_VALUE,Number.MAX_VALUE);o[t]=new It(-Number.MAX_VALUE,-Number.MAX_VALUE,-Number.MAX_VALUE)}const f=new cd(this.vertexBuffer);const p=f.element[Ki];const m=f.element[Ji];const _=f.element[tn];const g=this.vertexBuffer.numVertices;for(let h=0;h<g;h++){for(let f=0;f<4;f++){const g=m.array[m.index+f];if(g>0){const m=_.array[_.index+f];l[m]=true;e=p.array[p.index];s=p.array[p.index+1];i=p.array[p.index+2];n=o[m];r=a[m];if(r.x>e)r.x=e;if(r.y>s)r.y=s;if(r.z>i)r.z=i;if(n.x<e)n.x=e;if(n.y<s)n.y=s;if(n.z<i)n.z=i;if(t){let a=c=e;let o=d=s;let l=u=i;for(let e=0;e<t.length;e++){const s=t[e];const i=s.deltaPositions[h*3];const n=s.deltaPositions[h*3+1];const r=s.deltaPositions[h*3+2];if(i<0){a+=i}else{c+=i}if(n<0){o+=n}else{d+=n}if(r<0){l+=r}else{u+=r}}if(r.x>a)r.x=a;if(r.y>o)r.y=o;if(r.z>l)r.z=l;if(n.x<c)n.x=c;if(n.y<d)n.y=d;if(n.z<u)n.z=u}}}f.next()}const v=this.vertexBuffer.getFormat().elements.find((t=>t.name===Ki));if(v&&v.normalize){const t=(()=>{switch(v.dataType){case ur:return t=>Math.max(t/127,-1);case fr:return t=>t/255;case pr:return t=>Math.max(t/32767,-1);case mr:return t=>t/65535;default:return t=>t}})();for(let e=0;e<h;e++){if(l[e]){const s=a[e];const i=o[e];s.set(t(s.x),t(s.y),t(s.z));i.set(t(i.x),t(i.y),t(i.z))}}}for(let t=0;t<h;t++){const e=new jt;e.setMinMax(a[t],o[t]);this.boneAabb.push(e)}}_initGeometryData(){if(!this._geometryData){this._geometryData=new Uv;if(this.vertexBuffer){this._geometryData.vertexCount=this.vertexBuffer.numVertices;this._geometryData.maxVertices=this.vertexBuffer.numVertices}if(this.indexBuffer.length>0&&this.indexBuffer[0]){this._geometryData.indexCount=this.indexBuffer[0].numIndices;this._geometryData.maxIndices=this.indexBuffer[0].numIndices}}}clear(t,e,s=0,i=0){this._initGeometryData();this._geometryData.initDefaults();this._geometryData.recreate=true;this._geometryData.maxVertices=s;this._geometryData.maxIndices=i;this._geometryData.verticesUsage=t?He:We;this._geometryData.indicesUsage=e?He:We}setVertexStream(t,e,s,i,n=vr,r=false,a=false){this._initGeometryData();const o=i||e.length/s;this._geometryData._changeVertexCount(o,t);this._geometryData.vertexStreamsUpdated=true;this._geometryData.vertexStreamDictionary[t]=new zv(e,s,n,r,a)}getVertexStream(t,e){let s=0;let i=false;if(this._geometryData){const n=this._geometryData.vertexStreamDictionary[t];if(n){i=true;s=this._geometryData.vertexCount;if(ArrayBuffer.isView(e)){e.set(n.data)}else{e.length=0;e.push(n.data)}}}if(!i){if(this.vertexBuffer){const i=new cd(this.vertexBuffer);s=i.readData(t,e)}}return s}setPositions(t,e=Uv.DEFAULT_COMPONENTS_POSITION,s){this.setVertexStream(Ki,t,e,s,vr,false)}setNormals(t,e=Uv.DEFAULT_COMPONENTS_NORMAL,s){this.setVertexStream(Zi,t,e,s,vr,false)}setUvs(t,e,s=Uv.DEFAULT_COMPONENTS_UV,i){this.setVertexStream(sn+t,e,s,i,vr,false)}setColors(t,e=Uv.DEFAULT_COMPONENTS_COLORS,s){this.setVertexStream(en,t,e,s,vr,false)}setColors32(t,e){this.setVertexStream(en,t,Uv.DEFAULT_COMPONENTS_COLORS,e,fr,true)}setIndices(t,e){this._initGeometryData();this._geometryData.indexStreamUpdated=true;this._geometryData.indices=t;this._geometryData.indexCount=e||t.length}getPositions(t){return this.getVertexStream(Ki,t)}getNormals(t){return this.getVertexStream(Zi,t)}getUvs(t,e){return this.getVertexStream(sn+t,e)}getColors(t){return this.getVertexStream(en,t)}getIndices(t){let e=0;if(this._geometryData&&this._geometryData.indices){const s=this._geometryData.indices;e=this._geometryData.indexCount;if(ArrayBuffer.isView(t)){t.set(s)}else{t.length=0;for(let e=0,i=s.length;e<i;e++){t.push(s[e])}}}else{if(this.indexBuffer.length>0&&this.indexBuffer[0]){const s=this.indexBuffer[0];e=s.readData(t)}}return e}update(t=$i,e=true){if(this._geometryData){if(e){const t=this._geometryData.vertexStreamDictionary[Ki];if(t){if(t.componentCount===3){this._aabb.compute(t.data,this._geometryData.vertexCount);this._aabbVer++}}}let s=this._geometryData.recreate;if(this._geometryData.vertexCount>this._geometryData.maxVertices){s=true;this._geometryData.maxVertices=this._geometryData.vertexCount}if(s){if(this.vertexBuffer){this.vertexBuffer.destroy();this.vertexBuffer=null}}let i=this._geometryData.recreate;if(this._geometryData.indexCount>this._geometryData.maxIndices){i=true;this._geometryData.maxIndices=this._geometryData.indexCount}if(i){if(this.indexBuffer.length>0&&this.indexBuffer[0]){this.indexBuffer[0].destroy();this.indexBuffer[0]=null}}if(this._geometryData.vertexStreamsUpdated){this._updateVertexBuffer()}if(this._geometryData.indexStreamUpdated){this._updateIndexBuffer()}this.primitive[0].type=t;if(this.indexBuffer.length>0&&this.indexBuffer[0]){if(this._geometryData.indexStreamUpdated){this.primitive[0].count=this._geometryData.indexCount;this.primitive[0].indexed=true}}else{if(this._geometryData.vertexStreamsUpdated){this.primitive[0].count=this._geometryData.vertexCount;this.primitive[0].indexed=false}}this._geometryData.vertexCount=0;this._geometryData.indexCount=0;this._geometryData.vertexStreamsUpdated=false;this._geometryData.indexStreamUpdated=false;this._geometryData.recreate=false;this.updateRenderStates()}}_buildVertexFormat(t){const e=[];for(const t in this._geometryData.vertexStreamDictionary){const s=this._geometryData.vertexStreamDictionary[t];e.push({semantic:t,components:s.componentCount,type:s.dataType,normalize:s.dataTypeNormalize,asInt:s.asInt})}return new Qo(this.device,e,t)}_updateVertexBuffer(){if(!this.vertexBuffer){const t=this._geometryData.maxVertices;const e=this._buildVertexFormat(t);this.vertexBuffer=new qo(this.device,e,t,{usage:this._geometryData.verticesUsage,storage:this._storageVertex})}const t=new cd(this.vertexBuffer);const e=this._geometryData.vertexCount;for(const s in this._geometryData.vertexStreamDictionary){const i=this._geometryData.vertexStreamDictionary[s];t.writeData(s,i.data,e);delete this._geometryData.vertexStreamDictionary[s]}t.end()}_updateIndexBuffer(){if(this.indexBuffer.length<=0||!this.indexBuffer[0]){const t=this._geometryData.maxVertices;const e=t>65535||t===0?Ts:xs;const s=this._storageIndex?{storage:true}:undefined;this.indexBuffer[0]=new qc(this.device,e,this._geometryData.maxIndices,this._geometryData.indicesUsage,undefined,s)}const t=this._geometryData.indices;if(t){const e=this.indexBuffer[0];e.writeData(t,this._geometryData.indexCount);this._geometryData.indices=null}}prepareRenderState(t){if(t===d_){this.generateWireframe()}else if(t===u_){this.primitive[u_]={type:Hi,base:0,baseVertex:0,count:this.vertexBuffer?this.vertexBuffer.numVertices:0,indexed:false}}}updateRenderStates(){if(this.primitive[u_]){this.prepareRenderState(u_)}if(this.primitive[d_]){this.prepareRenderState(d_)}}generateWireframe(){this._destroyIndexBuffer(d_);const t=this.vertexBuffer.numVertices;const e=[];let s;if(this.indexBuffer.length>0&&this.indexBuffer[0]){const i=[[0,1],[1,2],[2,0]];const n=this.primitive[c_].base;const r=this.primitive[c_].count;const a=this.primitive[c_].baseVertex||0;const o=this.indexBuffer[c_];const l=new ja[o.format](o.storage);const h=new Set;for(let s=n;s<n+r;s+=3){for(let n=0;n<3;n++){const r=l[s+i[n][0]]+a;const o=l[s+i[n][1]]+a;const c=r>o?o*t+r:r*t+o;if(!h.has(c)){h.add(c);e.push(r,o)}}}s=o.format}else{for(let s=0;s<t;s+=3){e.push(s,s+1,s+1,s+2,s+2,s)}s=e.length>65535?Ts:xs}const i=new qc(this.vertexBuffer.device,s,e.length);const n=new ja[i.format](i.storage);n.set(e);i.unlock();this.primitive[d_]={type:Wi,base:0,baseVertex:0,count:e.length,indexed:true};this.indexBuffer[d_]=i}}const Gv=new ro;function Hv(t){const e=Gv.get(t);return e}function Wv(t,e){Gv.get(t,(()=>e))}class Xv{destroy(){this.cache.forEach(((t,e)=>{e.destroy()}));this.cache.clear()}incRef(t){const e=(this.cache.get(t)||0)+1;this.cache.set(t,e)}decRef(t){if(t){let e=this.cache.get(t);if(e){e--;if(e===0){this.cache.delete(t);t.destroy()}else{this.cache.set(t,e)}}}}constructor(){this.cache=new Map}}class qv{static{this.cache=new Xv}static incRef(t){this.cache.incRef(t)}static decRef(t){this.cache.decRef(t)}static destroy(){this.cache.destroy()}}let $v=0;const jv=new jt;const Yv=new jt;const Kv=new Zt;const Zv=new Set;const Qv=new Uint32Array(4);class Jv{constructor(t){this.vertexBuffer=null;this._destroyVertexBuffer=false;this.count=t}destroy(){if(this._destroyVertexBuffer){this.vertexBuffer?.destroy()}this.vertexBuffer=null}}class ty{get(t){return this.map.get(t)??this.map.get(null)}constructor(){this.map=new Map;this.meshMetaData=new Int32Array(4)}}class ey{getBindGroup(t){if(!this.bindGroup){const e=this.shader;const s=e.meshBindGroupFormat;this.bindGroup=new _o(t,s)}return this.bindGroup}getUniformBuffer(t){if(!this.uniformBuffer){const e=this.shader;const s=e.meshUniformBufferFormat;this.uniformBuffer=new sc(t,s,false)}return this.uniformBuffer}destroy(){this.bindGroup?.destroy();this.bindGroup=null;this.uniformBuffer?.destroy();this.uniformBuffer=null}constructor(){this.bindGroup=null;this.uniformBuffer=null}}class sy{constructor(t,e,s=null){this.castShadow=false;this.shadowCascadeMask=jm;this.cull=true;this.drawOrder=0;this._drawBucket=127;this.visible=true;this.visibleThisFrame=false;this.flipFacesFactor=1;this.gsplatInstance=null;this.id=$v++;this.isVisibleFunc=null;this.instancingData=null;this.indirectData=null;this.parameters={};this.pick=true;this.stencilFront=null;this.stencilBack=null;this.transparent=false;this._aabb=new jt;this._aabbVer=-1;this._aabbMeshVer=-1;this._customAabb=null;this._updateAabb=true;this._updateAabbFunc=null;this._sortKeyShadow=0;this._sortKeyForward=0;this._sortKeyDynamic=0;this._layer=lm;this._material=null;this._skinInstance=null;this._morphInstance=null;this._receiveShadow=true;this._renderStyle=c_;this._screenSpace=false;this._shaderCache=new Map;this._shaderDefs=dg<<16;this._calculateSortDistance=null;this.node=s;this._mesh=t;t.incRefCount();this.material=e;if(t.vertexBuffer){const e=t.vertexBuffer.format;this._shaderDefs|=e.hasUv0?Y_:0;this._shaderDefs|=e.hasUv1?K_:0;this._shaderDefs|=e.hasColor?Z_:0;this._shaderDefs|=e.hasTangents?sg:0}this.updateKey()}set drawBucket(t){this._drawBucket=Math.floor(t)&255;this.updateKey()}get drawBucket(){return this._drawBucket}set renderStyle(t){this._renderStyle=t;this.mesh.prepareRenderState(t)}get renderStyle(){return this._renderStyle}set mesh(t){if(t===this._mesh){return}if(this._mesh){this._mesh.decRefCount()}this._mesh=t;if(t){t.incRefCount()}}get mesh(){return this._mesh}set aabb(t){this._aabb=t}get aabb(){if(!this._updateAabb){return this._aabb}if(this._updateAabbFunc){return this._updateAabbFunc(this._aabb)}let t=this._customAabb;let e=!!t;if(!t){t=jv;if(this.skinInstance){if(!this.mesh.boneAabb){const t=this._morphInstance?this._morphInstance.morph._targets:null;this.mesh._initBoneAabbs(t)}const s=this.mesh.boneUsed;let i=true;for(let e=0;e<this.mesh.boneAabb.length;e++){if(s[e]){Yv.setFromTransformedAabb(this.mesh.boneAabb[e],this.skinInstance.matrices[e]);if(i){i=false;t.center.copy(Yv.center);t.halfExtents.copy(Yv.halfExtents)}else{t.add(Yv)}}}e=true}else if(this.node._aabbVer!==this._aabbVer||this.mesh._aabbVer!==this._aabbMeshVer){if(this.mesh){t.center.copy(this.mesh.aabb.center);t.halfExtents.copy(this.mesh.aabb.halfExtents)}else{t.center.set(0,0,0);t.halfExtents.set(0,0,0)}if(this.mesh&&this.mesh.morph){const e=this.mesh.morph.aabb;t._expand(e.getMin(),e.getMax())}e=true;this._aabbVer=this.node._aabbVer;this._aabbMeshVer=this.mesh._aabbVer}}if(e){this._aabb.setFromTransformedAabb(t,this.node.getWorldTransform())}return this._aabb}clearShaders(){this._shaderCache.forEach((t=>{t.destroy()}));this._shaderCache.clear()}getShaderInstance(t,e,s,i,n,r,a){const o=this._shaderDefs;Qv[0]=t;Qv[1]=e;Qv[2]=o;Qv[3]=i.hash;const l=jo(Qv);let h=this._shaderCache.get(l);if(!h){const e=this._material;h=new ey;h.shader=e.variants.get(l);h.hashes=new Uint32Array(Qv);if(!h.shader){const c=e.getShaderVariant({device:this.mesh.device,scene:s,objDefs:o,cameraShaderParams:i,pass:t,sortedLights:a,viewUniformFormat:n,viewBindGroupFormat:r,vertexFormat:this.mesh.vertexBuffer?.format});e.variants.set(l,c);h.shader=c}this._shaderCache.set(l,h)}return h}set material(t){this.clearShaders();const e=this._material;if(e){e.removeMeshInstanceRef(this)}this._material=t;if(t){t.addMeshInstanceRef(this);this.transparent=t.transparent;this.updateKey()}}get material(){return this._material}_updateShaderDefs(t){if(t!==this._shaderDefs){this._shaderDefs=t;this.clearShaders()}}set calculateSortDistance(t){this._calculateSortDistance=t}get calculateSortDistance(){return this._calculateSortDistance}set receiveShadow(t){if(this._receiveShadow!==t){this._receiveShadow=t;this._updateShaderDefs(t?this._shaderDefs&-2:this._shaderDefs|$_)}}get receiveShadow(){return this._receiveShadow}set batching(t){this._updateShaderDefs(t?this._shaderDefs|og:this._shaderDefs&-16385)}get batching(){return(this._shaderDefs&og)!==0}set skinInstance(t){this._skinInstance=t;this._updateShaderDefs(t?this._shaderDefs|j_:this._shaderDefs&-3);this._setupSkinUpdate()}get skinInstance(){return this._skinInstance}set morphInstance(t){this._morphInstance?.destroy();this._morphInstance=t;let e=this._shaderDefs;e=t&&t.morph.morphPositions?e|ig:e&-1025;e=t&&t.morph.morphNormals?e|ng:e&-2049;e=t&&t.morph.intRenderFormat?e|ag:e&-8193;this._updateShaderDefs(e)}get morphInstance(){return this._morphInstance}set screenSpace(t){if(this._screenSpace!==t){this._screenSpace=t;this._updateShaderDefs(t?this._shaderDefs|eg:this._shaderDefs&-257)}}get screenSpace(){return this._screenSpace}set key(t){this._sortKeyForward=t}get key(){return this._sortKeyForward}set mask(t){const e=this._shaderDefs&65535;this._updateShaderDefs(e|t<<16)}get mask(){return this._shaderDefs>>16}set instancingCount(t){if(this.instancingData){this.instancingData.count=t}}get instancingCount(){return this.instancingData?this.instancingData.count:0}destroy(){const t=this.mesh;if(t){this.mesh=null;if(t.refCount<1){t.destroy()}}this.setRealtimeLightmap(sy.lightmapParamNames[0],null);this.setRealtimeLightmap(sy.lightmapParamNames[1],null);this._skinInstance?.destroy();this._skinInstance=null;this.morphInstance?.destroy();this.morphInstance=null;this.clearShaders();this.material=null;this.instancingData?.destroy()}static{this.lightmapParamNames=["texture_lightMap","texture_dirLightMap"]}static _prepareRenderStyleForArray(t,e){if(t){for(let s=0;s<t.length;s++){t[s]._renderStyle=e;const i=t[s].mesh;if(!Zv.has(i)){Zv.add(i);i.prepareRenderState(e)}}Zv.clear()}}_isVisible(t){if(this.visible){if(this.isVisibleFunc){return this.isVisibleFunc(t)}Kv.center=this.aabb.center;Kv.radius=this._aabb.halfExtents.length();return t.frustum.containsSphere(Kv)>0}return false}updateKey(){const{material:t}=this;this._sortKeyForward=this._drawBucket<<23|(t.alphaToCoverage||t.alphaTest?4194304:0)|t.id&4194303}setInstancing(t,e=false){if(t){this.instancingData=new Jv(t.numVertices);this.instancingData.vertexBuffer=t;t.format.instancing=true;this.cull=e}else{this.instancingData=null;this.cull=true}this._updateShaderDefs(t?this._shaderDefs|Q_:this._shaderDefs&-33)}setIndirect(t,e){this._allocIndirectData();this.indirectData.map.set(t?.camera??null,e);const s=this.mesh.device;s.mapsToClear.add(this.indirectData.map)}getIndirectMetaData(){this._allocIndirectData();const t=this.mesh?.primitive[this.renderStyle];const e=this.indirectData.meshMetaData;e[0]=t.count;e[1]=t.base;e[2]=t.baseVertex;return e}_allocIndirectData(){if(!this.indirectData){this.indirectData=new ty}}ensureMaterial(t){if(!this.material){this.material=Hv(t)}}clearParameters(){this.parameters={}}getParameters(){return this.parameters}getParameter(t){return this.parameters[t]}setParameter(t,e,s=4294967295){const i=this.parameters[t];if(i){i.data=e;i.passFlags=s}else{this.parameters[t]={scopeId:null,data:e,passFlags:s}}}setRealtimeLightmap(t,e){const s=this.getParameter(t);if(s===e){return}if(s){qv.decRef(s.data)}if(e){qv.incRef(e);this.setParameter(t,e)}else{this.deleteParameter(t)}}deleteParameter(t){if(this.parameters[t]){delete this.parameters[t]}}setParameters(t,e){const s=this.parameters;for(const i in s){const n=s[i];if(n.passFlags&e){if(!n.scopeId){n.scopeId=t.scope.resolve(i)}n.scopeId.setValue(n.data)}}}setLightmapped(t){if(t){this.mask=(this.mask|ug)&-6}else{this.setRealtimeLightmap(sy.lightmapParamNames[0],null);this.setRealtimeLightmap(sy.lightmapParamNames[1],null);this._shaderDefs&=-4289;this.mask=(this.mask|dg)&-7}}setCustomAabb(t){if(t){if(this._customAabb){this._customAabb.copy(t)}else{this._customAabb=t.clone()}}else{this._customAabb=null;this._aabbVer=-1}this._setupSkinUpdate()}_setupSkinUpdate(){if(this._skinInstance){this._skinInstance._updateBeforeCull=!this._customAabb}}}const iy=[0,1,3,2,3,1];const ny=[0,1,3,0,3,2];const ry=new Rt;function ay(t,e){if(t&&!e)return false;if(!t&&e)return false;t=t.data;e=e.data;if(t===e)return true;if(t instanceof Float32Array&&e instanceof Float32Array){if(t.length!==e.length)return false;for(let s=0;s<t.length;s++){if(t[s]!==e[s])return false}return true}return false}function oy(t,e){for(const s in t){if(t.hasOwnProperty(s)&&!ay(t[s],e[s])){return false}}for(const s in e){if(e.hasOwnProperty(s)&&!ay(e[s],t[s])){return false}}return true}function ly(t){return t.node.worldTransform.scaleSign}class hy{constructor(t,e,s){this.device=t;this.rootNode=e;this.scene=s;this._init=false;this._batchGroups={};this._batchGroupCounter=0;this._batchList=[];this._dirtyGroups=[]}destroy(){this.device=null;this.rootNode=null;this.scene=null;this._batchGroups={};this._batchList=[];this._dirtyGroups=[]}addGroup(t,e,s,i,n){if(i===undefined){i=this._batchGroupCounter;this._batchGroupCounter++}if(this._batchGroups[i]){return undefined}const r=new Ov(i,t,e,s,n);this._batchGroups[i]=r;return r}removeGroup(t){if(!this._batchGroups[t]){return}const e=[];for(let s=0;s<this._batchList.length;s++){if(this._batchList[s].batchGroupId===t){this.destroyBatch(this._batchList[s])}else{e.push(this._batchList[s])}}this._batchList=e;this._removeModelsFromBatchGroup(this.rootNode,t);delete this._batchGroups[t]}markGroupDirty(t){if(this._dirtyGroups.indexOf(t)<0){this._dirtyGroups.push(t)}}getGroupByName(t){const e=this._batchGroups;for(const s in e){if(!e.hasOwnProperty(s))continue;if(e[s].name===t){return e[s]}}return null}getBatches(t){const e=[];const s=this._batchList.length;for(let i=0;i<s;i++){const s=this._batchList[i];if(s.batchGroupId===t){e.push(s)}}return e}_removeModelsFromBatchGroup(t,e){if(!t.enabled)return;if(t.model&&t.model.batchGroupId===e){t.model.batchGroupId=-1}if(t.render&&t.render.batchGroupId===e){t.render.batchGroupId=-1}if(t.element&&t.element.batchGroupId===e){t.element.batchGroupId=-1}if(t.sprite&&t.sprite.batchGroupId===e){t.sprite.batchGroupId=-1}for(let s=0;s<t._children.length;s++){this._removeModelsFromBatchGroup(t._children[s],e)}}insert(t,e,s){const i=this._batchGroups[e];if(i){if(i._obj[t].indexOf(s)<0){i._obj[t].push(s);this.markGroupDirty(e)}}}remove(t,e,s){const i=this._batchGroups[e];if(i){const n=i._obj[t].indexOf(s);if(n>=0){i._obj[t].splice(n,1);this.markGroupDirty(e)}}}_extractRender(t,e,s,i){if(t.render){e=i[t.render.batchGroupId]=e.concat(t.render.meshInstances);t.render.removeFromLayers()}return e}_extractModel(t,e,s,i){if(t.model&&t.model.model){e=i[t.model.batchGroupId]=e.concat(t.model.meshInstances);t.model.removeModelFromLayers()}return e}_extractElement(t,e,s){if(!t.element)return;let i=false;if(t.element._text&&t.element._text._model.meshInstances.length>0){e.push(t.element._text._model.meshInstances[0]);t.element.removeModelFromLayers(t.element._text._model);i=true}else if(t.element._image){e.push(t.element._image._renderable.meshInstance);t.element.removeModelFromLayers(t.element._image._renderable.model);if(t.element._image._renderable.unmaskMeshInstance){e.push(t.element._image._renderable.unmaskMeshInstance);if(!t.element._image._renderable.unmaskMeshInstance.stencilFront||!t.element._image._renderable.unmaskMeshInstance.stencilBack){t.element._dirtifyMask();t.element._onPrerender()}}i=true}if(i){s._ui=true}}_collectAndRemoveMeshInstances(t,e){for(let s=0;s<e.length;s++){const i=e[s];const n=this._batchGroups[i];if(!n)continue;let r=t[i];if(!r)r=t[i]=[];for(let e=0;e<n._obj.model.length;e++){r=this._extractModel(n._obj.model[e],r,n,t)}for(let e=0;e<n._obj.render.length;e++){r=this._extractRender(n._obj.render[e],r,n,t)}for(let t=0;t<n._obj.element.length;t++){this._extractElement(n._obj.element[t],r,n)}for(let t=0;t<n._obj.sprite.length;t++){const e=n._obj.sprite[t];if(e.sprite&&e.sprite._meshInstance&&(n.dynamic||e.sprite.sprite._renderMode===Lg)){r.push(e.sprite._meshInstance);e.sprite.removeModelFromLayers();n._sprite=true;e.sprite._batchGroup=n}}}}generate(t){const e={};if(!t){t=Object.keys(this._batchGroups)}const s=[];for(let e=0;e<this._batchList.length;e++){if(t.indexOf(this._batchList[e].batchGroupId)<0){s.push(this._batchList[e]);continue}this.destroyBatch(this._batchList[e])}this._batchList=s;this._collectAndRemoveMeshInstances(e,t);if(t===this._dirtyGroups){this._dirtyGroups.length=0}else{const e=[];for(let s=0;s<this._dirtyGroups.length;s++){if(t.indexOf(this._dirtyGroups[s])<0)e.push(this._dirtyGroups[s])}this._dirtyGroups=e}let i,n,r,a;for(const t in e){if(!e.hasOwnProperty(t))continue;i=e[t];r=this._batchGroups[t];if(!r){continue}n=this.prepare(i,r.dynamic,r.maxAabbSize,r._ui||r._sprite);for(let e=0;e<n.length;e++){a=this.create(n[e],r.dynamic,parseInt(t,10));if(a){a.addToLayers(this.scene,r.layers)}}}}prepare(t,e,s=Number.POSITIVE_INFINITY,i){if(t.length===0)return[];const n=s*.5;const r=1024;const a=4294967295;const o=new jt;const l=new jt;let h=null;let c;const d=[];let u=0;if(i){t.sort(((t,e)=>t.drawOrder-e.drawOrder))}let f=t;let p;const m=i?function(t){if(h){h.add(t.aabb)}else{h=t.aabb.clone()}p.push(t)}:function(t){p.push(t)};while(f.length>0){d[u]=[f[0]];p=[];const t=f[0].material;const s=f[0].layer;const _=f[0]._shaderDefs;const g=f[0].parameters;const v=f[0].stencilFront;let y=f[0].mesh.vertexBuffer.getNumVertices();const S=f[0].drawOrder;o.copy(f[0].aabb);const x=ly(f[0]);const T=f[0].mesh.vertexBuffer.format.batchingHash;const w=f[0].mesh.primitive[0].indexed;h=null;for(let b=1;b<f.length;b++){const E=f[b];if(e&&d[u].length>=r){p=p.concat(f.slice(b));break}if(t!==E.material||s!==E.layer||T!==E.mesh.vertexBuffer.format.batchingHash||w!==E.mesh.primitive[0].indexed||_!==E._shaderDefs||y+E.mesh.vertexBuffer.getNumVertices()>a){m(E);continue}l.copy(o);l.add(E.aabb);if(l.halfExtents.x>n||l.halfExtents.y>n||l.halfExtents.z>n){m(E);continue}if(v){if(!(c=E.stencilFront)||v.func!==c.func||v.zpass!==c.zpass){m(E);continue}}if(x!==ly(E)){m(E);continue}if(!oy(g,E.parameters)){m(E);continue}if(i&&h&&h.intersects(E.aabb)&&E.drawOrder!==S){m(E);continue}o.add(E.aabb);y+=E.mesh.vertexBuffer.getNumVertices();d[u].push(E)}u++;f=p}return d}collectBatchedMeshData(t,e){let s=null;let i=0;let n=0;let r=null;for(let a=0;a<t.length;a++){if(t[a].visible){const o=t[a].mesh;const l=o.vertexBuffer.numVertices;i+=l;if(o.primitive[0].indexed){n+=o.primitive[0].count}else{const t=o.primitive[0].type;if(t===Yi||t===ji){if(o.primitive[0].count===4){n+=6}}}if(!s){r=t[a].material;s={};const i=o.vertexBuffer.format.elements;for(let t=0;t<i.length;t++){const e=i[t].name;s[e]={numComponents:i[t].numComponents,dataType:i[t].dataType,normalize:i[t].normalize,count:0}}if(e){s[tn]={numComponents:1,dataType:vr,normalize:false,count:0}}}}}return{streams:s,batchNumVerts:i,batchNumIndices:n,material:r}}create(t,e,s){if(!this._init){this.vertexFormats={};this._init=true}let i=null;let n;let r,a;let o=null;const l=this.collectBatchedMeshData(t,e);if(l.streams){const h=l.streams;let c=l.material;const d=l.batchNumVerts;const u=l.batchNumIndices;o=new Rv(t,e,s);this._batchList.push(o);let f,p,m,_;let g=0;let v=0;let y;const S=d<=65535?Uint16Array:Uint32Array;const x=new S(u);for(n in h){i=h[n];i.typeArrayType=Wa[i.dataType];i.elementByteSize=Xa[i.dataType];i.buffer=new i.typeArrayType(d*i.numComponents)}for(let s=0;s<t.length;s++){if(!t[s].visible){continue}r=t[s].mesh;a=r.vertexBuffer.numVertices;if(!e){y=t[s].node.getWorldTransform()}for(n in h){if(n!==tn){i=h[n];const t=new i.typeArrayType(i.buffer.buffer,i.elementByteSize*i.count);const s=r.getVertexStream(n,t)*i.numComponents;i.count+=s;if(!e&&i.numComponents>=3){if(n===Ki){const e=y.data;const n=e[0];const r=e[1];const a=e[2];const o=e[4];const l=e[5];const h=e[6];const c=e[8];const d=e[9];const u=e[10];const f=e[12];const p=e[13];const m=e[14];let _,g,v;for(let e=0;e<s;e+=i.numComponents){_=t[e];g=t[e+1];v=t[e+2];t[e]=_*n+g*o+v*c+f;t[e+1]=_*r+g*l+v*d+p;t[e+2]=_*a+g*h+v*u+m}}else if(n===Zi||n===Qi){ry.invertMat4(y).transpose();const[e,n,r,a,o,l,h,c,d]=ry.data;let u,f,p;for(let m=0;m<s;m+=i.numComponents){u=t[m];f=t[m+1];p=t[m+2];t[m]=u*e+f*a+p*h;t[m+1]=u*n+f*o+p*c;t[m+2]=u*r+f*l+p*d}}}}}if(e){i=h[tn];for(let t=0;t<a;t++){i.buffer[i.count++]=s}}if(r.primitive[0].indexed){f=r.primitive[0].base;p=r.primitive[0].baseVertex||0;m=r.primitive[0].count;const t=r.indexBuffer[0].getFormat();_=new ja[t](r.indexBuffer[0].storage)}else{p=0;const t=r.primitive[0].type;if(t===Yi||t===ji){if(r.primitive[0].count===4){f=0;m=6;_=t===Yi?iy:ny}else{m=0;continue}}}for(let t=0;t<m;t++){x[t+v]=_[f+t]+p+g}v+=m;g+=a}r=new Vv(this.device);for(n in h){i=h[n];r.setVertexStream(n,i.buffer,i.numComponents,undefined,i.dataType,i.normalize)}if(x.length>0){r.setIndices(x)}r.update($i,false);if(e){c=c.clone();c.update()}const T=new sy(r,c,this.rootNode);T.castShadow=o.origMeshInstances[0].castShadow;T.parameters=o.origMeshInstances[0].parameters;T.layer=o.origMeshInstances[0].layer;T._shaderDefs=o.origMeshInstances[0]._shaderDefs;T.batching=true;T.cull=o.origMeshInstances[0].cull;const w=this._batchGroups[s];if(w&&w._ui){T.cull=false}if(e){const t=[];for(let e=0;e<o.origMeshInstances.length;e++){t.push(o.origMeshInstances[e].node)}T.skinInstance=new kv(this.device,t,this.rootNode)}T._updateAabb=false;T.drawOrder=o.origMeshInstances[0].drawOrder;T.stencilFront=o.origMeshInstances[0].stencilFront;T.stencilBack=o.origMeshInstances[0].stencilBack;T.flipFacesFactor=ly(o.origMeshInstances[0]);T.castShadow=o.origMeshInstances[0].castShadow;o.meshInstance=T;o.updateBoundingBox()}return o}updateAll(){if(this._dirtyGroups.length>0){this.generate(this._dirtyGroups)}for(let t=0;t<this._batchList.length;t++){if(!this._batchList[t].dynamic)continue;this._batchList[t].updateBoundingBox()}}clone(t,e){const s=new Rv(e,t.dynamic,t.batchGroupId);this._batchList.push(s);const i=[];for(let t=0;t<e.length;t++){i.push(e[t].node)}s.meshInstance=new sy(t.meshInstance.mesh,t.meshInstance.material,t.meshInstance.node);s.meshInstance._updateAabb=false;s.meshInstance.parameters=e[0].parameters;s.meshInstance.cull=e[0].cull;s.meshInstance.layer=e[0].layer;if(t.dynamic){s.meshInstance.skinInstance=new kv(this.device,i,this.rootNode)}s.meshInstance.castShadow=t.meshInstance.castShadow;return s}destroyBatch(t){t.destroy(this.scene,this._batchGroups[t.batchGroupId].layers)}}const cy="uSceneColorMap";class dy extends Yc{destroy(){super.destroy();this.releaseRenderTarget(this.colorRenderTarget)}shouldReallocate(t,e,s){const i=t?.colorBuffer.format;if(i!==s){return true}const n=e?.width||this.device.width;const r=e?.height||this.device.height;return!t||n!==t.width||r!==t.height}allocateRenderTarget(t,e,s,i){const n=new lo(s,{name:cy,format:i,width:e?e.colorBuffer.width:s.width,height:e?e.colorBuffer.height:s.height,mipmaps:true,minFilter:ds,magFilter:os,addressU:pe,addressV:pe});if(t){t.destroyFrameBuffers();t._colorBuffer=n;t._colorBuffers=[n]}else{t=new il({name:"ColorGrabRT",colorBuffer:n,depth:false,stencil:false,autoResolve:false})}return t}releaseRenderTarget(t){if(t){t.destroyTextureBuffers();t.destroy()}}frameUpdate(){const t=this.device;const e=this.source;const s=e?.colorBuffer.format??this.device.backBufferFormat;if(this.shouldReallocate(this.colorRenderTarget,e?.colorBuffer,s)){this.releaseRenderTarget(this.colorRenderTarget);this.colorRenderTarget=this.allocateRenderTarget(this.colorRenderTarget,e,t,s)}const i=this.colorRenderTarget.colorBuffer;t.scope.resolve(cy).setValue(i)}execute(){const t=this.device;const e=this.source;const s=this.colorRenderTarget.colorBuffer;if(t.isWebGPU){t.copyRenderTarget(e,this.colorRenderTarget,true,false);t.mipmapRenderer.generate(this.colorRenderTarget.colorBuffer.impl)}else{t.copyRenderTarget(e,this.colorRenderTarget,true,false);t.activeTexture(t.maxCombinedTextures-1);t.bindTexture(s);t.gl.generateMipmap(s.impl._glTarget)}}constructor(...t){super(...t),this.colorRenderTarget=null,this.source=null}}const uy="uSceneDepthMap";class fy extends Yc{constructor(t,e){super(t),this.depthRenderTarget=null,this.camera=null;this.camera=e}destroy(){super.destroy();this.releaseRenderTarget(this.depthRenderTarget)}shouldReallocate(t,e){const s=e?.width||this.device.width;const i=e?.height||this.device.height;return!t||s!==t.width||i!==t.height}allocateRenderTarget(t,e,s,i,n){const r=new lo(s,{name:uy,format:i,width:e?e.colorBuffer.width:s.width,height:e?e.colorBuffer.height:s.height,mipmaps:false,minFilter:as,magFilter:as,addressU:pe,addressV:pe});if(t){t.destroyFrameBuffers();if(n){t._depthBuffer=r}else{t._colorBuffer=r;t._colorBuffers=[r]}}else{t=new il({name:"DepthGrabRT",colorBuffer:n?null:r,depthBuffer:n?r:null,depth:!n,stencil:s.supportsStencil,autoResolve:false})}return t}releaseRenderTarget(t){if(t){t.destroyTextureBuffers();t.destroy()}}before(){const t=this.camera;const e=this.device;const s=t?.renderTarget??e.backBuffer;let i=true;let n=s.stencil?zs:Us;if(e.isWebGPU){const t=s.samples;if(t>1){n=Bs;i=false}}const r=t.renderTarget?.depthBuffer??t.renderTarget?.colorBuffer;if(this.shouldReallocate(this.depthRenderTarget,r)){this.releaseRenderTarget(this.depthRenderTarget);this.depthRenderTarget=this.allocateRenderTarget(this.depthRenderTarget,t.renderTarget,e,n,i)}const a=i?this.depthRenderTarget.depthBuffer:this.depthRenderTarget.colorBuffer;e.scope.resolve(uy).setValue(a)}execute(){const t=this.device;if(t.isWebGL2&&t.renderTarget.samples>1){const e=t.renderTarget.impl._glFrameBuffer;const s=this.depthRenderTarget;t.renderTarget=s;t.updateBegin();this.depthRenderTarget.impl.internalResolve(t,e,s.impl._glFrameBuffer,this.depthRenderTarget,t.gl.DEPTH_BUFFER_BIT)}else{t.copyRenderTarget(t.renderTarget,this.depthRenderTarget,false,true)}}}class py{get hash(){if(this._hash===undefined){const t=`${this.gammaCorrection}_${this.toneMapping}_${this.srgbRenderTarget}_${this.fog}_${this.ssaoEnabled}_${this.sceneDepthMapLinear}`;this._hash=$o(t)}return this._hash}get defines(){const t=this._defines;if(this._definesDirty){this._definesDirty=false;t.clear();if(this._sceneDepthMapLinear)t.set("SCENE_DEPTHMAP_LINEAR",true);t.set("FOG",this._fog.toUpperCase());t.set("TONEMAP",I_[this._toneMapping]);t.set("GAMMA",b_[this.shaderOutputGamma])}return t}markDirty(){this._hash=undefined;this._definesDirty=true}set fog(t){if(this._fog!==t){this._fog=t;this.markDirty()}}get fog(){return this._fog}set ssaoEnabled(t){if(this._ssaoEnabled!==t){this._ssaoEnabled=t;this.markDirty()}}get ssaoEnabled(){return this._ssaoEnabled}set gammaCorrection(t){this._gammaCorrectionAssigned=true;if(this._gammaCorrection!==t){this._gammaCorrection=t;this.markDirty()}}get gammaCorrection(){return this._gammaCorrection}set toneMapping(t){if(this._toneMapping!==t){this._toneMapping=t;this.markDirty()}}get toneMapping(){return this._toneMapping}set srgbRenderTarget(t){if(this._srgbRenderTarget!==t){this._srgbRenderTarget=t;this.markDirty()}}get srgbRenderTarget(){return this._srgbRenderTarget}set sceneDepthMapLinear(t){if(this._sceneDepthMapLinear!==t){this._sceneDepthMapLinear=t;this.markDirty()}}get sceneDepthMapLinear(){return this._sceneDepthMapLinear}get shaderOutputGamma(){const t=this._gammaCorrection===w_&&!this._srgbRenderTarget;return t?w_:T_}constructor(){this._gammaCorrection=w_;this._toneMapping=E_;this._srgbRenderTarget=false;this._ssaoEnabled=false;this._fog=Jp;this._sceneDepthMapLinear=false;this._defines=new Map;this._definesDirty=true}}const my=new It;const _y=new It;const gy=new It;const vy=new Vt;const yy=[new It,new It,new It,new It,new It,new It,new It,new It];class Sy{constructor(){this.shaderPassInfo=null;this.renderPassColorGrab=null;this.renderPassDepthGrab=null;this.fogParams=null;this.shaderParams=new py;this.renderPasses=[];this.jitter=0;this._aspectRatio=16/9;this._aspectRatioMode=Wg;this._calculateProjection=null;this._calculateTransform=null;this._clearColor=new bt(.75,.75,.75,1);this._clearColorBuffer=true;this._clearDepth=1;this._clearDepthBuffer=true;this._clearStencil=0;this._clearStencilBuffer=true;this._cullFaces=true;this._farClip=1e3;this._flipFaces=false;this._fov=45;this._frustumCulling=true;this._horizontalFov=false;this._layers=[hm,cm,dm,fm,um];this._layersSet=new Set(this._layers);this._nearClip=.1;this._node=null;this._orthoHeight=10;this._projection=l_;this._rect=new Ft(0,0,1,1);this._renderTarget=null;this._scissorRect=new Ft(0,0,1,1);this._scissorRectClear=false;this._aperture=16;this._shutter=1/1e3;this._sensitivity=1e3;this._projMat=new Vt;this._projMatDirty=true;this._projMatSkybox=new Vt;this._viewMat=new Vt;this._viewMatDirty=true;this._viewProjMat=new Vt;this._viewProjMatDirty=true;this._shaderMatricesVersion=0;this._viewProjInverse=new Vt;this._viewProjCurrent=null;this._viewProjPrevious=new Vt;this._jitters=[0,0,0,0];this.frustum=new Jt;this._xr=null;this._xrProperties={horizontalFov:this._horizontalFov,fov:this._fov,aspectRatio:this._aspectRatio,farClip:this._farClip,nearClip:this._nearClip}}destroy(){this.renderPassColorGrab?.destroy();this.renderPassColorGrab=null;this.renderPassDepthGrab?.destroy();this.renderPassDepthGrab=null;this.renderPasses.length=0}_storeShaderMatrices(t,e,s,i){if(this._shaderMatricesVersion!==i){this._shaderMatricesVersion=i;this._viewProjPrevious.copy(this._viewProjCurrent??t);this._viewProjCurrent??=new Vt;this._viewProjCurrent.copy(t);this._viewProjInverse.invert(t);this._jitters[2]=this._jitters[0];this._jitters[3]=this._jitters[1];this._jitters[0]=e;this._jitters[1]=s}}get fullSizeClearRect(){const t=this._scissorRectClear?this.scissorRect:this._rect;return t.x===0&&t.y===0&&t.z===1&&t.w===1}set aspectRatio(t){if(this._aspectRatio!==t){this._aspectRatio=t;this._projMatDirty=true}}get aspectRatio(){return this.xr?.active?this._xrProperties.aspectRatio:this._aspectRatio}set aspectRatioMode(t){if(this._aspectRatioMode!==t){this._aspectRatioMode=t;this._projMatDirty=true}}get aspectRatioMode(){return this._aspectRatioMode}set calculateProjection(t){this._calculateProjection=t;this._projMatDirty=true}get calculateProjection(){return this._calculateProjection}set calculateTransform(t){this._calculateTransform=t}get calculateTransform(){return this._calculateTransform}set clearColor(t){this._clearColor.copy(t)}get clearColor(){return this._clearColor}set clearColorBuffer(t){this._clearColorBuffer=t}get clearColorBuffer(){return this._clearColorBuffer}set clearDepth(t){this._clearDepth=t}get clearDepth(){return this._clearDepth}set clearDepthBuffer(t){this._clearDepthBuffer=t}get clearDepthBuffer(){return this._clearDepthBuffer}set clearStencil(t){this._clearStencil=t}get clearStencil(){return this._clearStencil}set clearStencilBuffer(t){this._clearStencilBuffer=t}get clearStencilBuffer(){return this._clearStencilBuffer}set cullFaces(t){this._cullFaces=t}get cullFaces(){return this._cullFaces}set farClip(t){if(this._farClip!==t){this._farClip=t;this._projMatDirty=true}}get farClip(){return this.xr?.active?this._xrProperties.farClip:this._farClip}set flipFaces(t){this._flipFaces=t}get flipFaces(){return this._flipFaces}set fov(t){if(this._fov!==t){this._fov=t;this._projMatDirty=true}}get fov(){return this.xr?.active?this._xrProperties.fov:this._fov}set frustumCulling(t){this._frustumCulling=t}get frustumCulling(){return this._frustumCulling}set horizontalFov(t){if(this._horizontalFov!==t){this._horizontalFov=t;this._projMatDirty=true}}get horizontalFov(){return this.xr?.active?this._xrProperties.horizontalFov:this._horizontalFov}set layers(t){this._layers=t.slice(0);this._layersSet=new Set(this._layers)}get layers(){return this._layers}get layersSet(){return this._layersSet}set nearClip(t){if(this._nearClip!==t){this._nearClip=t;this._projMatDirty=true}}get nearClip(){return this.xr?.active?this._xrProperties.nearClip:this._nearClip}set node(t){this._node=t}get node(){return this._node}set orthoHeight(t){if(this._orthoHeight!==t){this._orthoHeight=t;this._projMatDirty=true}}get orthoHeight(){return this._orthoHeight}set projection(t){if(this._projection!==t){this._projection=t;this._projMatDirty=true}}get projection(){return this._projection}get projectionMatrix(){this._evaluateProjectionMatrix();return this._projMat}set rect(t){this._rect.copy(t)}get rect(){return this._rect}set renderTarget(t){this._renderTarget=t}get renderTarget(){return this._renderTarget}set scissorRect(t){this._scissorRect.copy(t)}get scissorRect(){return this._scissorRect}get viewMatrix(){if(this._viewMatDirty){const t=this._node.getWorldTransform();this._viewMat.copy(t).invert();this._viewMatDirty=false}return this._viewMat}set aperture(t){this._aperture=t}get aperture(){return this._aperture}set sensitivity(t){this._sensitivity=t}get sensitivity(){return this._sensitivity}set shutter(t){this._shutter=t}get shutter(){return this._shutter}set xr(t){if(this._xr!==t){this._xr=t;this._projMatDirty=true}}get xr(){return this._xr}clone(){return(new Sy).copy(this)}copy(t){this._aspectRatio=t._aspectRatio;this._farClip=t._farClip;this._fov=t._fov;this._horizontalFov=t._horizontalFov;this._nearClip=t._nearClip;this._xrProperties.aspectRatio=t._xrProperties.aspectRatio;this._xrProperties.farClip=t._xrProperties.farClip;this._xrProperties.fov=t._xrProperties.fov;this._xrProperties.horizontalFov=t._xrProperties.horizontalFov;this._xrProperties.nearClip=t._xrProperties.nearClip;this.aspectRatioMode=t.aspectRatioMode;this.calculateProjection=t.calculateProjection;this.calculateTransform=t.calculateTransform;this.clearColor=t.clearColor;this.clearColorBuffer=t.clearColorBuffer;this.clearDepth=t.clearDepth;this.clearDepthBuffer=t.clearDepthBuffer;this.clearStencil=t.clearStencil;this.clearStencilBuffer=t.clearStencilBuffer;this.cullFaces=t.cullFaces;this.flipFaces=t.flipFaces;this.frustumCulling=t.frustumCulling;this.layers=t.layers;this.orthoHeight=t.orthoHeight;this.projection=t.projection;this.rect=t.rect;this.renderTarget=t.renderTarget;this.scissorRect=t.scissorRect;this.aperture=t.aperture;this.shutter=t.shutter;this.sensitivity=t.sensitivity;this.shaderPassInfo=t.shaderPassInfo;this.jitter=t.jitter;this._projMatDirty=true;return this}_enableRenderPassColorGrab(t,e){if(e){if(!this.renderPassColorGrab){this.renderPassColorGrab=new dy(t)}}else{this.renderPassColorGrab?.destroy();this.renderPassColorGrab=null}}_enableRenderPassDepthGrab(t,e,s){if(s){if(!this.renderPassDepthGrab){this.renderPassDepthGrab=new fy(t,this)}}else{this.renderPassDepthGrab?.destroy();this.renderPassDepthGrab=null}}_updateViewProjMat(){if(this._projMatDirty||this._viewMatDirty||this._viewProjMatDirty){this._viewProjMat.mul2(this.projectionMatrix,this.viewMatrix);this._viewProjMatDirty=false}}worldToScreen(t,e,s,i=new It){this._updateViewProjMat();this._viewProjMat.transformPoint(t,i);const n=this._viewProjMat.data;const r=t.x*n[3]+t.y*n[7]+t.z*n[11]+1*n[15];i.x=(i.x/r+1)*.5;i.y=(1-i.y/r)*.5;const{x:a,y:o,z:l,w:h}=this._rect;i.x=i.x*l*e+a*e;i.y=i.y*h*s+(1-o-h)*s;return i}screenToWorld(t,e,s,i,n,r=new It){const{x:a,y:o,z:l,w:h}=this._rect;const c=this.farClip-this.nearClip;my.set((t-a*i)/(l*i),1-(e-(1-o-h)*n)/(h*n),s/c);my.mulScalar(2);my.sub(It.ONE);if(this._projection===l_){Vt._getPerspectiveHalfSize(_y,this.fov,this.aspectRatio,this.nearClip,this.horizontalFov);_y.x*=my.x;_y.y*=my.y;const t=this._node.getWorldTransform();_y.z=-this.nearClip;t.transformPoint(_y,gy);const e=this._node.getPosition();r.sub2(gy,e);r.normalize();r.mulScalar(s);r.add(e)}else{this._updateViewProjMat();vy.copy(this._viewProjMat).invert();vy.transformPoint(my,r)}return r}_evaluateProjectionMatrix(){if(this._projMatDirty){if(this._projection===l_){this._projMat.setPerspective(this.fov,this.aspectRatio,this.nearClip,this.farClip,this.horizontalFov);this._projMatSkybox.copy(this._projMat)}else{const t=this._orthoHeight;const e=t*this.aspectRatio;this._projMat.setOrtho(-e,e,-t,t,this.nearClip,this.farClip);this._projMatSkybox.setPerspective(this.fov,this.aspectRatio,this.nearClip,this.farClip)}this._projMatDirty=false}}getProjectionMatrixSkybox(){this._evaluateProjectionMatrix();return this._projMatSkybox}getExposure(){const t=Math.log2(this._aperture*this._aperture/this._shutter*100/this._sensitivity);return 1/(Math.pow(2,t)*1.2)}getScreenSize(t){if(this._projection===l_){const e=this._node.getPosition().distance(t.center);if(e<t.radius){return 1}const s=Math.asin(t.radius/e);const i=Math.tan(s);const n=Math.tan(this.fov/2*wt.DEG_TO_RAD);return Math.min(i/n,1)}return wt.clamp(t.radius/this._orthoHeight,0,1)}getFrustumCorners(t=this.nearClip,e=this.farClip){const s=this.fov*Math.PI/180;let i,n;if(this.projection===l_){if(this.horizontalFov){i=t*Math.tan(s/2);n=i/this.aspectRatio}else{n=t*Math.tan(s/2);i=n*this.aspectRatio}}else{n=this._orthoHeight;i=n*this.aspectRatio}const r=yy;r[0].x=i;r[0].y=-n;r[0].z=-t;r[1].x=i;r[1].y=n;r[1].z=-t;r[2].x=-i;r[2].y=n;r[2].z=-t;r[3].x=-i;r[3].y=-n;r[3].z=-t;if(this._projection===l_){if(this.horizontalFov){i=e*Math.tan(s/2);n=i/this.aspectRatio}else{n=e*Math.tan(s/2);i=n*this.aspectRatio}}r[4].x=i;r[4].y=-n;r[4].z=-e;r[5].x=i;r[5].y=n;r[5].z=-e;r[6].x=-i;r[6].y=n;r[6].z=-e;r[7].x=-i;r[7].y=-n;r[7].z=-e;return r}setXrProperties(t){Object.assign(this._xrProperties,t);this._projMatDirty=true}}const xy=new Vt;const Ty=new It;const wy=new Gt;const by=new Gt;const Ey=new It;const Ay=new It;const Cy=new Vt;const Py=new Gt;const Ly=new It;const Dy=new Vt;const My=new Gt;const Iy=new Gt;const Ry=new Vt;const Oy=new It;const Fy=new It;function Ny(t,e){if(t instanceof Function){return t}return s=>{let i=s[t];if(i instanceof Function){i=i()}return i===e}}function ky(t,e){if(e(t)){return t}const s=t._children;const i=s.length;for(let t=0;t<i;++t){const i=ky(s[t],e);if(i){return i}}return null}class By extends at{constructor(t="Untitled"){super(),this.tags=new ft(this),this.localPosition=new It,this.localRotation=new Gt,this.localScale=new It(1,1,1),this.localEulerAngles=new It,this.position=new It,this.rotation=new Gt,this.eulerAngles=new It,this._scale=null,this.localTransform=new Vt,this._dirtyLocal=false,this._aabbVer=0,this._frozen=false,this.worldTransform=new Vt,this._dirtyWorld=false,this._worldScaleSign=0,this._normalMatrix=new Rt,this._dirtyNormal=true,this._right=null,this._up=null,this._forward=null,this._parent=null,this._children=[],this._graphDepth=0,this._enabled=true,this._enabledInHierarchy=false,this.scaleCompensation=false;this.name=t}get right(){if(!this._right){this._right=new It}return this.getWorldTransform().getX(this._right).normalize()}get up(){if(!this._up){this._up=new It}return this.getWorldTransform().getY(this._up).normalize()}get forward(){if(!this._forward){this._forward=new It}return this.getWorldTransform().getZ(this._forward).normalize().mulScalar(-1)}get normalMatrix(){const t=this._normalMatrix;if(this._dirtyNormal){t.invertMat4(this.getWorldTransform()).transpose();this._dirtyNormal=false}return t}set enabled(t){if(this._enabled!==t){this._enabled=t;if(t&&this._parent?.enabled||!t){this._notifyHierarchyStateChanged(this,t)}}}get enabled(){return this._enabled&&this._enabledInHierarchy}get parent(){return this._parent}get path(){let t=this._parent;if(!t){return""}let e=this.name;while(t&&t._parent){e=`${t.name}/${e}`;t=t._parent}return e}get root(){let t=this;while(t._parent){t=t._parent}return t}get children(){return this._children}get graphDepth(){return this._graphDepth}_notifyHierarchyStateChanged(t,e){t._onHierarchyStateChanged(e);const s=t._children;for(let t=0,i=s.length;t<i;t++){if(s[t]._enabled){this._notifyHierarchyStateChanged(s[t],e)}}}_onHierarchyStateChanged(t){this._enabledInHierarchy=t;if(t&&!this._frozen){this._unfreezeParentToRoot()}}_cloneInternal(t){t.name=this.name;const e=this.tags._list;t.tags.clear();for(let s=0;s<e.length;s++){t.tags.add(e[s])}t.localPosition.copy(this.localPosition);t.localRotation.copy(this.localRotation);t.localScale.copy(this.localScale);t.localEulerAngles.copy(this.localEulerAngles);t.position.copy(this.position);t.rotation.copy(this.rotation);t.eulerAngles.copy(this.eulerAngles);t.localTransform.copy(this.localTransform);t._dirtyLocal=this._dirtyLocal;t.worldTransform.copy(this.worldTransform);t._dirtyWorld=this._dirtyWorld;t._dirtyNormal=this._dirtyNormal;t._aabbVer=this._aabbVer+1;t._enabled=this._enabled;t.scaleCompensation=this.scaleCompensation;t._enabledInHierarchy=false}clone(){const t=new this.constructor;this._cloneInternal(t);return t}copy(t){t._cloneInternal(this);return this}destroy(){this.remove();const t=this._children;while(t.length){const e=t.pop();e._parent=null;e.destroy()}this.fire("destroy",this);this.off()}find(t,e){const s=[];const i=Ny(t,e);this.forEach((t=>{if(i(t)){s.push(t)}}));return s}findOne(t,e){const s=Ny(t,e);return ky(this,s)}findByTag(...t){const e=[];const s=(i,n)=>{if(n&&i.tags.has(...t)){e.push(i)}for(let t=0;t<i._children.length;t++){s(i._children[t],true)}};s(this,false);return e}findByName(t){return this.findOne("name",t)}findByPath(t){const e=Array.isArray(t)?t:t.split("/");let s=this;for(let t=0,i=e.length;t<i;++t){s=s.children.find((s=>s.name===e[t]));if(!s){return null}}return s}forEach(t,e){t.call(e,this);const s=this._children;const i=s.length;for(let n=0;n<i;++n){s[n].forEach(t,e)}}isDescendantOf(t){let e=this._parent;while(e){if(e===t){return true}e=e._parent}return false}isAncestorOf(t){return t.isDescendantOf(this)}getEulerAngles(){this.getWorldTransform().getEulerAngles(this.eulerAngles);return this.eulerAngles}getLocalEulerAngles(){this.localRotation.getEulerAngles(this.localEulerAngles);return this.localEulerAngles}getLocalPosition(){return this.localPosition}getLocalRotation(){return this.localRotation}getLocalScale(){return this.localScale}getLocalTransform(){if(this._dirtyLocal){this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale);this._dirtyLocal=false}return this.localTransform}getPosition(){this.getWorldTransform().getTranslation(this.position);return this.position}getRotation(){this.rotation.setFromMat4(this.getWorldTransform());return this.rotation}getScale(){if(!this._scale){this._scale=new It}return this.getWorldTransform().getScale(this._scale)}getWorldTransform(){if(!this._dirtyLocal&&!this._dirtyWorld){return this.worldTransform}if(this._parent){this._parent.getWorldTransform()}this._sync();return this.worldTransform}get worldScaleSign(){if(this._worldScaleSign===0){this._worldScaleSign=this.getWorldTransform().scaleSign}return this._worldScaleSign}remove(){this._parent?.removeChild(this)}reparent(t,e){this.remove();if(t){if(e>=0){t.insertChild(this,e)}else{t.addChild(this)}}}setLocalEulerAngles(t,e,s){this.localRotation.setFromEulerAngles(t,e,s);if(!this._dirtyLocal){this._dirtifyLocal()}}setLocalPosition(t,e,s){if(t instanceof It){this.localPosition.copy(t)}else{this.localPosition.set(t,e,s)}if(!this._dirtyLocal){this._dirtifyLocal()}}setLocalRotation(t,e,s,i){if(t instanceof Gt){this.localRotation.copy(t)}else{this.localRotation.set(t,e,s,i)}if(!this._dirtyLocal){this._dirtifyLocal()}}setLocalScale(t,e,s){if(t instanceof It){this.localScale.copy(t)}else{this.localScale.set(t,e,s)}if(!this._dirtyLocal){this._dirtifyLocal()}}_dirtifyLocal(){if(!this._dirtyLocal){this._dirtyLocal=true;if(!this._dirtyWorld){this._dirtifyWorld()}}}_unfreezeParentToRoot(){let t=this._parent;while(t){t._frozen=false;t=t._parent}}_dirtifyWorld(){if(!this._dirtyWorld){this._unfreezeParentToRoot()}this._dirtifyWorldInternal()}_dirtifyWorldInternal(){if(!this._dirtyWorld){this._frozen=false;this._dirtyWorld=true;for(let t=0;t<this._children.length;t++){if(!this._children[t]._dirtyWorld){this._children[t]._dirtifyWorldInternal()}}}this._dirtyNormal=true;this._worldScaleSign=0;this._aabbVer++}setPosition(t,e,s){if(t instanceof It){Ly.copy(t)}else{Ly.set(t,e,s)}if(this._parent===null){this.localPosition.copy(Ly)}else{Dy.copy(this._parent.getWorldTransform()).invert();Dy.transformPoint(Ly,this.localPosition)}if(!this._dirtyLocal){this._dirtifyLocal()}}setRotation(t,e,s,i){if(t instanceof Gt){My.copy(t)}else{My.set(t,e,s,i)}if(this._parent===null){this.localRotation.copy(My)}else{const t=this._parent.getRotation();Iy.copy(t).invert();this.localRotation.copy(Iy).mul(My)}if(!this._dirtyLocal){this._dirtifyLocal()}}setPositionAndRotation(t,e){if(this._parent===null){this.localPosition.copy(t);this.localRotation.copy(e)}else{const s=this._parent.getWorldTransform();Dy.copy(s).invert();Dy.transformPoint(t,this.localPosition);this.localRotation.setFromMat4(Dy).mul(e)}if(!this._dirtyLocal){this._dirtifyLocal()}}setEulerAngles(t,e,s){this.localRotation.setFromEulerAngles(t,e,s);if(this._parent!==null){const t=this._parent.getRotation();Iy.copy(t).invert();this.localRotation.mul2(Iy,this.localRotation)}if(!this._dirtyLocal){this._dirtifyLocal()}}addChild(t){this._prepareInsertChild(t);this._children.push(t);this._onInsertChild(t)}addChildAndSaveTransform(t){const e=t.getPosition();const s=t.getRotation();this._prepareInsertChild(t);t.setPosition(Cy.copy(this.worldTransform).invert().transformPoint(e));t.setRotation(Py.copy(this.getRotation()).invert().mul(s));this._children.push(t);this._onInsertChild(t)}insertChild(t,e){this._prepareInsertChild(t);this._children.splice(e,0,t);this._onInsertChild(t)}_prepareInsertChild(t){t.remove()}_fireOnHierarchy(t,e,s){this.fire(t,s);for(let t=0;t<this._children.length;t++){this._children[t]._fireOnHierarchy(e,e,s)}}_onInsertChild(t){t._parent=this;const e=t._enabled&&this.enabled;if(t._enabledInHierarchy!==e){t._enabledInHierarchy=e;t._notifyHierarchyStateChanged(t,e)}t._updateGraphDepth();t._dirtifyWorld();if(this._frozen){t._unfreezeParentToRoot()}t._fireOnHierarchy("insert","inserthierarchy",this);if(this.fire)this.fire("childinsert",t)}_updateGraphDepth(){this._graphDepth=this._parent?this._parent._graphDepth+1:0;for(let t=0,e=this._children.length;t<e;t++){this._children[t]._updateGraphDepth()}}removeChild(t){const e=this._children.indexOf(t);if(e===-1){return}this._children.splice(e,1);t._parent=null;t._fireOnHierarchy("remove","removehierarchy",this);this.fire("childremove",t)}_sync(){if(this._dirtyLocal){this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale);this._dirtyLocal=false}if(this._dirtyWorld){if(this._parent===null){this.worldTransform.copy(this.localTransform)}else{if(this.scaleCompensation){let t;const e=this._parent;let s=this.localScale;let i=e;if(i){while(i&&i.scaleCompensation){i=i._parent}if(i){i=i._parent;if(i){t=i.worldTransform.getScale();Ey.mul2(t,this.localScale);s=Ey}}}by.setFromMat4(e.worldTransform);wy.mul2(by,this.localRotation);let n=e.worldTransform;if(e.scaleCompensation){Ay.mul2(t,e.getLocalScale());xy.setTRS(e.worldTransform.getTranslation(Ty),by,Ay);n=xy}n.transformPoint(this.localPosition,Ty);this.worldTransform.setTRS(Ty,wy,s)}else{this.worldTransform.mulAffine2(this._parent.worldTransform,this.localTransform)}}this._dirtyWorld=false}}syncHierarchy(){if(!this._enabled){return}if(this._frozen){return}this._frozen=true;if(this._dirtyLocal||this._dirtyWorld){this._sync()}const t=this._children;for(let e=0,s=t.length;e<s;e++){t[e].syncHierarchy()}}lookAt(t,e,s,i=0,n=1,r=0){if(t instanceof It){Oy.copy(t);if(e instanceof It){Fy.copy(e)}else{Fy.copy(It.UP)}}else if(s===undefined){return}else{Oy.set(t,e,s);Fy.set(i,n,r)}Ry.setLookAt(this.getPosition(),Oy,Fy);My.setFromMat4(Ry);this.setRotation(My)}translate(t,e,s){if(t instanceof It){Ly.copy(t)}else{Ly.set(t,e,s)}Ly.add(this.getPosition());this.setPosition(Ly)}translateLocal(t,e,s){if(t instanceof It){Ly.copy(t)}else{Ly.set(t,e,s)}this.localRotation.transformVector(Ly,Ly);this.localPosition.add(Ly);if(!this._dirtyLocal){this._dirtifyLocal()}}rotate(t,e,s){My.setFromEulerAngles(t,e,s);if(this._parent===null){this.localRotation.mul2(My,this.localRotation)}else{const t=this.getRotation();const e=this._parent.getRotation();Iy.copy(e).invert();My.mul2(Iy,My);this.localRotation.mul2(My,t)}if(!this._dirtyLocal){this._dirtifyLocal()}}rotateLocal(t,e,s){My.setFromEulerAngles(t,e,s);this.localRotation.mul(My);if(!this._dirtyLocal){this._dirtifyLocal()}}}const Uy=new Vt;const zy=new Vt;const Vy=new Vt;class Gy{static{this.pointLightRotations=[(new Gt).setFromEulerAngles(0,90,180),(new Gt).setFromEulerAngles(0,-90,180),(new Gt).setFromEulerAngles(90,0,0),(new Gt).setFromEulerAngles(-90,0,0),(new Gt).setFromEulerAngles(0,180,180),(new Gt).setFromEulerAngles(0,0,180)]}static create(t,e,s){const i=new Sy;i.node=new By(t);i.aspectRatio=1;i.aspectRatioMode=Xg;i._scissorRectClear=true;switch(e){case mm:i.node.setRotation(Gy.pointLightRotations[s]);i.fov=90;i.projection=l_;break;case gm:i.projection=l_;break;case pm:i.projection=h_;break}return i}static{this._spotCookieCamera=null}static evalSpotCookieMatrix(t){let e=Gy._spotCookieCamera;if(!e){e=Gy.create("SpotCookieCamera",gm);Gy._spotCookieCamera=e}e.fov=t._outerConeAngle*2;const s=e._node;s.setPosition(t._node.getPosition());s.setRotation(t._node.getRotation());s.rotateLocal(-90,0,0);Uy.setTRS(s.getPosition(),s.getRotation(),It.ONE).invert();zy.mul2(e.projectionMatrix,Uy);const i=t.cookieMatrix;const n=t.atlasViewport;Vy.setViewport(n.x,n.y,n.z,n.w);i.mul2(Vy,zy);return i}}const Hy=new It;const Wy=new Float32Array(6);const Xy=new It(-.5,0,0);const qy=new It(0,0,.5);const $y={POSITION_RANGE:0,DIRECTION_FLAGS:1,COLOR_ANGLES_BIAS:2,PROJ_MAT_0:3,ATLAS_VIEWPORT:3,PROJ_MAT_1:4,PROJ_MAT_2:5,PROJ_MAT_3:6,AREA_DATA_WIDTH:7,AREA_DATA_HEIGHT:8,COUNT:9};const jy={LIGHTSHAPE_PUNCTUAL:`${xm}u`,LIGHTSHAPE_RECT:`${Tm}u`,LIGHTSHAPE_DISK:`${wm}u`,LIGHTSHAPE_SPHERE:`${bm}u`,LIGHT_COLOR_DIVIDER:`${Sm}.0`};const Yy=(t,e)=>Object.keys(t).map((s=>`#define {${e}${s}} ${t[s]}`)).join("\n");const Ky=`\n\n\t\t${Yy($y,"CLUSTER_TEXTURE_")}\n\t\t${Yy(jy,"")}\n`;class Zy{constructor(t){this.areaLightsEnabled=false;this.device=t;yv.get(t,cr).set("lightBufferDefinesPS",Ky);yv.get(t,dr).set("lightBufferDefinesPS",Ky);this.cookiesEnabled=false;this.shadowsEnabled=false;this.areaLightsEnabled=false;this.maxLights=255;const e=$y.COUNT;this.lightsFloat=new Float32Array(4*e*this.maxLights);this.lightsUint=new Uint32Array(this.lightsFloat.buffer);this.lightsTexture=this.createTexture(this.device,e,this.maxLights,ks,"LightsTexture");this._lightsTextureId=this.device.scope.resolve("lightsTexture");this.invMaxColorValue=0;this.invMaxAttenuation=0;this.boundsMin=new It;this.boundsDelta=new It}destroy(){this.lightsTexture?.destroy();this.lightsTexture=null}createTexture(t,e,s,i,n){const r=new lo(t,{name:n,width:e,height:s,mipmaps:false,format:i,addressU:pe,addressV:pe,type:zn,magFilter:as,minFilter:as,anisotropy:1});return r}setBounds(t,e){this.boundsMin.copy(t);this.boundsDelta.copy(e)}uploadTextures(){this.lightsTexture.lock().set(this.lightsFloat);this.lightsTexture.unlock()}updateUniforms(){this._lightsTextureId.setValue(this.lightsTexture)}getSpotDirection(t,e){const s=e._node.getWorldTransform();s.getY(t).mulScalar(-1);t.normalize()}getLightAreaSizes(t){const e=t._node.getWorldTransform();e.transformVector(Xy,Hy);Wy[0]=Hy.x;Wy[1]=Hy.y;Wy[2]=Hy.z;e.transformVector(qy,Hy);Wy[3]=Hy.x;Wy[4]=Hy.y;Wy[5]=Hy.z;return Wy}addLightData(t,e){const s=t._type===gm;const i=t.atlasViewportAllocated;const n=this.cookiesEnabled&&!!t._cookie&&i;const r=this.areaLightsEnabled&&t.shape!==xm;const a=this.shadowsEnabled&&t.castShadows&&i;const o=t._node.getPosition();let l=null;let h=null;if(s){if(a){const e=t.getRenderData(null,0);l=e.shadowMatrix}else if(n){l=Gy.evalSpotCookieMatrix(t)}}else{if(a||n){h=t.atlasViewport}}const c=this.lightsFloat;const d=this.lightsUint;const u=e*this.lightsTexture.width*4;c[u+4*$y.POSITION_RANGE+0]=o.x;c[u+4*$y.POSITION_RANGE+1]=o.y;c[u+4*$y.POSITION_RANGE+2]=o.z;c[u+4*$y.POSITION_RANGE+3]=t.attenuationEnd;const f=t.clusteredData;d[u+4*$y.COLOR_ANGLES_BIAS+0]=f[0];d[u+4*$y.COLOR_ANGLES_BIAS+1]=f[1];d[u+4*$y.COLOR_ANGLES_BIAS+2]=f[2];if(t.castShadows){const e=t.getRenderData(null,0);const s=t._getUniformBiasValues(e);const i=Dt.float2Half(s.bias);const n=Dt.float2Half(s.normalBias);d[u+4*$y.COLOR_ANGLES_BIAS+3]=i|n<<16}if(s){this.getSpotDirection(Hy,t);c[u+4*$y.DIRECTION_FLAGS+0]=Hy.x;c[u+4*$y.DIRECTION_FLAGS+1]=Hy.y;c[u+4*$y.DIRECTION_FLAGS+2]=Hy.z}d[u+4*$y.DIRECTION_FLAGS+3]=t.getClusteredFlags(a,n);if(l){const t=l.data;for(let e=0;e<16;e++){c[u+4*$y.PROJ_MAT_0+e]=t[e]}}if(h){c[u+4*$y.ATLAS_VIEWPORT+0]=h.x;c[u+4*$y.ATLAS_VIEWPORT+1]=h.y;c[u+4*$y.ATLAS_VIEWPORT+2]=h.z/3}if(r){const e=this.getLightAreaSizes(t);c[u+4*$y.AREA_DATA_WIDTH+0]=e[0];c[u+4*$y.AREA_DATA_WIDTH+1]=e[1];c[u+4*$y.AREA_DATA_WIDTH+2]=e[2];c[u+4*$y.AREA_DATA_HEIGHT+0]=e[3];c[u+4*$y.AREA_DATA_HEIGHT+1]=e[4];c[u+4*$y.AREA_DATA_HEIGHT+2]=e[5]}}}const Qy=new It;const Jy=new It;const tS=new It;const eS=new jt;class sS{constructor(){this.light=null;this.min=new It;this.max=new It}}class iS{constructor(t){this.device=t;this.name="Untitled";this.reportCount=0;this.boundsMin=new It;this.boundsMax=new It;this.boundsDelta=new It;this._cells=new It(1,1,1);this._cellsLimit=new It;this.cells=this._cells;this.maxCellLightCount=4;this._usedLights=[];this._usedLights.push(new sS);this.lightsBuffer=new Zy(t);this.registerUniforms(t)}set maxCellLightCount(t){if(t!==this._maxCellLightCount){this._maxCellLightCount=t;this._cellsDirty=true}}get maxCellLightCount(){return this._maxCellLightCount}set cells(t){Qy.copy(t).floor();if(!this._cells.equals(Qy)){this._cells.copy(Qy);this._cellsLimit.copy(Qy).sub(It.ONE);this._cellsDirty=true}}get cells(){return this._cells}destroy(){this.lightsBuffer.destroy();this.releaseClusterTexture()}releaseClusterTexture(){if(this.clusterTexture){this.clusterTexture.destroy();this.clusterTexture=null}}registerUniforms(t){this._clusterSkipId=t.scope.resolve("clusterSkip");this._clusterMaxCellsId=t.scope.resolve("clusterMaxCells");this._clusterWorldTextureId=t.scope.resolve("clusterWorldTexture");this._clusterTextureSizeId=t.scope.resolve("clusterTextureSize");this._clusterTextureSizeData=new Float32Array(3);this._clusterBoundsMinId=t.scope.resolve("clusterBoundsMin");this._clusterBoundsMinData=new Float32Array(3);this._clusterBoundsDeltaId=t.scope.resolve("clusterBoundsDelta");this._clusterBoundsDeltaData=new Float32Array(3);this._clusterCellsCountByBoundsSizeId=t.scope.resolve("clusterCellsCountByBoundsSize");this._clusterCellsCountByBoundsSizeData=new Float32Array(3);this._clusterCellsDotId=t.scope.resolve("clusterCellsDot");this._clusterCellsDotData=new Float32Array(3);this._clusterCellsMaxId=t.scope.resolve("clusterCellsMax");this._clusterCellsMaxData=new Float32Array(3)}updateParams(t){if(t){this.cells=t.cells;this.maxCellLightCount=t.maxLightsPerCell;this.lightsBuffer.cookiesEnabled=t.cookiesEnabled;this.lightsBuffer.shadowsEnabled=t.shadowsEnabled;this.lightsBuffer.areaLightsEnabled=t.areaLightsEnabled}}updateCells(){if(this._cellsDirty){this._cellsDirty=false;const t=this._cells.x;const e=this._cells.y;const s=this._cells.z;const i=t*e*s;const n=this.maxCellLightCount*i;let r=Math.ceil(Math.sqrt(n));r=wt.roundUp(r,this.maxCellLightCount);const a=Math.ceil(n/r);this._clusterCellsMaxData[0]=t;this._clusterCellsMaxData[1]=e;this._clusterCellsMaxData[2]=s;this._clusterCellsDotData[0]=this.maxCellLightCount;this._clusterCellsDotData[1]=t*s*this.maxCellLightCount;this._clusterCellsDotData[2]=t*this.maxCellLightCount;this.clusters=new Uint8ClampedArray(n);this.counts=new Int32Array(i);this._clusterTextureSizeData[0]=r;this._clusterTextureSizeData[1]=1/r;this._clusterTextureSizeData[2]=1/a;this.releaseClusterTexture();this.clusterTexture=this.lightsBuffer.createTexture(this.device,r,a,xi,"ClusterTexture")}}uploadTextures(){this.clusterTexture.lock().set(this.clusters);this.clusterTexture.unlock();this.lightsBuffer.uploadTextures()}updateUniforms(){this._clusterSkipId.setValue(this._usedLights.length>1?0:1);this.lightsBuffer.updateUniforms();this._clusterWorldTextureId.setValue(this.clusterTexture);this._clusterMaxCellsId.setValue(this.maxCellLightCount);const t=this.boundsDelta;this._clusterCellsCountByBoundsSizeData[0]=this._cells.x/t.x;this._clusterCellsCountByBoundsSizeData[1]=this._cells.y/t.y;this._clusterCellsCountByBoundsSizeData[2]=this._cells.z/t.z;this._clusterCellsCountByBoundsSizeId.setValue(this._clusterCellsCountByBoundsSizeData);this._clusterBoundsMinData[0]=this.boundsMin.x;this._clusterBoundsMinData[1]=this.boundsMin.y;this._clusterBoundsMinData[2]=this.boundsMin.z;this._clusterBoundsDeltaData[0]=t.x;this._clusterBoundsDeltaData[1]=t.y;this._clusterBoundsDeltaData[2]=t.z;this._clusterTextureSizeId.setValue(this._clusterTextureSizeData);this._clusterBoundsMinId.setValue(this._clusterBoundsMinData);this._clusterBoundsDeltaId.setValue(this._clusterBoundsDeltaData);this._clusterCellsDotId.setValue(this._clusterCellsDotData);this._clusterCellsMaxId.setValue(this._clusterCellsMaxData)}evalLightCellMinMax(t,e,s){e.copy(t.min);e.sub(this.boundsMin);e.div(this.boundsDelta);e.mul2(e,this.cells);e.floor();s.copy(t.max);s.sub(this.boundsMin);s.div(this.boundsDelta);s.mul2(s,this.cells);s.ceil();e.max(It.ZERO);s.min(this._cellsLimit)}collectLights(t){const e=this.lightsBuffer.maxLights;const s=this._usedLights;let i=1;t.forEach((t=>{const n=!!(t.mask&(dg|ug));const r=t.type===gm&&t._outerConeAngle===0;if(t.enabled&&t.type!==pm&&t.visibleThisFrame&&t.intensity>0&&n&&!r){if(i<e){let e;if(i<s.length){e=s[i]}else{e=new sS;s.push(e)}e.light=t;t.getBoundingBox(eS);e.min.copy(eS.getMin());e.max.copy(eS.getMax());i++}}}));s.length=i}evaluateBounds(){const t=this._usedLights;const e=this.boundsMin;const s=this.boundsMax;if(t.length>1){e.copy(t[1].min);s.copy(t[1].max);for(let i=2;i<t.length;i++){e.min(t[i].min);s.max(t[i].max)}}else{e.set(0,0,0);s.set(1,1,1)}this.boundsDelta.sub2(s,e);this.lightsBuffer.setBounds(e,this.boundsDelta)}updateClusters(t){this.counts.fill(0);this.clusters.fill(0);this.lightsBuffer.areaLightsEnabled=t?t.areaLightsEnabled:false;const e=this._cells.x;const s=this._cells.z;const i=this.counts;const n=this._maxCellLightCount;const r=this.clusters;const a=this.maxCellLightCount;const o=this._usedLights;for(let t=1;t<o.length;t++){const l=o[t];const h=l.light;this.lightsBuffer.addLightData(h,t);this.evalLightCellMinMax(l,Jy,tS);const c=Jy.x;const d=tS.x;const u=Jy.y;const f=tS.y;const p=Jy.z;const m=tS.z;for(let o=c;o<=d;o++){for(let l=p;l<=m;l++){for(let h=u;h<=f;h++){const c=o+e*(l+h*s);const d=i[c];if(d<n){r[a*c+d]=t;i[c]=d+1}}}}}}update(t,e=null){this.updateParams(e);this.updateCells();this.collectLights(t);this.evaluateBounds();this.updateClusters(e);this.uploadTextures()}activate(){this.updateUniforms()}}const nS="muPIHORMLNDCz4DxVR/ZvYfAUVEFR47KRIC4nwAAAAAP7WxlhD6Ci+2HCe7BF8jRAPZwdH2UPpI5PdLCJdkvG4UTaNDJ/0crAzne71GCrb4kbdMjjCEGzdX6fNxDMLJq5xkeoIVTdfiZkodEeArmZmp/FQzFjD4x8iOW7Dg64n+3mWqyEwLxXT8zoJXfbw8QJKDCaarUYyTlMzNFHbgUe9IQV7g4YOgtSKpIFZJ0qERm7u4PpmiF89ktHWCywaGmD6h+hfh2/Zd8KYlKqqo4Cem4T42bT/Z9FpCQF1hhSjfBzZ5XFn/y3jegWC6u86KuELRundQS/1Rp+XuKKGIgRv3CvP5y749yqLlFO495JOT3+f2CXgd71npU0/KjjpkZucbJ5m78IVyuSrSozc9jgBUhDrz0hFsyb7LFUH9//wJbBgLdNWJZObfKxrNt8TliLA9w9sXFv6g26iXpf6r/BqcAusj/QzGBZuoUGeEtw8BCXCZ3jUiw4hvM18ZVqlUD3C40LAFXW6FRjuAZGRNstb0/qVk4skwyT+MHrvRorI4rKHVMWZmKyAkzL/78u/9pMQuX14pZN50b2PHn6fRxeaCQLsfT4dpvIkWWFuFVENZIh+8xgR6lU+85W0PPdAu1j99kcCG40JBQa4JMyRzq6qriOBLtqF87vpCJan0WEduVr/mOYkS00urVA0mA6M3031+GmGmW48PaJDYOEIb3bIXWPaLoAOEinX1TN3+/vwhG6nqJu0TdHpedS7QsGZIoxH3nQYYjQP1jmbahlbNngw5ogsGk1y50XZyUmQBY+/JBJ3Unu4dApm+WmPwHPU9gLb+4mHh4BiY6M86pq+WeTyWdI3s0CXPEtHGXZ8zMZgUoyRomBi1VdazzuN+WOmQ9Pa0Z0tlNopUi8AJ4x2Xn4mmOKEbXLxlbVsWu8XhuDGYFOGCRVdSqDPXrHU5SDdUlti3k5///SBwzTMwK3L4a1H7w4lnpEas6////AfX8asyIBfeFXVJ3tgvxQ/blZuUKyIODIfr/UzdWNu7pciLBpdZRZ4pIfZ1R6szq+XNxkGG///8EZFpu7VHAhFWqHEOrB9unw+YQa5o8/9IR/V5/zq+986rJSyfgJKt2u9hxU1wzyQWPjJGvzG9+eWWxGFOHVKqI4jBQALwZZswesnvZ2UmmkEXdiRpz8B+oWE7PY70ZTMndisYSXg2TqoI+3y9BxbnY2Y4EfbdcRhAvG59NqDENNYbxKvK5HJfPG5M+Wi2AcpLVJrD6caiEOzgSoVNSgQK8fm2M3zGcF4xtClv/8Hs9oD7C3jitTATYNQxmKqKf1LhIxzf1bmfiNn7UKFmcJu4sLqVLwxGSue3taBEyknkw5hXTsUCvqmmL/f8n/w0giR7Hu/9EHvpkz3yuu64TioMkzdTJ30i0+hFnQqW1+v9mMwq+z9qGX0UFu9MomvVG2xod6vc12AAAAACq7sGa5qptFR0jF3nQt/D+7PibKYahaxP3hEixPbGi9nwNf2LAa7LkEZRKxzXeCD64Xpii5n+8Kpg8eHIv7AWXZltgMoGltmoJ0XGdOCL8WkzphvR9N2o3ARSZ42l5e5Pe4B58MCRlP3EKv+mcloknH+fto5BWsmEutW6KvjOVsznFCktkSczVk4aGvj9VXlRcLeDoKG8RkBgdcNG2bf8HUL4MT2DM+ar7NImJhKpxakX4Vk0CnP+/XNhl5UsP0lXgeZXPoDBMSW5An+DXlTCO5FQGwSPYwHLKYVIimEdAoVe49rQLaaNcye5LxU2/c5TijTgJtD5eQQIe1snxauj5jZsxJBUJdoP/zqpjqv8qBruoPsVsP8N44PCUW5Dd0DzqjSS/Dl5mI9cn1w2ndN/0KAEm1QAAAACwu6KM/083IBbH5bPa/9oHUwcU8I9v3j6/v18QYammrf+P6VL///8BrpuM3fOLCxaLNOFNF1zPbPYTP65ni6njft4eVcyrVXRQFrs52tr35StiSp55edVDCBC0H5rIfac6nzUwxQSt7y15QoKb+5zebEQUmVbrPjXuUa19Ey7sqXMiSUKHaw72PJKDdrutJoQr3u6lEYJ8K0MakWKj9zjTFi4X94TsKYco0GrLeB60M6D8M/80rhXUW8iMequg8y5F838WI0+gp3GBN5Kj/xIOxTWQuUaPV/LwvARr1VH93BFgGZR1MFW0Ua30GbYmdnAgo9VWy8SQtpDUgGE2r2zq2eTEMCL7sMKmE1hchVhuF/TCq9iXKEm86kzOf3Rp9ZnCxbpDUj+FKNxVyXe6pVZkRXv/m95SnB/EB8aME29N85MtAcDoXWlor8De2Q5Dg1tar+8wgiZufbMam81j//ASUohoR/zSh2KG4bvT6mkIPz6C5/98DC3LaWlaEZ1zA5JORZRu6J/a0GY285sEYzw71YqOT1ihAG0z5SDt1xNiDQWZdFpndArp6xWhqSDkRb4kSJEHb9liPvw7uLV/6i5MVf//A9Qjr8xkAEUh+KDI+zdtJ68d6MBOktg1iyp/SCq8O9f5pbamn1VVVQPRTWqNBvhQKa07s6P0lc9Luu/3gw4HeyOUfz8MxMwV4UQhua+t9cr4bz/nIB2wnDSK1K7I94M+s6C84htaX/CNlMQUSs2KJO+yaebfTbkNX5yWcqEJevo0vbKUiETuFXiL019A3E+lmsyZMwXrXLLiQAZ5t9+jI3JobhJTMiDH5ZOQ+8Jau5555NMjHSscP9qCVaa40doh+1a3Ukf6jqBmLddgh79/fwTfCyqiuldNkUoy+nUp+4nerwg0OjtGv2x485PJOJvUEokNhYIdWjpx7BWk0VZGWOp3jSFTJ2bnu6KCduZtG/UcBC9RZ3W/jMSfSMw4Etr/DoD/XYP2V5Ovw+YoM3F5g2dGLdvuG6ZkVGLE6Dk5Zr+sdSyGliJP1y2OFf/KFO0RWO+3gsGhesTnfZVpTd8/HwgO216gwaqo+vY3TljfJWowY+i0p0Os4SLn/1wLqDHMlszggmT/D8MRFzs+pLv6LNJSsNZ/r41mWi/rF6ZcKp/yzJdK0VU44hskq3RGpgO6mIpJDsf/mZkFrz0yYOMLbuaj/wp1v7JMFM5eqvBhmTd7U8frQAtHtys4zgpjZmzUhOVTfNNLifElGXADlqHGKrkBT/nYwX8ZRm3RjvyPvjKyEqEGKUpVnvOGx+NKPHiWM//ZDpDVGvvrjmk8RPF/wiYZD3+Us8YCXjrVOfjdd1UPAfjLp8jgSn4me7DPTpz1Ggy9XL80guFO7ECT10AvILKfD18Qx+KY/f8aRqu0oOO8hfKRFZa9PUJwCsp6VdZz6LFkm2b9Pl2LIifCwzRy7TpdG2uAtOxP2OemY26bJMa9ZGSLIRlMsgpDpnDJwd0oa5pQ13x1hrHf52HpulUWonGWsfXZbSQYKu9bnEN76ciQih0opN3deDVrbrxorfVlnCmL1R9zq3ePGWIv21c7pW8kEiFTM5JX8dAw867s/60cf79/BH+MDFCZBHlz1L+qGOJf/1txhhmrf3//As+RIJwevDb+fgNXVeHw67QptZegayhrEwr5Gy+EPo1RLaMtPbqOZYoVzXzwzjMFWZxyUG9YUIf6////AQWy84iAygLk9COtXt92+0mT/xg0zMzMBeLkb8y9SL2TDXgSX422hDgpGNLJyuPioA+YJ91G8znrpNqHkwYyscaJDEc9Vc+j4cXle3hvcd2JqDQH2lBZxDn6mUTs0b75raMvbs727codX01Anj8f3wir9P2xQaQ22v/TxCMglKDFoTjaP01XTLgxnTvPv02JgEUrW6UDgOnobFpLdvKdlypgIzPcq14fgXU5tvVW0FEs7VRlsG1IyA69fN4n+awHhT34cE+xUvdj86C8LgAsFheTjI9Ht9EyYAAAAAAVBVKRx2wLgUTI0/2QfyJo2riRw3JDqzEShmx/Lifo6mRkQVbS7X53t+EvKxcXogtdts31e9MRHdcHgsA8rt4/mt2unlzQ/wsU8Gu7+W6Oj7eD8EQdDp5XlCsVaS/AV/t5ZpPOHR3rGpyAJe9IPV+xMrBL1Oz/8MQhFs31h0N1cVnq371uqIJYHyafKH1jteAK3VpMXBcuC+yt0ZeKyRUY4QhdrJJ4tJ1wg3Hu6kDsbovxupTMkGdRrm8oZSoYPbJ+PwH/xotgTdkA1205vUEfnqkI04T/fnnd1fiZW5AwNcggd7fi4j5zasmcntZexIxqFZQMzMJpfndmI5jn17cgn5EV5t9XN0C///8Q9wlJpMGXdoiaMTG2sVyHQsn8mWRISCLNG777S0OuDRP2GlLcJ2UeOg7Fo8hTNPeJ//iTJhyqxhKRUntdXOihq2wfKfH///8B0GGrwT+fSOQRdctKxjjGCSS11d6BlQ9BDfE0J6Z25FaNTKGpFKNCMr2G/041KpWwBLVe1k08vncseQbKZdXi8x1t9XA45U/Wd43D9wAh3Tal0aiLVzGPusOZ1F+W3TWoqlX/A95+dNef11TsuGful+ctGssldk3fqpfqh+43XTxL42+leSHoF/dWHYGX6maqUEuLX7UB+r/6Llr4LKocbVIeu+hB9QTPfz9fCP8RyWmX4SmbhMFsNtCijV7lVcwejLKlvl0GfCndnWV7/39VBrtTRuUx92oke3GBgKkC5fdGK0YvNK+xenKaDmsHDjNFUM3NMz3ZiXXFuLgojosPVCDEl2W5BjX3Ms+j0GSqACHmh0+RPWyuNm/Qe8vFf9AW7N1uRaxWirrUytqEJnJ4/Flm8hSoiZ2NQBsS6w/yQlC4gCaFo8q4nyY6AFdo4hiwhBXzbNKKvZvktCjSCukRR/BbYVbNwZi2Yh3hGodEacLW8qijiWJODf0P2bhfaiPspPT4lYJBgi/KfcFwCfvyUIgkJOv///8CG/JEepRBLaMFE+2TgrqsJXOVOWHt6g/bFwVLLMVBsMR50dis/39/AlBX+/rMTJkUQrnlxpR2iu0Tp8tATkRYGmDIrcAiRP8PjoWIlb7/0ecTdSCE9Y58+a+n/FovJQTVF4F2jAxMZhTgrM/KVS5BQu6bVbkWY5HXnxRshks3urDdW4RkWp4M4TeLmFK5KF/uHkkiO5Kv96RioH984v/CSDBnG+BwlnU9B+o7Y+0X0Nob+0pLsStxjvPXMy2eCpzhOWV4XbObBHN4UE2sLQ/DIqXhOzxVf38GlTi6aG7EnePO7TRJm9yOfUUcqq1I2iQHrVDqn3TUNRi/lMw8KbMW/3/nqCz/Ef8PoW5Qxcz2yHR/f78EPB2Stbd+ZFmfNTUYILzsb9YNhpaHcaymYrBiNHmFE3Y4ccYJ25Prqm7zHobGHED8/93ZNlWro9vcKivGZs31UiK1k5zjUhexUgbqJb+fUTjxce/7Zly8a5KMC1fX5nfjPgibdvzbXV1jRT2asXvmSAusaLdq1TSIJ8fXINk5AtT34EWPAsfP9IFQqM5K11O6saoHJA==";let rS=null;const aS=()=>{if(!rS){const t=atob(nS);rS=Uint8Array.from(t,(t=>t.charCodeAt(0)))}};const oS=()=>{aS();return rS};class lS{constructor(t=0){this.seed=0;this.seed=t*4;aS()}_next(){this.seed=(this.seed+4)%rS.length}value(){this._next();return rS[this.seed]/255}vec4(t=new Ft){this._next();return t.set(rS[this.seed],rS[this.seed+1],rS[this.seed+2],rS[this.seed+3]).mulScalar(1/255)}}const hS=[new It(-1,0,0),new It(1,0,0),new It(0,-1,0),new It(0,1,0),new It(0,0,-1),new It(0,0,1)];class cS{update(t,e){const s=this.colors;const{r:i,g:n,b:r}=t;for(let t=0;t<6;t++){s[t*3]=i;s[t*3+1]=n;s[t*3+2]=r}for(let t=0;t<e.length;t++){const i=e[t];if(i._type===pm){for(let t=0;t<6;t++){const e=Math.max(hS[t].dot(i._direction),0)*i._intensity;const n=i._color;s[t*3]+=n.r*e;s[t*3+1]+=n.g*e;s[t*3+2]+=n.b*e}}}}constructor(){this.colors=new Float32Array(6*3)}}const dS=(t,e,s,i)=>{const n=new lo(t,{name:`${e}${s}`,width:s,height:s,format:Ds,addressU:fe,addressV:fe,type:zn,magFilter:as,minFilter:as,anisotropy:1,mipmaps:false});n.lock().set(i);n.unlock();return n};const uS=new ro;const fS=t=>uS.get(t,(()=>{const e=oS();const s=Math.sqrt(e.length/4);return dS(t,"BlueNoise",s,e)}));class pS{constructor(t,e){this.texture=t;this.cached=false;this.renderTargets=e}destroy(){if(this.texture){this.texture.destroy();this.texture=null}const t=this.renderTargets;for(let e=0;e<t.length;e++){t[e].destroy()}this.renderTargets.length=0}static create(t,e){let s=null;if(e._type===mm){s=this.createCubemap(t,e._shadowResolution,e._shadowType)}else{s=this.create2dMap(t,e._shadowResolution,e._shadowType)}return s}static createAtlas(t,e,s){const i=this.create2dMap(t,e,s);const n=i.renderTargets;const r=n[0];for(let t=0;t<5;t++){n.push(r)}return i}static create2dMap(t,e,s){const i=Hm.get(s);let n=i.format;if(n===Bs&&!t.textureFloatRenderable&&t.textureHalfFloatRenderable){n=yi}const r=Fi.get(n)?.name;let a=os;if(s===Rm){a=t.extTextureFloatLinear?os:as}if(s===Um){a=as}const o=new lo(t,{format:n,width:e,height:e,mipmaps:false,minFilter:a,magFilter:a,addressU:pe,addressV:pe,name:`ShadowMap2D_${r}`});let l=null;if(i?.pcf){o.compareOnRead=true;o.compareFunc=fs;l=new il({depthBuffer:o})}else{l=new il({colorBuffer:o,depth:true})}if(t.isWebGPU){l.flipY=true}return new pS(o,[l])}static createCubemap(t,e,s){const i=Hm.get(s);const n=Fi.get(i.format)?.name;const r=s===Um;const a=r?as:os;const o=new lo(t,{format:i?.format,width:e,height:e,cubemap:true,mipmaps:false,minFilter:a,magFilter:a,addressU:pe,addressV:pe,name:`ShadowMapCube_${n}`});if(!r){o.compareOnRead=true;o.compareFunc=fs}const l=[];for(let t=0;t<6;t++){if(r){l.push(new il({colorBuffer:o,face:t,depth:true}))}else{l.push(new il({depthBuffer:o,face:t}))}}return new pS(o,l)}}const mS=[];const _S=[];const gS=new Ft;const vS=new Ft;class yS{constructor(t){this.size=Math.floor(t.w*1024);this.used=false;this.lightId=-1;this.rect=t}}class SS{constructor(t){this.device=t;this.version=1;this.shadowAtlasResolution=2048;this.shadowAtlas=null;this.shadowEdgePixels=3;this.cookieAtlasResolution=4;this.cookieAtlas=new lo(this.device,{name:"CookieAtlas",width:this.cookieAtlasResolution,height:this.cookieAtlasResolution,format:Hs,cubemap:false,mipmaps:false,minFilter:as,magFilter:as,addressU:pe,addressV:pe});this.cookieRenderTarget=new il({colorBuffer:this.cookieAtlas,depth:false,flipY:true});this.slots=[];this.atlasSplit=[];this.cubeSlotsOffsets=[new Ot(0,0),new Ot(0,1),new Ot(1,0),new Ot(1,1),new Ot(2,0),new Ot(2,1)];this.scissorVec=new Ft;this.allocateShadowAtlas(1);this.allocateCookieAtlas(1);this.allocateUniforms()}destroy(){this.destroyShadowAtlas();this.destroyCookieAtlas()}destroyShadowAtlas(){this.shadowAtlas?.destroy();this.shadowAtlas=null}destroyCookieAtlas(){this.cookieAtlas?.destroy();this.cookieAtlas=null;this.cookieRenderTarget?.destroy();this.cookieRenderTarget=null}allocateShadowAtlas(t,e=Lm){const s=this.shadowAtlas?.texture.format;const i=Hm.get(e).format;if(!this.shadowAtlas||this.shadowAtlas.texture.width!==t||s!==i){this.version++;this.destroyShadowAtlas();this.shadowAtlas=pS.createAtlas(this.device,t,e);this.shadowAtlas.cached=true;const s=4/this.shadowAtlasResolution;this.scissorVec.set(s,s,-2*s,-2*s)}}allocateCookieAtlas(t){if(this.cookieAtlas.width!==t){this.cookieRenderTarget.resize(t,t);this.version++}}allocateUniforms(){this._shadowAtlasTextureId=this.device.scope.resolve("shadowAtlasTexture");this._shadowAtlasParamsId=this.device.scope.resolve("shadowAtlasParams");this._shadowAtlasParams=new Float32Array(2);this._cookieAtlasTextureId=this.device.scope.resolve("cookieAtlasTexture")}updateUniforms(){const t=this.shadowAtlas.renderTargets[0];const e=t.depthBuffer;this._shadowAtlasTextureId.setValue(e);this._shadowAtlasParams[0]=this.shadowAtlasResolution;this._shadowAtlasParams[1]=this.shadowEdgePixels;this._shadowAtlasParamsId.setValue(this._shadowAtlasParams);this._cookieAtlasTextureId.setValue(this.cookieAtlas)}subdivide(t,e){let s=e.atlasSplit;if(!s){const e=Math.ceil(Math.sqrt(t));s=_S;s[0]=e;s.length=1}const i=(t,e)=>t.length===e.length&&t.every(((t,s)=>t===e[s]));if(!i(s,this.atlasSplit)){this.version++;this.slots.length=0;this.atlasSplit.length=0;this.atlasSplit.push(...s);const t=this.atlasSplit[0];if(t>1){const e=1/t;for(let s=0;s<t;s++){for(let i=0;i<t;i++){const n=new Ft(s*e,i*e,e,e);const r=this.atlasSplit[1+s*t+i];if(r>1){for(let t=0;t<r;t++){for(let s=0;s<r;s++){const i=e/r;const a=new Ft(n.x+t*i,n.y+s*i,i,i);this.slots.push(new yS(a))}}}else{this.slots.push(new yS(n))}}}}else{this.slots.push(new yS(new Ft(0,0,1,1)))}this.slots.sort(((t,e)=>e.size-t.size))}}collectLights(t,e){const s=e.cookiesEnabled;const i=e.shadowsEnabled;let n=false;let r=false;const a=mS;a.length=0;const o=t=>{for(let e=0;e<t.length;e++){const o=t[e];if(o.visibleThisFrame){const t=i&&o.castShadows;const e=s&&!!o.cookie;n||=t;r||=e;if(t||e){a.push(o)}}}};if(s||i){o(t)}a.sort(((t,e)=>e.maxScreenSize-t.maxScreenSize));if(n){this.allocateShadowAtlas(this.shadowAtlasResolution,e.shadowType)}if(r){this.allocateCookieAtlas(this.cookieAtlasResolution)}if(n||r){this.subdivide(a.length,e)}return a}setupSlot(t,e){t.atlasViewport.copy(e);const s=t.numShadowFaces;for(let i=0;i<s;i++){if(t.castShadows||t._cookie){gS.copy(e);vS.copy(e);if(t._type===gm){gS.add(this.scissorVec)}if(t._type===mm){const t=gS.z/3;const e=this.cubeSlotsOffsets[i];gS.x+=t*e.x;gS.y+=t*e.y;gS.z=t;gS.w=t;vS.copy(gS)}if(t.castShadows){const e=t.getRenderData(null,i);e.shadowViewport.copy(gS);e.shadowScissor.copy(vS)}}}}assignSlot(t,e,s){t.atlasViewportAllocated=true;const i=this.slots[e];i.lightId=t.id;i.used=true;if(s){t.atlasSlotUpdated=true;t.atlasVersion=this.version;t.atlasSlotIndex=e}}update(t,e){this.shadowAtlasResolution=e.shadowAtlasResolution;this.cookieAtlasResolution=e.cookieAtlasResolution;const s=this.collectLights(t,e);if(s.length>0){const t=this.slots;for(let e=0;e<t.length;e++){t[e].used=false}const e=Math.min(s.length,t.length);for(let i=0;i<e;i++){const e=s[i];if(e.castShadows){e._shadowMap=this.shadowAtlas}const n=t[e.atlasSlotIndex];if(e.atlasVersion===this.version&&e.id===n?.lightId){const s=t[e.atlasSlotIndex];if(s.size===t[i].size&&!s.used){this.assignSlot(e,e.atlasSlotIndex,false)}}}let i=0;for(let n=0;n<e;n++){while(i<t.length&&t[i].used){i++}const e=s[n];if(!e.atlasViewportAllocated){this.assignSlot(e,i,true)}const r=t[e.atlasSlotIndex];this.setupSlot(e,r.rect)}}this.updateUniforms()}}const xS=[];xS[Vp]={src:ge,dst:ge,op:Me};xS[Wp]={src:ge,dst:_e,op:Le};xS[Hp]={src:Te,dst:be,op:Le,alphaSrc:ge};xS[Xp]={src:ge,dst:be,op:Le};xS[Gp]={src:ge,dst:ge,op:Le};xS[$p]={src:Te,dst:ge,op:Le};xS[jp]={src:Se,dst:ve,op:Le};xS[Yp]={src:xe,dst:ge,op:Le};xS[qp]={src:Se,dst:_e,op:Le};xS[Kp]={src:ge,dst:ge,op:Ie};xS[Zp]={src:ge,dst:ge,op:Re};let TS=0;class wS{constructor(){this.meshInstances=[];this.name="Untitled";this.userId="";this.id=TS++;this.variants=new Map;this.defines=new Map;this._definesDirty=false;this.parameters={};this.alphaTest=0;this.alphaToCoverage=false;this._blendState=new Ro;this._depthState=new Uo;this.cull=is;this.stencilFront=null;this.stencilBack=null;this._shaderChunks=null;this._oldChunks={};this._dirtyShader=true;this._shaderVersion=0;this._scene=null;this.dirty=true}get hasShaderChunks(){return this._shaderChunks!=null}get shaderChunks(){if(!this._shaderChunks){this._shaderChunks=new yv}return this._shaderChunks}getShaderChunks(t=cr){const e=this.shaderChunks;return t===cr?e.glsl:e.wgsl}set shaderChunksVersion(t){this.shaderChunks.version=t}get shaderChunksVersion(){return this.shaderChunks.version}set chunks(t){this._oldChunks=t}get chunks(){Object.assign(this._oldChunks,Object.fromEntries(this.shaderChunks.glsl));return this._oldChunks}set depthBias(t){this._depthState.depthBias=t}get depthBias(){return this._depthState.depthBias}set slopeDepthBias(t){this._depthState.depthBiasSlope=t}get slopeDepthBias(){return this._depthState.depthBiasSlope}set redWrite(t){this._blendState.redWrite=t}get redWrite(){return this._blendState.redWrite}set greenWrite(t){this._blendState.greenWrite=t}get greenWrite(){return this._blendState.greenWrite}set blueWrite(t){this._blendState.blueWrite=t}get blueWrite(){return this._blendState.blueWrite}set alphaWrite(t){this._blendState.alphaWrite=t}get alphaWrite(){return this._blendState.alphaWrite}get transparent(){return this._blendState.blend}_updateTransparency(){const t=this.transparent;const e=this.meshInstances;for(let s=0;s<e.length;s++){e[s].transparent=t}}set blendState(t){this._blendState.copy(t);this._updateTransparency()}get blendState(){return this._blendState}set blendType(t){const e=xS[t];this._blendState.setColorBlend(e.op,e.src,e.dst);this._blendState.setAlphaBlend(e.alphaOp??e.op,e.alphaSrc??e.src,e.alphaDst??e.dst);const s=t!==Wp;if(this._blendState.blend!==s){this._blendState.blend=s;this._updateTransparency()}this._updateMeshInstanceKeys()}get blendType(){if(!this.transparent){return Wp}const{colorOp:t,colorSrcFactor:e,colorDstFactor:s,alphaOp:i,alphaSrcFactor:n,alphaDstFactor:r}=this._blendState;for(let a=0;a<xS.length;a++){const o=xS[a];if(o.src===e&&o.dst===s&&o.op===t&&o.src===n&&o.dst===r&&o.op===i){return a}}return Hp}set depthState(t){this._depthState.copy(t)}get depthState(){return this._depthState}set depthTest(t){this._depthState.test=t}get depthTest(){return this._depthState.test}set depthFunc(t){this._depthState.func=t}get depthFunc(){return this._depthState.func}set depthWrite(t){this._depthState.write=t}get depthWrite(){return this._depthState.write}copy(t){this.name=t.name;this.alphaTest=t.alphaTest;this.alphaToCoverage=t.alphaToCoverage;this._blendState.copy(t._blendState);this._depthState.copy(t._depthState);this.cull=t.cull;this.stencilFront=t.stencilFront?.clone();if(t.stencilBack){this.stencilBack=t.stencilFront===t.stencilBack?this.stencilFront:t.stencilBack.clone()}this.clearParameters();for(const e in t.parameters){if(t.parameters.hasOwnProperty(e)){this._setParameterSimple(e,t.parameters[e].data)}}this.defines.clear();t.defines.forEach(((t,e)=>this.defines.set(e,t)));this._shaderChunks=t.hasShaderChunks?new yv:null;this._shaderChunks?.copy(t._shaderChunks);return this}clone(){const t=new this.constructor;return t.copy(this)}_updateMeshInstanceKeys(){const t=this.meshInstances;for(let e=0;e<t.length;e++){t[e].updateKey()}}updateUniforms(t,e){if(this._dirtyShader){this.clearVariants()}}getShaderVariant(t){}update(){if(Object.keys(this._oldChunks).length>0){for(const[t,e]of Object.entries(this._oldChunks)){this.shaderChunks.glsl.set(t,e);delete this._oldChunks[t]}}if(this._definesDirty||this._shaderChunks?.isDirty()){this._definesDirty=false;this._shaderChunks?.resetDirty();this.clearVariants()}this.dirty=true}clearParameters(){this.parameters={}}getParameters(){return this.parameters}clearVariants(){this.variants.clear();const t=this.meshInstances;const e=t.length;for(let s=0;s<e;s++){t[s].clearShaders()}}getParameter(t){return this.parameters[t]}_setParameterSimple(t,e){const s=this.parameters[t];if(s){s.data=e}else{this.parameters[t]={scopeId:null,data:e}}}setParameter(t,e){if(e===undefined&&typeof t==="object"){const s=t;if(s.length){for(let t=0;t<s.length;t++){this.setParameter(s[t])}return}t=s.name;e=s.value}this._setParameterSimple(t,e)}deleteParameter(t){if(this.parameters[t]){delete this.parameters[t]}}setParameters(t,e){const s=this.parameters;if(e===undefined)e=s;for(const i in e){const e=s[i];if(e){if(!e.scopeId){e.scopeId=t.scope.resolve(i)}e.scopeId.setValue(e.data)}}}setDefine(t,e){let s=false;const{defines:i}=this;if(e!==undefined&&e!==false){s=!i.has(t)||i.get(t)!==e;i.set(t,e)}else{s=i.has(t);i.delete(t)}this._definesDirty||=s}getDefine(t){return this.defines.has(t)}destroy(){this.variants.clear();for(let t=0;t<this.meshInstances.length;t++){const e=this.meshInstances[t];e.clearShaders();e._material=null;if(e.mesh){const t=Hv(e.mesh.device);if(this!==t){e.material=t}}}this.meshInstances.length=0}addMeshInstanceRef(t){this.meshInstances.push(t)}removeMeshInstanceRef(t){const e=this.meshInstances;const s=e.indexOf(t);if(s!==-1){e.splice(s,1)}}}class bS{constructor(){this.cache=new Map}destroy(){this.clear();this.cache=null}clear(){this.cache.forEach((t=>{t.forEach((t=>{t.destroy()}))}));this.cache.clear()}getKey(t){const e=t._type===mm;const s=t._shadowType;const i=t._shadowResolution;return`${e}-${s}-${i}`}get(t,e){const s=this.getKey(e);const i=this.cache.get(s);if(i&&i.length){return i.pop()}const n=pS.create(t,e);n.cached=true;return n}add(t,e){const s=this.getKey(t);const i=this.cache.get(s);if(i){i.push(e)}else{this.cache.set(s,[e])}}}class ES extends Yc{constructor(t,e,s,i,n){super(t);this.requiresCubemaps=false;this.shadowRenderer=e;this.light=s;this.face=i;this.applyVsm=n;this.shadowCamera=e.prepareFace(s,null,i);e.setupRenderPass(this,this.shadowCamera,true)}execute(){this.shadowRenderer.renderFace(this.light,null,this.face,false)}after(){if(this.applyVsm){this.shadowRenderer.renderVsm(this.light,this.shadowCamera)}}}class AS{constructor(t,e){this.shadowLights=[];this.renderer=t;this.shadowRenderer=e;this.device=t.device}cull(t,e,s=null){const i=this.renderer.scene.clusteredLightingEnabled;t.visibleThisFrame=true;if(!i){if(!t._shadowMap){t._shadowMap=pS.create(this.device,t)}}const n=t._type;const r=n===gm?1:6;for(let a=0;a<r;a++){const r=t.getRenderData(null,a);const o=r.shadowCamera;o.nearClip=t.attenuationEnd/1e3;o.farClip=t.attenuationEnd;const l=o._node;const h=t._node;l.setPosition(h.getPosition());if(n===gm){o.fov=t._outerConeAngle*2;l.setRotation(h.getRotation());l.rotateLocal(-90,0,0)}else if(n===mm){if(i){const e=this.shadowRenderer.lightTextureAtlas.shadowAtlasResolution*t.atlasViewport.z/3;const s=2/e;const i=s*this.shadowRenderer.lightTextureAtlas.shadowEdgePixels;o.fov=Math.atan(1+i)*wt.RAD_TO_DEG*2}else{o.fov=90}}this.renderer.updateCameraFrustum(o);this.shadowRenderer.cullShadowCasters(e,t,r.visibleCasters,o,s)}}prepareLights(t,e){let s;for(let i=0;i<e.length;i++){const n=e[i];if(this.shadowRenderer.needsShadowRendering(n)&&n.atlasViewportAllocated){t.push(n);for(let t=0;t<n.numShadowFaces;t++){s=this.shadowRenderer.prepareFace(n,null,t)}}}return s}buildNonClusteredRenderPasses(t,e){for(let s=0;s<e.length;s++){const i=e[s];if(this.shadowRenderer.needsShadowRendering(i)){const e=i._type===gm;const s=i.numShadowFaces;for(let n=0;n<s;n++){const s=new ES(this.device,this.shadowRenderer,i,n,e);t.addRenderPass(s)}}}}}class CS extends Yc{constructor(t,e,s,i,n){super(t);this.shadowRenderer=e;this.light=s;this.camera=i;this.allCascadesRendering=n}execute(){const{light:t,camera:e,shadowRenderer:s,allCascadesRendering:i}=this;const n=t.numShadowFaces;const r=t.shadowUpdateOverrides;for(let a=0;a<n;a++){if(r?.[a]!==lg){s.renderFace(t,e,a,!i)}if(r?.[a]===hg){r[a]=lg}}}after(){this.shadowRenderer.renderVsm(this.light,this.camera)}}const PS=new jt;const LS=new It;const DS=new Vt;const MS=[new It,new It,new It,new It,new It,new It,new It,new It];const IS={min:0,max:0};function RS(t,e,s){MS[0].x=MS[1].x=MS[2].x=MS[3].x=e.x;MS[1].y=MS[3].y=MS[7].y=MS[5].y=e.y;MS[2].z=MS[3].z=MS[6].z=MS[7].z=e.z;MS[4].x=MS[5].x=MS[6].x=MS[7].x=s.x;MS[0].y=MS[2].y=MS[4].y=MS[6].y=s.y;MS[0].z=MS[1].z=MS[4].z=MS[5].z=s.z;let i=9999999999;let n=-9999999999;for(let e=0;e<8;++e){t.transformPoint(MS[e],MS[e]);const s=MS[e].z;if(s<i)i=s;if(s>n)n=s}IS.min=i;IS.max=n;return IS}class OS{constructor(t,e){this.renderer=t;this.shadowRenderer=e;this.device=t.device}cull(t,e,s,i=null){t.visibleThisFrame=true;if(!t._shadowMap){t._shadowMap=pS.create(this.device,t)}const n=s._nearClip;this.generateSplitDistances(t,n,Math.min(s._farClip,t.shadowDistance));const r=t.shadowUpdateOverrides;for(let a=0;a<t.numCascades;a++){if(r?.[a]===lg){break}const o=t.getRenderData(s,a);const l=o.shadowCamera;l.renderTarget=t._shadowMap.renderTargets[0];o.shadowViewport.copy(t.cascades[a]);o.shadowScissor.copy(t.cascades[a]);const h=l._node;const c=t._node;h.setPosition(c.getPosition());h.setRotation(c.getRotation());h.rotateLocal(-90,0,0);const d=a===0?n:t._shadowCascadeDistances[a-1];const u=t._shadowCascadeDistances[a];const f=s.getFrustumCorners(d,u);LS.set(0,0,0);const p=s.node.getWorldTransform();for(let t=0;t<8;t++){p.transformPoint(f[t],f[t]);LS.add(f[t])}LS.mulScalar(1/8);let m=0;for(let t=0;t<8;t++){const e=f[t].sub(LS).length();if(e>m){m=e}}const _=h.right;const g=h.up;const v=h.forward;const y=.25*t._shadowResolution/m;const S=Math.ceil(LS.dot(g)*y)/y;const x=Math.ceil(LS.dot(_)*y)/y;const T=g.mulScalar(S);const w=_.mulScalar(x);const b=LS.dot(v);const E=v.mulScalar(b);LS.add2(T,w).add(E);h.setPosition(LS);h.translateLocal(0,0,1e6);l.nearClip=.01;l.farClip=2e6;l.orthoHeight=m;this.renderer.updateCameraFrustum(l);this.shadowRenderer.cullShadowCasters(e,t,o.visibleCasters,l,i);const A=1<<a;const C=o.visibleCasters;const P=C.length;let L=0;for(let t=0;t<P;t++){const e=C[t];if(e.shadowCascadeMask&A){C[L++]=e;if(L===1){PS.copy(e.aabb)}else{PS.add(e.aabb)}}}if(P!==L){C.length=L}DS.copy(h.getWorldTransform()).invert();const D=RS(DS,PS.getMin(),PS.getMax());h.translateLocal(0,0,D.max+.1);l.farClip=D.max-D.min+.2;o.projectionCompensation=m}}generateSplitDistances(t,e,s){t._shadowCascadeDistances.fill(s);for(let i=1;i<t.numCascades;i++){const n=i/t.numCascades;const r=e+(s-e)*n;const a=e*(s/e)**n;const o=wt.lerp(r,a,t.cascadeDistribution);t._shadowCascadeDistances[i-1]=o}}getLightRenderPass(t,e){let s=null;if(this.shadowRenderer.needsShadowRendering(t)){const i=t.numShadowFaces;const n=t.shadowUpdateOverrides;let r=true;let a;for(let s=0;s<i;s++){if(n?.[s]===lg){r=false}a=this.shadowRenderer.prepareFace(t,e,s)}s=new CS(this.device,this.shadowRenderer,t,e,r);this.shadowRenderer.setupRenderPass(s,a,r)}return s}}const FS=new Set;const NS=new Vt;const kS=new Vt;const BS=new Float32Array(2);const US=new Ft(1,1,0,0);const zS=new Vt;function VS(t,e){return Math.exp(-(t*t)/(2*e*e))}function GS(t){const e=(t-1)/(2*3);const s=(t-1)*.5;const i=new Array(t);let n=0;for(let r=0;r<t;++r){i[r]=VS(r-s,e);n+=i[r]}for(let e=0;e<t;++e){i[e]/=n}return i}class HS{constructor(t,e){this.shadowPassCache=[];this.device=t.device;this.renderer=t;this.lightTextureAtlas=e;const s=this.device.scope;this.sourceId=s.resolve("source");this.pixelOffsetId=s.resolve("pixelOffset");this.weightId=s.resolve("weight[0]");this.blurVsmShader=[{},{}];this.blurVsmWeights={};this.shadowMapLightRadiusId=s.resolve("light_radius");this.viewUniformFormat=null;this.viewBindGroupFormat=null;this.blendStateWrite=new Ro;this.blendStateNoWrite=new Ro;this.blendStateNoWrite.setColorWrite(false,false,false,false)}static createShadowCamera(t,e,s){const i=Gy.create("ShadowCamera",e,s);const n=Hm.get(t);const r=n?.vsm??false;const a=n?.pcf??false;if(r){i.clearColor=new bt(0,0,0,0)}else{i.clearColor=new bt(1,1,1,1)}i.clearDepthBuffer=true;i.clearStencilBuffer=false;i.clearColorBuffer=!a;return i}_cullShadowCastersInternal(t,e,s){const i=t.length;for(let n=0;n<i;n++){const i=t[n];if(i.castShadow){if(!i.cull||i._isVisible(s)){i.visibleThisFrame=true;e.push(i)}}}}cullShadowCasters(t,e,s,i,n){this.renderer.scene?.fire(av,i);s.length=0;if(n){this._cullShadowCastersInternal(n,s,i)}else{const n=t.layerList;const r=n.length;for(let t=0;t<r;t++){const r=n[t];if(r._lightsSet.has(e)){if(!FS.has(r)){FS.add(r);this._cullShadowCastersInternal(r.shadowCasters,s,i)}}}FS.clear()}s.sort(this.sortCompareShader);this.renderer.scene?.fire(ov,i)}sortCompareShader(t,e){const s=t._sortKeyShadow;const i=e._sortKeyShadow;if(s===i){return e.mesh.id-t.mesh.id}return i-s}setupRenderState(t,e){const s=this.renderer.scene.clusteredLightingEnabled;const i=s?e._isPcf:e._isPcf&&e._type!==mm;t.setBlendState(i?this.blendStateNoWrite:this.blendStateWrite);t.setDepthState(e.shadowDepthState);t.setStencilState(null,null)}dispatchUniforms(t,e,s,i){const n=e._node;if(t._type!==pm){this.renderer.dispatchViewPos(n.getPosition());this.shadowMapLightRadiusId.setValue(t.attenuationEnd)}NS.setTRS(n.getPosition(),n.getRotation(),It.ONE).invert();kS.mul2(e.projectionMatrix,NS);const r=s.shadowViewport;e.rect=r;e.scissorRect=s.shadowScissor;zS.setViewport(r.x,r.y,r.z,r.w);s.shadowMatrix.mul2(zS,kS);if(t._type===pm){t._shadowMatrixPalette.set(s.shadowMatrix.data,i*16)}}getShadowPass(t){const e=t._type;const s=t._shadowType;let i=this.shadowPassCache[e]?.[s];if(!i){const t=`ShadowPass_${e}_${s}`;i=_v.get(this.device).allocate(t,{isShadow:true,lightType:e,shadowType:s});if(!this.shadowPassCache[e]){this.shadowPassCache[e]=[]}this.shadowPassCache[e][s]=i}return i.index}submitCasters(t,e,s){const i=this.device;const n=this.renderer;const r=n.scene;const a=1<<_g;const o=this.getShadowPass(e);const l=s.shaderParams;const h=s.renderTarget.flipY?-1:1;const c=t.length;for(let e=0;e<c;e++){const c=t[e];const d=c.mesh;const u=c.instancingData;if(u&&u.count<=0){continue}c.ensureMaterial(i);const f=c.material;n.setBaseConstants(i,f);n.setSkinning(i,c);if(f.dirty){f.updateUniforms(i,r);f.dirty=false}n.setupCullMode(true,h,c);f.setParameters(i);c.setParameters(i,a);const p=c.getShaderInstance(o,0,r,l,this.viewUniformFormat,this.viewBindGroupFormat);const m=p.shader;if(m.failed)continue;c._sortKeyShadow=m.id;i.setShader(m);n.setVertexBuffers(i,d);n.setMorphing(i,c.morphInstance);if(u){i.setVertexBuffer(u.vertexBuffer)}n.setMeshInstanceMatrices(c);n.setupMeshUniformBuffers(p);const _=c.renderStyle;const g=c.indirectData?.get(s);i.draw(d.primitive[_],d.indexBuffer[_],u?.count,g);n._shadowDrawCalls++;if(u){n._instancedDrawCalls++}}}needsShadowRendering(t){const e=t.enabled&&t.castShadows&&t.shadowUpdateMode!==lg&&t.visibleThisFrame;if(t.shadowUpdateMode===hg){t.shadowUpdateMode=lg}if(e){this.renderer._shadowMapUpdates+=t.numShadowFaces}return e}getLightRenderData(t,e,s){return t.getRenderData(t._type===pm?e:null,s)}setupRenderPass(t,e,s){const i=e.renderTarget;t.init(i);t.depthStencilOps.clearDepthValue=1;t.depthStencilOps.clearDepth=s;if(i.depthBuffer){t.depthStencilOps.storeDepth=true}else{t.colorOps.clearValue.copy(e.clearColor);t.colorOps.clear=s;t.depthStencilOps.storeDepth=false}t.requiresCubemaps=false}prepareFace(t,e,s){const i=t._type;const n=this.getLightRenderData(t,e,s);const r=n.shadowCamera;const a=i===pm?0:s;r.renderTarget=t._shadowMap.renderTargets[a];return r}renderFace(t,e,s,i,n=true){const r=this.device;const a=this.getLightRenderData(t,e,s);const o=a.shadowCamera;this.dispatchUniforms(t,o,a,s);const l=o.renderTarget;const h=this.renderer;h.setCameraUniforms(o,l);if(r.supportsUniformBuffers){h.setupViewUniformBuffers(a.viewBindGroups,this.viewUniformFormat,this.viewBindGroupFormat,null)}if(n){h.setupViewport(o,l);if(i){h.clear(o)}}else{h.clearView(o,l,true,false)}this.setupRenderState(r,t);this.submitCasters(a.visibleCasters,t,o)}render(t,e,s=true){if(this.needsShadowRendering(t)){const i=t.numShadowFaces;for(let n=0;n<i;n++){this.prepareFace(t,e,n);this.renderFace(t,e,n,true,s)}this.renderVsm(t,e)}}renderVsm(t,e){if(t._isVsm&&t._vsmBlurSize>1){const s=this.renderer.scene.clusteredLightingEnabled;if(!s||t._type===pm){this.applyVsmBlur(t,e)}}}getVsmBlurShader(t,e){const s=this.blurVsmShader;let i=s[t][e];if(!i){this.blurVsmWeights[e]=GS(e);const n=new Map;n.set("{SAMPLES}",e);if(t===1)n.set("GAUSS","");i=Tv.createShader(this.device,{uniqueName:`blurVsm${t}${e}`,attributes:{vertex_position:Ki},vertexChunk:"fullscreenQuadVS",fragmentChunk:"blurVSMPS",fragmentDefines:n});s[t][e]=i}return i}applyVsmBlur(t,e){const s=this.device;s.setBlendState(Ro.NOBLEND);const i=t.getRenderData(t._type===pm?e:null,0);const n=i.shadowCamera;const r=n.renderTarget;const a=this.renderer.shadowMapCache.get(s,t);const o=a.renderTargets[0];const l=t.vsmBlurMode;const h=t._vsmBlurSize;const c=this.getVsmBlurShader(l,h);US.z=t._shadowResolution-2;US.w=US.z;this.sourceId.setValue(r.colorBuffer);BS[0]=1/t._shadowResolution;BS[1]=0;this.pixelOffsetId.setValue(BS);if(l===Km)this.weightId.setValue(this.blurVsmWeights[h]);Iv(s,o,c,null,US);this.sourceId.setValue(o.colorBuffer);BS[1]=BS[0];BS[0]=0;this.pixelOffsetId.setValue(BS);Iv(s,r,c,null,US);this.renderer.shadowMapCache.add(t,a)}initViewBindGroupFormat(){if(this.device.supportsUniformBuffers&&!this.viewUniformFormat){this.viewUniformFormat=new zl(this.device,[new Ul("matrix_viewProjection",Or)]);this.viewBindGroupFormat=new no(this.device,[new to(Ga,wa|ba)])}}frameUpdate(){this.initViewBindGroupFormat()}}const WS=[];class XS{constructor(t){this._empty=null;this._allocated=[];this._clusters=new Map;this.device=t}destroy(){if(this._empty){this._empty.destroy();this._empty=null}this._allocated.forEach((t=>{t.destroy()}));this._allocated.length=0}get count(){return this._allocated.length}get empty(){if(!this._empty){const t=new iS(this.device);t.name="ClusterEmpty";t.update([]);this._empty=t}return this._empty}assign(t){const e=this.empty;WS.push(...this._allocated);this._allocated.length=0;this._clusters.clear();const s=t.length;for(let i=0;i<s;i++){const s=t[i];const n=s.renderActions;if(n){const t=n.length;for(let s=0;s<t;s++){const t=n[s];t.lightClusters=null;const i=t.layer;if(i.hasClusteredLights&&i.meshInstances.length){const e=i.getLightIdHash();const s=this._clusters.get(e);let n=s?.lightClusters;if(!n){n=WS.pop()??new iS(this.device);this._allocated.push(n);this._clusters.set(e,t)}t.lightClusters=n}if(!t.lightClusters){t.lightClusters=e}}}}WS.forEach((t=>t.destroy()));WS.length=0}update(t,e){this.assign(t);this._clusters.forEach((t=>{const s=t.layer;const i=t.lightClusters;i.update(s.clusteredLightsSet,e)}))}}const qS=new Ft;const $S=[];class jS extends Yc{constructor(t,e){super(t),this._quadRenderer2D=null,this._quadRendererCube=null,this._filteredLights=[],this._forceCopy=false,this._evtDeviceRestored=null;this._cubeSlotsOffsets=e;this.requiresCubemaps=false;this.blitTextureId=t.scope.resolve("blitTexture");this.invViewProjId=t.scope.resolve("invViewProj");this._evtDeviceRestored=t.on("devicerestored",this.onDeviceRestored,this)}destroy(){this._quadRenderer2D?.destroy();this._quadRenderer2D=null;this._quadRendererCube?.destroy();this._quadRendererCube=null;this._evtDeviceRestored?.off();this._evtDeviceRestored=null}static create(t,e){const s=new jS(t.device,e);s.init(t);s.colorOps.clear=false;s.depthStencilOps.clearDepth=false;return s}onDeviceRestored(){this._forceCopy=true}update(t){const e=this._filteredLights;this.filter(t,e);this.executeEnabled=e.length>0}filter(t,e){for(let s=0;s<t.length;s++){const i=t[s];if(i._type===pm){continue}if(!i.atlasViewportAllocated){continue}if(!i.atlasSlotUpdated&&!this._forceCopy){continue}if(i.enabled&&i.cookie&&i.visibleThisFrame){e.push(i)}}this._forceCopy=false}initInvViewProjMatrices(){if(!$S.length){for(let t=0;t<6;t++){const e=Gy.create(null,mm,t);const s=e.projectionMatrix;const i=e.node.getLocalTransform().clone().invert();$S[t]=(new Vt).mul2(s,i).invert()}}}get quadRenderer2D(){if(!this._quadRenderer2D){const t=Tv.createShader(this.device,{uniqueName:"cookieRenderer2d",attributes:{vertex_position:Ki},vertexChunk:"cookieBlitVS",fragmentChunk:"cookieBlit2DPS"});this._quadRenderer2D=new Lv(t)}return this._quadRenderer2D}get quadRendererCube(){if(!this._quadRendererCube){const t=Tv.createShader(this.device,{uniqueName:"cookieRendererCube",attributes:{vertex_position:Ki},vertexChunk:"cookieBlitVS",fragmentChunk:"cookieBlitCubePS"});this._quadRendererCube=new Lv(t)}return this._quadRendererCube}execute(){const t=this.device;t.setBlendState(Ro.NOBLEND);t.setCullMode(ss);t.setDepthState(Uo.NODEPTH);t.setStencilState();const e=this.renderTarget.colorBuffer.width;const s=this._cubeSlotsOffsets;const i=this._filteredLights;for(let t=0;t<i.length;t++){const n=i[t];const r=n.numShadowFaces;const a=r>1?this.quadRendererCube:this.quadRenderer2D;if(r>1){this.initInvViewProjMatrices()}this.blitTextureId.setValue(n.cookie);for(let t=0;t<r;t++){qS.copy(n.atlasViewport);if(r>1){const e=qS.z/3;const i=s[t];qS.x+=e*i.x;qS.y+=e*i.y;qS.z=e;qS.w=e;this.invViewProjId.setValue($S[t].data)}qS.mulScalar(e);a.render(qS)}}i.length=0}}class YS extends Yc{constructor(t,e,s){super(t);this.requiresCubemaps=false;this.shadowRenderer=e;this.shadowRendererLocal=s}update(t){const e=this.shadowRendererLocal.shadowLights;const s=this.shadowRendererLocal.prepareLights(e,t);const i=e.length;this.enabled=i>0;if(i){this.shadowRenderer.setupRenderPass(this,s,false)}}execute(){const t=this.shadowRendererLocal.shadowLights;const e=t.length;for(let s=0;s<e;s++){const e=t[s];for(let t=0;t<e.numShadowFaces;t++){this.shadowRenderer.renderFace(e,null,t,true)}}t.length=0}}class KS extends Yc{constructor(t,e,s,i,n){super(t);this.renderer=e;this.frameGraph=null;this.cookiesRenderPass=jS.create(n.cookieRenderTarget,n.cubeSlotsOffsets);this.beforePasses.push(this.cookiesRenderPass);this.shadowRenderPass=new YS(t,s,i);this.beforePasses.push(this.shadowRenderPass)}update(t,e,s,i,n){this.frameGraph=t;this.cookiesRenderPass.enabled=s;if(s){this.cookiesRenderPass.update(i)}this.shadowRenderPass.enabled=e;if(e){this.shadowRenderPass.update(n)}}destroy(){this.cookiesRenderPass.destroy();this.cookiesRenderPass=null}execute(){const{renderer:t}=this;const{scene:e}=t;t.worldClustersAllocator.update(this.frameGraph.renderPasses,e.lighting)}}let ZS=0;const QS=new Vt;const JS=new Vt;const tx=new Vt;const ex=new Rt;const sx=new Zt;const ix=(new Vt).setScale(1,-1,1);const nx=new Set;const rx=new Set;const ax=new mo;const ox=(new Vt).set([1,0,0,0,0,1,0,0,0,0,.5,0,0,0,.5,1]);const lx=[new Ot(.5,.333333),new Ot(.25,.666667),new Ot(.75,.111111),new Ot(.125,.444444),new Ot(.625,.777778),new Ot(.375,.222222),new Ot(.875,.555556),new Ot(.0625,.888889),new Ot(.5625,.037037),new Ot(.3125,.37037),new Ot(.8125,.703704),new Ot(.1875,.148148),new Ot(.6875,.481481),new Ot(.4375,.814815),new Ot(.9375,.259259),new Ot(.03125,.592593)];const hx=new Vt;const cx=new Vt;const dx=new Vt;const ux=new Vt;const fx=new Vt;const px=new Vt;const mx=new Set;const _x=[];const gx=[];class vx{constructor(t){this.clustersDebugRendered=false;this.processingMeshInstances=new Set;this.lights=[];this.localLights=[];this.cameraDirShadowLights=new Map;this.dirLightShadows=new Map;this.blueNoise=new lS(123);this.device=t;this.scene=null;this.worldClustersAllocator=new XS(t);this.lightTextureAtlas=new SS(t);this.shadowMapCache=new bS;this.shadowRenderer=new HS(this,this.lightTextureAtlas);this._shadowRendererLocal=new AS(this,this.shadowRenderer);this._shadowRendererDirectional=new OS(this,this.shadowRenderer);this._renderPassUpdateClustered=new KS(this.device,this,this.shadowRenderer,this._shadowRendererLocal,this.lightTextureAtlas);this.viewUniformFormat=null;this.viewBindGroupFormat=null;this._skinTime=0;this._morphTime=0;this._cullTime=0;this._shadowMapTime=0;this._lightClustersTime=0;this._layerCompositionUpdateTime=0;this._shadowDrawCalls=0;this._skinDrawCalls=0;this._instancedDrawCalls=0;this._shadowMapUpdates=0;this._numDrawCallsCulled=0;this._camerasRendered=0;this._lightClusters=0;const e=t.scope;this.boneTextureId=e.resolve("texture_poseMap");this.modelMatrixId=e.resolve("matrix_model");this.normalMatrixId=e.resolve("matrix_normal");this.viewInvId=e.resolve("matrix_viewInverse");this.viewPos=new Float32Array(3);this.viewPosId=e.resolve("view_position");this.projId=e.resolve("matrix_projection");this.projSkyboxId=e.resolve("matrix_projectionSkybox");this.viewId=e.resolve("matrix_view");this.viewId3=e.resolve("matrix_view3");this.viewProjId=e.resolve("matrix_viewProjection");this.flipYId=e.resolve("projectionFlipY");this.tbnBasis=e.resolve("tbnBasis");this.nearClipId=e.resolve("camera_near");this.farClipId=e.resolve("camera_far");this.cameraParams=new Float32Array(4);this.cameraParamsId=e.resolve("camera_params");this.viewIndexId=e.resolve("view_index");this.viewIndexId.setValue(0);this.blueNoiseJitterVersion=0;this.blueNoiseJitterVec=new Ft;this.blueNoiseJitterData=new Float32Array(4);this.blueNoiseJitterId=e.resolve("blueNoiseJitter");this.blueNoiseTextureId=e.resolve("blueNoiseTex32");this.alphaTestId=e.resolve("alpha_ref");this.opacityMapId=e.resolve("texture_opacityMap");this.exposureId=e.resolve("exposure");this.twoSidedLightingNegScaleFactorId=e.resolve("twoSidedLightingNegScaleFactor");this.twoSidedLightingNegScaleFactorId.setValue(0);this.morphPositionTex=e.resolve("morphPositionTex");this.morphNormalTex=e.resolve("morphNormalTex");this.morphTexParams=e.resolve("morph_tex_params");this.lightCube=new cS;this.constantLightCube=e.resolve("lightCube[0]")}destroy(){this.shadowRenderer=null;this._shadowRendererLocal=null;this._shadowRendererDirectional=null;this.shadowMapCache.destroy();this.shadowMapCache=null;this._renderPassUpdateClustered.destroy();this._renderPassUpdateClustered=null;this.lightTextureAtlas.destroy();this.lightTextureAtlas=null}setupViewport(t,e){const s=this.device;const i=e?e.width:s.width;const n=e?e.height:s.height;const r=t.rect;let a=Math.floor(r.x*i);let o=Math.floor(r.y*n);let l=Math.floor(r.z*i);let h=Math.floor(r.w*n);s.setViewport(a,o,l,h);if(t._scissorRectClear){const e=t.scissorRect;a=Math.floor(e.x*i);o=Math.floor(e.y*n);l=Math.floor(e.z*i);h=Math.floor(e.w*n)}s.setScissor(a,o,l,h)}setCameraUniforms(t,e){const s=e?.flipY;let i=null;if(t.xr&&t.xr.session){const e=t._node?.parent?.getWorldTransform()||null;const s=t.xr.views;i=s.list;for(let s=0;s<i.length;s++){const n=i[s];n.updateTransforms(e);t.frustum.setFromMat4(n.projViewOffMat)}}else{let i=t.projectionMatrix;if(t.calculateProjection){t.calculateProjection(i,Fg)}let n=t.getProjectionMatrixSkybox();if(s){i=hx.mul2(ix,i);n=cx.mul2(ix,n)}if(this.device.isWebGPU){i=dx.mul2(ox,i);n=ux.mul2(ox,n)}const{jitter:r}=t;let a=0;let o=0;if(r>0){const t=e?e.width:this.device.width;const s=e?e.height:this.device.height;const l=lx[this.device.renderVersion%lx.length];a=r*(l.x*2-1)/t;o=r*(l.y*2-1)/s;i=fx.copy(i);i.data[8]=a;i.data[9]=o;n=px.copy(n);n.data[8]=a;n.data[9]=o;if(this.blueNoiseJitterVersion!==this.device.renderVersion){this.blueNoiseJitterVersion=this.device.renderVersion;this.blueNoise.vec4(this.blueNoiseJitterVec)}}const l=r>0?this.blueNoiseJitterVec:Ft.ZERO;this.blueNoiseJitterData[0]=l.x;this.blueNoiseJitterData[1]=l.y;this.blueNoiseJitterData[2]=l.z;this.blueNoiseJitterData[3]=l.w;this.blueNoiseJitterId.setValue(this.blueNoiseJitterData);this.projId.setValue(i.data);this.projSkyboxId.setValue(n.data);if(t.calculateTransform){t.calculateTransform(JS,Fg)}else{const e=t._node.getPosition();const s=t._node.getRotation();JS.setTRS(e,s,It.ONE)}this.viewInvId.setValue(JS.data);tx.copy(JS).invert();this.viewId.setValue(tx.data);ex.setFromMat4(tx);this.viewId3.setValue(ex.data);QS.mul2(i,tx);this.viewProjId.setValue(QS.data);t._storeShaderMatrices(QS,a,o,this.device.renderVersion);this.flipYId.setValue(s?-1:1);this.dispatchViewPos(t._node.getPosition());t.frustum.setFromMat4(QS)}this.tbnBasis.setValue(s?-1:1);const n=t._nearClip;const r=t._farClip;this.nearClipId.setValue(n);this.farClipId.setValue(r);this.cameraParams[0]=1/r;this.cameraParams[1]=r;this.cameraParams[2]=n;this.cameraParams[3]=t.projection===h_?1:0;this.cameraParamsId.setValue(this.cameraParams);this.exposureId.setValue(this.scene.physicalUnits?t.getExposure():this.scene.exposure);return i}clear(t,e,s,i){const n=(e??t._clearColorBuffer?$e:0)|(s??t._clearDepthBuffer?je:0)|(i??t._clearStencilBuffer?Ye:0);if(n){const e=this.device;e.clear({color:[t._clearColor.r,t._clearColor.g,t._clearColor.b,t._clearColor.a],depth:t._clearDepth,stencil:t._clearStencil,flags:n})}}setCamera(t,e,s,i=null){this.setCameraUniforms(t,e);this.clearView(t,e,s,false)}clearView(t,e,s,i){const n=this.device;n.setRenderTarget(e);n.updateBegin();if(i){n.setColorWrite(true,true,true,true);n.setDepthWrite(true)}this.setupViewport(t,e);if(s){const e=t._clearOptions;n.clear(e?e:{color:[t._clearColor.r,t._clearColor.g,t._clearColor.b,t._clearColor.a],depth:t._clearDepth,flags:(t._clearColorBuffer?$e:0)|(t._clearDepthBuffer?je:0)|(t._clearStencilBuffer?Ye:0),stencil:t._clearStencil})}}setupCullMode(t,e,s){const i=s.material;let n=ss;if(t){let t=1;if(i.cull===ns||i.cull===is){t=e*s.flipFacesFactor*s.node.worldScaleSign}if(t<0){n=i.cull===ns?is:ns}else{n=i.cull}}this.device.setCullMode(n);if(n===ss&&i.cull===ss){this.twoSidedLightingNegScaleFactorId.setValue(s.node.worldScaleSign)}}updateCameraFrustum(t){if(t.xr&&t.xr.views.list.length){const e=t.xr.views.list[0];QS.mul2(e.projMat,e.viewOffMat);t.frustum.setFromMat4(QS);return}const e=t.projectionMatrix;if(t.calculateProjection){t.calculateProjection(e,Fg)}if(t.calculateTransform){t.calculateTransform(JS,Fg)}else{const e=t._node.getPosition();const s=t._node.getRotation();JS.setTRS(e,s,It.ONE);this.viewInvId.setValue(JS.data)}tx.copy(JS).invert();QS.mul2(e,tx);t.frustum.setFromMat4(QS)}setBaseConstants(t,e){t.setCullMode(e.cull);if(e.opacityMap){this.opacityMapId.setValue(e.opacityMap)}if(e.opacityMap||e.alphaTest>0){this.alphaTestId.setValue(e.alphaTest)}}updateCpuSkinMatrices(t){ZS++;const e=t.length;if(e===0)return;for(let s=0;s<e;s++){const e=t[s].skinInstance;if(e){e.updateMatrices(t[s].node,ZS);e._dirty=true}}}updateGpuSkinMatrices(t){for(const e of t){const t=e.skinInstance;if(t&&t._dirty){t.updateMatrixPalette(e.node,ZS);t._dirty=false}}}updateMorphing(t){for(const e of t){const t=e.morphInstance;if(t&&t._dirty){t.update()}}}updateGSplats(t){for(const e of t){e.gsplatInstance?.update()}}gpuUpdate(t){this.updateGpuSkinMatrices(t);this.updateMorphing(t);this.updateGSplats(t)}setVertexBuffers(t,e){t.setVertexBuffer(e.vertexBuffer)}setMorphing(t,e){if(e){e.prepareRendering(t);t.setVertexBuffer(e.morph.vertexBufferIds);this.morphPositionTex.setValue(e.texturePositions);this.morphNormalTex.setValue(e.textureNormals);this.morphTexParams.setValue(e._textureParams)}}setSkinning(t,e){const s=e.skinInstance;if(s){this._skinDrawCalls++;const t=s.boneTexture;this.boneTextureId.setValue(t)}}dispatchViewPos(t){const e=this.viewPos;e[0]=t.x;e[1]=t.y;e[2]=t.z;this.viewPosId.setValue(e)}initViewBindGroupFormat(t){if(this.device.supportsUniformBuffers&&!this.viewUniformFormat){const e=[new Ul("matrix_view",Or),new Ul("matrix_viewInverse",Or),new Ul("matrix_projection",Or),new Ul("matrix_projectionSkybox",Or),new Ul("matrix_viewProjection",Or),new Ul("matrix_view3",Rr),new Ul("cubeMapRotationMatrix",Rr),new Ul("view_position",br),new Ul("skyboxIntensity",Tr),new Ul("exposure",Tr),new Ul("textureBias",Tr),new Ul("view_index",Tr)];if(t){e.push(...[new Ul("clusterCellsCountByBoundsSize",br),new Ul("clusterTextureSize",br),new Ul("clusterBoundsMin",br),new Ul("clusterBoundsDelta",br),new Ul("clusterCellsDot",br),new Ul("clusterCellsMax",br),new Ul("shadowAtlasParams",wr),new Ul("clusterMaxCells",xr),new Ul("clusterSkip",Tr)])}this.viewUniformFormat=new zl(this.device,e);const s=[new to(Ga,wa|ba)];this.viewBindGroupFormat=new no(this.device,s)}}setupViewUniforms(t,e){this.projId.setValue(t.projMat.data);this.projSkyboxId.setValue(t.projMat.data);this.viewId.setValue(t.viewOffMat.data);this.viewInvId.setValue(t.viewInvOffMat.data);this.viewId3.setValue(t.viewMat3.data);this.viewProjId.setValue(t.projViewOffMat.data);this.viewPosId.setValue(t.positionData);this.viewIndexId.setValue(e)}setupViewUniformBuffers(t,e,s,i){const{device:n}=this;const r=i?.length??1;while(t.length<r){const i=new sc(n,e,false);const r=new _o(n,s,i);t.push(r)}if(i){for(let e=0;e<r;e++){const s=i[e];this.setupViewUniforms(s,e);const n=t[e];n.defaultUniformBuffer.update();n.update()}}else{const e=t[0];e.defaultUniformBuffer.update();e.update()}if(!i){n.setBindGroup(Ba,t[0])}}setupMeshUniformBuffers(t){const e=this.device;if(e.supportsUniformBuffers){const s=t.getBindGroup(e);s.update();e.setBindGroup(Ua,s);const i=t.getUniformBuffer(e);i.update(ax);e.setBindGroup(za,ax.bindGroup,ax.offsets)}}setMeshInstanceMatrices(t,e=false){const s=t.node.worldTransform;this.modelMatrixId.setValue(s.data);if(e){this.normalMatrixId.setValue(t.node.normalMatrix.data)}}cull(t,e,s){const i=s.opaque;i.length=0;const n=s.transparent;n.length=0;const r=t.frustumCulling;const a=e.length;for(let s=0;s<a;s++){const a=e[s];if(a.visible){const e=!r||!a.cull||a._isVisible(t);if(e){a.visibleThisFrame=true;const e=a.transparent?n:i;e.push(a);if(a.skinInstance||a.morphInstance||a.gsplatInstance){this.processingMeshInstances.add(a);if(a.gsplatInstance){a.gsplatInstance.cameras.push(t)}}}}}}collectLights(t){this.lights.length=0;this.localLights.length=0;const e=this.scene._stats;const s=t.layerList.length;for(let e=0;e<s;e++){const s=t.layerList[e];if(!rx.has(s)){rx.add(s);const t=s._lights;for(let e=0;e<t.length;e++){const s=t[e];if(!nx.has(s)){nx.add(s);this.lights.push(s);if(s._type!==pm){this.localLights.push(s)}}}}}e.lights=this.lights.length;nx.clear();rx.clear()}cullLights(t,e){const s=this.scene.clusteredLightingEnabled;const i=this.scene.physicalUnits;for(let n=0;n<e.length;n++){const r=e[n];if(r.enabled){if(r._type!==pm){r.getBoundingSphere(sx);if(t.frustum.containsSphere(sx)){r.visibleThisFrame=true;r.usePhysicalUnits=i;const e=t.getScreenSize(sx);r.maxScreenSize=Math.max(r.maxScreenSize,e)}else{if(!s){if(r.castShadows&&!r.shadowMap){r.visibleThisFrame=true}}}}else{r.usePhysicalUnits=this.scene.physicalUnits}}}}cullShadowmaps(t){const e=this.scene.clusteredLightingEnabled;for(let s=0;s<this.localLights.length;s++){const i=this.localLights[s];if(i._type!==pm){if(e){if(i.atlasSlotUpdated&&i.shadowUpdateMode===lg){i.shadowUpdateMode=hg}}else{if(i.shadowUpdateMode===lg&&i.castShadows){if(!i.getRenderData(null,0).shadowCamera.renderTarget){i.shadowUpdateMode=hg}}}if(i.visibleThisFrame&&i.castShadows&&i.shadowUpdateMode!==lg){this._shadowRendererLocal.cull(i,t)}}}this.cameraDirShadowLights.clear();const s=t.cameras;for(let e=0;e<s.length;e++){const i=s[e];if(i.enabled){const e=i.camera;let s;const n=e.layers;for(let i=0;i<n.length;i++){const r=t.getLayerById(n[i]);if(r){const i=r.splitLights[pm];for(let n=0;n<i.length;n++){const r=i[n];if(r.castShadows&&!mx.has(r)){mx.add(r);s=s??[];s.push(r);this._shadowRendererDirectional.cull(r,t,e)}}}}if(s){this.cameraDirShadowLights.set(e,s)}mx.clear()}}}cullComposition(t){const{scene:e}=this;this.processingMeshInstances.clear();const s=t.cameras.length;this._camerasRendered+=s;for(let i=0;i<s;i++){const s=t.cameras[i];e?.fire(av,s);const n=s.renderTarget;s.frameUpdate(n);this.updateCameraFrustum(s.camera);const r=s.layers;for(let e=0;e<r.length;e++){const i=t.getLayerById(r[e]);if(i&&i.enabled){this.cullLights(s.camera,i._lights);const t=i.getCulledInstances(s.camera);this.cull(s.camera,i.meshInstances,t)}}e?.fire(ov,s)}if(e.clusteredLightingEnabled){this.updateLightTextureAtlas()}this.cullShadowmaps(t);e?.fire(lv)}updateShaders(t,e){const s=t.length;for(let i=0;i<s;i++){const s=t[i].material;if(s){if(!mx.has(s)){mx.add(s);if(s.getShaderVariant!==wS.prototype.getShaderVariant){if(e){if(!s.useLighting||s.emitter&&!s.emitter.lighting){continue}}s.clearVariants()}}}}mx.clear()}updateFrameUniforms(){this.blueNoiseTextureId.setValue(fS(this.device))}beginFrame(t){const e=this.scene;const s=e.updateShaders||this.device._shadersDirty;const i=t.layerList;const n=i.length;for(let t=0;t<n;t++){const e=i[t];const n=e.meshInstances;const r=n.length;for(let t=0;t<r;t++){const e=n[t];e.visibleThisFrame=false;if(s){_x.push(e)}if(e.skinInstance){gx.push(e)}}}if(s){const t=!e.updateShaders||!this.device._shadersDirty;this.updateShaders(_x,t);e.updateShaders=false;this.device._shadersDirty=false;e._shaderVersion++}this.updateFrameUniforms();this.updateCpuSkinMatrices(gx);_x.length=0;gx.length=0;const r=this.lights;const a=r.length;for(let t=0;t<a;t++){r[t].beginFrame()}}updateLightTextureAtlas(){this.lightTextureAtlas.update(this.localLights,this.scene.lighting)}updateLayerComposition(t){const e=t.layerList.length;const s=this.scene;const i=s._shaderVersion;for(let s=0;s<e;s++){const e=t.layerList[s];e._shaderVersion=i}t._update()}frameUpdate(){this.clustersDebugRendered=false;this.initViewBindGroupFormat(this.scene.clusteredLightingEnabled);this.dirLightShadows.clear()}}class yx{constructor(){this.camera=null;this.layer=null;this.transparent=false;this.renderTarget=null;this.lightClusters=null;this.clearColor=false;this.clearDepth=false;this.clearStencil=false;this.triggerPostprocess=false;this.firstCameraUse=false;this.lastCameraUse=false;this.viewBindGroups=[];this.useCameraPasses=false}destroy(){this.viewBindGroups.forEach((t=>{t.defaultUniformBuffer.destroy();t.destroy()}));this.viewBindGroups.length=0}setupClears(t,e){this.clearColor=t?.clearColorBuffer||e.clearColorBuffer;this.clearDepth=t?.clearDepthBuffer||e.clearDepthBuffer;this.clearStencil=t?.clearStencilBuffer||e.clearStencilBuffer}}class Sx extends Yc{constructor(t,e,s,i){super(t),this.renderActions=[],this.noDepthClear=false;this.layerComposition=e;this.scene=s;this.renderer=i}get rendersAnything(){return this.renderActions.length>0}addRenderAction(t){this.renderActions.push(t)}addLayer(t,e,s,i=true){const n=new yx;n.renderTarget=this.renderTarget;n.camera=t;n.layer=e;n.transparent=s;if(i){const s=this.renderActions.length===0;n.setupClears(s?t:undefined,e)}this.addRenderAction(n)}addLayers(t,e,s,i,n,r=true){const{layerList:a,subLayerList:o}=t;let l=i;let h=s;while(h<a.length){const t=a[h];const s=o[h];const i=e.camera.layersSet.has(t.id);if(i){this.addLayer(e,t,s,l);l=false}h++;if(t.id===n&&s===r){break}}return h}updateDirectionalShadows(){const{renderer:t,renderActions:e}=this;for(let s=0;s<e.length;s++){const i=e[s];const n=i.camera;const r=n.camera;const a=this.renderer.cameraDirShadowLights.get(r);if(a){for(let e=0;e<a.length;e++){const s=a[e];if(t.dirLightShadows.get(s)!==r){t.dirLightShadows.set(s,r);const e=t._shadowRendererDirectional.getLightRenderPass(s,r);if(e){this.beforePasses.push(e)}}}}}}updateClears(){const t=this.renderActions[0];if(t){const e=t.camera;const s=e.camera;const i=s.fullSizeClearRect;this.setClearColor(i&&t.clearColor?s.clearColor:undefined);this.setClearDepth(i&&t.clearDepth&&!this.noDepthClear?s.clearDepth:undefined);this.setClearStencil(i&&t.clearStencil?s.clearStencil:undefined)}}frameUpdate(){super.frameUpdate();this.updateDirectionalShadows();this.updateClears()}before(){const{renderActions:t}=this;for(let e=0;e<t.length;e++){const s=t[e];if(s.firstCameraUse){this.scene.fire(sv,s.camera)}}}execute(){const{layerComposition:t,renderActions:e}=this;for(let s=0;s<e.length;s++){const i=e[s];const n=i.layer;if(t.isEnabled(n,i.transparent)){this.renderRenderAction(i,s===0)}}}after(){for(let t=0;t<this.renderActions.length;t++){const e=this.renderActions[t];if(e.lastCameraUse){this.scene.fire(iv,e.camera)}}this.beforePasses.length=0}renderRenderAction(t,e){const{renderer:s,scene:i}=this;const n=s.device;const{layer:r,transparent:a,camera:o}=t;if(o){const l=o.gammaCorrection;const h=o.toneMapping;if(this.gammaCorrection!==undefined)o.gammaCorrection=this.gammaCorrection;if(this.toneMapping!==undefined)o.toneMapping=this.toneMapping;i.fire(nv,o,r,a);const c={lightClusters:t.lightClusters};const d=o.camera.shaderPassInfo?.index??pg;if(!e||!o.camera.fullSizeClearRect){c.clearColor=t.clearColor;c.clearDepth=t.clearDepth;c.clearStencil=t.clearStencil}const u=t.renderTarget??n.backBuffer;s.renderForwardLayer(o.camera,u,r,a,d,t.viewBindGroups,c);n.setBlendState(Ro.NOBLEND);n.setStencilState(null,null);n.setAlphaToCoverage(false);i.fire(rv,o,r,a);if(this.gammaCorrection!==undefined)o.gammaCorrection=l;if(this.toneMapping!==undefined)o.toneMapping=h}}}class xx extends Yc{constructor(t,e,s){super(t);this.renderer=e;this.renderAction=s;this.requiresCubemaps=false}execute(){const t=this.renderAction;const e=t.camera;e.onPostprocessing()}}const Tx=[[],[],[]];const wx=new bt;const bx={drawCalls:[],shaderInstances:[],isNewMaterial:[],lightMaskChanged:[],clear:function(){this.drawCalls.length=0;this.shaderInstances.length=0;this.isNewMaterial.length=0;this.lightMaskChanged.length=0}};function Ex(t){const e=[];for(let s=0;s<t;++s){const i=Math.sqrt(s+.5)/Math.sqrt(t);e.push(i)}return e}function Ax(t){const e=[];for(let s=0;s<t;s++){const i=s/t;const n=Math.sqrt(i*i);e.push(n)}return e}class Cx extends vx{constructor(t){super(t);const e=this.device;this._forwardDrawCalls=0;this._materialSwitches=0;this._depthMapTime=0;this._forwardTime=0;this._sortTime=0;const s=e.scope;this.fogColorId=s.resolve("fog_color");this.fogStartId=s.resolve("fog_start");this.fogEndId=s.resolve("fog_end");this.fogDensityId=s.resolve("fog_density");this.ambientId=s.resolve("light_globalAmbient");this.skyboxIntensityId=s.resolve("skyboxIntensity");this.cubeMapRotationMatrixId=s.resolve("cubeMapRotationMatrix");this.pcssDiskSamplesId=s.resolve("pcssDiskSamples[0]");this.pcssSphereSamplesId=s.resolve("pcssSphereSamples[0]");this.lightColorId=[];this.lightDir=[];this.lightDirId=[];this.lightShadowMapId=[];this.lightShadowMatrixId=[];this.lightShadowParamsId=[];this.lightShadowIntensity=[];this.lightRadiusId=[];this.lightPos=[];this.lightPosId=[];this.lightWidth=[];this.lightWidthId=[];this.lightHeight=[];this.lightHeightId=[];this.lightInAngleId=[];this.lightOutAngleId=[];this.lightCookieId=[];this.lightCookieIntId=[];this.lightCookieMatrixId=[];this.lightCookieOffsetId=[];this.lightShadowSearchAreaId=[];this.lightCameraParamsId=[];this.lightSoftShadowParamsId=[];this.shadowMatrixPaletteId=[];this.shadowCascadeDistancesId=[];this.shadowCascadeCountId=[];this.shadowCascadeBlendId=[];this.screenSizeId=s.resolve("uScreenSize");this._screenSize=new Float32Array(4);this.fogColor=new Float32Array(3);this.ambientColor=new Float32Array(3);this.pcssDiskSamples=Ex(16);this.pcssSphereSamples=Ax(16)}destroy(){super.destroy()}dispatchGlobalLights(t){const e=this.ambientColor;wx.linear(t.ambientLight);e[0]=wx.r;e[1]=wx.g;e[2]=wx.b;if(t.physicalUnits){for(let s=0;s<3;s++){e[s]*=t.ambientLuminance}}this.ambientId.setValue(e);this.skyboxIntensityId.setValue(t.physicalUnits?t.skyboxLuminance:t.skyboxIntensity);this.cubeMapRotationMatrixId.setValue(t._skyboxRotationMat3.data)}_resolveLight(t,e){const s=`light${e}`;this.lightColorId[e]=t.resolve(`${s}_color`);this.lightDir[e]=new Float32Array(3);this.lightDirId[e]=t.resolve(`${s}_direction`);this.lightShadowMapId[e]=t.resolve(`${s}_shadowMap`);this.lightShadowMatrixId[e]=t.resolve(`${s}_shadowMatrix`);this.lightShadowParamsId[e]=t.resolve(`${s}_shadowParams`);this.lightShadowIntensity[e]=t.resolve(`${s}_shadowIntensity`);this.lightShadowSearchAreaId[e]=t.resolve(`${s}_shadowSearchArea`);this.lightRadiusId[e]=t.resolve(`${s}_radius`);this.lightPos[e]=new Float32Array(3);this.lightPosId[e]=t.resolve(`${s}_position`);this.lightWidth[e]=new Float32Array(3);this.lightWidthId[e]=t.resolve(`${s}_halfWidth`);this.lightHeight[e]=new Float32Array(3);this.lightHeightId[e]=t.resolve(`${s}_halfHeight`);this.lightInAngleId[e]=t.resolve(`${s}_innerConeAngle`);this.lightOutAngleId[e]=t.resolve(`${s}_outerConeAngle`);this.lightCookieId[e]=t.resolve(`${s}_cookie`);this.lightCookieIntId[e]=t.resolve(`${s}_cookieIntensity`);this.lightCookieMatrixId[e]=t.resolve(`${s}_cookieMatrix`);this.lightCookieOffsetId[e]=t.resolve(`${s}_cookieOffset`);this.lightCameraParamsId[e]=t.resolve(`${s}_cameraParams`);this.lightSoftShadowParamsId[e]=t.resolve(`${s}_softShadowParams`);this.shadowMatrixPaletteId[e]=t.resolve(`${s}_shadowMatrixPalette[0]`);this.shadowCascadeDistancesId[e]=t.resolve(`${s}_shadowCascadeDistances`);this.shadowCascadeCountId[e]=t.resolve(`${s}_shadowCascadeCount`);this.shadowCascadeBlendId[e]=t.resolve(`${s}_shadowCascadeBlend`)}setLTCDirectionalLight(t,e,s,i,n){this.lightPos[e][0]=i.x-s.x*n;this.lightPos[e][1]=i.y-s.y*n;this.lightPos[e][2]=i.z-s.z*n;this.lightPosId[e].setValue(this.lightPos[e]);const r=t.transformVector(new It(-.5,0,0));this.lightWidth[e][0]=r.x*n;this.lightWidth[e][1]=r.y*n;this.lightWidth[e][2]=r.z*n;this.lightWidthId[e].setValue(this.lightWidth[e]);const a=t.transformVector(new It(0,0,.5));this.lightHeight[e][0]=a.x*n;this.lightHeight[e][1]=a.y*n;this.lightHeight[e][2]=a.z*n;this.lightHeightId[e].setValue(this.lightHeight[e])}dispatchDirectLights(t,e,s){let i=0;const n=this.device.scope;for(let r=0;r<t.length;r++){if(!(t[r].mask&e))continue;const a=t[r];const o=a._node.getWorldTransform();if(!this.lightColorId[i]){this._resolveLight(n,i)}this.lightColorId[i].setValue(a._colorLinear);o.getY(a._direction).mulScalar(-1);a._direction.normalize();this.lightDir[i][0]=a._direction.x;this.lightDir[i][1]=a._direction.y;this.lightDir[i][2]=a._direction.z;this.lightDirId[i].setValue(this.lightDir[i]);if(a.shape!==xm){this.setLTCDirectionalLight(o,i,a._direction,s._node.getPosition(),s.farClip)}if(a.castShadows){const t=a.getRenderData(s,0);const e=a._getUniformBiasValues(t);this.lightShadowMapId[i].setValue(t.shadowBuffer);this.lightShadowMatrixId[i].setValue(t.shadowMatrix.data);this.shadowMatrixPaletteId[i].setValue(a._shadowMatrixPalette);this.shadowCascadeDistancesId[i].setValue(a._shadowCascadeDistances);this.shadowCascadeCountId[i].setValue(a.numCascades);this.shadowCascadeBlendId[i].setValue(1-a.cascadeBlend);this.lightShadowIntensity[i].setValue(a.shadowIntensity);this.lightSoftShadowParamsId[i].setValue(a._softShadowParams);const n=t.shadowCamera.renderTarget;if(n){this.lightShadowSearchAreaId[i].setValue(a.penumbraSize/t.shadowCamera.renderTarget.width*t.projectionCompensation)}const r=a._shadowCameraParams;r.length=4;r[0]=0;r[1]=t.shadowCamera._farClip;r[2]=t.shadowCamera._nearClip;r[3]=1;this.lightCameraParamsId[i].setValue(r);const o=a._shadowRenderParams;o.length=4;o[0]=a._shadowResolution;o[1]=e.normalBias;o[2]=e.bias;o[3]=0;this.lightShadowParamsId[i].setValue(o)}i++}return i}setLTCPositionalLight(t,e){const s=t.transformVector(new It(-.5,0,0));this.lightWidth[e][0]=s.x;this.lightWidth[e][1]=s.y;this.lightWidth[e][2]=s.z;this.lightWidthId[e].setValue(this.lightWidth[e]);const i=t.transformVector(new It(0,0,.5));this.lightHeight[e][0]=i.x;this.lightHeight[e][1]=i.y;this.lightHeight[e][2]=i.z;this.lightHeightId[e].setValue(this.lightHeight[e])}dispatchOmniLight(t,e,s){const i=e._node.getWorldTransform();if(!this.lightColorId[s]){this._resolveLight(t,s)}this.lightRadiusId[s].setValue(e.attenuationEnd);this.lightColorId[s].setValue(e._colorLinear);i.getTranslation(e._position);this.lightPos[s][0]=e._position.x;this.lightPos[s][1]=e._position.y;this.lightPos[s][2]=e._position.z;this.lightPosId[s].setValue(this.lightPos[s]);if(e.shape!==xm){this.setLTCPositionalLight(i,s)}if(e.castShadows){const t=e.getRenderData(null,0);this.lightShadowMapId[s].setValue(t.shadowBuffer);const i=e._getUniformBiasValues(t);const n=e._shadowRenderParams;n.length=4;n[0]=e._shadowResolution;n[1]=i.normalBias;n[2]=i.bias;n[3]=1/e.attenuationEnd;this.lightShadowParamsId[s].setValue(n);this.lightShadowIntensity[s].setValue(e.shadowIntensity);const r=e.penumbraSize/t.shadowCamera.renderTarget.width;this.lightShadowSearchAreaId[s].setValue(r);const a=e._shadowCameraParams;a.length=4;a[0]=0;a[1]=t.shadowCamera._farClip;a[2]=t.shadowCamera._nearClip;a[3]=0;this.lightCameraParamsId[s].setValue(a)}if(e._cookie){this.lightCookieId[s].setValue(e._cookie);this.lightShadowMatrixId[s].setValue(i.data);this.lightCookieIntId[s].setValue(e.cookieIntensity)}}dispatchSpotLight(t,e,s){const i=e._node.getWorldTransform();if(!this.lightColorId[s]){this._resolveLight(t,s)}this.lightInAngleId[s].setValue(e._innerConeAngleCos);this.lightOutAngleId[s].setValue(e._outerConeAngleCos);this.lightRadiusId[s].setValue(e.attenuationEnd);this.lightColorId[s].setValue(e._colorLinear);i.getTranslation(e._position);this.lightPos[s][0]=e._position.x;this.lightPos[s][1]=e._position.y;this.lightPos[s][2]=e._position.z;this.lightPosId[s].setValue(this.lightPos[s]);if(e.shape!==xm){this.setLTCPositionalLight(i,s)}i.getY(e._direction).mulScalar(-1);e._direction.normalize();this.lightDir[s][0]=e._direction.x;this.lightDir[s][1]=e._direction.y;this.lightDir[s][2]=e._direction.z;this.lightDirId[s].setValue(this.lightDir[s]);if(e.castShadows){const t=e.getRenderData(null,0);this.lightShadowMapId[s].setValue(t.shadowBuffer);this.lightShadowMatrixId[s].setValue(t.shadowMatrix.data);const i=e._getUniformBiasValues(t);const n=e._shadowRenderParams;n.length=4;n[0]=e._shadowResolution;n[1]=i.normalBias;n[2]=i.bias;n[3]=1/e.attenuationEnd;this.lightShadowParamsId[s].setValue(n);this.lightShadowIntensity[s].setValue(e.shadowIntensity);const r=e.penumbraSize/t.shadowCamera.renderTarget.width;const a=t.shadowCamera._fov*Math.PI/180;const o=1/Math.tan(a/2);this.lightShadowSearchAreaId[s].setValue(r*o);const l=e._shadowCameraParams;l.length=4;l[0]=0;l[1]=t.shadowCamera._farClip;l[2]=t.shadowCamera._nearClip;l[3]=0;this.lightCameraParamsId[s].setValue(l)}if(e._cookie){if(!e.castShadows){const t=Gy.evalSpotCookieMatrix(e);this.lightShadowMatrixId[s].setValue(t.data)}this.lightCookieId[s].setValue(e._cookie);this.lightCookieIntId[s].setValue(e.cookieIntensity);if(e._cookieTransform){e._cookieTransformUniform[0]=e._cookieTransform.x;e._cookieTransformUniform[1]=e._cookieTransform.y;e._cookieTransformUniform[2]=e._cookieTransform.z;e._cookieTransformUniform[3]=e._cookieTransform.w;this.lightCookieMatrixId[s].setValue(e._cookieTransformUniform);e._cookieOffsetUniform[0]=e._cookieOffset.x;e._cookieOffsetUniform[1]=e._cookieOffset.y;this.lightCookieOffsetId[s].setValue(e._cookieOffsetUniform)}}}dispatchLocalLights(t,e,s){let i=s;const n=this.device.scope;const r=t[mm];const a=r.length;for(let t=0;t<a;t++){const s=r[t];if(!(s.mask&e))continue;this.dispatchOmniLight(n,s,i);i++}const o=t[gm];const l=o.length;for(let t=0;t<l;t++){const s=o[t];if(!(s.mask&e))continue;this.dispatchSpotLight(n,s,i);i++}}renderForwardPrepareMaterials(t,e,s,i,n,r){const a=t.fogParams??this.scene.fog;const o=t.shaderParams;o.fog=a.type;o.srgbRenderTarget=e?.isColorBufferSrgb(0)??false;const l=(t,e,s,i)=>{bx.drawCalls.push(t);bx.shaderInstances.push(e);bx.isNewMaterial.push(s);bx.lightMaskChanged.push(i)};bx.clear();const h=this.device;const c=this.scene;const d=c.clusteredLightingEnabled;const u=n?.getLightHash(d)??0;let f=null,p,m;const _=s.length;for(let t=0;t<_;t++){const e=s[t];const n=e.instancingData;if(n&&n.count<=0){continue}e.ensureMaterial(h);const a=e.material;const d=e._shaderDefs;const _=e.mask;if(a&&a===f&&d!==p){f=null}if(a!==f){this._materialSwitches++;a._scene=c;if(a.dirty){a.updateUniforms(h,c);a.dirty=false}}const g=e.getShaderInstance(r,u,c,o,this.viewUniformFormat,this.viewBindGroupFormat,i);l(e,g,a!==f,!f||_!==m);f=a;p=d;m=_}return bx}renderForwardInternal(t,e,s,i,n,r,a){const o=this.device;const l=this.scene;const h=1<<i;const c=r?-1:1;const d=l.clusteredLightingEnabled;const u=t.xr?.session&&t.xr.views.list.length?t.xr.views.list:null;const f=e.drawCalls.length;for(let i=0;i<f;i++){const r=e.drawCalls[i];const l=e.isNewMaterial[i];const p=e.lightMaskChanged[i];const m=e.shaderInstances[i];const _=r.material;const g=r.mask;if(m.shader.failed)continue;if(l){const e=false;o.setShader(m.shader,e);_.setParameters(o);if(p){const e=this.dispatchDirectLights(s[pm],g,t);if(!d){this.dispatchLocalLights(s,g,e)}}this.alphaTestId.setValue(_.alphaTest);o.setBlendState(_.blendState);o.setDepthState(_.depthState);o.setAlphaToCoverage(_.alphaToCoverage)}this.setupCullMode(t._cullFaces,c,r);const v=r.stencilFront??_.stencilFront;const y=r.stencilBack??_.stencilBack;o.setStencilState(v,y);r.setParameters(o,h);o.scope.resolve("meshInstanceId").setValue(r.id);const S=r.mesh;this.setVertexBuffers(o,S);this.setMorphing(o,r.morphInstance);this.setSkinning(o,r);const x=r.instancingData;if(x){o.setVertexBuffer(x.vertexBuffer)}this.setMeshInstanceMatrices(r,true);this.setupMeshUniformBuffers(m);const T=r.renderStyle;const w=S.indexBuffer[T];n?.(r,i);const b=r.indirectData?.get(t);if(u){for(let t=0;t<u.length;t++){const e=u[t];o.setViewport(e.viewport.x,e.viewport.y,e.viewport.z,e.viewport.w);if(o.supportsUniformBuffers){const e=a[t];o.setBindGroup(Ba,e)}else{this.setupViewUniforms(e,t)}const s=t===0;const i=t===u.length-1;o.draw(S.primitive[T],w,x?.count,b,s,i);this._forwardDrawCalls++;if(r.instancingData){this._instancedDrawCalls++}}}else{o.draw(S.primitive[T],w,x?.count,b);this._forwardDrawCalls++;if(r.instancingData){this._instancedDrawCalls++}}if(i<f-1&&!e.isNewMaterial[i+1]){_.setParameters(o,r.parameters)}}}renderForward(t,e,s,i,n,r,a,o,l){const h=this.renderForwardPrepareMaterials(t,e,s,i,a,n);this.renderForwardInternal(t,h,i,n,r,o,l);bx.clear()}renderForwardLayer(t,e,s,i,n,r,a={}){const{scene:o,device:l}=this;const h=o.clusteredLightingEnabled;this.setupViewport(t,e);let c,d;if(s){s.sortVisible(t,i);const e=s.getCulledInstances(t);c=i?e.transparent:e.opaque;o.immediate.onPreRenderLayer(s,c,i);if(s.requiresLightCube){this.lightCube.update(o.ambientLight,s._lights);this.constantLightCube.setValue(this.lightCube.colors)}d=s.splitLights}else{c=a.meshInstances;d=a.splitLights??Tx}if(h){const t=a.lightClusters??this.worldClustersAllocator.empty;t.activate();if(s){if(!this.clustersDebugRendered&&o.lighting.debugLayer===s.id){this.clustersDebugRendered=true}}}o._activeCamera=t;const u=t.fogParams??this.scene.fog;this.setFogConstants(u);const f=this.setCameraUniforms(t,e);if(l.supportsUniformBuffers){this.setupViewUniformBuffers(r,this.viewUniformFormat,this.viewBindGroupFormat,f)}const p=a.clearColor??false;const m=a.clearDepth??false;const _=a.clearStencil??false;if(p||m||_){this.clear(t,p,m,_)}const g=!!(t._flipFaces^e?.flipY);const v=this._forwardDrawCalls;this.renderForward(t,e,c,d,n,null,s,g,r);if(s){s._forwardDrawCalls+=this._forwardDrawCalls-v}}setFogConstants(t){if(t.type!==Jp){wx.linear(t.color);const e=this.fogColor;e[0]=wx.r;e[1]=wx.g;e[2]=wx.b;this.fogColorId.setValue(e);if(t.type===tm){this.fogStartId.setValue(t.start);this.fogEndId.setValue(t.end)}else{this.fogDensityId.setValue(t.density)}}}setSceneConstants(){const t=this.scene;this.dispatchGlobalLights(t);const e=this.device;this._screenSize[0]=e.width;this._screenSize[1]=e.height;this._screenSize[2]=1/e.width;this._screenSize[3]=1/e.height;this.screenSizeId.setValue(this._screenSize);this.pcssDiskSamplesId.setValue(this.pcssDiskSamples);this.pcssSphereSamplesId.setValue(this.pcssSphereSamples)}buildFrameGraph(t,e){const s=this.scene;t.reset();if(s.clusteredLightingEnabled){const{shadowsEnabled:e,cookiesEnabled:i}=s.lighting;this._renderPassUpdateClustered.update(t,e,i,this.lights,this.localLights);t.addRenderPass(this._renderPassUpdateClustered)}else{this._shadowRendererLocal.buildNonClusteredRenderPasses(t,this.localLights)}let i=0;let n=true;let r=null;const a=e._renderActions;for(let s=i;s<a.length;s++){const o=a[s];const{layer:l,camera:h}=o;if(o.useCameraPasses){h.camera.renderPasses.forEach((e=>{t.addRenderPass(e)}))}else{const c=l.id===cm;const d=c&&(h.renderSceneColorMap||h.renderSceneDepthMap);if(n){n=false;i=s;r=o.renderTarget}const u=a[s+1];const f=u?!u.useCameraPasses&&u.layer.id===cm:false;const p=f&&(h.renderSceneColorMap||h.renderSceneDepthMap);const m=u?u.firstCameraUse&&this.cameraDirShadowLights.has(u.camera.camera):false;if(!u||u.renderTarget!==r||m||p||d){const a=c&&i===s;if(!a){this.addMainRenderPass(t,e,r,i,s)}if(c){if(h.renderSceneColorMap){const e=h.camera.renderPassColorGrab;e.source=h.renderTarget;t.addRenderPass(e)}if(h.renderSceneDepthMap){t.addRenderPass(h.camera.renderPassDepthGrab)}}if(o.triggerPostprocess&&h?.onPostprocessing){const e=new xx(this.device,this,o);t.addRenderPass(e)}n=true}}}}addMainRenderPass(t,e,s,i,n){const r=new Sx(this.device,e,this.scene,this);r.init(s);const a=e._renderActions;for(let t=i;t<=n;t++){r.addRenderAction(a[t])}t.addRenderPass(r)}update(t){this.frameUpdate();this.shadowRenderer.frameUpdate();this.scene._updateSkyMesh();this.updateLayerComposition(t);this.collectLights(t);this.beginFrame(t);this.setSceneConstants();this.cullComposition(t);this.gpuUpdate(this.processingMeshInstances)}}let Px=0;const Lx=[];const Dx=new Set;function Mx(t,e){return t.drawOrder-e.drawOrder}function Ix(t,e){const s=t._sortKeyForward;const i=e._sortKeyForward;if(s===i){return e.mesh.id-t.mesh.id}return i-s}function Rx(t,e){return e._sortKeyDynamic-t._sortKeyDynamic}function Ox(t,e){return t._sortKeyDynamic-e._sortKeyDynamic}const Fx=[null,Mx,Ix,Rx,Ox];class Nx{constructor(){this.opaque=[];this.transparent=[]}}class kx{constructor(t={}){this.meshInstances=[];this.meshInstancesSet=new Set;this.shadowCasters=[];this.shadowCastersSet=new Set;this._visibleInstances=new WeakMap;this._lights=[];this._lightsSet=new Set;this._clusteredLightsSet=new Set;this._splitLights=[[],[],[]];this._splitLightsDirty=true;this.requiresLightCube=false;this.cameras=[];this.camerasSet=new Set;this._dirtyComposition=false;if(t.id!==undefined){this.id=t.id;Px=Math.max(this.id+1,Px)}else{this.id=Px++}this.name=t.name;this._enabled=t.enabled??true;this._refCounter=this._enabled?1:0;this.opaqueSortMode=t.opaqueSortMode??zg;this.transparentSortMode=t.transparentSortMode??Vg;if(t.renderTarget){this.renderTarget=t.renderTarget}this._clearColorBuffer=!!t.clearColorBuffer;this._clearDepthBuffer=!!t.clearDepthBuffer;this._clearStencilBuffer=!!t.clearStencilBuffer;this.onEnable=t.onEnable;this.onDisable=t.onDisable;if(this._enabled&&this.onEnable){this.onEnable()}this.customSortCallback=null;this.customCalculateSortValues=null;this._lightHash=0;this._lightHashDirty=false;this._lightIdHash=0;this._lightIdHashDirty=false;this._shaderVersion=-1}set enabled(t){if(t!==this._enabled){this._dirtyComposition=true;this._enabled=t;if(t){this.incrementCounter();if(this.onEnable)this.onEnable()}else{this.decrementCounter();if(this.onDisable)this.onDisable()}}}get enabled(){return this._enabled}set clearColorBuffer(t){this._clearColorBuffer=t;this._dirtyComposition=true}get clearColorBuffer(){return this._clearColorBuffer}set clearDepthBuffer(t){this._clearDepthBuffer=t;this._dirtyComposition=true}get clearDepthBuffer(){return this._clearDepthBuffer}set clearStencilBuffer(t){this._clearStencilBuffer=t;this._dirtyComposition=true}get clearStencilBuffer(){return this._clearStencilBuffer}get hasClusteredLights(){return this._clusteredLightsSet.size>0}get clusteredLightsSet(){return this._clusteredLightsSet}incrementCounter(){if(this._refCounter===0){this._enabled=true;if(this.onEnable)this.onEnable()}this._refCounter++}decrementCounter(){if(this._refCounter===1){this._enabled=false;if(this.onDisable)this.onDisable()}else if(this._refCounter===0){return}this._refCounter--}addMeshInstances(t,e){const s=this.meshInstances;const i=this.meshInstancesSet;for(let e=0;e<t.length;e++){const n=t[e];if(!i.has(n)){s.push(n);i.add(n);Dx.add(n.material)}}if(!e){this.addShadowCasters(t)}if(Dx.size>0){const t=this._shaderVersion;Dx.forEach((e=>{if(t>=0&&e._shaderVersion!==t){if(e.getShaderVariant!==wS.prototype.getShaderVariant){e.clearVariants()}e._shaderVersion=t}}));Dx.clear()}}removeMeshInstances(t,e){const s=this.meshInstances;const i=this.meshInstancesSet;for(let e=0;e<t.length;e++){const n=t[e];if(i.has(n)){i.delete(n);const t=s.indexOf(n);if(t>=0){s.splice(t,1)}}}if(!e){this.removeShadowCasters(t)}}addShadowCasters(t){const e=this.shadowCasters;const s=this.shadowCastersSet;for(let i=0;i<t.length;i++){const n=t[i];if(n.castShadow&&!s.has(n)){s.add(n);e.push(n)}}}removeShadowCasters(t){const e=this.shadowCasters;const s=this.shadowCastersSet;for(let i=0;i<t.length;i++){const n=t[i];if(s.has(n)){s.delete(n);const t=e.indexOf(n);if(t>=0){e.splice(t,1)}}}}clearMeshInstances(t=false){this.meshInstances.length=0;this.meshInstancesSet.clear();if(!t){this.shadowCasters.length=0;this.shadowCastersSet.clear()}}markLightsDirty(){this._lightHashDirty=true;this._lightIdHashDirty=true;this._splitLightsDirty=true}hasLight(t){return this._lightsSet.has(t)}addLight(t){const e=t.light;if(!this._lightsSet.has(e)){this._lightsSet.add(e);this._lights.push(e);this.markLightsDirty()}if(e.type!==pm){this._clusteredLightsSet.add(e)}}removeLight(t){const e=t.light;if(this._lightsSet.has(e)){this._lightsSet.delete(e);this._lights.splice(this._lights.indexOf(e),1);this.markLightsDirty()}if(e.type!==pm){this._clusteredLightsSet.delete(e)}}clearLights(){this._lightsSet.forEach((t=>t.removeLayer(this)));this._lightsSet.clear();this._clusteredLightsSet.clear();this._lights.length=0;this.markLightsDirty()}get splitLights(){if(this._splitLightsDirty){this._splitLightsDirty=false;const t=this._splitLights;for(let e=0;e<t.length;e++){t[e].length=0}const e=this._lights;for(let s=0;s<e.length;s++){const i=e[s];if(i.enabled){t[i._type].push(i)}}for(let e=0;e<t.length;e++){t[e].sort(((t,e)=>t.key-e.key))}}return this._splitLights}evaluateLightHash(t,e,s){let i=0;const n=this._lights;for(let i=0;i<n.length;i++){const r=n[i].type!==pm;if(t&&r||e&&!r){Lx.push(s?n[i].id:n[i].key)}}if(Lx.length>0){Lx.sort();i=jo(Lx);Lx.length=0}return i}getLightHash(t){if(this._lightHashDirty){this._lightHashDirty=false;this._lightHash=this.evaluateLightHash(!t,true,false)}return this._lightHash}getLightIdHash(){if(this._lightIdHashDirty){this._lightIdHashDirty=false;this._lightIdHash=this.evaluateLightHash(true,false,true)}return this._lightIdHash}addCamera(t){if(!this.camerasSet.has(t.camera)){this.camerasSet.add(t.camera);this.cameras.push(t);this._dirtyComposition=true}}removeCamera(t){if(this.camerasSet.has(t.camera)){this.camerasSet.delete(t.camera);const e=this.cameras.indexOf(t);this.cameras.splice(e,1);this._dirtyComposition=true}}clearCameras(){this.cameras.length=0;this.camerasSet.clear();this._dirtyComposition=true}_calculateSortDistances(t,e,s){const i=t.length;const{x:n,y:r,z:a}=e;const{x:o,y:l,z:h}=s;for(let c=0;c<i;c++){const i=t[c];let d;if(i.calculateSortDistance){d=i.calculateSortDistance(i,e,s)}else{const t=i.aabb.center;d=(t.x-n)*o+(t.y-r)*l+(t.z-a)*h}const u=i._drawBucket*1e9;i._sortKeyDynamic=u+d}}getCulledInstances(t){let e=this._visibleInstances.get(t);if(!e){e=new Nx;this._visibleInstances.set(t,e)}return e}sortVisible(t,e){const s=e?this.transparentSortMode:this.opaqueSortMode;if(s===Bg){return}const i=this.getCulledInstances(t);const n=e?i.transparent:i.opaque;const r=t.node;if(s===Hg){const t=r.getPosition();const e=r.forward;if(this.customCalculateSortValues){this.customCalculateSortValues(n,n.length,t,e)}if(this.customSortCallback){n.sort(this.customSortCallback)}}else{if(s===Vg||s===Gg){const t=r.getPosition();const e=r.forward;this._calculateSortDistances(n,t,e)}n.sort(Fx[s])}}}const Bx=(t,e)=>t.priority-e.priority;const Ux=t=>t.sort(Bx);class zx extends at{constructor(t="Untitled"){super(),this.layerList=[],this.layerIdMap=new Map,this.layerNameMap=new Map,this.layerOpaqueIndexMap=new Map,this.layerTransparentIndexMap=new Map,this.subLayerList=[],this.subLayerEnabled=[],this.cameras=[],this._renderActions=[],this._dirty=false;this.name=t;this._opaqueOrder={};this._transparentOrder={}}destroy(){this.destroyRenderActions()}destroyRenderActions(){this._renderActions.forEach((t=>t.destroy()));this._renderActions.length=0}markDirty(){this._dirty=true}_update(){const t=this.layerList.length;if(!this._dirty){for(let e=0;e<t;e++){if(this.layerList[e]._dirtyComposition){this._dirty=true;break}}}if(this._dirty){this._dirty=false;this.cameras.length=0;for(let e=0;e<t;e++){const t=this.layerList[e];t._dirtyComposition=false;for(let e=0;e<t.cameras.length;e++){const s=t.cameras[e];const i=this.cameras.indexOf(s);if(i<0){this.cameras.push(s)}}}if(this.cameras.length>1){Ux(this.cameras)}let e=0;this.destroyRenderActions();for(let s=0;s<this.cameras.length;s++){const i=this.cameras[s];if(i.camera.renderPasses.length>0){this.addDummyRenderAction(e,i);e++;continue}let n=true;const r=e;let a=null;let o=false;for(let s=0;s<t;s++){const t=this.layerList[s];const r=t.enabled&&this.subLayerEnabled[s];if(r){if(t.cameras.length>0){if(i.layers.indexOf(t.id)>=0){if(!o&&t.id===i.disablePostEffectsLayer){o=true;if(a){a.triggerPostprocess=true}}const r=this.subLayerList[s];a=this.addRenderAction(e,t,r,i,n,o);e++;n=false}}}}if(r<e){a.lastCameraUse=true}if(!o&&a){a.triggerPostprocess=true}if(i.renderTarget&&i.postEffectsEnabled){this.propagateRenderTarget(r-1,i)}}this._logRenderActions()}}getNextRenderAction(t){const e=new yx;this._renderActions.push(e);return e}addDummyRenderAction(t,e){const s=this.getNextRenderAction(t);s.camera=e;s.useCameraPasses=true}addRenderAction(t,e,s,i,n,r){let a=e.id!==cm?i.renderTarget:null;let o=false;const l=this._renderActions;for(let e=t-1;e>=0;e--){if(l[e].camera===i&&l[e].renderTarget===a){o=true;break}}if(r&&i.postEffectsEnabled){a=null}const h=this.getNextRenderAction(t);h.triggerPostprocess=false;h.layer=e;h.transparent=s;h.camera=i;h.renderTarget=a;h.firstCameraUse=n;h.lastCameraUse=false;const c=n||!o;const d=e.clearColorBuffer||e.clearDepthBuffer||e.clearStencilBuffer;if(c||d){h.setupClears(c?i:undefined,e)}return h}propagateRenderTarget(t,e){for(let s=t;s>=0;s--){const t=this._renderActions[s];const i=t.layer;if(t.renderTarget&&i.id!==cm){break}if(i.id===cm){continue}if(t.useCameraPasses){break}const n=t?.camera.camera;if(n){if(!e.camera.rect.equals(n.rect)||!e.camera.scissorRect.equals(n.scissorRect)){break}}t.renderTarget=e.renderTarget}}_logRenderActions(){}_isLayerAdded(t){const e=this.layerIdMap.get(t.id)===t;return e}_isSublayerAdded(t,e){const s=e?this.layerTransparentIndexMap:this.layerOpaqueIndexMap;if(s.get(t)!==undefined){return true}return false}push(t){if(this._isLayerAdded(t))return;this.layerList.push(t);this.layerList.push(t);this._opaqueOrder[t.id]=this.subLayerList.push(false)-1;this._transparentOrder[t.id]=this.subLayerList.push(true)-1;this.subLayerEnabled.push(true);this.subLayerEnabled.push(true);this._updateLayerMaps();this._dirty=true;this.fire("add",t)}insert(t,e){if(this._isLayerAdded(t))return;this.layerList.splice(e,0,t,t);this.subLayerList.splice(e,0,false,true);const s=this.layerList.length;this._updateOpaqueOrder(e,s-1);this._updateTransparentOrder(e,s-1);this.subLayerEnabled.splice(e,0,true,true);this._updateLayerMaps();this._dirty=true;this.fire("add",t)}remove(t){let e=this.layerList.indexOf(t);delete this._opaqueOrder[e];delete this._transparentOrder[e];while(e>=0){this.layerList.splice(e,1);this.subLayerList.splice(e,1);this.subLayerEnabled.splice(e,1);e=this.layerList.indexOf(t);this._dirty=true;this.fire("remove",t)}const s=this.layerList.length;this._updateOpaqueOrder(0,s-1);this._updateTransparentOrder(0,s-1);this._updateLayerMaps()}pushOpaque(t){if(this._isSublayerAdded(t,false))return;this.layerList.push(t);this._opaqueOrder[t.id]=this.subLayerList.push(false)-1;this.subLayerEnabled.push(true);this._updateLayerMaps();this._dirty=true;this.fire("add",t)}insertOpaque(t,e){if(this._isSublayerAdded(t,false))return;this.layerList.splice(e,0,t);this.subLayerList.splice(e,0,false);const s=this.subLayerList.length;this._updateOpaqueOrder(e,s-1);this.subLayerEnabled.splice(e,0,true);this._updateLayerMaps();this._dirty=true;this.fire("add",t)}removeOpaque(t){for(let e=0,s=this.layerList.length;e<s;e++){if(this.layerList[e]===t&&!this.subLayerList[e]){this.layerList.splice(e,1);this.subLayerList.splice(e,1);s--;this._updateOpaqueOrder(e,s-1);this.subLayerEnabled.splice(e,1);this._dirty=true;if(this.layerList.indexOf(t)<0){this.fire("remove",t)}break}}this._updateLayerMaps()}pushTransparent(t){if(this._isSublayerAdded(t,true))return;this.layerList.push(t);this._transparentOrder[t.id]=this.subLayerList.push(true)-1;this.subLayerEnabled.push(true);this._updateLayerMaps();this._dirty=true;this.fire("add",t)}insertTransparent(t,e){if(this._isSublayerAdded(t,true))return;this.layerList.splice(e,0,t);this.subLayerList.splice(e,0,true);const s=this.subLayerList.length;this._updateTransparentOrder(e,s-1);this.subLayerEnabled.splice(e,0,true);this._updateLayerMaps();this._dirty=true;this.fire("add",t)}removeTransparent(t){for(let e=0,s=this.layerList.length;e<s;e++){if(this.layerList[e]===t&&this.subLayerList[e]){this.layerList.splice(e,1);this.subLayerList.splice(e,1);s--;this._updateTransparentOrder(e,s-1);this.subLayerEnabled.splice(e,1);this._dirty=true;if(this.layerList.indexOf(t)<0){this.fire("remove",t)}break}}this._updateLayerMaps()}getOpaqueIndex(t){return this.layerOpaqueIndexMap.get(t)??-1}getTransparentIndex(t){return this.layerTransparentIndexMap.get(t)??-1}isEnabled(t,e){if(t.enabled){const s=e?this.getTransparentIndex(t):this.getOpaqueIndex(t);if(s>=0){return this.subLayerEnabled[s]}}return false}_updateLayerMaps(){this.layerIdMap.clear();this.layerNameMap.clear();this.layerOpaqueIndexMap.clear();this.layerTransparentIndexMap.clear();for(let t=0;t<this.layerList.length;t++){const e=this.layerList[t];this.layerIdMap.set(e.id,e);this.layerNameMap.set(e.name,e);const s=this.subLayerList[t]?this.layerTransparentIndexMap:this.layerOpaqueIndexMap;s.set(e,t)}}getLayerById(t){return this.layerIdMap.get(t)??null}getLayerByName(t){return this.layerNameMap.get(t)??null}_updateOpaqueOrder(t,e){for(let s=t;s<=e;s++){if(this.subLayerList[s]===false){this._opaqueOrder[this.layerList[s].id]=s}}}_updateTransparentOrder(t,e){for(let s=t;s<=e;s++){if(this.subLayerList[s]===true){this._transparentOrder[this.layerList[s].id]=s}}}_sortLayersDescending(t,e,s){let i=-1;let n=-1;for(let e=0,n=t.length;e<n;e++){const n=t[e];if(s.hasOwnProperty(n)){i=Math.max(i,s[n])}}for(let t=0,i=e.length;t<i;t++){const i=e[t];if(s.hasOwnProperty(i)){n=Math.max(n,s[i])}}if(i===-1&&n!==-1){return 1}else if(n===-1&&i!==-1){return-1}return n-i}sortTransparentLayers(t,e){return this._sortLayersDescending(t,e,this._transparentOrder)}sortOpaqueLayers(t,e){return this._sortLayersDescending(t,e,this._opaqueOrder)}}const Vx=new It;const Gx={bias:0,normalBias:0};const Hx=new bt;const Wx={r:0,g:1,b:2,a:3};const Xx={directional:pm,omni:mm,point:mm,spot:gm};const qx=[[new Ft(0,0,1,1)],[new Ft(0,0,.5,.5),new Ft(0,.5,.5,.5)],[new Ft(0,0,.5,.5),new Ft(0,.5,.5,.5),new Ft(.5,0,.5,.5)],[new Ft(0,0,.5,.5),new Ft(0,.5,.5,.5),new Ft(.5,0,.5,.5),new Ft(.5,.5,.5,.5)]];const $x={rrr:1,ggg:2,bbb:4,aaa:8,rgb:7};let jx=0;class Yx{constructor(t,e,s){this.light=s;this.camera=t;this.shadowCamera=HS.createShadowCamera(s._shadowType,s._type,e);this.shadowMatrix=new Vt;this.shadowViewport=new Ft(0,0,1,1);this.shadowScissor=new Ft(0,0,1,1);this.projectionCompensation=0;this.face=e;this.visibleCasters=[];this.viewBindGroups=[]}destroy(){this.viewBindGroups.forEach((t=>{t.defaultUniformBuffer.destroy();t.destroy()}));this.viewBindGroups.length=0}get shadowBuffer(){const t=this.shadowCamera.renderTarget;if(t){return this.light._isPcf?t.depthBuffer:t.colorBuffer}return null}}class Kx{constructor(t,e){this.layers=new Set;this.shadowDepthState=Uo.DEFAULT.clone();this.clusteredFlags=0;this.clusteredData=new Uint32Array(3);this.clusteredData16=new Uint16Array(this.clusteredData.buffer);this._evtDeviceRestored=null;this.device=t;this.clusteredLighting=e;this.id=jx++;this._evtDeviceRestored=t.on("devicerestored",this.onDeviceRestored,this);this._type=pm;this._color=new bt(.8,.8,.8);this._intensity=1;this._affectSpecularity=true;this._luminance=0;this._castShadows=false;this._enabled=false;this._mask=dg;this.isStatic=false;this.key=0;this.bakeDir=true;this.bakeNumSamples=1;this.bakeArea=0;this.attenuationStart=10;this.attenuationEnd=10;this._falloffMode=Am;this._shadowType=Lm;this._vsmBlurSize=11;this.vsmBlurMode=Km;this.vsmBias=.01*.25;this._cookie=null;this.cookieIntensity=1;this._cookieFalloff=true;this._cookieChannel="rgb";this._cookieTransform=null;this._cookieTransformUniform=new Float32Array(4);this._cookieOffset=null;this._cookieOffsetUniform=new Float32Array(2);this._cookieTransformSet=false;this._cookieOffsetSet=false;this._innerConeAngle=40;this._outerConeAngle=45;this.cascades=null;this._shadowMatrixPalette=null;this._shadowCascadeDistances=null;this.numCascades=1;this._cascadeBlend=0;this.cascadeDistribution=.5;this._shape=xm;this._colorLinear=new Float32Array(3);this._updateLinearColor();this._position=new It(0,0,0);this._direction=new It(0,0,0);this._innerConeAngleCos=Math.cos(this._innerConeAngle*Math.PI/180);this._updateOuterAngle(this._outerConeAngle);this._usePhysicalUnits=undefined;this._shadowMap=null;this._shadowRenderParams=[];this._shadowCameraParams=[];this.shadowDistance=40;this._shadowResolution=1024;this._shadowBias=-5e-4;this._shadowIntensity=1;this._normalOffsetBias=0;this.shadowUpdateMode=cg;this.shadowUpdateOverrides=null;this._isVsm=false;this._isPcf=true;this._softShadowParams=new Float32Array(4);this.shadowSamples=16;this.shadowBlockerSamples=16;this.penumbraSize=1;this.penumbraFalloff=1;this._cookieMatrix=null;this._atlasViewport=null;this.atlasViewportAllocated=false;this.atlasVersion=0;this.atlasSlotIndex=0;this.atlasSlotUpdated=false;this._node=null;this._renderData=[];this.visibleThisFrame=false;this.maxScreenSize=0;this._updateShadowBias()}destroy(){this._evtDeviceRestored?.off();this._evtDeviceRestored=null;this._destroyShadowMap();this.releaseRenderData();this._renderData=null}onDeviceRestored(){if(this.shadowUpdateMode===lg){this.shadowUpdateMode=hg}}releaseRenderData(){if(this._renderData){for(let t=0;t<this._renderData.length;t++){this._renderData[t].destroy()}this._renderData.length=0}}addLayer(t){this.layers.add(t)}removeLayer(t){this.layers.delete(t)}set shadowSamples(t){this._softShadowParams[0]=t}get shadowSamples(){return this._softShadowParams[0]}set shadowBlockerSamples(t){this._softShadowParams[1]=t}get shadowBlockerSamples(){return this._softShadowParams[1]}set shadowBias(t){if(this._shadowBias!==t){this._shadowBias=t;this._updateShadowBias()}}get shadowBias(){return this._shadowBias}set numCascades(t){if(!this.cascades||this.numCascades!==t){this.cascades=qx[t-1];this._shadowMatrixPalette=new Float32Array(4*16);this._shadowCascadeDistances=new Float32Array(4);this._destroyShadowMap();this.updateKey()}}get numCascades(){return this.cascades.length}set cascadeBlend(t){if(this._cascadeBlend!==t){this._cascadeBlend=t;this.updateKey()}}get cascadeBlend(){return this._cascadeBlend}set shadowMap(t){if(this._shadowMap!==t){this._destroyShadowMap();this._shadowMap=t}}get shadowMap(){return this._shadowMap}set mask(t){if(this._mask!==t){this._mask=t;this.updateKey();this.updateClusteredFlags()}}get mask(){return this._mask}get numShadowFaces(){const t=this._type;if(t===pm){return this.numCascades}else if(t===mm){return 6}return 1}set type(t){if(this._type===t){return}this._type=t;this._destroyShadowMap();this._updateShadowBias();this.updateKey();this.updateClusteredFlags();const e=this._shadowType;this._shadowType=null;this.shadowUpdateOverrides=null;this.shadowType=e}get type(){return this._type}set shape(t){if(this._shape===t){return}this._shape=t;this._destroyShadowMap();this.updateKey();this.updateClusteredFlags();const e=this._shadowType;this._shadowType=null;this.shadowType=e}get shape(){return this._shape}set usePhysicalUnits(t){if(this._usePhysicalUnits!==t){this._usePhysicalUnits=t;this._updateLinearColor()}}get usePhysicalUnits(){return this._usePhysicalUnits}set shadowType(t){if(this._shadowType===t){return}let e=Hm.get(t);if(!e){t=Lm}const s=this.device;if(t===Um&&!s.textureFloatRenderable&&!s.textureHalfFloatRenderable){t=Lm}if(this._type===mm&&t!==km&&t!==Lm&&t!==zm&&t!==Vm&&t!==Um){t=Lm}if(t===Rm&&(!s.textureFloatRenderable||!s.textureFloatFilterable)){t=Mm}if(t===Mm&&!s.textureHalfFloatRenderable){t=Lm}e=Hm.get(t);this._isVsm=e?.vsm??false;this._isPcf=e?.pcf??false;this._shadowType=t;this._destroyShadowMap();this.updateKey()}get shadowType(){return this._shadowType}set enabled(t){if(this._enabled!==t){this._enabled=t;this.layersDirty()}}get enabled(){return this._enabled}set castShadows(t){if(this._castShadows!==t){this._castShadows=t;this._destroyShadowMap();this.layersDirty();this.updateKey()}}get castShadows(){return this._castShadows&&this._mask!==fg&&this._mask!==0}set shadowIntensity(t){if(this._shadowIntensity!==t){this._shadowIntensity=t;this.updateKey()}}get shadowIntensity(){return this._shadowIntensity}get bakeShadows(){return this._castShadows&&this._mask===fg}set shadowResolution(t){if(this._shadowResolution!==t){if(this._type===mm){t=Math.min(t,this.device.maxCubeMapSize)}else{t=Math.min(t,this.device.maxTextureSize)}this._shadowResolution=t;this._destroyShadowMap()}}get shadowResolution(){return this._shadowResolution}set vsmBlurSize(t){if(this._vsmBlurSize===t){return}if(t%2===0)t++;this._vsmBlurSize=t}get vsmBlurSize(){return this._vsmBlurSize}set normalOffsetBias(t){if(this._normalOffsetBias!==t){const e=!this._normalOffsetBias&&t||this._normalOffsetBias&&!t;this._normalOffsetBias=t;if(e){this.updateKey()}}}get normalOffsetBias(){return this._normalOffsetBias}set falloffMode(t){if(this._falloffMode===t){return}this._falloffMode=t;this.updateKey();this.updateClusteredFlags()}get falloffMode(){return this._falloffMode}set innerConeAngle(t){if(this._innerConeAngle===t){return}this._innerConeAngle=t;this._innerConeAngleCos=Math.cos(t*Math.PI/180);this.updateClusterData(false,true);if(this._usePhysicalUnits){this._updateLinearColor()}}get innerConeAngle(){return this._innerConeAngle}set outerConeAngle(t){if(this._outerConeAngle===t){return}this._outerConeAngle=t;this._updateOuterAngle(t);if(this._usePhysicalUnits){this._updateLinearColor()}}get outerConeAngle(){return this._outerConeAngle}set penumbraSize(t){this._penumbraSize=t;this._softShadowParams[2]=t}get penumbraSize(){return this._penumbraSize}set penumbraFalloff(t){this._softShadowParams[3]=t}get penumbraFalloff(){return this._softShadowParams[3]}_updateOuterAngle(t){const e=t*Math.PI/180;this._outerConeAngleCos=Math.cos(e);this._outerConeAngleSin=Math.sin(e);this.updateClusterData(false,true)}set intensity(t){if(this._intensity!==t){this._intensity=t;this._updateLinearColor()}}get intensity(){return this._intensity}set affectSpecularity(t){if(this._type===pm){this._affectSpecularity=t;this.updateKey()}}get affectSpecularity(){return this._affectSpecularity}set luminance(t){if(this._luminance!==t){this._luminance=t;this._updateLinearColor()}}get luminance(){return this._luminance}get cookieMatrix(){if(!this._cookieMatrix){this._cookieMatrix=new Vt}return this._cookieMatrix}get atlasViewport(){if(!this._atlasViewport){this._atlasViewport=new Ft(0,0,1,1)}return this._atlasViewport}set cookie(t){if(this._cookie===t){return}this._cookie=t;this.updateKey()}get cookie(){return this._cookie}set cookieFalloff(t){if(this._cookieFalloff===t){return}this._cookieFalloff=t;this.updateKey()}get cookieFalloff(){return this._cookieFalloff}set cookieChannel(t){if(this._cookieChannel===t){return}if(t.length<3){const e=t.charAt(t.length-1);const s=3-t.length;for(let i=0;i<s;i++){t+=e}}this._cookieChannel=t;this.updateKey();this.updateClusteredFlags()}get cookieChannel(){return this._cookieChannel}set cookieTransform(t){if(this._cookieTransform===t){return}this._cookieTransform=t;this._cookieTransformSet=!!t;if(t&&!this._cookieOffset){this.cookieOffset=new Ot;this._cookieOffsetSet=false}this.updateKey()}get cookieTransform(){return this._cookieTransform}set cookieOffset(t){if(this._cookieOffset===t){return}const e=!!(this._cookieTransformSet||t);if(e&&!t&&this._cookieOffset){this._cookieOffset.set(0,0)}else{this._cookieOffset=t}this._cookieOffsetSet=!!t;if(t&&!this._cookieTransform){this.cookieTransform=new Ft(1,1,0,0);this._cookieTransformSet=false}this.updateKey()}get cookieOffset(){return this._cookieOffset}beginFrame(){this.visibleThisFrame=this._type===pm&&this._enabled;this.maxScreenSize=0;this.atlasViewportAllocated=false;this.atlasSlotUpdated=false}_destroyShadowMap(){this.releaseRenderData();if(this._shadowMap){if(!this._shadowMap.cached){this._shadowMap.destroy()}this._shadowMap=null}if(this.shadowUpdateMode===lg){this.shadowUpdateMode=hg}if(this.shadowUpdateOverrides){for(let t=0;t<this.shadowUpdateOverrides.length;t++){if(this.shadowUpdateOverrides[t]===lg){this.shadowUpdateOverrides[t]=hg}}}}getRenderData(t,e){for(let s=0;s<this._renderData.length;s++){const i=this._renderData[s];if(i.camera===t&&i.face===e){return i}}const s=new Yx(t,e,this);this._renderData.push(s);return s}clone(){const t=new Kx(this.device,this.clusteredLighting);t.type=this._type;t.setColor(this._color);t.intensity=this._intensity;t.affectSpecularity=this._affectSpecularity;t.luminance=this._luminance;t.castShadows=this.castShadows;t._enabled=this._enabled;t.attenuationStart=this.attenuationStart;t.attenuationEnd=this.attenuationEnd;t.falloffMode=this._falloffMode;t.shadowType=this._shadowType;t.vsmBlurSize=this._vsmBlurSize;t.vsmBlurMode=this.vsmBlurMode;t.vsmBias=this.vsmBias;t.shadowUpdateMode=this.shadowUpdateMode;t.mask=this.mask;if(this.shadowUpdateOverrides){t.shadowUpdateOverrides=this.shadowUpdateOverrides.slice()}t.innerConeAngle=this._innerConeAngle;t.outerConeAngle=this._outerConeAngle;t.numCascades=this.numCascades;t.cascadeDistribution=this.cascadeDistribution;t.cascadeBlend=this._cascadeBlend;t.shape=this._shape;t.shadowDepthState.copy(this.shadowDepthState);t.shadowBias=this.shadowBias;t.normalOffsetBias=this._normalOffsetBias;t.shadowResolution=this._shadowResolution;t.shadowDistance=this.shadowDistance;t.shadowIntensity=this.shadowIntensity;t.shadowSamples=this.shadowSamples;t.shadowBlockerSamples=this.shadowBlockerSamples;t.penumbraSize=this.penumbraSize;t.penumbraFalloff=this.penumbraFalloff;return t}static getLightUnitConversion(t,e=Math.PI/4,s=0){switch(t){case gm:{const t=Math.cos(e);const i=Math.cos(s);return 2*Math.PI*(1-i+(i-t)/2)}case mm:return 4*Math.PI;case pm:return 1}}_getUniformBiasValues(t){const e=t.shadowCamera._farClip;switch(this._type){case mm:Gx.bias=this.shadowBias;Gx.normalBias=this._normalOffsetBias;break;case gm:if(this._isVsm){Gx.bias=-1e-5*20}else{Gx.bias=this.shadowBias*20}Gx.normalBias=this._isVsm?this.vsmBias/(this.attenuationEnd/7):this._normalOffsetBias;break;case pm:if(this._isVsm){Gx.bias=-1e-5*20}else{Gx.bias=this.shadowBias/e*100}Gx.normalBias=this._isVsm?this.vsmBias/(e/7):this._normalOffsetBias;break}return Gx}getColor(){return this._color}getBoundingSphere(t){if(this._type===gm){const e=this.attenuationEnd;const s=this._outerConeAngle;const i=this._outerConeAngleCos;const n=this._node;Vx.copy(n.up);if(s>45){t.radius=e*this._outerConeAngleSin;Vx.mulScalar(-e*i)}else{t.radius=e/(2*i);Vx.mulScalar(-t.radius)}t.center.add2(n.getPosition(),Vx)}else if(this._type===mm){t.center=this._node.getPosition();t.radius=this.attenuationEnd}}getBoundingBox(t){if(this._type===gm){const e=this.attenuationEnd;const s=this._outerConeAngle;const i=this._node;const n=Math.abs(Math.sin(s*wt.DEG_TO_RAD)*e);t.center.set(0,-e*.5,0);t.halfExtents.set(n,e*.5,n);t.setFromTransformedAabb(t,i.getWorldTransform(),true)}else if(this._type===mm){t.center.copy(this._node.getPosition());t.halfExtents.set(this.attenuationEnd,this.attenuationEnd,this.attenuationEnd)}}_updateShadowBias(){if(this._type===mm&&!this.clusteredLighting){this.shadowDepthState.depthBias=0;this.shadowDepthState.depthBiasSlope=0}else{const t=this.shadowBias*-1e3;this.shadowDepthState.depthBias=t;this.shadowDepthState.depthBiasSlope=t}}_updateLinearColor(){let t=this._intensity;if(this._usePhysicalUnits){t=this._luminance/Kx.getLightUnitConversion(this._type,this._outerConeAngle*wt.DEG_TO_RAD,this._innerConeAngle*wt.DEG_TO_RAD)}const e=this._color;const s=this._colorLinear;if(t>=1){Hx.linear(e).mulScalar(t)}else{Hx.copy(e).mulScalar(t).linear()}s[0]=Hx.r;s[1]=Hx.g;s[2]=Hx.b;this.updateClusterData(true)}setColor(){if(arguments.length===1){this._color.set(arguments[0].r,arguments[0].g,arguments[0].b)}else if(arguments.length===3){this._color.set(arguments[0],arguments[1],arguments[2])}this._updateLinearColor()}layersDirty(){this.layers.forEach((t=>{if(t.hasLight(this)){t.markLightsDirty()}}))}updateKey(){let t=this._type<<29|this._shadowType<<25|this._falloffMode<<23|(this._normalOffsetBias!==0?1:0)<<22|(this._cookie?1:0)<<21|(this._cookieFalloff?1:0)<<20|Wx[this._cookieChannel.charAt(0)]<<18|(this._cookieTransform?1:0)<<12|this._shape<<10|(this.numCascades>0?1:0)<<9|(this._cascadeBlend>0?1:0)<<8|(this.affectSpecularity?1:0)<<7|this.mask<<6|(this._castShadows?1:0)<<3;if(this._cookieChannel.length===3){t|=Wx[this._cookieChannel.charAt(1)]<<16;t|=Wx[this._cookieChannel.charAt(2)]<<14}if(t!==this.key){this.layersDirty()}this.key=t}updateClusteredFlags(){const t=!!(this.mask&dg);const e=!!(this.mask&ug);this.clusteredFlags=(this.type===gm?1:0)<<30|(this._shape&3)<<28|(this._falloffMode&1)<<27|($x[this._cookieChannel]??0)<<23|(t?1:0)<<22|(e?1:0)<<21}getClusteredFlags(t,e){return this.clusteredFlags|((t?Math.floor(this.shadowIntensity*255):0)&255)<<0|((e?Math.floor(this.cookieIntensity*255):0)&255)<<8}updateClusterData(t,e){const{clusteredData16:s}=this;const i=Dt.float2Half;if(t){s[0]=i(wt.clamp(this._colorLinear[0]/Sm,0,65504));s[1]=i(wt.clamp(this._colorLinear[1]/Sm,0,65504));s[2]=i(wt.clamp(this._colorLinear[2]/Sm,0,65504))}if(e){s[4]=i(this._innerConeAngleCos);s[5]=i(this._outerConeAngleCos)}}}class Zx{constructor(t,e,s){this._areaLightsEnabled=false;this._cells=new It(10,3,10);this._maxLightsPerCell=255;this._shadowsEnabled=true;this._shadowType=Lm;this._shadowAtlasResolution=2048;this._cookiesEnabled=false;this._cookieAtlasResolution=2048;this.atlasSplit=null;this._supportsAreaLights=t;this._maxTextureSize=e;this._dirtyLightsFnc=s}applySettings(t){this.shadowsEnabled=t.lightingShadowsEnabled??this.shadowsEnabled;this.cookiesEnabled=t.lightingCookiesEnabled??this.cookiesEnabled;this.areaLightsEnabled=t.lightingAreaLightsEnabled??this.areaLightsEnabled;this.shadowAtlasResolution=t.lightingShadowAtlasResolution??this.shadowAtlasResolution;this.cookieAtlasResolution=t.lightingCookieAtlasResolution??this.cookieAtlasResolution;this.maxLightsPerCell=t.lightingMaxLightsPerCell??this.maxLightsPerCell;this.shadowType=t.lightingShadowType??this.shadowType;if(t.lightingCells){this.cells=new It(t.lightingCells)}}set cells(t){this._cells.copy(t)}get cells(){return this._cells}set maxLightsPerCell(t){this._maxLightsPerCell=wt.clamp(t,1,255)}get maxLightsPerCell(){return this._maxLightsPerCell}set cookieAtlasResolution(t){this._cookieAtlasResolution=wt.clamp(t,32,this._maxTextureSize)}get cookieAtlasResolution(){return this._cookieAtlasResolution}set shadowAtlasResolution(t){this._shadowAtlasResolution=wt.clamp(t,32,this._maxTextureSize)}get shadowAtlasResolution(){return this._shadowAtlasResolution}set shadowType(t){if(this._shadowType!==t){this._shadowType=t;this._dirtyLightsFnc()}}get shadowType(){return this._shadowType}set cookiesEnabled(t){if(this._cookiesEnabled!==t){this._cookiesEnabled=t;this._dirtyLightsFnc()}}get cookiesEnabled(){return this._cookiesEnabled}set areaLightsEnabled(t){if(this._supportsAreaLights){if(this._areaLightsEnabled!==t){this._areaLightsEnabled=t;this._dirtyLightsFnc()}}}get areaLightsEnabled(){return this._areaLightsEnabled}set shadowsEnabled(t){if(this._shadowsEnabled!==t){this._shadowsEnabled=t;this._dirtyLightsFnc()}}get shadowsEnabled(){return this._shadowsEnabled}}class Qx{constructor(t){this.morph=t;t.incRefCount();this.device=t.device;const e=t._targets.length;this.shader=this._createShader(e);this._weights=[];this._weightMap=new Map;for(let e=0;e<t._targets.length;e++){const s=t._targets[e];if(s.name){this._weightMap.set(s.name,e)}this.setWeight(e,s.defaultWeight)}this._shaderMorphWeights=new Float32Array(e);this._shaderMorphIndex=new Uint32Array(e);const s=(e,s)=>{this[s]=t._createTexture(e,t._renderTextureFormat);return new il({colorBuffer:this[s],depth:false})};if(t.morphPositions){this.rtPositions=s("MorphRTPos","texturePositions")}if(t.morphNormals){this.rtNormals=s("MorphRTNrm","textureNormals")}this._textureParams=new Float32Array([t.morphTextureWidth,t.morphTextureHeight]);const i=t.aabb.halfExtents;this._aabbSize=new Float32Array([i.x*4,i.y*4,i.z*4]);const n=t.aabb.getMin();this._aabbMin=new Float32Array([n.x*2,n.y*2,n.z*2]);this._aabbNrmSize=new Float32Array([2,2,2]);this._aabbNrmMin=new Float32Array([-1,-1,-1]);this.aabbSizeId=this.device.scope.resolve("aabbSize");this.aabbMinId=this.device.scope.resolve("aabbMin");this.morphTextureId=this.device.scope.resolve("morphTexture");this.morphFactor=this.device.scope.resolve("morphFactor[0]");this.morphIndex=this.device.scope.resolve("morphIndex[0]");this.countId=this.device.scope.resolve("count");this.zeroTextures=false}destroy(){this.shader=null;const t=this.morph;if(t){this.morph=null;t.decRefCount();if(t.refCount<1){t.destroy()}}this.rtPositions?.destroy();this.rtPositions=null;this.texturePositions?.destroy();this.texturePositions=null;this.rtNormals?.destroy();this.rtNormals=null;this.textureNormals?.destroy();this.textureNormals=null}clone(){return new Qx(this.morph)}_getWeightIndex(t){if(typeof t==="string"){const e=this._weightMap.get(t);return e}return t}getWeight(t){const e=this._getWeightIndex(t);return this._weights[e]}setWeight(t,e){const s=this._getWeightIndex(t);this._weights[s]=e;this._dirty=true}_createShader(t){const e=new Map;e.set("{MORPH_TEXTURE_MAX_COUNT}",t);if(this.morph.intRenderFormat)e.set("MORPH_INT","");const s=this.morph.intRenderFormat?"uvec4":"vec4";return Tv.createShader(this.device,{uniqueName:`TextureMorphShader_${t}-${this.morph.intRenderFormat?"int":"float"}`,attributes:{vertex_position:Ki},vertexChunk:"morphVS",fragmentChunk:"morphPS",fragmentDefines:e,fragmentOutputTypes:[s]})}_updateTextureRenderTarget(t,e,s){const{morph:i,device:n}=this;this.setAabbUniforms(s);this.morphTextureId.setValue(s?i.targetsTexturePositions:i.targetsTextureNormals);n.setBlendState(Ro.NOBLEND);this.countId.setValue(e);this.morphFactor.setValue(this._shaderMorphWeights);this.morphIndex.setValue(this._shaderMorphIndex);Iv(n,t,this.shader)}_updateTextureMorph(t){this.device;if(t>0||!this.zeroTextures){if(this.rtPositions){this._updateTextureRenderTarget(this.rtPositions,t,true)}if(this.rtNormals){this._updateTextureRenderTarget(this.rtNormals,t,false)}this.zeroTextures=t===0}}setAabbUniforms(t=true){this.aabbSizeId.setValue(t?this._aabbSize:this._aabbNrmSize);this.aabbMinId.setValue(t?this._aabbMin:this._aabbNrmMin)}prepareRendering(t){this.setAabbUniforms()}update(){this._dirty=false;const t=this.morph._targets;const e=1e-5;const s=this._shaderMorphWeights;const i=this._shaderMorphIndex;let n=0;for(let r=0;r<t.length;r++){if(Math.abs(this.getWeight(r))>e){s[n]=this.getWeight(r);i[n]=r;n++}}this._updateTextureMorph(n)}}class Jx{constructor(){this.graph=null;this.meshInstances=[];this.skinInstances=[];this.morphInstances=[];this.cameras=[];this.lights=[];this._shadersVersion=0;this._immutable=false}getGraph(){return this.graph}setGraph(t){this.graph=t}getCameras(){return this.cameras}setCameras(t){this.cameras=t}getLights(){return this.lights}setLights(t){this.lights=t}getMaterials(){const t=[];for(let e=0;e<this.meshInstances.length;e++){const s=this.meshInstances[e];if(t.indexOf(s.material)===-1){t.push(s.material)}}return t}clone(){const t=[];const e=[];const s=function(i){const n=i.clone();t.push(i);e.push(n);for(let t=0;t<i._children.length;t++){n.addChild(s(i._children[t]))}return n};const i=s(this.graph);const n=[];const r=[];const a=[];for(let t=0;t<this.skinInstances.length;t++){const e=this.skinInstances[t].skin;const s=new Nv(e);const n=[];for(let t=0;t<e.boneNames.length;t++){const s=e.boneNames[t];const r=i.findByName(s);n.push(r)}s.bones=n;r.push(s)}for(let t=0;t<this.morphInstances.length;t++){const e=this.morphInstances[t].morph;const s=new Qx(e);a.push(s)}for(let s=0;s<this.meshInstances.length;s++){const i=this.meshInstances[s];const o=t.indexOf(i.node);const l=new sy(i.mesh,i.material,e[o]);if(i.skinInstance){const t=this.skinInstances.indexOf(i.skinInstance);l.skinInstance=r[t]}if(i.morphInstance){const t=this.morphInstances.indexOf(i.morphInstance);l.morphInstance=a[t]}n.push(l)}const o=new Jx;o.graph=i;o.meshInstances=n;o.skinInstances=r;o.morphInstances=a;o.getGraph().syncHierarchy();return o}destroy(){const t=this.meshInstances;for(let e=0;e<t.length;e++){t[e].destroy()}this.meshInstances.length=0}generateWireframe(){sy._prepareRenderStyleForArray(this.meshInstances,d_)}}class tT extends Pl{constructor(t,e,{preferHighPrecision:s=false}={}){super();this.device=e;const i=e;this.preferHighPrecision=s;this._targets=t.slice();const n=i.textureHalfFloatRenderable?Fs:undefined;const r=i.textureFloatRenderable?ks:undefined;this._renderTextureFormat=this.preferHighPrecision?r??n:n??r;this._renderTextureFormat=this._renderTextureFormat??_i;this.intRenderFormat=Bi(this._renderTextureFormat);this._textureFormat=this.preferHighPrecision?ks:Fs;this._init();this._updateMorphFlags()}destroy(){this.vertexBufferIds?.destroy();this.vertexBufferIds=null;this.targetsTexturePositions?.destroy();this.targetsTexturePositions=null;this.targetsTextureNormals?.destroy();this.targetsTextureNormals=null}get aabb(){if(!this._aabb){const t=new It;const e=new It;for(let s=0;s<this._targets.length;s++){const i=this._targets[s].aabb;t.min(i.getMin());e.max(i.getMax())}this._aabb=new jt;this._aabb.setMinMax(t,e)}return this._aabb}get morphPositions(){return this._morphPositions}get morphNormals(){return this._morphNormals}_init(){this._initTextureBased();for(let t=0;t<this._targets.length;t++){this._targets[t]._postInit()}}_findSparseSet(t,e,s){let i=1;const n=t[0].length;for(let r=0;r<n;r+=3){let n=false;for(let e=0;e<t.length;e++){const s=t[e];if(s[r]!==0||s[r+1]!==0||s[r+2]!==0){n=true;break}}if(n){e.push(i);s.push(r/3);i++}else{e.push(0)}}return i}_initTextureBased(){const t=[],e=[];const s=this._targets;for(let i=0;i<s.length;i++){const n=s[i];if(n.options.deltaPositions){t.push(n.options.deltaPositions);e.push(true)}if(n.options.deltaNormals){t.push(n.options.deltaNormals);e.push(false)}}const i=[],n=[];const r=this._findSparseSet(t,i,n);const a=this.device.maxTextureSize;let o=Math.ceil(Math.sqrt(r));o=Math.min(o,a);const l=Math.ceil(r/o);if(l>a){return}this.morphTextureWidth=o;this.morphTextureHeight=l;let h=false;const c=Dt.float2Half;if(this._textureFormat===Fs){h=true}const d=[];const u=[];const f=o*l*4;for(let s=0;s<t.length;s++){const i=t[s];const r=this._textureFormat===Fs?new Uint16Array(f):new Float32Array(f);(e[s]?d:u).push(r);if(h){for(let t=0;t<n.length;t++){const e=n[t]*3;const s=t*4+4;r[s]=c(i[e]);r[s+1]=c(i[e+1]);r[s+2]=c(i[e+2])}}else{for(let t=0;t<n.length;t++){const e=n[t]*3;const s=t*4+4;r[s]=i[e];r[s+1]=i[e+1];r[s+2]=i[e+2]}}}if(d.length>0){this.targetsTexturePositions=this._createTexture("MorphPositionsTexture",this._textureFormat,s.length,[d]);this.targetsTexturePositions.upload()}if(u.length>0){this.targetsTextureNormals=this._createTexture("MorphNormalsTexture",this._textureFormat,s.length,[u]);this.targetsTextureNormals.upload()}const p=[{semantic:Cn,components:1,type:gr,asInt:true}];this.vertexBufferIds=new qo(this.device,new Qo(this.device,p,i.length),i.length,{data:new Uint32Array(i)});return true}get targets(){return this._targets}_updateMorphFlags(){this._morphPositions=false;this._morphNormals=false;for(let t=0;t<this._targets.length;t++){const e=this._targets[t];if(e.morphPositions){this._morphPositions=true}if(e.morphNormals){this._morphNormals=true}}}_createTexture(t,e,s,i){return new lo(this.device,{levels:i,arrayLength:s,width:this.morphTextureWidth,height:this.morphTextureHeight,format:e,cubemap:false,mipmaps:false,minFilter:as,magFilter:as,addressU:pe,addressV:pe,name:t})}}class eT{constructor(t){this.used=false;this.options=t;this._name=t.name;this._defaultWeight=t.defaultWeight||0;this._aabb=t.aabb;this.deltaPositions=t.deltaPositions;this.morphPositions=!!t.deltaPositions;this.morphNormals=!!t.deltaNormals}get name(){return this._name}get defaultWeight(){return this._defaultWeight}get aabb(){if(!this._aabb){this._aabb=new jt;if(this.deltaPositions){this._aabb.compute(this.deltaPositions)}}return this._aabb}clone(){return new eT(this.options)}_postInit(){if(!this.options.preserveData){this.options=null}this.used=true}}let sT;let iT=1;const nT=4;const rT=new Vt;const aT=new Vt;const oT=new It;const lT=new It;const hT=new It;const cT=new It;const dT=new It;const uT=new It;const fT=new It;const pT=new It;const mT=new It;const _T=new It;const gT=new It;const vT=new It;const yT=new It;function ST(t){return t-Math.floor(t)}function xT(t){return Math.max(Math.min(t,1),0)}function TT(t,e){return t-e*Math.floor(t/e)}function wT(t){let e=ST(t);let s=ST(255*t);let i=ST(65025*t);let n=ST(160581375*t);e-=s/255;s-=i/255;i-=n/255;n-=n/255;return[e,s,i,n]}function bT(t){let e=ST(t);let s=ST(255*t);e-=s/255;s-=s/255;return[e,s]}class ET{constructor(t){this._emitter=t}calcSpawnPosition(t,e,s,i,n){const r=this._emitter;const a=Math.random();const o=Math.random();const l=Math.random();const h=Math.random();if(r.useCpu){t[n*nT+0+r.numParticlesPot*2*nT]=a;t[n*nT+1+r.numParticlesPot*2*nT]=o;t[n*nT+2+r.numParticlesPot*2*nT]=l}lT.x=a-.5;lT.y=o-.5;lT.z=l-.5;if(r.emitterShape===i_){const t=Math.max(Math.abs(lT.x),Math.max(Math.abs(lT.y),Math.abs(lT.z)));const n=t+(.5-t)*s[0];const a=t+(.5-t)*s[1];const o=t+(.5-t)*s[2];lT.x=n*(t===Math.abs(lT.x)?Math.sign(lT.x):2*lT.x);lT.y=a*(t===Math.abs(lT.y)?Math.sign(lT.y):2*lT.y);lT.z=o*(t===Math.abs(lT.z)?Math.sign(lT.z):2*lT.z);if(!r.localSpace){oT.copy(i).add(e.transformPoint(lT))}else{oT.copy(e.transformPoint(lT))}}else{lT.normalize();const t=r.emitterRadius===0?0:r.emitterRadiusInner/r.emitterRadius;const e=h*(1-t)+t;if(!r.localSpace){oT.copy(i).add(lT.mulScalar(e*r.emitterRadius))}else{oT.copy(lT.mulScalar(e*r.emitterRadius))}}const c=wt.lerp(r.rate,r.rate2,a);let d=-c*n;if(r.pack8){const e=(oT.x-r.worldBounds.center.x)/r.worldBoundsSize.x+.5;const s=(oT.y-r.worldBounds.center.y)/r.worldBoundsSize.y+.5;const i=(oT.z-r.worldBounds.center.z)/r.worldBoundsSize.z+.5;let o=wt.lerp(r.startAngle*wt.DEG_TO_RAD,r.startAngle2*wt.DEG_TO_RAD,a);o=o%(Math.PI*2)/(Math.PI*2);const l=bT(e);t[n*nT]=l[0];t[n*nT+1]=l[1];const h=bT(s);t[n*nT+2]=h[0];t[n*nT+3]=h[1];const c=bT(i);t[n*nT+0+r.numParticlesPot*nT]=c[0];t[n*nT+1+r.numParticlesPot*nT]=c[1];const u=bT(o);t[n*nT+2+r.numParticlesPot*nT]=u[0];t[n*nT+3+r.numParticlesPot*nT]=u[1];const f=1;t[n*nT+3+r.numParticlesPot*nT*2]=f;const p=Math.max(r.lifetime,(r.numParticles-1)*Math.max(r.rate,r.rate2));const m=r.lifetime+1;d=(d+p)/(p+m);const _=wT(d);t[n*nT+0+r.numParticlesPot*nT*3]=_[0];t[n*nT+1+r.numParticlesPot*nT*3]=_[1];t[n*nT+2+r.numParticlesPot*nT*3]=_[2];t[n*nT+3+r.numParticlesPot*nT*3]=_[3]}else{t[n*nT]=oT.x;t[n*nT+1]=oT.y;t[n*nT+2]=oT.z;t[n*nT+3]=wt.lerp(r.startAngle*wt.DEG_TO_RAD,r.startAngle2*wt.DEG_TO_RAD,a);t[n*nT+3+r.numParticlesPot*nT]=d}}update(t,e,s,i,n,r,a,o){let l,h,c;const d=this._emitter;if(d.meshInstance.node){const t=d.meshInstance.node.worldTransform;for(let e=0;e<12;e++){rT.data[e]=t.data[e]}aT.copy(rT);aT.invert();sT=d.meshInstance.node.localScale;iT=Math.max(Math.max(sT.x,sT.y),sT.z)}r=d.meshInstance.node===null||d.localSpace?It.ZERO:d.meshInstance.node.getPosition();const u=d.camera?d.camera._node.getPosition():It.ZERO;const f=!d.useMesh?15:17;let p,m;let _,g,v,y,S,x,T;const w=d.precision-1;for(let e=0;e<d.numParticles;e++){const b=Math.floor(d.vbCPU[e*d.numParticleVerts*(d.useMesh?6:4)+3]);const E=s[b*nT+0+d.numParticlesPot*2*nT];hT.x=E;hT.y=s[b*nT+1+d.numParticlesPot*2*nT];hT.z=s[b*nT+2+d.numParticlesPot*2*nT];const A=d.rate+(d.rate2-d.rate)*E;const C=d.lifetime;let P=s[b*nT+3+d.numParticlesPot*nT]+a;const L=xT(P/C);let D=0;let M=0;const I=0;const R=P-a<=0||P>=C;if(R){this.calcSpawnPosition(s,i,n,r,b)}let O=P>0&&P<C;if(O){c=L*w;p=Math.floor(c);m=Math.ceil(c);c%=1;l=d.qRotSpeed[p];h=d.qRotSpeed[m];_=l+(h-l)*c;l=d.qRotSpeed2[p];h=d.qRotSpeed2[m];g=l+(h-l)*c;l=d.qScale[p];h=d.qScale[m];D=l+(h-l)*c;l=d.qScale2[p];h=d.qScale2[m];v=l+(h-l)*c;l=d.qAlpha[p];h=d.qAlpha[m];y=l+(h-l)*c;l=d.qAlpha2[p];h=d.qAlpha2[m];S=l+(h-l)*c;l=d.qRadialSpeed[p];h=d.qRadialSpeed[m];x=l+(h-l)*c;l=d.qRadialSpeed2[p];h=d.qRadialSpeed2[m];T=l+(h-l)*c;x+=(T-x)*(E*100%1);cT.x=s[b*nT];cT.y=s[b*nT+1];cT.z=s[b*nT+2];if(!d.localSpace){mT.copy(cT).sub(r)}else{mT.copy(cT)}mT.normalize().mulScalar(x);p*=3;m*=3;l=d.qLocalVelocity[p];h=d.qLocalVelocity[m];uT.x=l+(h-l)*c;l=d.qLocalVelocity[p+1];h=d.qLocalVelocity[m+1];uT.y=l+(h-l)*c;l=d.qLocalVelocity[p+2];h=d.qLocalVelocity[m+2];uT.z=l+(h-l)*c;l=d.qLocalVelocity2[p];h=d.qLocalVelocity2[m];pT.x=l+(h-l)*c;l=d.qLocalVelocity2[p+1];h=d.qLocalVelocity2[m+1];pT.y=l+(h-l)*c;l=d.qLocalVelocity2[p+2];h=d.qLocalVelocity2[m+2];pT.z=l+(h-l)*c;l=d.qVelocity[p];h=d.qVelocity[m];dT.x=l+(h-l)*c;l=d.qVelocity[p+1];h=d.qVelocity[m+1];dT.y=l+(h-l)*c;l=d.qVelocity[p+2];h=d.qVelocity[m+2];dT.z=l+(h-l)*c;l=d.qVelocity2[p];h=d.qVelocity2[m];fT.x=l+(h-l)*c;l=d.qVelocity2[p+1];h=d.qVelocity2[m+1];fT.y=l+(h-l)*c;l=d.qVelocity2[p+2];h=d.qVelocity2[m+2];fT.z=l+(h-l)*c;uT.x+=(pT.x-uT.x)*hT.x;uT.y+=(pT.y-uT.y)*hT.y;uT.z+=(pT.z-uT.z)*hT.z;if(d.initialVelocity>0){if(d.emitterShape===n_){lT.copy(hT).mulScalar(2).sub(It.ONE).normalize();uT.add(lT.mulScalar(d.initialVelocity))}else{uT.add(It.FORWARD.mulScalar(d.initialVelocity))}}dT.x+=(fT.x-dT.x)*hT.x;dT.y+=(fT.y-dT.y)*hT.y;dT.z+=(fT.z-dT.z)*hT.z;_+=(g-_)*hT.y;D=(D+(v-D)*(E*1e4%1))*iT;M=(S-y)*(E*1e3%1);if(d.meshInstance.node){if(!d.localSpace){rT.transformPoint(uT,uT)}else{uT.x/=sT.x;uT.y/=sT.y;uT.z/=sT.z}}if(!d.localSpace){uT.add(dT.mul(sT));uT.add(mT.mul(sT))}else{aT.transformPoint(dT,dT);uT.add(dT).add(mT)}vT.copy(uT);_T.copy(cT).add(uT.mulScalar(a));gT.copy(_T);s[b*nT]=gT.x;s[b*nT+1]=gT.y;s[b*nT+2]=gT.z;s[b*nT+3]+=_*a;if(d.wrap&&d.wrapBounds){if(!d.localSpace){gT.sub(r)}gT.x=TT(gT.x,d.wrapBounds.x)-d.wrapBounds.x*.5;gT.y=TT(gT.y,d.wrapBounds.y)-d.wrapBounds.y*.5;gT.z=TT(gT.z,d.wrapBounds.z)-d.wrapBounds.z*.5;if(!d.localSpace){gT.add(r)}}if(d.sort>0){if(d.sort===1){yT.copy(gT).sub(u);d.particleDistance[b]=-(yT.x*yT.x+yT.y*yT.y+yT.z*yT.z)}else if(d.sort===2){d.particleDistance[b]=P}else if(d.sort===3){d.particleDistance[b]=-P}}}if(o){if(P<0){s[b*nT+3+d.numParticlesPot*2*nT]=-1}}else{if(P>=C){P-=Math.max(C,(d.numParticles-1)*A);s[b*nT+3+d.numParticlesPot*2*nT]=d.loop?1:-1}if(P<0&&d.loop){s[b*nT+3+d.numParticlesPot*2*nT]=1}}if(s[b*nT+3+d.numParticlesPot*2*nT]<0){O=false}s[b*nT+3+d.numParticlesPot*nT]=P;for(let i=0;i<d.numParticleVerts;i++){const n=(e*d.numParticleVerts+i)*(d.useMesh?6:4);let r=d.vbCPU[n];let a=d.vbCPU[n+1];let o=d.vbCPU[n+2];if(!O){r=a=o=0}const l=e*d.numParticleVerts*f+i*f;t[l]=gT.x;t[l+1]=gT.y;t[l+2]=gT.z;t[l+3]=L;t[l+4]=d.alignToMotion?I:s[b*nT+3];t[l+5]=D;t[l+6]=M;t[l+7]=vT.x;t[l+8]=r;t[l+9]=a;t[l+10]=o;t[l+11]=vT.y;t[l+12]=b;t[l+13]=vT.z;t[l+14]=d.vbCPU[n+3];if(d.useMesh){t[l+15]=d.vbCPU[n+4];t[l+16]=d.vbCPU[n+5]}}}if(d.sort>Zm&&d.camera){const t=d.useMesh?6:4;const s=d.particleDistance;for(let i=0;i<d.numParticles;i++){e[i][0]=i;e[i][1]=s[Math.floor(d.vbCPU[i*d.numParticleVerts*t+3])]}d.vbOld.set(d.vbCPU);e.sort(((t,e)=>t[1]-e[1]));for(let s=0;s<d.numParticles;s++){const i=e[s][0]*d.numParticleVerts*t;const n=s*d.numParticleVerts*t;for(let e=0;e<d.numParticleVerts*t;e++){d.vbCPU[n+e]=d.vbOld[i+e]}}}}}const AT=new Rt;const CT=new Rt;const PT=new Rt;class LT{constructor(t,e){this._emitter=t;this.frameRandomUniform=new Float32Array(3);this.emitterPosUniform=new Float32Array(3);this.emitterScaleUniform=new Float32Array([1,1,1]);this.worldBoundsMulUniform=new Float32Array(3);this.worldBoundsAddUniform=new Float32Array(3);this.inBoundsSizeUniform=new Float32Array(3);this.inBoundsCenterUniform=new Float32Array(3);this.constantParticleTexIN=e.scope.resolve("particleTexIN");this.constantParticleTexOUT=e.scope.resolve("particleTexOUT");this.constantEmitterPos=e.scope.resolve("emitterPos");this.constantEmitterScale=e.scope.resolve("emitterScale");this.constantSpawnBounds=e.scope.resolve("spawnBounds");this.constantSpawnPosInnerRatio=e.scope.resolve("spawnPosInnerRatio");this.constantSpawnBoundsSphere=e.scope.resolve("spawnBoundsSphere");this.constantSpawnBoundsSphereInnerRatio=e.scope.resolve("spawnBoundsSphereInnerRatio");this.constantInitialVelocity=e.scope.resolve("initialVelocity");this.constantFrameRandom=e.scope.resolve("frameRandom");this.constantDelta=e.scope.resolve("delta");this.constantRate=e.scope.resolve("rate");this.constantRateDiv=e.scope.resolve("rateDiv");this.constantLifetime=e.scope.resolve("lifetime");this.constantGraphSampleSize=e.scope.resolve("graphSampleSize");this.constantGraphNumSamples=e.scope.resolve("graphNumSamples");this.constantInternalTex0=e.scope.resolve("internalTex0");this.constantInternalTex1=e.scope.resolve("internalTex1");this.constantInternalTex2=e.scope.resolve("internalTex2");this.constantInternalTex3=e.scope.resolve("internalTex3");this.constantEmitterMatrix=e.scope.resolve("emitterMatrix");this.constantEmitterMatrixInv=e.scope.resolve("emitterMatrixInv");this.constantNumParticles=e.scope.resolve("numParticles");this.constantNumParticlesPot=e.scope.resolve("numParticlesPot");this.constantLocalVelocityDivMult=e.scope.resolve("localVelocityDivMult");this.constantVelocityDivMult=e.scope.resolve("velocityDivMult");this.constantRotSpeedDivMult=e.scope.resolve("rotSpeedDivMult");this.constantSeed=e.scope.resolve("seed");this.constantStartAngle=e.scope.resolve("startAngle");this.constantStartAngle2=e.scope.resolve("startAngle2");this.constantOutBoundsMul=e.scope.resolve("outBoundsMul");this.constantOutBoundsAdd=e.scope.resolve("outBoundsAdd");this.constantInBoundsSize=e.scope.resolve("inBoundsSize");this.constantInBoundsCenter=e.scope.resolve("inBoundsCenter");this.constantMaxVel=e.scope.resolve("maxVel");this.constantFaceTangent=e.scope.resolve("faceTangent");this.constantFaceBinorm=e.scope.resolve("faceBinorm")}_setInputBounds(){this.inBoundsSizeUniform[0]=this._emitter.prevWorldBoundsSize.x;this.inBoundsSizeUniform[1]=this._emitter.prevWorldBoundsSize.y;this.inBoundsSizeUniform[2]=this._emitter.prevWorldBoundsSize.z;this.constantInBoundsSize.setValue(this.inBoundsSizeUniform);this.inBoundsCenterUniform[0]=this._emitter.prevWorldBoundsCenter.x;this.inBoundsCenterUniform[1]=this._emitter.prevWorldBoundsCenter.y;this.inBoundsCenterUniform[2]=this._emitter.prevWorldBoundsCenter.z;this.constantInBoundsCenter.setValue(this.inBoundsCenterUniform)}randomize(){this.frameRandomUniform[0]=Math.random();this.frameRandomUniform[1]=Math.random();this.frameRandomUniform[2]=Math.random()}update(t,e,s,i,n){const r=this._emitter;t.setBlendState(Ro.NOBLEND);t.setDepthState(Uo.NODEPTH);t.setCullMode(ss);this.randomize();this.constantGraphSampleSize.setValue(1/r.precision);this.constantGraphNumSamples.setValue(r.precision);this.constantNumParticles.setValue(r.numParticles);this.constantNumParticlesPot.setValue(r.numParticlesPot);this.constantInternalTex0.setValue(r.internalTex0);this.constantInternalTex1.setValue(r.internalTex1);this.constantInternalTex2.setValue(r.internalTex2);this.constantInternalTex3.setValue(r.internalTex3);const a=r.meshInstance.node;const o=a===null?It.ONE:a.localScale;if(r.pack8){this.worldBoundsMulUniform[0]=r.worldBoundsMul.x;this.worldBoundsMulUniform[1]=r.worldBoundsMul.y;this.worldBoundsMulUniform[2]=r.worldBoundsMul.z;this.constantOutBoundsMul.setValue(this.worldBoundsMulUniform);this.worldBoundsAddUniform[0]=r.worldBoundsAdd.x;this.worldBoundsAddUniform[1]=r.worldBoundsAdd.y;this.worldBoundsAddUniform[2]=r.worldBoundsAdd.z;this.constantOutBoundsAdd.setValue(this.worldBoundsAddUniform);this._setInputBounds();let t=r.maxVel*Math.max(Math.max(o.x,o.y),o.z);t=Math.max(t,1);this.constantMaxVel.setValue(t)}const l=a===null||r.localSpace?It.ZERO:a.getPosition();const h=a===null?Vt.IDENTITY:a.getWorldTransform();if(r.emitterShape===i_){AT.setFromMat4(e);this.constantSpawnBounds.setValue(AT.data);this.constantSpawnPosInnerRatio.setValue(s)}else{this.constantSpawnBoundsSphere.setValue(r.emitterRadius);this.constantSpawnBoundsSphereInnerRatio.setValue(r.emitterRadius===0?0:r.emitterRadiusInner/r.emitterRadius)}this.constantInitialVelocity.setValue(r.initialVelocity);CT.setFromMat4(h);PT.invertMat4(h);this.emitterPosUniform[0]=l.x;this.emitterPosUniform[1]=l.y;this.emitterPosUniform[2]=l.z;this.constantEmitterPos.setValue(this.emitterPosUniform);this.constantFrameRandom.setValue(this.frameRandomUniform);this.constantDelta.setValue(i);this.constantRate.setValue(r.rate);this.constantRateDiv.setValue(r.rate2-r.rate);this.constantStartAngle.setValue(r.startAngle*wt.DEG_TO_RAD);this.constantStartAngle2.setValue(r.startAngle2*wt.DEG_TO_RAD);this.constantSeed.setValue(r.seed);this.constantLifetime.setValue(r.lifetime);this.emitterScaleUniform[0]=o.x;this.emitterScaleUniform[1]=o.y;this.emitterScaleUniform[2]=o.z;this.constantEmitterScale.setValue(this.emitterScaleUniform);this.constantEmitterMatrix.setValue(CT.data);this.constantEmitterMatrixInv.setValue(PT.data);this.constantLocalVelocityDivMult.setValue(r.localVelocityUMax);this.constantVelocityDivMult.setValue(r.velocityUMax);this.constantRotSpeedDivMult.setValue(r.rotSpeedUMax[0]);let c=r.swapTex?r.particleTexOUT:r.particleTexIN;c=r.beenReset?r.particleTexStart:c;const d=r.swapTex?r.particleTexIN:r.particleTexOUT;this.constantParticleTexIN.setValue(c);Iv(t,r.swapTex?r.rtParticleTexIN:r.rtParticleTexOUT,!n?r.loop?r.shaderParticleUpdateRespawn:r.shaderParticleUpdateNoRespawn:r.shaderParticleUpdateOnStop);r.material.setParameter("particleTexOUT",c);r.material.setParameter("particleTexIN",d);r.beenReset=false;r.swapTex=!r.swapTex;r.prevWorldBoundsSize.copy(r.worldBoundsSize);r.prevWorldBoundsCenter.copy(r.worldBounds.center);if(r.pack8){this._setInputBounds()}}}const DT=["NONE","VERTEX","MAP"];class MT extends fv{generateKey(t){const e=fv.definesHash(t.defines);let s=`particle_${e}_`;for(const e in t){if(t.hasOwnProperty(e)){s+=t[e]}}return s}createVertexDefines(t,e){const s=new Map(t.defines);if(t.mesh)s.set("USE_MESH","");if(t.meshUv)s.set("USE_MESH_UV","");if(t.localSpace)s.set("LOCAL_SPACE","");if(t.screenSpace)s.set("SCREEN_SPACE","");if(t.animTex)s.set("ANIMTEX","");if(t.soft>0)s.set("SOFT","");if(t.stretch>0)s.set("STRETCH","");if(t.customFace)s.set("CUSTOM_FACE","");if(t.pack8)s.set("PACK8","");if(t.localSpace)s.set("LOCAL_SPACE","");if(t.animTexLoop)s.set("ANIMTEX_LOOP","");if(t.wrap)s.set("WRAP","");if(t.alignToMotion)s.set("ALIGN_TO_MOTION","");s.set("NORMAL",DT[t.normal]);e.particle_vertexData=Ki;if(t.mesh&&t.meshUv){e.particle_uv=nn}if(t.useCpu){e.particle_vertexData2=fn;e.particle_vertexData3=pn;e.particle_vertexData4=mn;e.particle_vertexData5=_n}return s}createFragmentDefines(t){const e=new Map(t.defines);if(t.soft>0)e.set("SOFT","");if(t.halflambert)e.set("HALF_LAMBERT","");e.set("NORMAL",DT[t.normal]);e.set("BLEND",Qp[t.blend]);return e}createShaderDefinition(t,e){const s=t.isWebGPU?dr:cr;const i=yv.get(t,s);const n={};const r=this.createVertexDefines(e,n);const a=this.createFragmentDefines(e);const o=`PARTICLE_${e.useCpu?"CPU":"GPU"}\n`;r.set(o,"");a.set(o,"");const l=new Map(i);return Yh.createDefinition(t,{name:"ParticleShader",shaderLanguage:s,attributes:n,vertexCode:i.get("particle_shaderVS"),fragmentCode:i.get("particle_shaderPS"),fragmentDefines:a,fragmentIncludes:l,vertexIncludes:l,vertexDefines:r})}}const IT=new MT;class RT extends wS{constructor(t){super(),this.emitter=null;this.emitter=t}getShaderVariant(t){const{device:e,scene:s,cameraShaderParams:i,objDefs:n}=t;const{emitter:r}=this;const a={defines:Tv.getCoreDefines(this,t),pass:pg,useCpu:this.emitter.useCpu,normal:r.lighting?r.normalMap!==null?2:1:0,halflambert:this.emitter.halfLambert,stretch:this.emitter.stretch,alignToMotion:this.emitter.alignToMotion,soft:this.emitter.depthSoftening,mesh:this.emitter.useMesh,meshUv:n&Y_,gamma:i?.shaderOutputGamma??T_,toneMap:i?.toneMapping??E_,fog:s&&!this.emitter.noFog?s.fog.type:"none",wrap:this.emitter.wrap&&this.emitter.wrapBounds,localSpace:this.emitter.localSpace,screenSpace:r.inTools?false:this.emitter.screenSpace,blend:this.emitter.blendType,animTex:this.emitter._isAnimated(),animTexLoop:this.emitter.animLoop,pack8:this.emitter.pack8,customFace:this.emitter.orientation!==r_};const o=new hv(t.viewUniformFormat,t.viewBindGroupFormat,t.vertexFormat);const l=dv(e);l.register("particle",IT);return l.getProgram("particle",a,o,this.userId)}}const OT=[[-1,-1],[1,-1],[1,1],[-1,1]];function FT(t,e,s,i,n=ks,r,a){let o=as;if(a&&(n===Ds||n===Hs)){o=os}const l=new lo(t,{width:e,height:s,format:n,cubemap:false,mipmaps:false,minFilter:o,magFilter:o,addressU:pe,addressV:pe,name:"ParticleSystemTexture"});const h=l.lock();if(n===Ds||n===Hs){const t=new Uint8Array(i.length);for(let e=0;e<i.length;e++){t[e]=i[e]*r*255}i=t}h.set(i);l.unlock();return l}function NT(t){return Math.max(Math.min(t,1),0)}const kT=new At([0,0,1,0]);const BT=new At([0,1,1,1]);const UT=new Ct([0,0,1,0],[0,0,1,0],[0,0,1,0]);const zT=new Ct([0,1,1,1],[0,1,1,1],[0,1,1,1]);let VT=2;const GT=4;const HT=new Float32Array(3);const WT=new Vt;const XT=new It;const qT=new It;const $T=new It;let jT;let YT;function KT(t,e){if(YT[t]!==undefined&&YT[t]!==null){jT[t]=YT[t]}else{jT[t]=e}}function ZT(t,e,s){const i=t*255<<16|e*255<<8|s*255;return i/(1<<24)}function QT(t,e){const s=t.length/3;const i=new Array(s*4);for(let n=0;n<s;n++){i[n*4]=t[n*3];i[n*4+1]=t[n*3+1];i[n*4+2]=t[n*3+2];i[n*4+3]=ZT(e[n*3],e[n*3+1],e[n*3+2])}return i}function JT(t,e){const s=new Array(e.length*4);for(let i=0;i<e.length;i++){s[i*4]=t[i*3];s[i*4+1]=t[i*3+1];s[i*4+2]=t[i*3+2];s[i*4+3]=e[i]}return s}function tw(t,e,s,i,n){const r=new Array(t.length*4);for(let a=0;a<t.length;a++){r[a*4]=t[a];r[a*4+1]=e[a];r[a*4+2]=0;r[a*4+3]=ZT(s[a],i[a],n[a])}return r}function ew(t,e){const s=new Array(t.length*4);for(let i=0;i<t.length;i++){s[i*4]=t[i];s[i*4+1]=e[i];s[i*4+2]=0;s[i*4+3]=0}return s}function sw(t){const e=Math.max(t.rate,t.rate2)*t.numParticles+t.lifetime;return Date.now()+e*1e3}function iw(t,e){const s=new Float32Array(t.length);for(let i=0;i<t.length;i++){s[i]=t[i]-e[i]}return s}function nw(t,e){const s=e.length;const i=t.length/s;for(let n=0;n<i;n++){for(let i=0;i<s;i++){const r=Math.abs(t[n*s+i]);e[i]=Math.max(e[i],r)}}}function rw(t,e){const s=e.length;const i=t.length/s;for(let n=0;n<i;n++){for(let i=0;i<s;i++){t[n*s+i]/=e[i]===0?1:e[i];t[n*s+i]*=.5;t[n*s+i]+=.5}}}function aw(t,e,s){const i=iw(e,t);nw(i,s);rw(i,s);return i}const ow=new ro;class lw{constructor(t,e){this.material=null;this.internalTex0=null;this.internalTex1=null;this.internalTex2=null;this.colorParam=null;this.graphicsDevice=t;const s=t;const i=32;this.precision=i;this._addTimeTime=0;jT=this;YT=e;KT("numParticles",1);if(this.numParticles>t.maxTextureSize){this.numParticles=t.maxTextureSize}KT("rate",1);KT("rate2",this.rate);KT("lifetime",50);KT("emitterExtents",new It(0,0,0));KT("emitterExtentsInner",new It(0,0,0));KT("emitterRadius",0);KT("emitterRadiusInner",0);KT("emitterShape",i_);KT("initialVelocity",1);KT("wrap",false);KT("localSpace",false);KT("screenSpace",false);KT("wrapBounds",null);KT("colorMap",this.defaultParamTexture);KT("normalMap",null);KT("loop",true);KT("preWarm",false);KT("sort",Zm);KT("mode",e_);KT("scene",null);KT("lighting",false);KT("halfLambert",false);KT("intensity",1);KT("stretch",0);KT("alignToMotion",false);KT("depthSoftening",0);KT("mesh",null);KT("particleNormal",new It(0,1,0));KT("orientation",r_);KT("depthWrite",false);KT("noFog",false);KT("blendType",Hp);KT("node",null);KT("startAngle",0);KT("startAngle2",this.startAngle);KT("animTilesX",1);KT("animTilesY",1);KT("animStartFrame",0);KT("animNumFrames",1);KT("animNumAnimations",1);KT("animIndex",0);KT("randomizeAnimIndex",false);KT("animSpeed",1);KT("animLoop",true);this._gpuUpdater=new LT(this,s);this._cpuUpdater=new ET(this);this.emitterPosUniform=new Float32Array(3);this.wrapBoundsUniform=new Float32Array(3);this.emitterScaleUniform=new Float32Array([1,1,1]);KT("colorGraph",zT);KT("colorGraph2",this.colorGraph);KT("scaleGraph",BT);KT("scaleGraph2",this.scaleGraph);KT("alphaGraph",BT);KT("alphaGraph2",this.alphaGraph);KT("localVelocityGraph",UT);KT("localVelocityGraph2",this.localVelocityGraph);KT("velocityGraph",UT);KT("velocityGraph2",this.velocityGraph);KT("rotationSpeedGraph",kT);KT("rotationSpeedGraph2",this.rotationSpeedGraph);KT("radialSpeedGraph",kT);KT("radialSpeedGraph2",this.radialSpeedGraph);this.animTilesParams=new Float32Array(2);this.animParams=new Float32Array(4);this.animIndexParams=new Float32Array(2);this.vbToSort=null;this.vbOld=null;this.particleDistance=null;this.camera=null;this.swapTex=false;this.useMesh=true;this.useCpu=!t.supportsGpuParticles;this.pack8=true;this.localBounds=new jt;this.worldBoundsNoTrail=new jt;this.worldBoundsTrail=[new jt,new jt];this.worldBounds=new jt;this.worldBoundsSize=new It;this.prevWorldBoundsSize=new It;this.prevWorldBoundsCenter=new It;this.prevEmitterExtents=this.emitterExtents;this.prevEmitterRadius=this.emitterRadius;this.worldBoundsMul=new It;this.worldBoundsAdd=new It;this.timeToSwitchBounds=0;this.shaderParticleUpdateRespawn=null;this.shaderParticleUpdateNoRespawn=null;this.shaderParticleUpdateOnStop=null;this.numParticleVerts=0;this.numParticleIndices=0;this.material=null;this.meshInstance=null;this.drawOrder=0;this.seed=Math.random();this.fixedTimeStep=1/60;this.maxSubSteps=10;this.simTime=0;this.simTimeTotal=0;this.beenReset=false;this._layer=null;this.rebuild()}get defaultParamTexture(){return ow.get(this.graphicsDevice,(()=>{const t=16;const e=t*.5+.5;const s=new Float32Array(t*t*4);for(let i=0;i<t;i++){for(let n=0;n<t;n++){const r=n+1-e;const a=i+1-e;const o=NT(1-NT(Math.sqrt(r*r+a*a)/t)-.5);const l=i*t+n;s[l*4]=1;s[l*4+1]=1;s[l*4+2]=1;s[l*4+3]=o}}const i=FT(this.graphicsDevice,t,t,s,Hs,1,true);i.minFilter=os;i.magFilter=os;return i}))}onChangeCamera(){this.resetMaterial()}calculateBoundsMad(){this.worldBoundsMul.x=1/this.worldBoundsSize.x;this.worldBoundsMul.y=1/this.worldBoundsSize.y;this.worldBoundsMul.z=1/this.worldBoundsSize.z;this.worldBoundsAdd.copy(this.worldBounds.center).mul(this.worldBoundsMul).mulScalar(-1);this.worldBoundsAdd.x+=.5;this.worldBoundsAdd.y+=.5;this.worldBoundsAdd.z+=.5}calculateWorldBounds(){if(!this.node)return;this.prevWorldBoundsSize.copy(this.worldBoundsSize);this.prevWorldBoundsCenter.copy(this.worldBounds.center);if(!this.useCpu){let t=false;if(this.emitterShape===i_){t=!this.emitterExtents.equals(this.prevEmitterExtents)}else{t=!(this.emitterRadius===this.prevEmitterRadius)}if(t){this.calculateLocalBounds()}}const t=this.node.getWorldTransform();if(this.localSpace){this.worldBoundsNoTrail.copy(this.localBounds)}else{this.worldBoundsNoTrail.setFromTransformedAabb(this.localBounds,t)}this.worldBoundsTrail[0].add(this.worldBoundsNoTrail);this.worldBoundsTrail[1].add(this.worldBoundsNoTrail);const e=this.simTimeTotal;if(e>=this.timeToSwitchBounds){this.worldBoundsTrail[0].copy(this.worldBoundsTrail[1]);this.worldBoundsTrail[1].copy(this.worldBoundsNoTrail);this.timeToSwitchBounds=e+this.lifetime}this.worldBounds.copy(this.worldBoundsTrail[0]);this.worldBoundsSize.copy(this.worldBounds.halfExtents).mulScalar(2);if(this.localSpace){this.meshInstance.aabb.setFromTransformedAabb(this.worldBounds,t);this.meshInstance.mesh.aabb.setFromTransformedAabb(this.worldBounds,t)}else{this.meshInstance.aabb.copy(this.worldBounds);this.meshInstance.mesh.aabb.copy(this.worldBounds)}this.meshInstance._aabbVer=1-this.meshInstance._aabbVer;if(this.pack8)this.calculateBoundsMad()}resetWorldBounds(){if(!this.node)return;this.worldBoundsNoTrail.setFromTransformedAabb(this.localBounds,this.localSpace?Vt.IDENTITY:this.node.getWorldTransform());this.worldBoundsTrail[0].copy(this.worldBoundsNoTrail);this.worldBoundsTrail[1].copy(this.worldBoundsNoTrail);this.worldBounds.copy(this.worldBoundsTrail[0]);this.worldBoundsSize.copy(this.worldBounds.halfExtents).mulScalar(2);this.prevWorldBoundsSize.copy(this.worldBoundsSize);this.prevWorldBoundsCenter.copy(this.worldBounds.center);this.simTimeTotal=0;this.timeToSwitchBounds=0}calculateLocalBounds(){let t=Number.MAX_VALUE;let e=Number.MAX_VALUE;let s=Number.MAX_VALUE;let i=-Number.MAX_VALUE;let n=-Number.MAX_VALUE;let r=-Number.MAX_VALUE;let a=0;let o=0;const l=this.lifetime/this.precision;const h=[this.qVelocity,this.qVelocity2];const c=[this.qLocalVelocity,this.qLocalVelocity2];const d=[0,0];const u=[0,0];const f=[0,0];const p=[0,0];const m=[0,0];let _,g,v;for(let y=0;y<this.precision+1;y++){const S=Math.min(y,this.precision-1);for(let a=0;a<2;a++){_=c[a][S*3+0]*l+d[a];g=c[a][S*3+1]*l+u[a];v=c[a][S*3+2]*l+f[a];t=Math.min(_,t);e=Math.min(g,e);s=Math.min(v,s);i=Math.max(_,i);n=Math.max(g,n);r=Math.max(v,r);d[a]=_;u[a]=g;f[a]=v}for(let t=0;t<2;t++){m[t]+=l*Math.sqrt(h[t][S*3+0]*h[t][S*3+0]+h[t][S*3+1]*h[t][S*3+1]+h[t][S*3+2]*h[t][S*3+2])}p[0]+=this.qRadialSpeed[S]*l;p[1]+=this.qRadialSpeed2[S]*l;a=Math.max(a,Math.max(Math.abs(p[0]),Math.abs(p[1])));o=Math.max(o,this.qScale[S])}if(this.emitterShape===i_){_=this.emitterExtents.x*.5;g=this.emitterExtents.y*.5;v=this.emitterExtents.z*.5}else{_=this.emitterRadius;g=this.emitterRadius;v=this.emitterRadius}const y=Math.max(m[0],m[1]);qT.x=t-o-_-a-y;qT.y=e-o-g-a-y;qT.z=s-o-v-a-y;$T.x=i+o+_+a+y;$T.y=n+o+g+a+y;$T.z=r+o+v+a+y;this.localBounds.setMinMax(qT,$T)}rebuild(){const t=this.graphicsDevice;if(this.colorMap===null)this.colorMap=this.defaultParamTexture;this.spawnBounds=this.emitterShape===i_?this.emitterExtents:this.emitterRadius;this.useCpu=this.useCpu||this.sort>Zm||t.maxVertexTextures<=1||t.fragmentUniformsCount<64||t.forceCpuParticles;this._destroyResources();this.pack8=(this.pack8||!t.textureFloatRenderable)&&!this.useCpu;VT=this.useCpu||this.pack8?4:2;this.useMesh=!!this.mesh;this.numParticlesPot=wt.nextPowerOfTwo(this.numParticles);this.rebuildGraphs();this.calculateLocalBounds();this.resetWorldBounds();if(this.node){this.worldBounds.setFromTransformedAabb(this.localBounds,this.localSpace?Vt.IDENTITY:this.node.getWorldTransform());this.worldBoundsTrail[0].copy(this.worldBounds);this.worldBoundsTrail[1].copy(this.worldBounds);this.worldBoundsSize.copy(this.worldBounds.halfExtents).mulScalar(2);this.prevWorldBoundsSize.copy(this.worldBoundsSize);this.prevWorldBoundsCenter.copy(this.worldBounds.center);if(this.pack8)this.calculateBoundsMad()}this.vbToSort=new Array(this.numParticles);for(let t=0;t<this.numParticles;t++)this.vbToSort[t]=[0,0];this.particleDistance=new Float32Array(this.numParticles);this._gpuUpdater.randomize();this.particleTex=new Float32Array(this.numParticlesPot*VT*GT);const e=this.node===null||this.localSpace?It.ZERO:this.node.getPosition();if(this.emitterShape===i_){if(this.node===null||this.localSpace){WT.setTRS(It.ZERO,Gt.IDENTITY,this.spawnBounds)}else{WT.setTRS(It.ZERO,this.node.getRotation(),XT.copy(this.spawnBounds).mul(this.node.localScale))}HT[0]=this.emitterExtents.x!==0?this.emitterExtentsInner.x/this.emitterExtents.x:0;HT[1]=this.emitterExtents.y!==0?this.emitterExtentsInner.y/this.emitterExtents.y:0;HT[2]=this.emitterExtents.z!==0?this.emitterExtentsInner.z/this.emitterExtents.z:0}for(let t=0;t<this.numParticles;t++){this._cpuUpdater.calcSpawnPosition(this.particleTex,WT,HT,e,t);if(this.useCpu)this.particleTex[t*GT+3+this.numParticlesPot*2*GT]=1}this.particleTexStart=new Float32Array(this.numParticlesPot*VT*GT);for(let t=0;t<this.particleTexStart.length;t++){this.particleTexStart[t]=this.particleTex[t]}if(!this.useCpu){if(this.pack8){this.particleTexIN=FT(t,this.numParticlesPot,VT,this.particleTex,Ds,1,false);this.particleTexOUT=FT(t,this.numParticlesPot,VT,this.particleTex,Ds,1,false);this.particleTexStart=FT(t,this.numParticlesPot,VT,this.particleTexStart,Ds,1,false)}else{this.particleTexIN=FT(t,this.numParticlesPot,VT,this.particleTex);this.particleTexOUT=FT(t,this.numParticlesPot,VT,this.particleTex);this.particleTexStart=FT(t,this.numParticlesPot,VT,this.particleTexStart)}this.rtParticleTexIN=new il({colorBuffer:this.particleTexIN,depth:false});this.rtParticleTexOUT=new il({colorBuffer:this.particleTexOUT,depth:false});this.swapTex=false}const s=new Map;if(this.localSpace)s.set("LOCAL_SPACE","");if(this.pack8)s.set("PACK8","");if(this.emitterShape===i_)s.set("EMITTERSHAPE_BOX","");const i=`Shape:${this.emitterShape}-Pack:${this.pack8}-Local:${this.localSpace}`;const n=yv.get(t,t.isWebGPU?dr:cr);const r=new Map(n);const a={attributes:{vertex_position:Ki},vertexChunk:"fullscreenQuadVS",fragmentChunk:"particle_simulationPS",fragmentDefines:s,fragmentIncludes:r};a.uniqueName=`ParticleUpdateRespawn-${i}`;s.set("RESPAWN","");this.shaderParticleUpdateRespawn=Tv.createShader(t,a);s.delete("RESPAWN");a.uniqueName=`ParticleUpdateNoRespawn-${i}`;s.set("NO_RESPAWN","");this.shaderParticleUpdateNoRespawn=Tv.createShader(t,a);s.delete("NO_RESPAWN");a.uniqueName=`ParticleUpdateStop-${i}`;s.set("ON_STOP","");this.shaderParticleUpdateOnStop=Tv.createShader(t,a);this.numParticleVerts=this.useMesh?this.mesh.vertexBuffer.numVertices:4;this.numParticleIndices=this.useMesh?this.mesh.indexBuffer[0].numIndices:6;this._allocate(this.numParticles);const o=new Vv(t);o.vertexBuffer=this.vertexBuffer;o.indexBuffer[0]=this.indexBuffer;o.primitive[0].type=$i;o.primitive[0].base=0;o.primitive[0].count=this.numParticles*this.numParticleIndices;o.primitive[0].indexed=true;this.material=this._createMaterial();this.resetMaterial();const l=this.meshInstance?this.meshInstance.visible:true;this.meshInstance=new sy(o,this.material,this.node);this.meshInstance.pick=false;this.meshInstance.updateKey();this.meshInstance.cull=true;if(this.localSpace){this.meshInstance.aabb.setFromTransformedAabb(this.worldBounds,this.node.getWorldTransform())}else{this.meshInstance.aabb.copy(this.worldBounds)}this.meshInstance._updateAabb=false;this.meshInstance.visible=l;this._setMaterialTextures();this.resetTime();this.addTime(0,false);if(this.preWarm)this.prewarm(this.lifetime)}_isAnimated(){return this.animNumFrames>=1&&(this.animTilesX>1||this.animTilesY>1)&&(this.colorMap&&this.colorMap!==this.defaultParamTexture||this.normalMap)}rebuildGraphs(){const t=this.precision;const e=this.graphicsDevice;this.qLocalVelocity=this.localVelocityGraph.quantize(t);this.qVelocity=this.velocityGraph.quantize(t);this.qColor=this.colorGraph.quantizeClamped(t,0,1);this.qRotSpeed=this.rotationSpeedGraph.quantize(t);this.qScale=this.scaleGraph.quantize(t);this.qAlpha=this.alphaGraph.quantize(t);this.qRadialSpeed=this.radialSpeedGraph.quantize(t);this.qLocalVelocity2=this.localVelocityGraph2.quantize(t);this.qVelocity2=this.velocityGraph2.quantize(t);this.qColor2=this.colorGraph2.quantizeClamped(t,0,1);this.qRotSpeed2=this.rotationSpeedGraph2.quantize(t);this.qScale2=this.scaleGraph2.quantize(t);this.qAlpha2=this.alphaGraph2.quantize(t);this.qRadialSpeed2=this.radialSpeedGraph2.quantize(t);for(let e=0;e<t;e++){this.qRotSpeed[e]*=wt.DEG_TO_RAD;this.qRotSpeed2[e]*=wt.DEG_TO_RAD}this.localVelocityUMax=new Float32Array(3);this.velocityUMax=new Float32Array(3);this.colorUMax=new Float32Array(3);this.rotSpeedUMax=[0];this.scaleUMax=[0];this.alphaUMax=[0];this.radialSpeedUMax=[0];this.qLocalVelocityDiv=aw(this.qLocalVelocity,this.qLocalVelocity2,this.localVelocityUMax);this.qVelocityDiv=aw(this.qVelocity,this.qVelocity2,this.velocityUMax);this.qColorDiv=aw(this.qColor,this.qColor2,this.colorUMax);this.qRotSpeedDiv=aw(this.qRotSpeed,this.qRotSpeed2,this.rotSpeedUMax);this.qScaleDiv=aw(this.qScale,this.qScale2,this.scaleUMax);this.qAlphaDiv=aw(this.qAlpha,this.qAlpha2,this.alphaUMax);this.qRadialSpeedDiv=aw(this.qRadialSpeed,this.qRadialSpeed2,this.radialSpeedUMax);if(this.pack8){const t=[0,0,0];nw(this.qVelocity,t);const e=[0,0,0];nw(this.qVelocity2,e);const s=[0,0,0];nw(this.qLocalVelocity,s);const i=[0,0,0];nw(this.qLocalVelocity2,i);const n=[0];nw(this.qRadialSpeed,n);const r=[0];nw(this.qRadialSpeed2,r);let a=Math.max(t[0],e[0]);a=Math.max(a,t[1]);a=Math.max(a,e[1]);a=Math.max(a,t[2]);a=Math.max(a,e[2]);let o=Math.max(s[0],i[0]);o=Math.max(o,s[1]);o=Math.max(o,i[1]);o=Math.max(o,s[2]);o=Math.max(o,i[2]);const l=Math.max(n[0],r[0]);this.maxVel=a+o+l}if(!this.useCpu){this.internalTex0=FT(e,t,1,QT(this.qLocalVelocity,this.qLocalVelocityDiv));this.internalTex1=FT(e,t,1,QT(this.qVelocity,this.qVelocityDiv));this.internalTex2=FT(e,t,1,tw(this.qRotSpeed,this.qScale,this.qScaleDiv,this.qRotSpeedDiv,this.qAlphaDiv));this.internalTex3=FT(e,t,1,ew(this.qRadialSpeed,this.qRadialSpeedDiv))}this.colorParam=FT(e,t,1,JT(this.qColor,this.qAlpha),Hs,1,true)}_setMaterialTextures(){if(this.colorMap){this.material.setParameter("colorMap",this.colorMap);if(this.lighting&&this.normalMap){this.material.setParameter("normalMap",this.normalMap)}}}_createMaterial(){const t=new RT(this);t.name=`EmitterMaterial:${this.node.name}`;t.cull=ss;t.alphaWrite=false;t.blendType=this.blendType;t.depthWrite=this.depthWrite;return t}resetMaterial(){const t=this.material;t.setParameter("stretch",this.stretch);if(this._isAnimated()){t.setParameter("animTexTilesParams",this.animTilesParams);t.setParameter("animTexParams",this.animParams);t.setParameter("animTexIndexParams",this.animIndexParams)}t.setParameter("colorMult",this.intensity);if(!this.useCpu){t.setParameter("internalTex0",this.internalTex0);t.setParameter("internalTex1",this.internalTex1);t.setParameter("internalTex2",this.internalTex2);t.setParameter("internalTex3",this.internalTex3)}t.setParameter("colorParam",this.colorParam);t.setParameter("numParticles",this.numParticles);t.setParameter("numParticlesPot",this.numParticlesPot);t.setParameter("lifetime",this.lifetime);t.setParameter("rate",this.rate);t.setParameter("rateDiv",this.rate2-this.rate);t.setParameter("seed",this.seed);t.setParameter("scaleDivMult",this.scaleUMax[0]);t.setParameter("alphaDivMult",this.alphaUMax[0]);t.setParameter("radialSpeedDivMult",this.radialSpeedUMax[0]);t.setParameter("graphNumSamples",this.precision);t.setParameter("graphSampleSize",1/this.precision);t.setParameter("emitterScale",new Float32Array([1,1,1]));if(this.pack8){this._gpuUpdater._setInputBounds();t.setParameter("inBoundsSize",this._gpuUpdater.inBoundsSizeUniform);t.setParameter("inBoundsCenter",this._gpuUpdater.inBoundsCenterUniform);t.setParameter("maxVel",this.maxVel)}if(this.wrap&&this.wrapBounds){this.wrapBoundsUniform[0]=this.wrapBounds.x;this.wrapBoundsUniform[1]=this.wrapBounds.y;this.wrapBoundsUniform[2]=this.wrapBounds.z;t.setParameter("wrapBounds",this.wrapBoundsUniform)}this._setMaterialTextures();if(this.depthSoftening>0){t.setParameter("softening",1/(this.depthSoftening*this.depthSoftening*100))}if(this.stretch>0)t.cull=ss;this._compParticleFaceParams()}_compParticleFaceParams(){let t,e;if(this.orientation===r_){t=new Float32Array([1,0,0]);e=new Float32Array([0,0,1])}else{let s;if(this.orientation===a_){s=this.particleNormal.normalize()}else{const t=this.node===null?Vt.IDENTITY:this.node.getWorldTransform();s=t.transformVector(this.particleNormal).normalize()}const i=new It(1,0,0);if(Math.abs(i.dot(s))===1){i.set(0,0,1)}const n=(new It).cross(s,i).normalize();i.cross(n,s).normalize();t=new Float32Array([i.x,i.y,i.z]);e=new Float32Array([n.x,n.y,n.z])}this.material.setParameter("faceTangent",t);this.material.setParameter("faceBinorm",e)}getVertexInfo(){const t=[];if(!this.useCpu){t.push({semantic:un,components:4,type:vr});if(this.useMesh){t.push({semantic:fn,components:2,type:vr})}}else{t.push({semantic:un,components:4,type:vr},{semantic:fn,components:4,type:vr},{semantic:pn,components:4,type:vr},{semantic:mn,components:1,type:vr},{semantic:_n,components:this.useMesh?4:2,type:vr})}return t}_allocate(t){const e=t*this.numParticleVerts;const s=t*this.numParticleIndices;if(this.vertexBuffer===undefined||this.vertexBuffer.getNumVertices()!==e){const i=this.getVertexInfo();const n=new Qo(this.graphicsDevice,i);this.vertexBuffer=new qo(this.graphicsDevice,n,e,{usage:We});this.indexBuffer=new qc(this.graphicsDevice,Ts,s);const r=new Float32Array(this.vertexBuffer.lock());let a,o,l;if(this.useMesh){a=new Float32Array(this.mesh.vertexBuffer.lock());o=a.length/this.mesh.vertexBuffer.numVertices;for(let t=0;t<this.mesh.vertexBuffer.format.elements.length;t++){if(this.mesh.vertexBuffer.format.elements[t].name===nn){l=this.mesh.vertexBuffer.format.elements[t].offset/4;break}}}for(let t=0;t<e;t++){const e=Math.floor(t/this.numParticleVerts);if(!this.useMesh){const s=t%4;r[t*4]=OT[s][0];r[t*4+1]=OT[s][1];r[t*4+2]=0;r[t*4+3]=e}else{const s=t%this.numParticleVerts;r[t*6]=a[s*o];r[t*6+1]=a[s*o+1];r[t*6+2]=a[s*o+2];r[t*6+3]=e;r[t*6+4]=a[s*o+l+0];r[t*6+5]=1-a[s*o+l+1]}}if(this.useCpu){this.vbCPU=new Float32Array(r);this.vbOld=new Float32Array(this.vbCPU.length)}this.vertexBuffer.unlock();if(this.useMesh){this.mesh.vertexBuffer.unlock()}let h=0;const c=new Uint32Array(this.indexBuffer.lock());if(this.useMesh){const t=this.mesh.indexBuffer[0];a=new ja[t.format](t.lock())}for(let e=0;e<t;e++){if(!this.useMesh){const t=e*4;c[h++]=t;c[h++]=t+1;c[h++]=t+2;c[h++]=t;c[h++]=t+2;c[h++]=t+3}else{for(let t=0;t<this.numParticleIndices;t++){c[e*this.numParticleIndices+t]=a[t]+e*this.numParticleVerts}}}this.indexBuffer.unlock();if(this.useMesh)this.mesh.indexBuffer[0].unlock()}}reset(){this.beenReset=true;this.seed=Math.random();this.material.setParameter("seed",this.seed);if(this.useCpu){for(let t=0;t<this.particleTexStart.length;t++){this.particleTex[t]=this.particleTexStart[t]}}else{this._setMaterialTextures()}this.resetWorldBounds();this.resetTime();const t=this.loop;this.loop=true;this.addTime(0,false);this.loop=t;if(this.preWarm){this.prewarm(this.lifetime)}}prewarm(t){const e=t/this.lifetime;const s=Math.min(Math.floor(e*this.precision),this.precision);const i=t/s;for(let t=0;t<s;t++){this.addTime(i,false)}}resetTime(){this.endTime=sw(this)}finishFrame(){if(this.useCpu)this.vertexBuffer.unlock()}addTime(t,e){const s=this.graphicsDevice;this.simTimeTotal+=t;this.calculateWorldBounds();if(this._isAnimated()){const t=this.animTilesParams;t[0]=1/this.animTilesX;t[1]=1/this.animTilesY;const e=this.animParams;e[0]=this.animStartFrame;e[1]=this.animNumFrames*this.animSpeed;e[2]=this.animNumFrames-1;e[3]=this.animNumAnimations-1;const s=this.animIndexParams;s[0]=this.animIndex;s[1]=this.randomizeAnimIndex}if(this.scene){if(this.camera!==this.scene._activeCamera){this.camera=this.scene._activeCamera;this.onChangeCamera()}}if(this.emitterShape===i_){HT[0]=this.emitterExtents.x!==0?this.emitterExtentsInner.x/this.emitterExtents.x:0;HT[1]=this.emitterExtents.y!==0?this.emitterExtentsInner.y/this.emitterExtents.y:0;HT[2]=this.emitterExtents.z!==0?this.emitterExtentsInner.z/this.emitterExtents.z:0;if(this.meshInstance.node===null){WT.setTRS(It.ZERO,Gt.IDENTITY,this.emitterExtents)}else{WT.setTRS(It.ZERO,this.meshInstance.node.getRotation(),XT.copy(this.emitterExtents).mul(this.meshInstance.node.localScale))}}let i;const n=this.meshInstance.node===null?It.ONE:this.meshInstance.node.localScale;this.emitterScaleUniform[0]=n.x;this.emitterScaleUniform[1]=n.y;this.emitterScaleUniform[2]=n.z;this.material.setParameter("emitterScale",this.emitterScaleUniform);if(this.localSpace&&this.meshInstance.node){i=this.meshInstance.node.getPosition();this.emitterPosUniform[0]=i.x;this.emitterPosUniform[1]=i.y;this.emitterPosUniform[2]=i.z;this.material.setParameter("emitterPos",this.emitterPosUniform)}this._compParticleFaceParams();if(!this.useCpu){this._gpuUpdater.update(s,WT,HT,t,e)}else{const s=new Float32Array(this.vertexBuffer.lock());this._cpuUpdater.update(s,this.vbToSort,this.particleTex,WT,HT,i,t,e)}if(!this.loop){if(Date.now()>this.endTime){if(this.onFinished)this.onFinished();this.meshInstance.visible=false}}if(this.meshInstance){this.meshInstance.drawOrder=this.drawOrder}}_destroyResources(){this.particleTexIN?.destroy();this.particleTexIN=null;this.particleTexOUT?.destroy();this.particleTexOUT=null;if(this.particleTexStart&&this.particleTexStart.destroy){this.particleTexStart.destroy();this.particleTexStart=null}this.rtParticleTexIN?.destroy();this.rtParticleTexIN=null;this.rtParticleTexOUT?.destroy();this.rtParticleTexOUT=null;this.internalTex0?.destroy();this.internalTex0=null;this.internalTex1?.destroy();this.internalTex1=null;this.internalTex2?.destroy();this.internalTex2=null;this.internalTex3?.destroy();this.internalTex3=null;this.colorParam?.destroy();this.colorParam=null;this.vertexBuffer?.destroy();this.vertexBuffer=undefined;this.indexBuffer?.destroy();this.indexBuffer=undefined;this.material?.destroy();this.material=null}destroy(){this.camera=null;this._destroyResources()}}class hw extends fv{generateKey(t){const e=t.shaderDesc;const s=e.vertexGLSL?$o(e.vertexGLSL):0;const i=e.fragmentGLSL?$o(e.fragmentGLSL):0;const n=e.vertexWGSL?$o(e.vertexWGSL):0;const r=e.fragmentWGSL?$o(e.fragmentWGSL):0;const a=fv.definesHash(t.defines);const o=t.shaderChunks?.key??"";let l=`${e.uniqueName}_${a}_${s}_${i}_${n}_${r}_${o}`;if(t.skin)l+="_skin";if(t.useInstancing)l+="_inst";if(t.useMorphPosition)l+="_morphp";if(t.useMorphNormal)l+="_morphn";if(t.useMorphTextureBasedInt)l+="_morphi";return l}createAttributesDefinition(t,e){const s=e.shaderDesc.attributes;const i=s?{...s}:undefined;if(e.skin){i.vertex_boneWeights=Ji;i.vertex_boneIndices=tn}if(e.useMorphPosition||e.useMorphNormal){i.morph_vertex_id=Cn}t.attributes=i}createVertexDefinition(t,e,s,i){const n=e.shaderDesc;const r=new Map(s);r.set("transformInstancingVS","");const a=new Map(e.defines);if(e.skin)a.set("SKIN",true);if(e.useInstancing)a.set("INSTANCING",true);if(e.useMorphPosition||e.useMorphNormal){a.set("MORPHING",true);if(e.useMorphTextureBasedInt)a.set("MORPHING_INT",true);if(e.useMorphPosition)a.set("MORPHING_POSITION",true);if(e.useMorphNormal)a.set("MORPHING_NORMAL",true)}t.vertexCode=i?n.vertexWGSL:n.vertexGLSL;t.vertexIncludes=r;t.vertexDefines=a}createFragmentDefinition(t,e,s,i){const n=e.shaderDesc;const r=new Map(s);const a=new Map(e.defines);t.fragmentCode=i?n.fragmentWGSL:n.fragmentGLSL;t.fragmentIncludes=r;t.fragmentDefines=a}createShaderDefinition(t,e){const s=e.shaderDesc;const i=t.isWebGPU&&!!s.vertexWGSL&&!!s.fragmentWGSL&&(e.shaderChunks?.useWGSL??true);const n={name:`ShaderMaterial-${s.uniqueName}`,shaderLanguage:i?dr:cr,fragmentOutputTypes:s.fragmentOutputTypes,meshUniformBufferFormat:s.meshUniformBufferFormat,meshBindGroupFormat:s.meshBindGroupFormat};const r=i?dr:cr;const a=Sv.merge(yv.get(t,r),e.shaderChunks[r]);this.createAttributesDefinition(n,e);this.createVertexDefinition(n,e,a,i);this.createFragmentDefinition(n,e,a,i);return Yh.createDefinition(t,n)}}const cw=new hw;class dw extends wS{constructor(t){super();this.shaderDesc=t}set shaderDesc(t){this._shaderDesc=undefined;if(t){this._shaderDesc={uniqueName:t.uniqueName,attributes:t.attributes,fragmentOutputTypes:t.fragmentOutputTypes,vertexGLSL:t.vertexGLSL,fragmentGLSL:t.fragmentGLSL,vertexWGSL:t.vertexWGSL,fragmentWGSL:t.fragmentWGSL};if(t.vertexCode||t.fragmentCode||t.shaderLanguage){const e=t.shaderLanguage??cr;if(e===cr){this._shaderDesc.vertexGLSL=t.vertexCode;this._shaderDesc.fragmentGLSL=t.fragmentCode}else if(e===dr){this._shaderDesc.vertexWGSL=t.vertexCode;this._shaderDesc.fragmentWGSL=t.fragmentCode}}}this.clearVariants()}get shaderDesc(){return this._shaderDesc}copy(t){super.copy(t);this.shaderDesc=t.shaderDesc;return this}getShaderVariant(t){const{objDefs:e}=t;const s={defines:Tv.getCoreDefines(this,t),skin:(e&j_)!==0,useInstancing:(e&Q_)!==0,useMorphPosition:(e&ig)!==0,useMorphNormal:(e&ng)!==0,useMorphTextureBasedInt:(e&ag)!==0,pass:t.pass,gamma:t.cameraShaderParams.shaderOutputGamma,toneMapping:t.cameraShaderParams.toneMapping,fog:t.cameraShaderParams.fog,shaderDesc:this.shaderDesc,shaderChunks:this.shaderChunks};const i=new hv(t.viewUniformFormat,t.viewBindGroupFormat,t.vertexFormat);const n=dv(t.device);n.register("shader-material",cw);return n.getProgram("shader-material",s,i,this.userId)}}const uw={linear:"decodeLinear",srgb:"decodeGamma",rgbm:"decodeRGBM",rgbe:"decodeRGBE",rgbp:"decodeRGBP",xy:"unpackNormalXY",xyz:"unpackNormalXYZ"};const fw={linear:"encodeLinear",srgb:"encodeGamma",rgbm:"encodeRGBM",rgbe:"encodeRGBE",rgbp:"encodeRGBP"};class pw{static decodeFunc(t){return uw[t]??"decodeGamma"}static encodeFunc(t){return fw[t]??"encodeGamma"}}const mw=(t,e)=>{const s=e.length/3;const i=t.length/3;const n=new It;const r=new It;const a=new It;const o=new It;const l=new It;const h=new It;const c=[];for(let e=0;e<t.length;e++){c[e]=0}for(let i=0;i<s;i++){const s=e[i*3];const d=e[i*3+1];const u=e[i*3+2];n.set(t[s*3],t[s*3+1],t[s*3+2]);r.set(t[d*3],t[d*3+1],t[d*3+2]);a.set(t[u*3],t[u*3+1],t[u*3+2]);o.sub2(r,n);l.sub2(a,n);h.cross(o,l).normalize();c[s*3]+=h.x;c[s*3+1]+=h.y;c[s*3+2]+=h.z;c[d*3]+=h.x;c[d*3+1]+=h.y;c[d*3+2]+=h.z;c[u*3]+=h.x;c[u*3+1]+=h.y;c[u*3+2]+=h.z}for(let t=0;t<i;t++){const e=c[t*3];const s=c[t*3+1];const i=c[t*3+2];const n=1/Math.sqrt(e*e+s*s+i*i);c[t*3]*=n;c[t*3+1]*=n;c[t*3+2]*=n}return c};const _w=(t,e,s,i)=>{const n=i.length/3;const r=t.length/3;const a=new It;const o=new It;const l=new It;const h=new Ot;const c=new Ot;const d=new Ot;const u=new It;const f=new It;const p=new Float32Array(r*3);const m=new Float32Array(r*3);const _=[];for(let e=0;e<n;e++){const n=i[e*3];const r=i[e*3+1];const _=i[e*3+2];a.set(t[n*3],t[n*3+1],t[n*3+2]);o.set(t[r*3],t[r*3+1],t[r*3+2]);l.set(t[_*3],t[_*3+1],t[_*3+2]);h.set(s[n*2],s[n*2+1]);c.set(s[r*2],s[r*2+1]);d.set(s[_*2],s[_*2+1]);const g=o.x-a.x;const v=l.x-a.x;const y=o.y-a.y;const S=l.y-a.y;const x=o.z-a.z;const T=l.z-a.z;const w=c.x-h.x;const b=d.x-h.x;const E=c.y-h.y;const A=d.y-h.y;const C=w*A-b*E;if(C===0){u.set(0,1,0);f.set(1,0,0)}else{const t=1/C;u.set((A*g-E*v)*t,(A*y-E*S)*t,(A*x-E*T)*t);f.set((w*v-b*g)*t,(w*S-b*y)*t,(w*T-b*x)*t)}p[n*3+0]+=u.x;p[n*3+1]+=u.y;p[n*3+2]+=u.z;p[r*3+0]+=u.x;p[r*3+1]+=u.y;p[r*3+2]+=u.z;p[_*3+0]+=u.x;p[_*3+1]+=u.y;p[_*3+2]+=u.z;m[n*3+0]+=f.x;m[n*3+1]+=f.y;m[n*3+2]+=f.z;m[r*3+0]+=f.x;m[r*3+1]+=f.y;m[r*3+2]+=f.z;m[_*3+0]+=f.x;m[_*3+1]+=f.y;m[_*3+2]+=f.z}const g=new It;const v=new It;const y=new It;const S=new It;for(let t=0;t<r;t++){y.set(e[t*3],e[t*3+1],e[t*3+2]);g.set(p[t*3],p[t*3+1],p[t*3+2]);v.set(m[t*3],m[t*3+1],m[t*3+2]);const s=y.dot(g);S.copy(y).mulScalar(s);S.sub2(g,S).normalize();_[t*4]=S.x;_[t*4+1]=S.y;_[t*4+2]=S.z;S.cross(y,g);_[t*4+3]=S.dot(v)<0?-1:1}return _};class gw{calculateNormals(){this.normals=mw(this.positions,this.indices)}calculateTangents(){this.tangents=_w(this.positions,this.normals,this.uvs,this.indices)}}const vw=4/64;const yw=1-vw*2;class Sw extends gw{constructor(t={}){super();const e=t.halfExtents??new It(.5,.5,.5);const s=t.widthSegments??1;const i=t.lengthSegments??1;const n=t.heightSegments??1;const r=t.yOffset??0;const a=-e.y+r;const o=e.y+r;const l=[new It(-e.x,a,e.z),new It(e.x,a,e.z),new It(e.x,o,e.z),new It(-e.x,o,e.z),new It(e.x,a,-e.z),new It(-e.x,a,-e.z),new It(-e.x,o,-e.z),new It(e.x,o,-e.z)];const h=[[0,1,3],[4,5,7],[3,2,6],[1,0,4],[1,4,2],[5,0,6]];const c=[[0,0,1],[0,0,-1],[0,1,0],[0,-1,0],[1,0,0],[-1,0,0]];const d={FRONT:0,BACK:1,TOP:2,BOTTOM:3,RIGHT:4,LEFT:5};const u=[];const f=[];const p=[];const m=[];let _=0;const g=(t,e,s)=>{const i=new It;const n=new It;const r=new It;const a=new It;for(let o=0;o<=e;o++){for(let d=0;d<=s;d++){i.lerp(l[h[t][0]],l[h[t][1]],o/e);n.lerp(l[h[t][0]],l[h[t][2]],d/s);r.sub2(n,l[h[t][0]]);a.add2(i,r);let g=o/e;let v=d/s;u.push(a.x,a.y,a.z);f.push(c[t][0],c[t][1],c[t][2]);p.push(g,1-v);g=g*yw+vw;v=v*yw+vw;g/=3;v/=3;g+=t%3/3;v+=Math.floor(t/3)/3;if(o<e&&d<s){m.push(_+s+1,_+1,_);m.push(_+s+1,_+s+2,_+1)}_++}}};g(d.FRONT,s,n);g(d.BACK,s,n);g(d.TOP,s,i);g(d.BOTTOM,s,i);g(d.RIGHT,i,n);g(d.LEFT,i,n);this.positions=u;this.normals=f;this.uvs=p;this.uvs1=p;this.indices=m;if(t.calculateTangents){this.tangents=_w(u,f,p,m)}}}class xw extends gw{constructor(t={}){super();const e=t.radius??.5;const s=t.latitudeBands??16;const i=t.longitudeBands??16;const n=[];const r=[];const a=[];const o=[];for(let t=0;t<=s;t++){const o=t*Math.PI/s;const l=Math.sin(o);const h=Math.cos(o);for(let o=0;o<=i;o++){const c=o*2*Math.PI/i-Math.PI/2;const d=Math.sin(c);const u=Math.cos(c);const f=u*l;const p=h;const m=d*l;const _=1-o/i;const g=1-t/s;n.push(f*e,p*e,m*e);r.push(f,p,m);a.push(_,1-g)}}for(let t=0;t<s;++t){for(let e=0;e<i;++e){const s=t*(i+1)+e;const n=s+i+1;o.push(s+1,n,s);o.push(s+1,n+1,n)}}this.positions=n;this.normals=r;this.uvs=a;this.uvs1=a;this.indices=o;if(t.calculateTangents){this.tangents=_w(n,r,a,o)}}}class Tw extends xw{constructor(t={}){const e=.5;const s=t.latitudeBands??16;const i=t.longitudeBands??16;super({radius:e,latitudeBands:s,longitudeBands:i});const n=.1;const r=.95;const a=r*r;const o=this.positions;for(let t=0;t<o.length;t+=3){const s=o[t]/e;let i=o[t+1]/e;const r=o[t+2]/e;if(i<0){i*=.3;if(s*s+r*r<a){i=-.1}}i+=n;i*=e;o[t+1]=i}}}class ww{static create(t,e){switch(e){case Yg:return ww.box(t);case Kg:return ww.dome(t)}return ww.infinite(t)}static infinite(t){return Vv.fromGeometry(t,new Sw(t))}static box(t){return Vv.fromGeometry(t,new Sw({yOffset:.5}))}static dome(t){const e=new Tw({latitudeBands:50,longitudeBands:50});e.normals=undefined;e.uvs=undefined;return Vv.fromGeometry(t,e)}}class bw{constructor(t,e,s,i,n){this.meshInstance=null;this._depthWrite=false;const r=new dw({uniqueName:"SkyMaterial",vertexGLSL:yv.get(t,cr).get("skyboxVS"),fragmentGLSL:yv.get(t,cr).get("skyboxPS"),vertexWGSL:yv.get(t,dr).get("skyboxVS"),fragmentWGSL:yv.get(t,dr).get("skyboxPS"),attributes:{aPosition:Ki}});r.setDefine("{SKYBOX_DECODE_FNC}",pw.decodeFunc(i.encoding));if(n!==jg)r.setDefine("SKYMESH","");if(i.cubemap)r.setDefine("SKY_CUBEMAP","");r.setParameter("skyboxHighlightMultiplier",e.skyboxHighlightMultiplier);if(i.cubemap){r.setParameter("texture_cubeMap",i)}else{r.setParameter("texture_envAtlas",i);r.setParameter("mipLevel",e.skyboxMip)}r.cull=ns;r.depthWrite=this._depthWrite;const a=e.layers.getLayerById(dm);if(a){const e=ww.create(t,n);const i=new sy(e,r,s);this.meshInstance=i;i.cull=false;i.pick=false;a.addMeshInstances([i]);this.skyLayer=a}}destroy(){if(this.meshInstance){if(this.skyLayer){this.skyLayer.removeMeshInstances([this.meshInstance])}this.meshInstance.destroy();this.meshInstance=null}}set depthWrite(t){this._depthWrite=t;if(this.meshInstance){this.meshInstance.material.depthWrite=t}}get depthWrite(){return this._depthWrite}}class Ew{constructor(t){this._type=jg;this._center=new It(0,1,0);this.skyMesh=null;this._depthWrite=false;this.node=new By("SkyMeshNode");this.device=t.device;this.scene=t;this.center=new It(0,1,0);this.centerArray=new Float32Array(3);this.projectedSkydomeCenterId=this.device.scope.resolve("projectedSkydomeCenter")}applySettings(t){this.type=t.skyType??jg;this.node.setLocalPosition(new It(t.skyMeshPosition??[0,0,0]));this.node.setLocalEulerAngles(new It(t.skyMeshRotation??[0,0,0]));this.node.setLocalScale(new It(t.skyMeshScale??[1,1,1]));if(t.skyCenter){this._center=new It(t.skyCenter)}}set type(t){if(this._type!==t){this._type=t;this.scene.updateShaders=true;this.updateSkyMesh()}}get type(){return this._type}set center(t){this._center.copy(t)}get center(){return this._center}set depthWrite(t){if(this._depthWrite!==t){this._depthWrite=t;if(this.skyMesh){this.skyMesh.depthWrite=t}}}get depthWrite(){return this._depthWrite}updateSkyMesh(){const t=this.scene._getSkyboxTex();if(t){this.resetSkyMesh();this.skyMesh=new bw(this.device,this.scene,this.node,t,this.type);this.skyMesh.depthWrite=this._depthWrite;this.scene.fire("set:skybox",t)}}resetSkyMesh(){this.skyMesh?.destroy();this.skyMesh=null}update(){if(this.type!==jg){const{center:t,centerArray:e}=this;const s=new It;this.node.getWorldTransform().transformPoint(t,s);e[0]=s.x;e[1]=s.y;e[2]=s.z;this.projectedSkydomeCenterId.setValue(e)}}}const Aw=new By;Aw.worldTransform=Vt.IDENTITY;Aw._dirtyWorld=Aw._dirtyNormal=false;class Cw{constructor(t,e,s){this.material=e;this.layer=s;this.positions=[];this.colors=[];this.mesh=new Vv(t);this.meshInstance=null}addLines(t,e){const s=this.positions;const i=t.length;for(let e=0;e<i;e++){const i=t[e];s.push(i.x,i.y,i.z)}const n=this.colors;if(e.length){for(let t=0;t<i;t++){const s=e[t];n.push(s.r,s.g,s.b,s.a)}}else{for(let t=0;t<i;t++){n.push(e.r,e.g,e.b,e.a)}}}addLinesArrays(t,e){const s=this.positions;for(let e=0;e<t.length;e+=3){s.push(t[e],t[e+1],t[e+2])}const i=this.colors;if(e.length){for(let t=0;t<e.length;t+=4){i.push(e[t],e[t+1],e[t+2],e[t+3])}}else{const s=t.length/3;for(let t=0;t<s;t++){i.push(e.r,e.g,e.b,e.a)}}}onPreRender(t,e){if(this.positions.length>0&&this.material.transparent===e){this.mesh.setPositions(this.positions);this.mesh.setColors(this.colors);this.mesh.update(Wi,false);if(!this.meshInstance){this.meshInstance=new sy(this.mesh,this.material,Aw)}t.push(this.meshInstance)}}clear(){this.positions.length=0;this.colors.length=0}}class Pw{constructor(t){this.device=t;this.map=new Map}getBatch(t,e){let s=this.map.get(t);if(!s){s=new Cw(this.device,t,e);this.map.set(t,s)}return s}onPreRender(t,e){this.map.forEach((s=>{s.onPreRender(t,e)}))}clear(){this.map.forEach((t=>t.clear()))}}const Lw=[];const Dw=new It;class Mw{constructor(t){this.shaderDescs=new Map;this.device=t;this.quadMesh=null;this.textureShader=null;this.depthTextureShader=null;this.cubeLocalPos=null;this.cubeWorldPos=null;this.batchesMap=new Map;this.allBatches=new Set;this.updatedLayers=new Set;this._materialDepth=null;this._materialNoDepth=null;this.layerMeshInstances=new Map}createMaterial(t){const e=new dw({uniqueName:"ImmediateLine",vertexGLSL:yv.get(this.device,cr).get("immediateLineVS"),fragmentGLSL:yv.get(this.device,cr).get("immediateLinePS"),vertexWGSL:yv.get(this.device,dr).get("immediateLineVS"),fragmentWGSL:yv.get(this.device,dr).get("immediateLinePS"),attributes:{vertex_position:Ki,vertex_color:en}});e.blendType=Hp;e.depthTest=t;e.update();return e}get materialDepth(){if(!this._materialDepth){this._materialDepth=this.createMaterial(true)}return this._materialDepth}get materialNoDepth(){if(!this._materialNoDepth){this._materialNoDepth=this.createMaterial(false)}return this._materialNoDepth}getBatch(t,e){let s=this.batchesMap.get(t);if(!s){s=new Pw(this.device);this.batchesMap.set(t,s)}this.allBatches.add(s);const i=e?this.materialDepth:this.materialNoDepth;return s.getBatch(i,t)}getShaderDesc(t,e,s){if(!this.shaderDescs.has(t)){this.shaderDescs.set(t,{uniqueName:`DebugShader:${t}`,vertexGLSL:`\n\t\t\t\t\tattribute vec2 vertex_position;\n\t\t\t\t\tuniform mat4 matrix_model;\n\t\t\t\t\tvarying vec2 uv0;\n\t\t\t\t\tvoid main(void) {\n\t\t\t\t\t\tgl_Position = matrix_model * vec4(vertex_position, 0, 1);\n\t\t\t\t\t\tuv0 = vertex_position.xy + 0.5;\n\t\t\t\t\t}\n\t\t\t\t`,vertexWGSL:`\n\t\t\t\t\tattribute vertex_position: vec2f;\n\t\t\t\t\tuniform matrix_model: mat4x4f;\n\t\t\t\t\tvarying uv0: vec2f;\n\t\t\t\t\t@vertex fn vertexMain(input: VertexInput) -> VertexOutput {\n\t\t\t\t\t\tvar output: VertexOutput;\n\t\t\t\t\t\toutput.position = uniform.matrix_model * vec4f(input.vertex_position, 0.0, 1.0);\n\t\t\t\t\t\toutput.uv0 = input.vertex_position.xy + vec2f(0.5);\n\t\t\t\t\t\treturn output;\n\t\t\t\t\t}\n\t\t\t\t`,fragmentGLSL:e,fragmentWGSL:s,attributes:{vertex_position:Ki}})}return this.shaderDescs.get(t)}getTextureShaderDesc(t){const e=pw.decodeFunc(t);return this.getShaderDesc(`textureShader-${t}`,`\n\t\t\t#include "gammaPS"\n\t\t\tvarying vec2 uv0;\n\t\t\tuniform sampler2D colorMap;\n\t\t\tvoid main (void) {\n\t\t\t\tvec3 linearColor = ${e}(texture2D(colorMap, uv0));\n\t\t\t\tgl_FragColor = vec4(gammaCorrectOutput(linearColor), 1);\n\t\t\t}\n\t\t`,`\n\t\t\t#include "gammaPS"\n\t\t\tvarying uv0: vec2f;\n\t\t\tvar colorMap: texture_2d<f32>;\n\t\t\tvar colorMapSampler: sampler;\n\t\t\t@fragment fn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\t\t\tvar output: FragmentOutput;\n\t\t\t\tlet sampledTex = textureSample(colorMap, colorMapSampler, input.uv0);\n\t\t\t\tlet linearColor: vec3f = ${e}(sampledTex);\n\t\t\t\toutput.color = vec4f(gammaCorrectOutput(linearColor), 1.0);\n\t\t\t\treturn output;\n\t\t\t}\n\t\t`)}getUnfilterableTextureShaderDesc(){return this.getShaderDesc("textureShaderUnfilterable",`\n\t\t\tvarying vec2 uv0;\n\t\t\tuniform highp sampler2D colorMap;\n\t\t\tvoid main (void) {\n\t\t\t\tivec2 uv = ivec2(uv0 * textureSize(colorMap, 0));\n\t\t\t\tgl_FragColor = vec4(texelFetch(colorMap, uv, 0).xyz, 1);\n\t\t\t}\n\t\t`,`\n\t\t\tvarying uv0: vec2f;\n\t\t\tvar colorMap: texture_2d<uff>;\n\t\t\t@fragment fn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\t\t\tvar output: FragmentOutput;\n\t\t\t\tlet uv : vec2<i32> = vec2<i32>(input.uv0 * vec2f(textureDimensions(colorMap, 0)));\n\t\t\t\tlet fetchedColor : vec4f = textureLoad(colorMap, uv, 0);\n\t\t\t\toutput.color = vec4f(fetchedColor.xyz, 1.0);\n\t\t\t\treturn output;\n\t\t\t}\n\t\t`)}getDepthTextureShaderDesc(){return this.getShaderDesc("depthTextureShader",`\n\t\t\t#include "screenDepthPS"\n\t\t\t#include "gammaPS"\n\t\t\tvarying vec2 uv0;\n\t\t\tvoid main() {\n\t\t\t\tfloat depth = getLinearScreenDepth(getImageEffectUV(uv0)) * camera_params.x;\n\t\t\t\tgl_FragColor = vec4(gammaCorrectOutput(vec3(depth)), 1.0);\n\t\t\t}\n\t\t`,`\n\t\t\t#include "screenDepthPS"\n\t\t\t#include "gammaPS"\n\t\t\tvarying uv0: vec2f;\n\t\t\t@fragment fn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t\t\t\tvar output: FragmentOutput;\n\t\t\t\tlet depth: f32 = getLinearScreenDepth(getImageEffectUV(input.uv0)) * uniform.camera_params.x;\n\t\t\t\toutput.color = vec4f(gammaCorrectOutput(vec3f(depth)), 1.0);\n\t\t\t\treturn output;\n\t\t\t}\n\t\t`)}getQuadMesh(){if(!this.quadMesh){this.quadMesh=new Vv(this.device);this.quadMesh.setPositions([-.5,-.5,0,.5,-.5,0,-.5,.5,0,.5,.5,0]);this.quadMesh.update(ji)}return this.quadMesh}drawMesh(t,e,s,i,n){if(!i){const n=this.getGraphNode(e);i=new sy(s,t,n)}let r=this.layerMeshInstances.get(n);if(!r){r=[];this.layerMeshInstances.set(n,r)}r.push(i)}drawWireAlignedBox(t,e,s,i,n,r){if(r){const s=(t,e,s)=>{Dw.set(t,e,s);r.transformPoint(Dw,Dw);Lw.push(Dw.x,Dw.y,Dw.z)};s(t.x,t.y,t.z);s(t.x,e.y,t.z);s(t.x,e.y,t.z);s(e.x,e.y,t.z);s(e.x,e.y,t.z);s(e.x,t.y,t.z);s(e.x,t.y,t.z);s(t.x,t.y,t.z);s(t.x,t.y,e.z);s(t.x,e.y,e.z);s(t.x,e.y,e.z);s(e.x,e.y,e.z);s(e.x,e.y,e.z);s(e.x,t.y,e.z);s(e.x,t.y,e.z);s(t.x,t.y,e.z);s(t.x,t.y,t.z);s(t.x,t.y,e.z);s(t.x,e.y,t.z);s(t.x,e.y,e.z);s(e.x,e.y,t.z);s(e.x,e.y,e.z);s(e.x,t.y,t.z);s(e.x,t.y,e.z)}else{Lw.push(t.x,t.y,t.z,t.x,e.y,t.z,t.x,e.y,t.z,e.x,e.y,t.z,e.x,e.y,t.z,e.x,t.y,t.z,e.x,t.y,t.z,t.x,t.y,t.z,t.x,t.y,e.z,t.x,e.y,e.z,t.x,e.y,e.z,e.x,e.y,e.z,e.x,e.y,e.z,e.x,t.y,e.z,e.x,t.y,e.z,t.x,t.y,e.z,t.x,t.y,t.z,t.x,t.y,e.z,t.x,e.y,t.z,t.x,e.y,e.z,e.x,e.y,t.z,e.x,e.y,e.z,e.x,t.y,t.z,e.x,t.y,e.z)}const a=this.getBatch(n,i);a.addLinesArrays(Lw,s);Lw.length=0}drawWireSphere(t,e,s,i,n,r){const a=2*Math.PI/i;let o=0;for(let s=0;s<i;s++){const s=Math.sin(o);const i=Math.cos(o);o+=a;const n=Math.sin(o);const r=Math.cos(o);Lw.push(t.x+e*s,t.y,t.z+e*i);Lw.push(t.x+e*n,t.y,t.z+e*r);Lw.push(t.x+e*s,t.y+e*i,t.z);Lw.push(t.x+e*n,t.y+e*r,t.z);Lw.push(t.x,t.y+e*s,t.z+e*i);Lw.push(t.x,t.y+e*n,t.z+e*r)}const l=this.getBatch(r,n);l.addLinesArrays(Lw,s);Lw.length=0}getGraphNode(t){const e=new By("ImmediateDebug");e.worldTransform=t;e._dirtyWorld=e._dirtyNormal=false;return e}onPreRenderLayer(t,e,s){this.batchesMap.forEach(((i,n)=>{if(n===t){i.onPreRender(e,s)}}));if(!this.updatedLayers.has(t)){this.updatedLayers.add(t);const s=this.layerMeshInstances.get(t);if(s){for(let t=0;t<s.length;t++){e.push(s[t])}s.length=0}}}onPostRender(){this.allBatches.forEach((t=>t.clear()));this.allBatches.clear();this.updatedLayers.clear()}}const Iw=2.399963229728653;const Rw={circlePoint(t){const e=Math.sqrt(Math.random());const s=Math.random()*2*Math.PI;t.x=e*Math.cos(s);t.y=e*Math.sin(s)},circlePointDeterministic(t,e,s){const i=e*Iw;const n=Math.sqrt(e)/Math.sqrt(s);t.x=n*Math.cos(i);t.y=n*Math.sin(i)},spherePointDeterministic(t,e,s,i=0,n=1){i=1-2*i;n=1-2*n;const r=wt.lerp(i,n,e/s);const a=Math.sqrt(1-r*r);const o=Iw*e;t.x=Math.cos(o)*a;t.y=r;t.z=Math.sin(o)*a},radicalInverse(t){let e=(t<<16|t>>>16)>>>0;e=((e&1431655765)<<1|(e&2863311530)>>>1)>>>0;e=((e&858993459)<<2|(e&3435973836)>>>2)>>>0;e=((e&252645135)<<4|(e&4042322160)>>>4)>>>0;e=((e&16711935)<<8|(e&4278255360)>>>8)>>>0;return e*2.3283064365386963e-10}};const Ow=t=>{switch(t){case or:return"Cubemap";case hr:return"Octahedral";default:return"Equirect"}};const Fw=(t,e,s)=>{if(t<=0){e[s+0]=0;e[s+1]=0;e[s+2]=0;e[s+3]=0}else if(t>=1){e[s+0]=255;e[s+1]=0;e[s+2]=0;e[s+3]=0}else{let i=1*t%1;let n=255*t%1;let r=65025*t%1;const a=16581375*t%1;i-=n/255;n-=r/255;r-=a/255;e[s+0]=Math.min(255,Math.floor(i*256));e[s+1]=Math.min(255,Math.floor(n*256));e[s+2]=Math.min(255,Math.floor(r*256));e[s+3]=Math.min(255,Math.floor(a*256))}};const Nw=t=>{const e=t.length;const s=Math.min(e,512);const i=Math.ceil(e/s);const n=new Uint8Array(s*i*4);let r=0;for(let s=0;s<e;s+=4){Fw(t[s+0]*.5+.5,n,r+0);Fw(t[s+1]*.5+.5,n,r+4);Fw(t[s+2]*.5+.5,n,r+8);Fw(t[s+3]/8,n,r+12);r+=16}return{width:s,height:i,data:n}};const kw=(t,e,s,i)=>{const n=s*2*Math.PI;const r=Math.pow(1-e,1/(i+1));const a=Math.sqrt(1-r*r);t.set(Math.cos(n)*a,Math.sin(n)*a,r).normalize()};const Bw=(t,e,s)=>{const i=s*2*Math.PI;const n=Math.sqrt(1-e);const r=Math.sqrt(e);t.set(Math.cos(i)*r,Math.sin(i)*r,n).normalize()};const Uw=(t,e,s,i)=>{const n=s*2*Math.PI;const r=Math.sqrt((1-e)/(1+(i*i-1)*e));const a=Math.sqrt(1-r*r);t.set(Math.cos(n)*a,Math.sin(n)*a,r).normalize()};const zw=(t,e)=>{const s=t*e;const i=e/(1-t*t+s*s);return i*i*(1/Math.PI)};const Vw=(t,e)=>{const s=new It;const i=[];for(let n=0;n<t;++n){kw(s,n/t,Rw.radicalInverse(n),e);i.push(s.x,s.y,s.z,0)}return i};const Gw=(t,e)=>{const s=e/t;const i=new It;const n=[];for(let e=0;e<t;++e){Bw(i,e/t,Rw.radicalInverse(e));const r=i.z/Math.PI;const a=.5*Math.log2(s/r);n.push(i.x,i.y,i.z,a)}return n};const Hw={16:{2:26,8:20,32:17,128:16,512:16},32:{2:53,8:40,32:34,128:32,512:32},128:{2:214,8:163,32:139,128:130,512:128},1024:{2:1722,8:1310,32:1114,128:1041,512:1025}};const Ww=(t,e)=>{const s=Hw[t];return s&&s[e]||t};const Xw=(t,e,s)=>{const i=s/t;const n=1-Math.log2(e)/11;const r=n*n;const a=new It;const o=new It;const l=new It(0,0,1);const h=[];const c=Ww(t,e);for(let t=0;t<c;++t){Uw(a,t/c,Rw.radicalInverse(t),r);const e=a.z;o.set(a.x,a.y,a.z).mulScalar(2*e).sub(l);if(o.z>0){const t=zw(Math.min(1,e),r)/4+.001;const s=.5*Math.log2(i/t);h.push(o.x,o.y,o.z,s)}}while(h.length<t*4){h.push(0,0,0,0)}return h};const qw=(t,e,s)=>{const i=Nw(s);return new lo(t,{name:e,width:i.width,height:i.height,mipmaps:false,minFilter:as,magFilter:as,levels:[i.data]})};class $w{constructor(t=true){this.map=new Map;this.destroyContent=t}destroy(){if(this.destroyContent){this.map.forEach(((t,e)=>{t.destroy()}))}}get(t,e){if(!this.map.has(t)){const s=e();this.map.set(t,s);return s}return this.map.get(t)}}const jw=new $w(false);const Yw=new ro;const Kw=(t,e,s)=>{const i=Yw.get(t,(()=>new $w));return i.get(e,(()=>qw(t,e,jw.get(e,s))))};const Zw=(t,e,s)=>{const i=`lambert-samples-${e}-${s}`;return Kw(t,i,(()=>Gw(e,s)))};const Qw=(t,e,s)=>{const i=`phong-samples-${e}-${s}`;return Kw(t,i,(()=>Vw(e,s)))};const Jw=(t,e,s,i)=>{const n=`ggx-samples-${e}-${s}-${i}`;return Kw(t,n,(()=>Xw(e,s,i)))};function tb(t,e,s={}){const i=s.seamPixels??0;const n=(s.rect?.z??e.width)-i*2;const r=(s.rect?.w??e.height)-i*2;if(n<1||r<1){return false}const a={none:"reproject",lambert:"prefilterSamplesUnweighted",phong:"prefilterSamplesUnweighted",ggx:"prefilterSamples"};const o=s.hasOwnProperty("specularPower")?s.specularPower:1;const l=s.hasOwnProperty("face")?s.face:null;const h=s.hasOwnProperty("distribution")?s.distribution:o===1?"none":"phong";const c=a[h]||"reproject";const d=c.startsWith("prefilterSamples");const u=pw.decodeFunc(t.encoding);const f=pw.encodeFunc(e.encoding);const p=`sample${Ow(t.projection)}`;const m=`getDirection${Ow(e.projection)}`;const _=s.hasOwnProperty("numSamples")?s.numSamples:1024;const g=`ReprojectShader:${c}_${u}_${f}_${p}_${m}_${_}`;const v=t.device;let y=dv(v).getCachedShader(g);if(!y){const e=new Map;if(d)e.set("USE_SAMPLES_TEX","");if(t.cubemap)e.set("CUBEMAP_SOURCE","");e.set("{PROCESS_FUNC}",c);e.set("{DECODE_FUNC}",u);e.set("{ENCODE_FUNC}",f);e.set("{SOURCE_FUNC}",p);e.set("{TARGET_FUNC}",m);e.set("{NUM_SAMPLES}",_);e.set("{NUM_SAMPLES_SQRT}",Math.round(Math.sqrt(_)).toFixed(1));const s=v.isWebGPU;const i=yv.get(v,s?dr:cr);const n=new Map;n.set("decodePS",i.get("decodePS"));n.set("encodePS",i.get("encodePS"));y=Tv.createShader(v,{uniqueName:g,attributes:{vertex_position:Ki},vertexChunk:"reprojectVS",fragmentChunk:"reprojectPS",fragmentIncludes:n,fragmentDefines:e})}v.setBlendState(Ro.NOBLEND);const S=v.scope.resolve(t.cubemap?"sourceCube":"sourceTex");S.setValue(t);const x=v.scope.resolve("params");const T=v.scope.resolve("uvMod");if(i>0){T.setValue([(n+i*2)/n,(r+i*2)/r,-i/n,-i/r])}else{T.setValue([1,1,0,0])}const w=[0,e.width*e.height*(e.cubemap?6:1),t.width*t.height*(t.cubemap?6:1)];if(d){const e=t.width*t.height*(t.cubemap?6:1);const s=h==="ggx"?Jw(v,_,o,e):h==="lambert"?Zw(v,_,e):Qw(v,_,o);v.scope.resolve("samplesTex").setValue(s);v.scope.resolve("samplesTexInverseSize").setValue([1/s.width,1/s.height])}for(let t=0;t<(e.cubemap?6:1);t++){if(l===null||t===l){const i=new il({colorBuffer:e,face:t,depth:false,flipY:v.isWebGPU});w[0]=t;x.setValue(w);Iv(v,i,y,s?.rect);i.destroy()}}return true}const eb=(t,e=0)=>1+Math.floor(Math.log2(Math.max(t,e)));const sb=t=>t.textureHalfFloatRenderable;const ib=t=>t.textureFloatRenderable;const nb=t=>sb(t)?Fs:ib(t)?ks:Ds;const rb=t=>Ds;const ab=(t,e,s,i)=>new lo(t,{name:`lighting-${e}`,cubemap:true,width:e,height:e,format:s,type:Hn,addressU:pe,addressV:pe,mipmaps:false});class ob{static generateSkyboxCubemap(t,e){const s=t.device;const i=ab(s,e||(t.cubemap?t.width:t.width/4),Ds);tb(t,i,{numSamples:1024});return i}static generateLightingSource(t,e){const s=t.device;const i=nb(s);const n=e?.target||new lo(s,{name:"lighting-source",cubemap:true,width:e?.size||128,height:e?.size||128,format:i,type:i===Ds?Hn:zn,addressU:pe,addressV:pe,mipmaps:true});tb(t,n,{numSamples:t.mipmaps?1:1024});return n}static generateAtlas(t,e){const s=t.device;const i=rb();const n=e?.target||new lo(s,{name:"envAtlas",width:e?.size||512,height:e?.size||512,format:i,type:Hn,projection:lr,addressU:pe,addressV:pe,mipmaps:false});const r=n.width/512;const a=new Ft(0,0,512*r,256*r);const o=eb(256)-eb(4);for(let e=0;e<o;++e){tb(t,n,{numSamples:1,rect:a,seamPixels:r});a.x+=a.w;a.y+=a.w;a.z=Math.max(1,Math.floor(a.z*.5));a.w=Math.max(1,Math.floor(a.w*.5))}a.set(0,256*r,256*r,128*r);for(let s=1;s<7;++s){tb(t,n,{numSamples:e?.numReflectionSamples||1024,distribution:e?.distribution||"ggx",specularPower:Math.max(1,2048>>s*2),rect:a,seamPixels:r});a.y+=a.w;a.z=Math.max(1,Math.floor(a.z*.5));a.w=Math.max(1,Math.floor(a.w*.5))}a.set(128*r,(256+128)*r,64*r,32*r);tb(t,n,{numSamples:e?.numAmbientSamples||2048,distribution:"lambert",rect:a,seamPixels:r});return n}static generatePrefilteredAtlas(t,e){const s=t[0].device;const i=t[0].format;const n=t[0].type;const r=e?.target||new lo(s,{name:"envPrefilteredAtlas",width:e?.size||512,height:e?.size||512,format:i,type:n,projection:lr,addressU:pe,addressV:pe,mipmaps:false});const a=r.width/512;const o=new Ft(0,0,512*a,256*a);const l=eb(512);for(let e=0;e<l;++e){tb(t[0],r,{numSamples:1,rect:o,seamPixels:a});o.x+=o.w;o.y+=o.w;o.z=Math.max(1,Math.floor(o.z*.5));o.w=Math.max(1,Math.floor(o.w*.5))}o.set(0,256*a,256*a,128*a);for(let e=1;e<t.length;++e){tb(t[e],r,{numSamples:1,rect:o,seamPixels:a});o.y+=o.w;o.z=Math.max(1,Math.floor(o.z*.5));o.w=Math.max(1,Math.floor(o.w*.5))}o.set(128*a,(256+128)*a,64*a,32*a);if(e?.legacyAmbient){tb(t[5],r,{numSamples:1,rect:o,seamPixels:a})}else{tb(t[0],r,{numSamples:e?.numSamples||2048,distribution:"lambert",rect:o,seamPixels:a})}return r}}class lb{constructor(){this.type=Jp;this.color=new bt(0,0,0);this.density=0;this.start=1;this.end=1e3}}class hb extends at{static{this.EVENT_SETLAYERS="set:layers"}static{this.EVENT_SETSKYBOX="set:skybox"}static{this.EVENT_PRERENDER="prerender"}static{this.EVENT_POSTRENDER="postrender"}static{this.EVENT_PRERENDER_LAYER="prerender:layer"}static{this.EVENT_POSTRENDER_LAYER="postrender:layer"}static{this.EVENT_PRECULL="precull"}static{this.EVENT_POSTCULL="postcull"}constructor(t){super(),this.ambientBake=false,this.ambientBakeOcclusionBrightness=0,this.ambientBakeOcclusionContrast=0,this.ambientLight=new bt(0,0,0),this.ambientLuminance=0,this.exposure=1,this.lightmapSizeMultiplier=1,this.lightmapMaxResolution=2048,this.lightmapMode=Og,this.lightmapFilterEnabled=false,this.lightmapHDR=false,this.root=null,this.physicalUnits=false,this._envAtlas=null,this._skyboxCubeMap=null,this._fogParams=new lb,this.forcePassThroughSpecular=false;this.device=t;this._gravity=new It(0,-9.8,0);this._layers=null;this._prefilteredCubemaps=[];this._internalEnvAtlas=null;this._skyboxIntensity=1;this._skyboxLuminance=0;this._skyboxMip=0;this._skyboxHighlightMultiplier=1;this._skyboxRotationShaderInclude=false;this._skyboxRotation=new Gt;this._skyboxRotationMat3=new Rt;this._skyboxRotationMat4=new Vt;this._ambientBakeNumSamples=1;this._ambientBakeSpherePart=.4;this._lightmapFilterRange=10;this._lightmapFilterSmoothness=.2;this._clusteredLightingEnabled=true;this._lightingParams=new Zx(this.device.supportsAreaLights,this.device.maxTextureSize,(()=>{this.updateShaders=true}));this._sky=new Ew(this);this._stats={meshInstances:0,lights:0,dynamicLights:0,bakedLights:0,updateShadersTime:0};this.updateShaders=true;this._shaderVersion=0;this.immediate=new Mw(this.device)}get defaultDrawLayer(){return this.layers.getLayerById(um)}set ambientBakeNumSamples(t){this._ambientBakeNumSamples=wt.clamp(Math.floor(t),1,255)}get ambientBakeNumSamples(){return this._ambientBakeNumSamples}set ambientBakeSpherePart(t){this._ambientBakeSpherePart=wt.clamp(t,.001,1)}get ambientBakeSpherePart(){return this._ambientBakeSpherePart}set clusteredLightingEnabled(t){if(this.device.isWebGPU&&!t){return}if(!this._clusteredLightingEnabled&&t){console.error("Turning on disabled clustered lighting is not currently supported");return}this._clusteredLightingEnabled=t}get clusteredLightingEnabled(){return this._clusteredLightingEnabled}set envAtlas(t){if(t!==this._envAtlas){this._envAtlas=t;if(t){t.addressU=pe;t.addressV=pe;t.minFilter=os;t.magFilter=os;t.mipmaps=false}this._prefilteredCubemaps=[];if(this._internalEnvAtlas){this._internalEnvAtlas.destroy();this._internalEnvAtlas=null}this._resetSkyMesh()}}get envAtlas(){return this._envAtlas}set layers(t){const e=this._layers;this._layers=t;this.fire("set:layers",e,t)}get layers(){return this._layers}get sky(){return this._sky}get lighting(){return this._lightingParams}get fog(){return this._fogParams}set lightmapFilterRange(t){this._lightmapFilterRange=Math.max(t,.001)}get lightmapFilterRange(){return this._lightmapFilterRange}set lightmapFilterSmoothness(t){this._lightmapFilterSmoothness=Math.max(t,.001)}get lightmapFilterSmoothness(){return this._lightmapFilterSmoothness}set prefilteredCubemaps(t){t=t||[];const e=this._prefilteredCubemaps;const s=e.length!==t.length||e.some(((e,s)=>e!==t[s]));if(s){const e=t.length===6&&t.every((t=>!!t));if(e){this._internalEnvAtlas=ob.generatePrefilteredAtlas(t,{target:this._internalEnvAtlas});this._envAtlas=this._internalEnvAtlas}else{if(this._internalEnvAtlas){this._internalEnvAtlas.destroy();this._internalEnvAtlas=null}this._envAtlas=null}this._prefilteredCubemaps=t.slice();this._resetSkyMesh()}}get prefilteredCubemaps(){return this._prefilteredCubemaps}set skybox(t){if(t!==this._skyboxCubeMap){this._skyboxCubeMap=t;this._resetSkyMesh()}}get skybox(){return this._skyboxCubeMap}set skyboxIntensity(t){if(t!==this._skyboxIntensity){this._skyboxIntensity=t;this._resetSkyMesh()}}get skyboxIntensity(){return this._skyboxIntensity}set skyboxLuminance(t){if(t!==this._skyboxLuminance){this._skyboxLuminance=t;this._resetSkyMesh()}}get skyboxLuminance(){return this._skyboxLuminance}set skyboxMip(t){if(t!==this._skyboxMip){this._skyboxMip=t;this._resetSkyMesh()}}get skyboxMip(){return this._skyboxMip}set skyboxHighlightMultiplier(t){if(t!==this._skyboxHighlightMultiplier){this._skyboxHighlightMultiplier=t;this._resetSkyMesh()}}get skyboxHighlightMultiplier(){return this._skyboxHighlightMultiplier}set skyboxRotation(t){if(!this._skyboxRotation.equals(t)){const e=t.equals(Gt.IDENTITY);this._skyboxRotation.copy(t);if(e){this._skyboxRotationMat3.setIdentity()}else{this._skyboxRotationMat4.setTRS(It.ZERO,t,It.ONE);this._skyboxRotationMat3.invertMat4(this._skyboxRotationMat4)}if(!this._skyboxRotationShaderInclude&&!e){this._skyboxRotationShaderInclude=true;this._resetSkyMesh()}}}get skyboxRotation(){return this._skyboxRotation}destroy(){this._resetSkyMesh();this.root=null;this.off()}drawLine(t,e,s=bt.WHITE,i=true,n=this.defaultDrawLayer){const r=this.immediate.getBatch(n,i);r.addLines([t,e],[s,s])}drawLines(t,e,s=true,i=this.defaultDrawLayer){const n=this.immediate.getBatch(i,s);n.addLines(t,e)}drawLineArrays(t,e,s=true,i=this.defaultDrawLayer){const n=this.immediate.getBatch(i,s);n.addLinesArrays(t,e)}applySettings(t){const e=t.physics;const s=t.render;this._gravity.set(e.gravity[0],e.gravity[1],e.gravity[2]);this.ambientLight.set(s.global_ambient[0],s.global_ambient[1],s.global_ambient[2]);this.ambientLuminance=s.ambientLuminance;this.fog.type=s.fog;this.fog.color.set(s.fog_color[0],s.fog_color[1],s.fog_color[2]);this.fog.start=s.fog_start;this.fog.end=s.fog_end;this.fog.density=s.fog_density;this.lightmapSizeMultiplier=s.lightmapSizeMultiplier;this.lightmapMaxResolution=s.lightmapMaxResolution;this.lightmapMode=s.lightmapMode;this.exposure=s.exposure;this._skyboxIntensity=s.skyboxIntensity??1;this._skyboxLuminance=s.skyboxLuminance??2e4;this._skyboxMip=s.skyboxMip??0;if(s.skyboxRotation){this.skyboxRotation=(new Gt).setFromEulerAngles(s.skyboxRotation[0],s.skyboxRotation[1],s.skyboxRotation[2])}this.sky.applySettings(s);this.clusteredLightingEnabled=s.clusteredLightingEnabled??false;this.lighting.applySettings(s);["lightmapFilterEnabled","lightmapFilterRange","lightmapFilterSmoothness","ambientBake","ambientBakeNumSamples","ambientBakeSpherePart","ambientBakeOcclusionBrightness","ambientBakeOcclusionContrast"].forEach((t=>{if(s.hasOwnProperty(t)){this[t]=s[t]}}));this._resetSkyMesh()}_getSkyboxTex(){const t=this._prefilteredCubemaps;if(this._skyboxMip){const e=[0,1,3,4,5,6];return t[e[this._skyboxMip]]||this._envAtlas||t[0]||this._skyboxCubeMap}return this._skyboxCubeMap||t[0]||this._envAtlas}_updateSkyMesh(){if(!this.sky.skyMesh){this.sky.updateSkyMesh()}this.sky.update()}_resetSkyMesh(){this.sky.resetSkyMesh();this.updateShaders=true}setSkybox(t){if(!t){this.skybox=null;this.envAtlas=null}else{this.skybox=t[0]||null;if(t[1]&&!t[1].cubemap){this.envAtlas=t[1]}else{this.prefilteredCubemaps=t.slice(1)}}}get lightmapPixelFormat(){return this.lightmapHDR&&this.device.getRenderableHdrFormat()||Ds}}class cb{constructor(t,e,s){this.device=t;this.inverseBindPose=e;this.boneNames=s}}const db=[0,0,1,0,0,1,0,0,1,0,0,1];const ub=[0,1,3,2,3,1];class fb extends at{constructor(t,e){super();this._device=t;this._pixelsPerUnit=e&&e.pixelsPerUnit!==undefined?e.pixelsPerUnit:1;this._renderMode=e&&e.renderMode!==undefined?e.renderMode:Lg;this._atlas=e&&e.atlas!==undefined?e.atlas:null;this._frameKeys=e&&e.frameKeys!==undefined?e.frameKeys:null;this._meshes=[];this._updatingProperties=false;this._meshesDirty=false;if(this._atlas&&this._frameKeys){this._createMeshes()}}set frameKeys(t){this._frameKeys=t;if(this._atlas&&this._frameKeys){if(this._updatingProperties){this._meshesDirty=true}else{this._createMeshes()}}this.fire("set:frameKeys",t)}get frameKeys(){return this._frameKeys}set atlas(t){if(t===this._atlas)return;if(this._atlas){this._atlas.off("set:frames",this._onSetFrames,this);this._atlas.off("set:frame",this._onFrameChanged,this);this._atlas.off("remove:frame",this._onFrameRemoved,this)}this._atlas=t;if(this._atlas&&this._frameKeys){this._atlas.on("set:frames",this._onSetFrames,this);this._atlas.on("set:frame",this._onFrameChanged,this);this._atlas.on("remove:frame",this._onFrameRemoved,this);if(this._updatingProperties){this._meshesDirty=true}else{this._createMeshes()}}this.fire("set:atlas",t)}get atlas(){return this._atlas}set pixelsPerUnit(t){if(this._pixelsPerUnit===t)return;this._pixelsPerUnit=t;this.fire("set:pixelsPerUnit",t);if(this._atlas&&this._frameKeys&&this.renderMode===Lg){if(this._updatingProperties){this._meshesDirty=true}else{this._createMeshes()}}}get pixelsPerUnit(){return this._pixelsPerUnit}set renderMode(t){if(this._renderMode===t){return}const e=this._renderMode;this._renderMode=t;this.fire("set:renderMode",t);if(e===Lg||t===Lg){if(this._atlas&&this._frameKeys){if(this._updatingProperties){this._meshesDirty=true}else{this._createMeshes()}}}}get renderMode(){return this._renderMode}get meshes(){return this._meshes}_createMeshes(){const t=this._meshes.length;for(let e=0;e<t;e++){const t=this._meshes[e];if(t){t.destroy()}}const e=this._frameKeys.length;this._meshes=new Array(e);const s=this.renderMode===Dg||this._renderMode===Mg?this._create9SliceMesh:this._createSimpleMesh;for(let t=0;t<e;t++){const e=this._atlas.frames[this._frameKeys[t]];this._meshes[t]=e?s.call(this,e):null}this.fire("set:meshes")}_createSimpleMesh(t){const e=t.rect;const s=this._atlas.texture.width;const i=this._atlas.texture.height;const n=e.z/this._pixelsPerUnit;const r=e.w/this._pixelsPerUnit;const a=t.pivot.x;const o=t.pivot.y;const l=[-a*n,-o*r,0,(1-a)*n,-o*r,0,(1-a)*n,(1-o)*r,0,-a*n,(1-o)*r,0];const h=e.x/s;const c=1-e.y/i;const d=(e.x+e.z)/s;const u=1-(e.y+e.w)/i;const f=[h,c,d,c,d,u,h,u];const p=new gw;p.positions=l;p.normals=db;p.uvs=f;p.indices=ub;return Vv.fromGeometry(this._device,p)}_create9SliceMesh(){const t=Ot.ONE;const e=3;const s=3;const i=[];const n=[];const r=[];const a=[];let o=0;for(let l=0;l<=e;l++){const h=l===0||l===e?0:1;for(let c=0;c<=s;c++){const d=-t.x+2*t.x*(l<=1?0:3)/e;const u=0;const f=-(-t.y+2*t.y*(c<=1?0:3)/s);const p=c===0||c===s?0:1;i.push(-d,u,f);n.push(0,1,0);r.push(h,p);if(l<e&&c<s){a.push(o+s+1,o+1,o);a.push(o+s+1,o+s+2,o+1)}o++}}const l=new gw;l.positions=i;l.normals=n;l.uvs=r;l.indices=a;return Vv.fromGeometry(this._device,l)}_onSetFrames(t){if(this._updatingProperties){this._meshesDirty=true}else{this._createMeshes()}}_onFrameChanged(t,e){const s=this._frameKeys.indexOf(t);if(s<0)return;if(e){if(this.renderMode===Lg){this._meshes[s]=this._createSimpleMesh(e)}}else{this._meshes[s]=null}this.fire("set:meshes")}_onFrameRemoved(t){const e=this._frameKeys.indexOf(t);if(e<0)return;this._meshes[e]=null;this.fire("set:meshes")}startUpdate(){this._updatingProperties=true;this._meshesDirty=false}endUpdate(){this._updatingProperties=false;if(this._meshesDirty&&this._atlas&&this._frameKeys){this._createMeshes()}this._meshesDirty=false}destroy(){for(const t of this._meshes){if(t){t.destroy()}}this._meshes.length=0}}class pb extends at{constructor(){super();this._texture=null;this._frames=null}set texture(t){this._texture=t;this.fire("set:texture",t)}get texture(){return this._texture}set frames(t){this._frames=t;this.fire("set:frames",t)}get frames(){return this._frames}setFrame(t,e){let s=this._frames[t];if(!s){s={rect:e.rect.clone(),pivot:e.pivot.clone(),border:e.border.clone()};this._frames[t]=s}else{s.rect.copy(e.rect);s.pivot.copy(e.pivot);s.border.copy(e.border)}this.fire("set:frame",t.toString(),s)}removeFrame(t){const e=this._frames[t];if(e){delete this._frames[t];this.fire("remove:frame",t.toString(),e)}}destroy(){if(this._texture){this._texture.destroy()}}}class mb{constructor(t,e,s,i){this.time=t;this.position=e;this.rotation=s;this.scale=i}}class _b{constructor(){this._name="";this._keys=[]}}class gb{constructor(){this.name="";this.duration=0;this._nodes=[];this._nodeDict={}}getNode(t){return this._nodeDict[t]}addNode(t){this._nodes.push(t);this._nodeDict[t._name]=t}get nodes(){return this._nodes}}class vb{constructor(){this._written=false;this._name="";this._keyFrames=[];this._quat=new Gt;this._pos=new It;this._scale=new It;this._targetNode=null}getTarget(){return this._targetNode}setTarget(t){this._targetNode=t}}class yb{constructor(t){this.looping=true;this._animation=null;this._time=0;this._interpolatedKeys=[];this._interpolatedKeyDict={};this._currKeyIndices={};this.graph=null;const e=t=>{const s=new vb;s._name=t.name;this._interpolatedKeys.push(s);this._interpolatedKeyDict[t.name]=s;this._currKeyIndices[t.name]=0;for(let s=0;s<t._children.length;s++){e(t._children[s])}};e(t)}set animation(t){this._animation=t;this.currentTime=0}get animation(){return this._animation}set currentTime(t){this._time=t;const e=this._interpolatedKeys.length;for(let t=0;t<e;t++){const e=this._interpolatedKeys[t];const s=e._name;this._currKeyIndices[s]=0}this.addTime(0);this.updateGraph()}get currentTime(){return this._time}get numNodes(){return this._interpolatedKeys.length}addTime(t){if(this._animation!==null){const e=this._animation._nodes;const s=this._animation.duration;if(this._time===s&&!this.looping){return}this._time+=t;if(this._time>s){this._time=this.looping?0:s;for(let t=0;t<e.length;t++){const s=e[t];const i=s._name;this._currKeyIndices[i]=0}}else if(this._time<0){this._time=this.looping?s:0;for(let t=0;t<e.length;t++){const s=e[t];const i=s._name;this._currKeyIndices[i]=s._keys.length-2}}const i=t>=0?1:-1;for(let t=0;t<e.length;t++){const s=e[t];const n=s._name;const r=s._keys;const a=this._interpolatedKeyDict[n];if(a===undefined){continue}let o=false;if(r.length!==1){for(let t=this._currKeyIndices[n];t<r.length-1&&t>=0;t+=i){const e=r[t];const s=r[t+1];if(e.time<=this._time&&s.time>=this._time){const i=(this._time-e.time)/(s.time-e.time);a._pos.lerp(e.position,s.position,i);a._quat.slerp(e.rotation,s.rotation,i);a._scale.lerp(e.scale,s.scale,i);a._written=true;this._currKeyIndices[n]=t;o=true;break}}}if(r.length===1||!o&&this._time===0&&this.looping){a._pos.copy(r[0].position);a._quat.copy(r[0].rotation);a._scale.copy(r[0].scale);a._written=true}}}}blend(t,e,s){const i=this._interpolatedKeys.length;for(let n=0;n<i;n++){const i=t._interpolatedKeys[n];const r=e._interpolatedKeys[n];const a=this._interpolatedKeys[n];if(i._written&&r._written){a._quat.slerp(i._quat,e._interpolatedKeys[n]._quat,s);a._pos.lerp(i._pos,e._interpolatedKeys[n]._pos,s);a._scale.lerp(i._scale,r._scale,s);a._written=true}else if(i._written){a._quat.copy(i._quat);a._pos.copy(i._pos);a._scale.copy(i._scale);a._written=true}else if(r._written){a._quat.copy(r._quat);a._pos.copy(r._pos);a._scale.copy(r._scale);a._written=true}}}setGraph(t){this.graph=t;if(t){for(let e=0;e<this._interpolatedKeys.length;e++){const s=this._interpolatedKeys[e];const i=t.findByName(s._name);this._interpolatedKeys[e].setTarget(i)}}else{for(let t=0;t<this._interpolatedKeys.length;t++){this._interpolatedKeys[t].setTarget(null)}}}updateGraph(){if(this.graph){for(let t=0;t<this._interpolatedKeys.length;t++){const e=this._interpolatedKeys[t];if(e._written){const t=e.getTarget();t.localPosition.copy(e._pos);t.localRotation.copy(e._quat);t.localScale.copy(e._scale);if(!t._dirtyLocal){t._dirtifyLocal()}e._written=false}}}}}const Sb=new Ft;class xb{constructor(t){this.device=t;this.needsDepthBuffer=false}static{this.quadVertexShader=`\n\t\t\t\tattribute vec2 aPosition;\n\t\t\t\tvarying vec2 vUv0;\n\t\t\t\tvoid main(void)\n\t\t\t\t{\n\t\t\t\t\t\tgl_Position = vec4(aPosition, 0.0, 1.0);\n\t\t\t\t\t\tvUv0 = getImageEffectUV((aPosition.xy + 1.0) * 0.5);\n\t\t\t\t}\n\t\t`}render(t,e,s){}drawQuad(t,e,s){let i;if(s){const e=t?t.width:this.device.width;const n=t?t.height:this.device.height;i=Sb.set(s.x*e,s.y*n,s.z*e,s.w*n)}this.device.setBlendState(Ro.NOBLEND);Iv(this.device,t,e,i)}}class Tb extends Yc{set shader(t){this.quadRender?.destroy();this.quadRender=null;this._shader=t;if(t){this.quadRender=new Lv(t)}}get shader(){return this._shader}execute(){const t=this.device;t.setBlendState(this.blendState);t.setCullMode(this.cullMode);t.setDepthState(this.depthState);t.setStencilState(this.stencilFront,this.stencilBack);this.quadRender.render()}constructor(...t){super(...t),this._shader=null,this.quadRender=null,this.cullMode=ss,this.blendState=Ro.NOBLEND,this.depthState=Uo.NODEPTH,this.stencilFront=null,this.stencilBack=null}}class wb{constructor(){this.hasTangents=false;this.shaderChunks=null;this.pass=0;this.alphaTest=false;this.blendType=Wp;this.separateAmbient=false;this.screenSpace=false;this.skin=false;this.batch=false;this.useInstancing=false;this.useMorphPosition=false;this.useMorphNormal=false;this.useMorphTextureBasedInt=false;this.nineSlicedMode=0;this.clusteredLightingEnabled=true;this.clusteredLightingCookiesEnabled=false;this.clusteredLightingShadowsEnabled=false;this.clusteredLightingShadowType=0;this.clusteredLightingAreaLightsEnabled=false;this.vertexColors=false;this.lightMapEnabled=false;this.dirLightMapEnabled=false;this.useHeights=false;this.useNormals=false;this.useClearCoatNormals=false;this.useAo=false;this.diffuseMapEnabled=false;this.pixelSnap=false;this.ambientSH=false;this.ssao=false;this.twoSidedLighting=false;this.occludeDirect=false;this.occludeSpecular=0;this.occludeSpecularFloat=false;this.useMsdf=false;this.msdfTextAttribute=false;this.alphaToCoverage=false;this.opacityFadesSpecular=false;this.opacityDither=Zg;this.opacityShadowDither=Zg;this.cubeMapProjection=0;this.useSpecular=false;this.useSpecularityFactor=false;this.enableGGXSpecular=false;this.fresnelModel=0;this.useRefraction=false;this.useClearCoat=false;this.useSheen=false;this.useIridescence=false;this.useMetalness=false;this.useDynamicRefraction=false;this.dispersion=false;this.fog=Jp;this.gamma=T_;this.toneMap=-1;this.reflectionSource=k_;this.reflectionEncoding=null;this.reflectionCubemapEncoding=null;this.ambientSource="constant";this.ambientEncoding=null;this.skyboxIntensity=1;this.useCubeMapRotation=false;this.lightMapWithoutAmbient=false;this.lights=[];this.noShadow=false;this.lightMaskDynamic=0;this.userAttributes={};this.linearDepth=false;this.shadowCatcher=false}}class bb{constructor(){this.litOptions=new wb}}class Eb{static update(t,e,s,i,n,r,a){Eb.updateSharedOptions(t,e,s,n,r);Eb.updateMaterialOptions(t,e);Eb.updateEnvOptions(t,e,s,i);Eb.updateLightingOptions(t,e,s,n,a)}static updateSharedOptions(t,e,s,i,n){t.shaderChunks=e.shaderChunks;t.pass=n;t.alphaTest=e.alphaTest>0;t.blendType=e.blendType;t.screenSpace=i&&(i&eg)!==0;t.skin=i&&(i&j_)!==0;t.useInstancing=i&&(i&Q_)!==0;t.useMorphPosition=i&&(i&ig)!==0;t.useMorphNormal=i&&(i&ng)!==0;t.useMorphTextureBasedInt=i&&(i&ag)!==0;t.hasTangents=i&&(i&sg)!==0;t.nineSlicedMode=e.nineSlicedMode||Lg;if(e.useLighting&&s.clusteredLightingEnabled){t.clusteredLightingEnabled=true;t.clusteredLightingCookiesEnabled=s.lighting.cookiesEnabled;t.clusteredLightingShadowsEnabled=s.lighting.shadowsEnabled;t.clusteredLightingShadowType=s.lighting.shadowType;t.clusteredLightingAreaLightsEnabled=s.lighting.areaLightsEnabled}else{t.clusteredLightingEnabled=false;t.clusteredLightingCookiesEnabled=false;t.clusteredLightingShadowsEnabled=false;t.clusteredLightingAreaLightsEnabled=false}}static updateMaterialOptions(t,e){t.separateAmbient=false;t.pixelSnap=e.pixelSnap;t.ambientSH=e.ambientSH;t.twoSidedLighting=e.twoSidedLighting;t.occludeDirect=e.occludeDirect;t.occludeSpecular=e.occludeSpecular;t.occludeSpecularFloat=e.occludeSpecularIntensity!==1;t.useMsdf=false;t.msdfTextAttribute=false;t.alphaToCoverage=e.alphaToCoverage;t.opacityFadesSpecular=e.opacityFadesSpecular;t.opacityDither=e.opacityDither;t.cubeMapProjection=f_;t.useSpecular=e.hasSpecular;t.useSpecularityFactor=e.hasSpecularityFactor;t.enableGGXSpecular=e.ggxSpecular;t.fresnelModel=e.fresnelModel;t.useRefraction=e.hasRefraction;t.useClearCoat=e.hasClearCoat;t.useSheen=e.hasSheen;t.useIridescence=e.hasIrridescence;t.useMetalness=e.hasMetalness;t.useDynamicRefraction=e.dynamicRefraction;t.dispersion=e.dispersion>0;t.vertexColors=false;t.lightMapEnabled=e.hasLighting;t.dirLightMapEnabled=e.dirLightMap;t.useHeights=e.hasHeights;t.useNormals=e.hasNormals;t.useClearCoatNormals=e.hasClearCoatNormals;t.useAo=e.hasAo;t.diffuseMapEnabled=e.hasDiffuseMap}static updateEnvOptions(t,e,s,i){t.fog=e.useFog?i.fog:Jp;t.gamma=i.shaderOutputGamma;t.toneMap=e.useTonemap?i.toneMapping:M_;if(e.useSkybox&&s.envAtlas&&s.skybox){t.reflectionSource=U_;t.reflectionEncoding=s.envAtlas.encoding;t.reflectionCubemapEncoding=s.skybox.encoding}else if(e.useSkybox&&s.envAtlas){t.reflectionSource=B_;t.reflectionEncoding=s.envAtlas.encoding}else if(e.useSkybox&&s.skybox){t.reflectionSource=z_;t.reflectionEncoding=s.skybox.encoding}else{t.reflectionSource=k_;t.reflectionEncoding=null}if(e.ambientSH){t.ambientSource=H_;t.ambientEncoding=null}else if(t.reflectionSource!==k_&&s.envAtlas){t.ambientSource=W_;t.ambientEncoding=s.envAtlas.encoding}else{t.ambientSource=X_;t.ambientEncoding=null}const n=t.reflectionSource!==k_;t.skyboxIntensity=n;t.useCubeMapRotation=n&&s._skyboxRotationShaderInclude}static updateLightingOptions(t,e,s,i,n){t.lightMapWithoutAmbient=false;if(e.useLighting){const e=[];const r=i?i>>16:dg;t.lightMaskDynamic=!!(r&dg);t.lightMapWithoutAmbient=false;if(n){Eb.collectLights(pm,n[pm],e,r);if(!s.clusteredLightingEnabled){Eb.collectLights(mm,n[mm],e,r);Eb.collectLights(gm,n[gm],e,r)}}t.lights=e}else{t.lights=[]}if(t.lights.length===0&&!s.clusteredLightingEnabled||(i&$_)!==0){t.noShadow=true}}static collectLights(t,e,s,i){for(let t=0;t<e.length;t++){const n=e[t];if(n.enabled){if(n.mask&i){s.push(n)}}}}}const Ab={vertex_normal:Zi,vertex_tangent:Qi,vertex_texCoord0:nn,vertex_texCoord1:rn,vertex_color:en,vertex_boneWeights:Ji,vertex_boneIndices:tn};class Cb{constructor(t,e,s=true){this.varyingsCode="";this.vDefines=new Map;this.fDefines=new Map;this.includes=new Map;this.chunks=null;this.device=t;this.options=e;const i=e.shaderChunks;this.shaderLanguage=t.isWebGPU&&s&&i?.useWGSL?dr:cr;this.attributes={vertex_position:Ki};if(e.userAttributes){for(const[t,s]of Object.entries(e.userAttributes)){this.attributes[s]=t}}const n=yv.get(t,this.shaderLanguage);this.chunks=new Map(n);if(i){const t=this.shaderLanguage===cr?i.glsl:i.wgsl;t.forEach(((t,e)=>{for(const e in Ab){if(Ab.hasOwnProperty(e)&&t.indexOf(e)>=0){this.attributes[e]=Ab[e]}}this.chunks.set(e,t)}))}this.shaderPassInfo=_v.get(this.device).getByIndex(e.pass);this.shadowPass=this.shaderPassInfo.isShadow;this.lighting=e.lights.length>0||e.dirLightMapEnabled||e.clusteredLightingEnabled;this.reflections=e.reflectionSource!==k_;this.needsNormal=this.lighting||this.reflections||e.useSpecular||e.ambientSH||e.useHeights||e.enableGGXSpecular||e.clusteredLightingEnabled&&!this.shadowPass||e.useClearCoatNormals;this.needsNormal=this.needsNormal&&!this.shadowPass;this.needsSceneColor=e.useDynamicRefraction;this.needsScreenSize=e.useDynamicRefraction;this.needsTransforms=e.useDynamicRefraction;this.vshader=null;this.fshader=null}fDefineSet(t,e,s=""){if(t){this.fDefines.set(e,s)}}generateVertexShader(t,e,s){const{options:i,vDefines:n,attributes:r}=this;const a=new Map;a.set("vPositionW","vec3");if(i.nineSlicedMode===Dg||i.nineSlicedMode===Mg){n.set("NINESLICED",true)}if(this.options.linearDepth){n.set("LINEAR_DEPTH",true);a.set("vLinearDepth","float")}if(this.needsNormal)n.set("NORMALS",true);if(this.options.useInstancing){const t=yv.get(this.device,this.shaderLanguage);if(this.chunks.get("transformInstancingVS")===t.get("transformInstancingVS")){r.instance_line1=wn;r.instance_line2=bn;r.instance_line3=An;r.instance_line4=Cn}}if(this.needsNormal){r.vertex_normal=Zi;a.set("vNormalW","vec3");if(i.hasTangents&&(i.useHeights||i.useNormals||i.useClearCoatNormals||i.enableGGXSpecular)){n.set("TANGENTS",true);r.vertex_tangent=Qi;a.set("vTangentW","vec3");a.set("vBinormalW","vec3")}else if(i.enableGGXSpecular){n.set("GGX_SPECULAR",true);a.set("vObjectSpaceUpW","vec3")}}const o=2;for(let s=0;s<o;s++){if(t[s]){n.set(`UV${s}`,true);r[`vertex_texCoord${s}`]=`TEXCOORD${s}`}if(e[s]){n.set(`UV${s}_UNMODIFIED`,true);a.set(`vUv${s}`,"vec2")}}let l=0;const h=new Set;s.forEach((t=>{const{id:e,uv:s,name:i}=t;const r=e+s*100;if(!h.has(r)){h.add(r);a.set(`vUV${s}_${e}`,"vec2");const t=`texture_${i}MapTransform`;n.set(`{TRANSFORM_NAME_${l}}`,t);n.set(`{TRANSFORM_UV_${l}}`,s);n.set(`{TRANSFORM_ID_${l}}`,e);l++}}));n.set("UV_TRANSFORMS_COUNT",l);if(i.vertexColors){r.vertex_color=en;n.set("VERTEX_COLOR",true);a.set("vVertexColor","vec4")}if(i.useMsdf&&i.msdfTextAttribute){r.vertex_outlineParameters=Sn;r.vertex_shadowParameters=xn;n.set("MSDF",true)}if(i.useMorphPosition||i.useMorphNormal){n.set("MORPHING",true);if(i.useMorphTextureBasedInt)n.set("MORPHING_INT",true);if(i.useMorphPosition)n.set("MORPHING_POSITION",true);if(i.useMorphNormal)n.set("MORPHING_NORMAL",true);r.morph_vertex_id=Cn}if(i.skin){r.vertex_boneIndices=tn;if(i.batch){n.set("BATCH",true)}else{r.vertex_boneWeights=Ji;n.set("SKIN",true)}}if(i.useInstancing)n.set("INSTANCING",true);if(i.screenSpace)n.set("SCREENSPACE",true);if(i.pixelSnap)n.set("PIXELSNAP",true);a.forEach(((t,e)=>{this.varyingsCode+=`#define VARYING_${e.toUpperCase()}\n`;this.varyingsCode+=this.shaderLanguage===dr?`varying ${e}: ${Ka.get(t)};\n`:`varying ${t} ${e};\n`}));this.includes.set("varyingsVS",this.varyingsCode);this.includes.set("varyingsPS",this.varyingsCode);this.vshader=`\n\t\t\t\t\t\t#include "litMainVS"\n\t\t\t\t`}_setupLightingDefines(t,e){const s=this.fDefines;const i=this.options;this.fDefines.set("LIGHT_COUNT",i.lights.length);if(t)s.set("AREA_LIGHTS",true);if(e&&this.lighting){s.set("LIT_CLUSTERED_LIGHTS",true);if(i.clusteredLightingCookiesEnabled)s.set("CLUSTER_COOKIES",true);if(i.clusteredLightingAreaLightsEnabled)s.set("CLUSTER_AREALIGHTS",true);if(i.lightMaskDynamic)s.set("CLUSTER_MESH_DYNAMIC_LIGHTS",true);if(i.clusteredLightingShadowsEnabled&&!i.noShadow){const t=Hm.get(i.clusteredLightingShadowType);s.set("CLUSTER_SHADOWS",true);s.set(`SHADOW_KIND_${t.kind}`,true);s.set(`CLUSTER_SHADOW_TYPE_${t.kind}`,true)}}for(let n=0;n<i.lights.length;n++){const r=i.lights[n];const a=r._type;if(e&&a!==pm){continue}const o=t&&r._shape?r._shape:xm;const l=r._shadowType;const h=r.castShadows&&!i.noShadow;const c=Hm.get(l);s.set(`LIGHT${n}`,true);s.set(`LIGHT${n}TYPE`,`${ym[a]}`);s.set(`LIGHT${n}SHADOWTYPE`,`${c.name}`);s.set(`LIGHT${n}SHAPE`,`${Em[o]}`);s.set(`LIGHT${n}FALLOFF`,`${Pm[r._falloffMode]}`);if(r.affectSpecularity)s.set(`LIGHT${n}AFFECT_SPECULARITY`,true);if(r._cookie){if(a===gm&&!r._cookie._cubemap||a===mm&&r._cookie._cubemap){s.set(`LIGHT${n}COOKIE`,true);s.set(`{LIGHT${n}COOKIE_CHANNEL}`,r._cookieChannel);if(a===gm){if(r._cookieTransform)s.set(`LIGHT${n}COOKIE_TRANSFORM`,true);if(r._cookieFalloff)s.set(`LIGHT${n}COOKIE_FALLOFF`,true)}}}if(h){s.set(`LIGHT${n}CASTSHADOW`,true);if(c.pcf)s.set(`LIGHT${n}SHADOW_PCF`,true);if(r._normalOffsetBias&&!r._isVsm)s.set(`LIGHT${n}_SHADOW_SAMPLE_NORMAL_OFFSET`,true);if(a===pm){s.set(`LIGHT${n}_SHADOW_SAMPLE_ORTHO`,true);if(r.cascadeBlend>0)s.set(`LIGHT${n}_SHADOW_CASCADE_BLEND`,true);if(r.numCascades>1)s.set(`LIGHT${n}_SHADOW_CASCADES`,true)}if(c.pcf||c.pcss||this.device.isWebGPU)s.set(`LIGHT${n}_SHADOW_SAMPLE_SOURCE_ZBUFFER`,true);if(a===mm)s.set(`LIGHT${n}_SHADOW_SAMPLE_POINT`,true)}if(h){s.set(`SHADOW_KIND_${c.kind}`,true);if(a===pm)s.set("SHADOW_DIRECTIONAL",true)}}}prepareForwardPass(t){const{options:e}=this;const s=e.clusteredLightingEnabled&&e.clusteredLightingAreaLightsEnabled;const i=s||e.lights.some((t=>t._shape&&t._shape!==xm));const n=!e.lightMapEnabled||e.lightMapWithoutAmbient;const r=this.needsNormal&&(e.useNormals||e.useClearCoatNormals||e.enableGGXSpecular&&!e.useHeights);if(e.useSpecular){this.fDefineSet(true,"LIT_SPECULAR");this.fDefineSet(this.reflections,"LIT_REFLECTIONS");this.fDefineSet(e.useClearCoat,"LIT_CLEARCOAT");this.fDefineSet(e.fresnelModel>0,"LIT_SPECULAR_FRESNEL");this.fDefineSet(e.useSheen,"LIT_SHEEN");this.fDefineSet(e.useIridescence,"LIT_IRIDESCENCE")}this.fDefineSet(this.lighting&&e.useSpecular||this.reflections,"LIT_SPECULAR_OR_REFLECTION");this.fDefineSet(this.needsSceneColor,"LIT_SCENE_COLOR");this.fDefineSet(this.needsScreenSize,"LIT_SCREEN_SIZE");this.fDefineSet(this.needsTransforms,"LIT_TRANSFORMS");this.fDefineSet(this.needsNormal,"LIT_NEEDS_NORMAL");this.fDefineSet(this.lighting,"LIT_LIGHTING");this.fDefineSet(e.useMetalness,"LIT_METALNESS");this.fDefineSet(e.enableGGXSpecular,"LIT_GGX_SPECULAR");this.fDefineSet(e.useSpecularityFactor,"LIT_SPECULARITY_FACTOR");this.fDefineSet(e.useCubeMapRotation,"CUBEMAP_ROTATION");this.fDefineSet(e.occludeSpecularFloat,"LIT_OCCLUDE_SPECULAR_FLOAT");this.fDefineSet(e.separateAmbient,"LIT_SEPARATE_AMBIENT");this.fDefineSet(e.twoSidedLighting,"LIT_TWO_SIDED_LIGHTING");this.fDefineSet(e.lightMapEnabled,"LIT_LIGHTMAP");this.fDefineSet(e.dirLightMapEnabled,"LIT_DIR_LIGHTMAP");this.fDefineSet(e.skyboxIntensity>0,"LIT_SKYBOX_INTENSITY");this.fDefineSet(e.clusteredLightingShadowsEnabled,"LIT_CLUSTERED_SHADOWS");this.fDefineSet(e.clusteredLightingAreaLightsEnabled,"LIT_CLUSTERED_AREA_LIGHTS");this.fDefineSet(r,"LIT_TBN");this.fDefineSet(n,"LIT_ADD_AMBIENT");this.fDefineSet(e.hasTangents,"LIT_TANGENTS");this.fDefineSet(e.useNormals,"LIT_USE_NORMALS");this.fDefineSet(e.useClearCoatNormals,"LIT_USE_CLEARCOAT_NORMALS");this.fDefineSet(e.useRefraction,"LIT_REFRACTION");this.fDefineSet(e.useDynamicRefraction,"LIT_DYNAMIC_REFRACTION");this.fDefineSet(e.dispersion,"LIT_DISPERSION");this.fDefineSet(e.useHeights,"LIT_HEIGHTS");this.fDefineSet(e.opacityFadesSpecular,"LIT_OPACITY_FADES_SPECULAR");this.fDefineSet(e.alphaToCoverage,"LIT_ALPHA_TO_COVERAGE");this.fDefineSet(e.alphaTest,"LIT_ALPHA_TEST");this.fDefineSet(e.useMsdf,"LIT_MSDF");this.fDefineSet(e.ssao,"LIT_SSAO");this.fDefineSet(e.useAo,"LIT_AO");this.fDefineSet(e.occludeDirect,"LIT_OCCLUDE_DIRECT");this.fDefineSet(e.msdfTextAttribute,"LIT_MSDF_TEXT_ATTRIBUTE");this.fDefineSet(e.diffuseMapEnabled,"LIT_DIFFUSE_MAP");this.fDefineSet(e.shadowCatcher,"LIT_SHADOW_CATCHER");this.fDefineSet(true,"LIT_FRESNEL_MODEL",rm[e.fresnelModel]);this.fDefineSet(true,"LIT_NONE_SLICE_MODE",Ig[e.nineSlicedMode]);this.fDefineSet(true,"LIT_BLEND_TYPE",Qp[e.blendType]);this.fDefineSet(true,"LIT_CUBEMAP_PROJECTION",m_[e.cubeMapProjection]);this.fDefineSet(true,"LIT_OCCLUDE_SPECULAR",N_[e.occludeSpecular]);this.fDefineSet(true,"LIT_REFLECTION_SOURCE",G_[e.reflectionSource]);this.fDefineSet(true,"LIT_AMBIENT_SOURCE",q_[e.ambientSource]);this.fDefineSet(true,"{lightingUv}",t??"");this.fDefineSet(true,"{reflectionDecode}",pw.decodeFunc(e.reflectionEncoding));this.fDefineSet(true,"{reflectionCubemapDecode}",pw.decodeFunc(e.reflectionCubemapEncoding));this.fDefineSet(true,"{ambientDecode}",pw.decodeFunc(e.ambientEncoding));this._setupLightingDefines(i,e.clusteredLightingEnabled)}prepareShadowPass(){const{options:t}=this;const e=this.shaderPassInfo.lightType;const s=this.shaderPassInfo.shadowType;const i=Hm.get(s);const n=e===pm||!i.vsm&&e===gm;this.fDefineSet(n,"PERSPECTIVE_DEPTH");this.fDefineSet(true,"LIGHT_TYPE",`${ym[e]}`);this.fDefineSet(true,"SHADOW_TYPE",`${i.name}`);this.fDefineSet(t.alphaTest,"LIT_ALPHA_TEST")}generateFragmentShader(t,e,s){const i=this.options;this.includes.set("frontendDeclPS",t??"");this.includes.set("frontendCodePS",e??"");if(i.pass===gg||i.pass===mg);else if(this.shadowPass){this.prepareShadowPass()}else{this.prepareForwardPass(s)}this.fshader=`\n\t\t\t\t\t\t#include "litMainPS"\n\t\t\t\t`}}const Pb={generateKey(t){return`lit${Object.keys(t).sort().map((e=>{if(e==="shaderChunks"){return t.shaderChunks?.key??""}else if(e==="lights"){return Pb.generateLightsKey(t)}return e+t[e]})).join("\n")}`},generateLightsKey(t){return`lights:${t.lights.map((e=>!t.clusteredLightingEnabled||e._type===pm?`${e.key},`:"")).join("")}`}};const Lb=[0,1,2,3,4,5,6,7];class Db extends fv{generateKey(t){const e=fv.definesHash(t.defines);const s=$o(t.shaderChunkGLSL??"");const i=$o(t.shaderChunkWGSL??"");const n=Pb.generateKey(t.litOptions);const r=`${Lb.map(((e,s)=>t.usedUvs[s]?"1":"0")).join("")}`;return`lit_${e}_${r}_${s}_${i}_${n}`}createShaderDefinition(t,e){const s=!!e.shaderChunkWGSL;const i=new Cb(t,e.litOptions,s);const n={name:"LitShader",shaderLanguage:i.shaderLanguage,tag:i.shaderPassInfo.isForward?Pn:undefined};const r=e.usedUvs||[true];const a=[];i.generateVertexShader(r,r,a);i.generateFragmentShader("",i.shaderLanguage===dr?e.shaderChunkWGSL:e.shaderChunkGLSL,"vUv0");const o=Sv.merge(i.chunks,i.includes);const l=i.vDefines;e.defines.forEach(((t,e)=>l.set(e,t)));const h=i.fDefines;e.defines.forEach(((t,e)=>h.set(e,t)));n.attributes=i.attributes;n.vertexCode=i.vshader;n.vertexIncludes=o;n.vertexDefines=l;n.fragmentCode=i.fshader;n.fragmentIncludes=o;n.fragmentDefines=h;return Yh.createDefinition(t,n)}}const Mb=new Db;const Ib=new bb;class Rb extends wS{getShaderVariant(t){Ib.usedUvs=this.usedUvs.slice();Ib.shaderChunkGLSL=this.shaderChunkGLSL;Ib.shaderChunkWGSL=this.shaderChunkWGSL;Ib.defines=Tv.getCoreDefines(this,t);Eb.update(Ib.litOptions,this,t.scene,t.cameraShaderParams,t.objDefs,t.pass,t.sortedLights);const e=new hv(t.viewUniformFormat,t.viewBindGroupFormat,t.vertexFormat);const s=dv(t.device);s.register("lit",Mb);const i=s.getProgram("lit",Ib,e,this.userId);return i}constructor(...t){super(...t),this.usedUvs=[true],this.shaderChunkGLSL=null,this.shaderChunkWGSL=null,this.useLighting=true,this.useFog=true,this.useTonemap=true,this.useSkybox=true,this.ambientSH=null,this.pixelSnap=false,this.nineSlicedMode=null,this.twoSidedLighting=false,this.occludeDirect=false,this.occludeSpecular=O_,this.occludeSpecularIntensity=1,this.opacityFadesSpecular=true,this.opacityDither=Zg,this.opacityShadowDither=Zg,this.shadowCatcher=false,this.ggxSpecular=false,this.fresnelModel=nm,this.dynamicRefraction=false,this.hasAo=false,this.hasSpecular=false,this.hasSpecularityFactor=false,this.hasLighting=false,this.hasHeights=false,this.hasNormals=false,this.hasSheen=false,this.hasRefraction=false,this.hasIrridescence=false,this.hasMetalness=false,this.hasClearCoat=false,this.hasClearCoatNormals=false}}class Ob{get pass(){return this.litOptions.pass}constructor(){this.defines=new Map;this.forceUv1=false;this.specularTint=false;this.metalnessTint=false;this.glossTint=false;this.emissiveEncoding="linear";this.lightMapEncoding="linear";this.packedNormal=false;this.normalDetailPackedNormal=false;this.clearCoatPackedNormal=false;this.glossInvert=false;this.sheenGlossInvert=false;this.clearCoatGlossInvert=false;this.useAO=false;this.litOptions=new wb}}const Fb=[];const Nb=t=>Object.keys(t).filter((t=>t!=="litOptions")).sort();class kb extends fv{generateKey(t){let e;if(t===this.optionsContextMin){if(!this.propsMin)this.propsMin=Nb(t);e=this.propsMin}else if(t===this.optionsContext){if(!this.props)this.props=Nb(t);e=this.props}else{e=Nb(t)}const s=fv.definesHash(t.defines);const i=`standard:\n${s}\n${e.map((e=>e+t[e])).join("\n")}${Pb.generateKey(t.litOptions)}`;return i}_getUvSourceExpression(t,e,s){const i=s[t];const n=s[e];const r=s.litOptions.pass===pg;let a;if(r&&s.litOptions.nineSlicedMode===Dg){a="nineSlicedUv"}else if(r&&s.litOptions.nineSlicedMode===Mg){a="nineSlicedUv"}else{if(i===0){a=`vUv${n}`}else{a=`vUV${n}_${i}`}if(s.heightMap&&t!=="heightMapTransform"){a+=" + dUvOffset"}}return a}_validateMapChunk(t,e,s){}_addMapDefines(t,e,s,i,n,r,a=null){const o=`${e}Map`;const l=e.toUpperCase();const h=`${o}Uv`;const c=`${o}Identifier`;const d=`${o}Transform`;const u=`${o}Channel`;const f=`${e}VertexColorChannel`;const p=`${e}Tint`;const m=`${e}VertexColor`;const _=`${e}Mode`;const g=`${e}Invert`;const v=i[p];const y=i[m];const S=i[o];const x=i[c];const T=i[_];const w=n.get(s);if(S){t.set(`STD_${l}_TEXTURE`,"");const e=this._getUvSourceExpression(d,h,i);t.set(`{STD_${l}_TEXTURE_UV}`,e);t.set(`{STD_${l}_TEXTURE_CHANNEL}`,i[u]);const s=`{STD_${l}_TEXTURE_NAME}`;if(w.includes(s)){let e=`texture_${o}`;const i=r[x];if(i){e=i}else{r[x]=e;t.set(`STD_${l}_TEXTURE_ALLOCATE`,"")}t.set(s,e)}if(a){const e=i[u]==="aaa"?"passThrough":pw.decodeFunc(a);t.set(`{STD_${l}_TEXTURE_DECODE}`,e)}}if(y){t.set(`STD_${l}_VERTEX`,"");t.set(`{STD_${l}_VERTEX_CHANNEL}`,i[f])}if(T){t.set(`{STD_${l}_DETAILMODE}`,T)}if(v){t.set(`STD_${l}_CONSTANT`,"")}if(!!i[g]){t.set(`STD_${l}_INVERT`,"")}}_correctChannel(t,e,s){if(s[t]>0){if(s[t]<e.length){return e.substring(0,s[t])}else if(s[t]>e.length){let i=e;const n=i.charAt(i.length-1);const r=s[t]-i.length;for(let t=0;t<r;t++)i+=n;return i}return e}}createVertexShader(t,e){const s=[];const i=[];const n=[];const r=2;for(const t in Fb){const a=`${t}Map`;if(e[`${t}VertexColor`]){const s=`${t}VertexColorChannel`;e[s]=this._correctChannel(t,e[s],Fb)}if(e[a]){const o=`${a}Channel`;const l=`${a}Transform`;const h=`${a}Uv`;e[h]=Math.min(e[h],r-1);e[o]=this._correctChannel(t,e[o],Fb);const c=e[h];s[c]=true;i[c]=i[c]||e[a]&&!e[l];if(e[l]){n.push({name:t,id:e[l],uv:e[h]})}}}if(e.forceUv1){s[1]=true;i[1]=i[1]!==undefined?i[1]:true}t.generateVertexShader(s,i,n)}prepareFragmentDefines(t,e,s){const i=(t,s,i="")=>{if(t){e.set(s,i)}};i(t.lightMap,"STD_LIGHTMAP","");i(t.lightVertexColor,"STD_LIGHT_VERTEX_COLOR","");i(t.dirLightMap&&t.litOptions.useSpecular,"STD_LIGHTMAP_DIR","");i(t.heightMap,"STD_HEIGHT_MAP","");i(t.useSpecularColor,"STD_SPECULAR_COLOR","");i(t.aoMap||t.aoVertexColor||t.useAO,"STD_AO","");i(true,"STD_OPACITY_DITHER",ev[s.isForward?t.litOptions.opacityDither:t.litOptions.opacityShadowDither])}createShaderDefinition(t,e){const s=_v.get(t).getByIndex(e.litOptions.pass);const i=s.isForward;const n=new Cb(t,e.litOptions);this.createVertexShader(n,e);const r={};e.litOptions.fresnelModel=e.litOptions.fresnelModel===0?nm:e.litOptions.fresnelModel;const a=n.fDefines;this.prepareFragmentDefines(e,a,s);let o="";if(i){if(e.heightMap){this._addMapDefines(a,"height","parallaxPS",e,n.chunks,r)}if(e.litOptions.blendType!==Wp||e.litOptions.alphaTest||e.litOptions.alphaToCoverage||e.litOptions.opacityDither!==Zg){this._addMapDefines(a,"opacity","opacityPS",e,n.chunks,r)}if(n.needsNormal){if(e.normalMap||e.clearCoatNormalMap){if(!e.litOptions.hasTangents){const t=e.normalMap?"normalMap":"clearCoatNormalMap";o=this._getUvSourceExpression(`${t}Transform`,`${t}Uv`,e)}}this._addMapDefines(a,"normalDetail","normalMapPS",e,n.chunks,r,e.normalDetailPackedNormal?"xy":"xyz");this._addMapDefines(a,"normal","normalMapPS",e,n.chunks,r,e.packedNormal?"xy":"xyz")}if(e.diffuseDetail){this._addMapDefines(a,"diffuseDetail","diffusePS",e,n.chunks,r,e.diffuseDetailEncoding)}this._addMapDefines(a,"diffuse","diffusePS",e,n.chunks,r,e.diffuseEncoding);if(e.litOptions.useRefraction){this._addMapDefines(a,"refraction","transmissionPS",e,n.chunks,r);this._addMapDefines(a,"thickness","thicknessPS",e,n.chunks,r)}if(e.litOptions.useIridescence){this._addMapDefines(a,"iridescence","iridescencePS",e,n.chunks,r);this._addMapDefines(a,"iridescenceThickness","iridescenceThicknessPS",e,n.chunks,r)}if(n.lighting&&e.litOptions.useSpecular||n.reflections){if(e.litOptions.useSheen){this._addMapDefines(a,"sheen","sheenPS",e,n.chunks,r,e.sheenEncoding);this._addMapDefines(a,"sheenGloss","sheenGlossPS",e,n.chunks,r)}if(e.litOptions.useMetalness){this._addMapDefines(a,"metalness","metalnessPS",e,n.chunks,r);this._addMapDefines(a,"ior","iorPS",e,n.chunks,r)}if(e.litOptions.useSpecularityFactor){this._addMapDefines(a,"specularityFactor","specularityFactorPS",e,n.chunks,r)}if(e.useSpecularColor){this._addMapDefines(a,"specular","specularPS",e,n.chunks,r,e.specularEncoding)}this._addMapDefines(a,"gloss","glossPS",e,n.chunks,r)}if(e.aoDetail){this._addMapDefines(a,"aoDetail","aoPS",e,n.chunks,r)}if(e.aoMap||e.aoVertexColor||e.useAO){this._addMapDefines(a,"ao","aoPS",e,n.chunks,r)}this._addMapDefines(a,"emissive","emissivePS",e,n.chunks,r,e.emissiveEncoding);if(e.litOptions.useClearCoat){this._addMapDefines(a,"clearCoat","clearCoatPS",e,n.chunks,r);this._addMapDefines(a,"clearCoatGloss","clearCoatGlossPS",e,n.chunks,r);this._addMapDefines(a,"clearCoatNormal","clearCoatNormalPS",e,n.chunks,r,e.clearCoatPackedNormal?"xy":"xyz")}if(e.litOptions.enableGGXSpecular){this._addMapDefines(a,"anisotropy","anisotropyPS",e,n.chunks,r)}if(e.lightMap||e.lightVertexColor){this._addMapDefines(a,"light","lightmapPS",e,n.chunks,r,e.lightMapEncoding)}}else{const t=e.litOptions.opacityShadowDither;if(e.litOptions.alphaTest||t){this._addMapDefines(a,"opacity","opacityPS",e,n.chunks,r)}}n.generateFragmentShader(n.chunks.get("stdDeclarationPS"),n.chunks.get("stdFrontEndPS"),o);const l=Sv.merge(n.chunks,n.includes);const h=n.vDefines;e.defines.forEach(((t,e)=>h.set(e,t)));e.defines.forEach(((t,e)=>a.set(e,t)));const c=Yh.createDefinition(t,{name:"StandardShader",attributes:n.attributes,shaderLanguage:n.shaderLanguage,vertexCode:n.vshader,fragmentCode:n.fshader,vertexIncludes:l,fragmentIncludes:l,fragmentDefines:a,vertexDefines:h});if(n.shaderPassInfo.isForward){c.tag=Pn}return c}constructor(...t){super(...t),this.optionsContext=new Ob,this.optionsContextMin=new Ob}}const Bb=new kb;const Ub=(t,e)=>{if(t.length!==e.length){return false}for(let s=0;s<t.length;++s){if(t[s]!==e[s]){return false}}return true};const zb=t=>t.r!==1||t.g!==1||t.b!==1;const Vb=t=>t.r!==0||t.g!==0||t.b!==0;class Gb{constructor(){this._mapXForms=null}updateMinRef(t,e,s,i,n,r){this._updateSharedOptions(t,e,s,i,n);this._updateMinOptions(t,s,n);this._updateUVOptions(t,s,i,true)}updateRef(t,e,s,i,n,r,a){this._updateSharedOptions(t,e,i,n,r);this._updateEnvOptions(t,i,e,s);this._updateMaterialOptions(t,i,e);t.litOptions.hasTangents=n&&(n&sg)!==0;this._updateLightOptions(t,e,i,n,a);this._updateUVOptions(t,i,n,false,s)}_updateSharedOptions(t,e,s,i,n){t.forceUv1=s.forceUv1;if(s.userAttributes){t.litOptions.userAttributes=Object.fromEntries(s.userAttributes.entries())}t.litOptions.shaderChunks=s.shaderChunks;t.litOptions.pass=n;t.litOptions.alphaTest=s.alphaTest>0;t.litOptions.blendType=s.blendType;t.litOptions.screenSpace=i&&(i&eg)!==0;t.litOptions.skin=i&&(i&j_)!==0;t.litOptions.batch=i&&(i&og)!==0;t.litOptions.useInstancing=i&&(i&Q_)!==0;t.litOptions.useMorphPosition=i&&(i&ig)!==0;t.litOptions.useMorphNormal=i&&(i&ng)!==0;t.litOptions.useMorphTextureBasedInt=i&&(i&ag)!==0;t.litOptions.nineSlicedMode=s.nineSlicedMode||0;if(e.clusteredLightingEnabled&&s.useLighting){t.litOptions.clusteredLightingEnabled=true;t.litOptions.clusteredLightingCookiesEnabled=e.lighting.cookiesEnabled;t.litOptions.clusteredLightingShadowsEnabled=e.lighting.shadowsEnabled;t.litOptions.clusteredLightingShadowType=e.lighting.shadowType;t.litOptions.clusteredLightingAreaLightsEnabled=e.lighting.areaLightsEnabled}else{t.litOptions.clusteredLightingEnabled=false;t.litOptions.clusteredLightingCookiesEnabled=false;t.litOptions.clusteredLightingShadowsEnabled=false;t.litOptions.clusteredLightingAreaLightsEnabled=false}}_updateUVOptions(t,e,s,i,n){let r=false;let a=false;let o=false;if(s){r=(s&Y_)!==0;a=(s&K_)!==0;o=(s&Z_)!==0}t.litOptions.vertexColors=false;this._mapXForms=[];const l={};for(const s in Fb){this._updateTexOptions(t,e,s,r,a,o,i,l)}this._mapXForms=null;t.litOptions.ssao=n?.ssaoEnabled;t.useAO=t.litOptions.ssao;t.litOptions.lightMapEnabled=t.lightMap;t.litOptions.dirLightMapEnabled=t.dirLightMap;t.litOptions.useHeights=t.heightMap;t.litOptions.useNormals=t.normalMap;t.litOptions.useClearCoatNormals=t.clearCoatNormalMap;t.litOptions.useAo=t.aoMap||t.aoVertexColor||t.litOptions.ssao;t.litOptions.diffuseMapEnabled=t.diffuseMap}_updateTexOptions(t,e,s,i,n,r,a,o){const l=s==="opacity";if(!a||l){const a=`${s}Map`;const h=`${s}VertexColor`;const c=`${s}VertexColorChannel`;const d=`${a}Channel`;const u=`${a}Transform`;const f=`${a}Uv`;const p=`${a}Identifier`;if(s!=="light"){t[a]=false;t[p]=undefined;t[d]="";t[u]=0;t[f]=0}t[h]=false;t[c]="";if(l&&e.blendType===Wp&&e.alphaTest===0&&!e.alphaToCoverage&&e.opacityDither===Zg){return}if(s!=="height"&&e[h]){if(r){t[h]=e[h];t[c]=e[c];t.litOptions.vertexColors=true}}if(e[a]){let r=true;if(e[f]===0&&!i)r=false;if(e[f]===1&&!n)r=false;if(r){const i=e[a].id;let n=o[i];if(n===undefined){o[i]=s;n=s}t[a]=!!e[a];t[p]=n;t[u]=this._getMapTransformID(e.getUniform(u),e[f]);t[d]=e[d];t[f]=e[f]}}}}_updateMinOptions(t,e,s){const i=s===mg;t.litOptions.opacityShadowDither=i?e.opacityDither:e.opacityShadowDither;t.litOptions.linearDepth=i;t.litOptions.lights=[]}_updateMaterialOptions(t,e,s){const i=!!(e.useMetalness||e.specularMap||e.sphereMap||e.cubeMap||Vb(e.specular)||e.specularityFactor>0&&e.useMetalness||e.enableGGXSpecular||e.clearCoat>0);const n=!e.useMetalness||e.useMetalnessSpecularColor;const r=i&&(e.specularTint||!e.specularMap&&!e.specularVertexColor)&&zb(e.specular);const a=i&&e.useMetalnessSpecularColor&&(e.specularityFactorTint||e.specularityFactor<1&&!e.specularityFactorMap);const o=t=>t?t.format===Rs||t.type===Wn:false;const l=(t,e)=>Math.abs(t-e)<1e-4;t.specularTint=r;t.specularityFactorTint=a;t.metalnessTint=e.useMetalness&&e.metalness<1;t.glossTint=true;t.diffuseEncoding=e.diffuseMap?.encoding;t.diffuseDetailEncoding=e.diffuseDetailMap?.encoding;t.emissiveEncoding=e.emissiveMap?.encoding;t.lightMapEncoding=e.lightMap?.encoding;t.packedNormal=o(e.normalMap);t.refractionTint=l(e.refraction,1);t.refractionIndexTint=l(e.refractionIndex,1/1.5);t.thicknessTint=e.useDynamicRefraction&&e.thickness!==1;t.specularEncoding=e.specularMap?.encoding;t.sheenEncoding=e.sheenMap?.encoding;t.aoMapUv=e.aoUvSet;t.aoDetail=!!e.aoDetailMap;t.diffuseDetail=!!e.diffuseDetailMap;t.normalDetail=!!e.normalMap;t.normalDetailPackedNormal=o(e.normalDetailMap);t.diffuseDetailMode=e.diffuseDetailMode;t.aoDetailMode=e.aoDetailMode;t.clearCoatGloss=!!e.clearCoatGloss;t.clearCoatPackedNormal=o(e.clearCoatNormalMap);t.iorTint=l(e.refractionIndex,1/1.5);if(s.forcePassThroughSpecular){t.specularEncoding="linear";t.sheenEncoding="linear"}t.iridescenceTint=e.iridescence!==1;t.glossInvert=e.glossInvert;t.sheenGlossInvert=e.sheenGlossInvert;t.clearCoatGlossInvert=e.clearCoatGlossInvert;t.useSpecularColor=n;t.litOptions.separateAmbient=false;t.litOptions.pixelSnap=e.pixelSnap;t.litOptions.ambientSH=!!e.ambientSH;t.litOptions.twoSidedLighting=e.twoSidedLighting;t.litOptions.occludeSpecular=e.occludeSpecular;t.litOptions.occludeSpecularFloat=e.occludeSpecularIntensity!==1;t.litOptions.useMsdf=!!e.msdfMap;t.litOptions.msdfTextAttribute=!!e.msdfTextAttribute;t.litOptions.alphaToCoverage=e.alphaToCoverage;t.litOptions.opacityFadesSpecular=e.opacityFadesSpecular;t.litOptions.opacityDither=e.opacityDither;t.litOptions.cubeMapProjection=e.cubeMapProjection;t.litOptions.occludeDirect=e.occludeDirect;t.litOptions.useSpecular=i;t.litOptions.useSpecularityFactor=(a||!!e.specularityFactorMap)&&e.useMetalnessSpecularColor;t.litOptions.enableGGXSpecular=e.enableGGXSpecular;t.litOptions.fresnelModel=e.fresnelModel;t.litOptions.useRefraction=(e.refraction||!!e.refractionMap)&&(e.useDynamicRefraction||t.litOptions.reflectionSource!==k_);t.litOptions.useClearCoat=!!e.clearCoat;t.litOptions.useSheen=e.useSheen;t.litOptions.useIridescence=e.useIridescence&&e.iridescence!==0;t.litOptions.useMetalness=e.useMetalness;t.litOptions.useDynamicRefraction=e.useDynamicRefraction;t.litOptions.dispersion=e.dispersion>0;t.litOptions.shadowCatcher=e.shadowCatcher}_updateEnvOptions(t,e,s,i){t.litOptions.fog=e.useFog?i.fog:Jp;t.litOptions.gamma=i.shaderOutputGamma;t.litOptions.toneMap=e.useTonemap?i.toneMapping:M_;let n=false;if(e.envAtlas&&e.cubeMap){t.litOptions.reflectionSource=U_;t.litOptions.reflectionEncoding=e.envAtlas.encoding;t.litOptions.reflectionCubemapEncoding=e.cubeMap.encoding}else if(e.envAtlas){t.litOptions.reflectionSource=B_;t.litOptions.reflectionEncoding=e.envAtlas.encoding}else if(e.cubeMap){t.litOptions.reflectionSource=z_;t.litOptions.reflectionEncoding=e.cubeMap.encoding}else if(e.sphereMap){t.litOptions.reflectionSource=V_;t.litOptions.reflectionEncoding=e.sphereMap.encoding}else if(e.useSkybox&&s.envAtlas&&s.skybox){t.litOptions.reflectionSource=U_;t.litOptions.reflectionEncoding=s.envAtlas.encoding;t.litOptions.reflectionCubemapEncoding=s.skybox.encoding;n=true}else if(e.useSkybox&&s.envAtlas){t.litOptions.reflectionSource=B_;t.litOptions.reflectionEncoding=s.envAtlas.encoding;n=true}else if(e.useSkybox&&s.skybox){t.litOptions.reflectionSource=z_;t.litOptions.reflectionEncoding=s.skybox.encoding;n=true}else{t.litOptions.reflectionSource=k_;t.litOptions.reflectionEncoding=null}if(e.ambientSH){t.litOptions.ambientSource=H_;t.litOptions.ambientEncoding=null}else{const i=e.envAtlas||(e.useSkybox&&s.envAtlas?s.envAtlas:null);if(i&&!e.sphereMap){t.litOptions.ambientSource=W_;t.litOptions.ambientEncoding=i.encoding}else{t.litOptions.ambientSource=X_;t.litOptions.ambientEncoding=null}}t.litOptions.skyboxIntensity=n;t.litOptions.useCubeMapRotation=n&&s._skyboxRotationShaderInclude}_updateLightOptions(t,e,s,i,n){t.lightMap=false;t.lightMapChannel="";t.lightMapUv=0;t.lightMapTransform=0;t.litOptions.lightMapWithoutAmbient=false;t.dirLightMap=false;if(i){t.litOptions.noShadow=(i&$_)!==0;if((i&J_)!==0){t.lightMapEncoding=e.lightmapPixelFormat===Ds?"rgbm":"linear";t.lightMap=true;t.lightMapChannel="rgb";t.lightMapUv=1;t.lightMapTransform=0;t.litOptions.lightMapWithoutAmbient=!s.lightMap;if((i&tg)!==0){t.dirLightMap=true}if((i&rg)!==0){t.litOptions.lightMapWithoutAmbient=false}}}if(s.useLighting){const s=[];const r=i?i>>16:dg;t.litOptions.lightMaskDynamic=!!(r&dg);if(n){Eb.collectLights(pm,n[pm],s,r);if(!e.clusteredLightingEnabled){Eb.collectLights(mm,n[mm],s,r);Eb.collectLights(gm,n[gm],s,r)}}t.litOptions.lights=s}else{t.litOptions.lights=[]}if(t.litOptions.lights.length===0&&!e.clusteredLightingEnabled){t.litOptions.noShadow=true}}_getMapTransformID(t,e){if(!t)return 0;let s=this._mapXForms[e];if(!s){s=[];this._mapXForms[e]=s}for(let e=0;e<s.length;e++){if(Ub(s[e][0].value,t[0].value)&&Ub(s[e][1].value,t[1].value)){return e+1}}return s.push(t)}}function Hb(t,e=true,s=true){const i={};i[`${t}Map`]="texture";i[`${t}MapTiling`]="vec2";i[`${t}MapOffset`]="vec2";i[`${t}MapRotation`]="number";i[`${t}MapUv`]="number";if(e){i[`${t}MapChannel`]="string";if(s){i[`${t}VertexColor`]="boolean";i[`${t}VertexColorChannel`]="string"}}return i}const Wb={name:"string",chunks:"chunks",mappingFormat:"string",_engine:"boolean",ambient:"rgb",...Hb("ao"),...Hb("aoDetail",true,false),aoDetailMode:"string",aoIntensity:"number",diffuse:"rgb",...Hb("diffuse"),...Hb("diffuseDetail",true,false),diffuseDetailMode:"string",specular:"rgb",specularTint:"boolean",...Hb("specular"),occludeSpecular:"enum:occludeSpecular",specularityFactor:"number",specularityFactorTint:"boolean",...Hb("specularityFactor"),useMetalness:"boolean",metalness:"number",enableGGXSpecular:"boolean",metalnessTint:"boolean",...Hb("metalness"),useMetalnessSpecularColor:"boolean",anisotropyIntensity:"number",anisotropyRotation:"number",...Hb("anisotropy"),shininess:"number",gloss:"number",glossInvert:"boolean",...Hb("gloss"),clearCoat:"number",...Hb("clearCoat"),clearCoatGloss:"number",clearCoatGlossInvert:"boolean",...Hb("clearCoatGloss"),clearCoatBumpiness:"number",...Hb("clearCoatNormal",false),useSheen:"boolean",sheen:"rgb",...Hb("sheen"),sheenGloss:"number",sheenGlossInvert:"boolean",...Hb("sheenGloss"),fresnelModel:"number",emissive:"rgb",...Hb("emissive"),emissiveIntensity:"number",...Hb("normal",false),bumpiness:"number",...Hb("normalDetail",false),normalDetailMapBumpiness:"number",...Hb("height",true,false),heightMapFactor:"number",alphaToCoverage:"boolean",alphaTest:"number",alphaFade:"number",opacity:"number",...Hb("opacity"),opacityFadesSpecular:"boolean",opacityDither:"string",opacityShadowDither:"string",reflectivity:"number",refraction:"number",refractionTint:"boolean",...Hb("refraction"),refractionIndex:"number",dispersion:"number",thickness:"number",thicknessTint:"boolean",...Hb("thickness"),attenuation:"rgb",attenuationDistance:"number",useDynamicRefraction:"boolean",sphereMap:"texture",cubeMap:"cubemap",cubeMapProjection:"number",cubeMapProjectionBox:"boundingbox",useIridescence:"boolean",iridescence:"number",iridescenceTint:"boolean",...Hb("iridescence"),iridescenceThicknessTint:"boolean",iridescenceThicknessMin:"number",iridescenceThicknessMax:"number",iridescenceRefractionIndex:"number",...Hb("iridescenceThickness"),...Hb("light"),depthTest:"boolean",depthFunc:"enum:depthFunc",depthWrite:"boolean",depthBias:"number",slopeDepthBias:"number",cull:"enum:cull",blendType:"enum:blendType",useFog:"boolean",useLighting:"boolean",useSkybox:"boolean",useTonemap:"boolean",envAtlas:"texture",twoSidedLighting:"boolean",shadowCatcher:"boolean"};const Xb=[];for(const t in Wb){const e=Wb[t];if(e==="texture"){Xb.push(t)}}const qb=[];for(const t in Wb){const e=Wb[t];if(e==="cubemap"){qb.push(t)}}const $b={aoMapVertexColor:"boolean",diffuseMapTint:"boolean",diffuseMapVertexColor:"boolean",emissiveMapTint:"boolean",emissiveMapVertexColor:"boolean",glossMapVertexColor:"boolean",metalnessMapVertexColor:"boolean",opacityMapVertexColor:"boolean",specularAntialias:"boolean",specularMapTint:"boolean",specularMapVertexColor:"boolean",ambientTint:"boolean",emissiveTint:"boolean",diffuseTint:"boolean",sheenTint:"boolean",conserveEnergy:"boolean",useGamma:"boolean",useGammaTonemap:"boolean",sheenGlossTint:"boolean",anisotropy:"boolean"};const jb={};const Yb={};let Kb=new Set;const Zb=new bt;class Qb extends wS{static{this.TEXTURE_PARAMETERS=Xb}static{this.CUBEMAP_PARAMETERS=qb}constructor(){super(),this.userAttributes=new Map;this._assetReferences={};this._activeParams=new Set;this._activeLightingParams=new Set;this.shaderOptBuilder=new Gb;this.reset()}reset(){Object.keys(jb).forEach((t=>{this[`_${t}`]=jb[t].value()}));this._uniformCache={}}copy(t){super.copy(t);Object.keys(jb).forEach((e=>{this[e]=t[e]}));this.userAttributes=new Map(t.userAttributes);return this}setAttribute(t,e){this.userAttributes.set(e,t)}_setParameter(t,e){Kb.add(t);this.setParameter(t,e)}_setParameters(t){t.forEach((t=>{this._setParameter(t.name,t.value)}))}_processParameters(t){const e=this[t];e.forEach((t=>{if(!Kb.has(t)){delete this.parameters[t]}}));this[t]=Kb;Kb=e;Kb.clear()}_updateMap(t){const e=`${t}Map`;const s=this[e];if(s){this._setParameter(`texture_${e}`,s);const t=`${e}Transform`;const i=this.getUniform(t);if(i){this._setParameters(i)}}}_allocUniform(t,e){let s=this._uniformCache[t];if(!s){s=e();this._uniformCache[t]=s}return s}getUniform(t,e,s){return Yb[t](this,e,s)}updateUniforms(t,e){const s=s=>this.getUniform(s,t,e);this._setParameter("material_ambient",s("ambient"));this._setParameter("material_diffuse",s("diffuse"));this._setParameter("material_aoIntensity",this.aoIntensity);if(this.useMetalness){if(!this.metalnessMap||this.metalness<1){this._setParameter("material_metalness",this.metalness)}if(!this.specularMap||this.specularTint){this._setParameter("material_specular",s("specular"))}if(!this.specularityFactorMap||this.specularityFactorTint){this._setParameter("material_specularityFactor",this.specularityFactor)}this._setParameter("material_sheen",s("sheen"));this._setParameter("material_sheenGloss",this.sheenGloss);this._setParameter("material_refractionIndex",this.refractionIndex)}else{if(!this.specularMap||this.specularTint){this._setParameter("material_specular",s("specular"))}}if(this.enableGGXSpecular){this._setParameter("material_anisotropyIntensity",this.anisotropyIntensity);this._setParameter("material_anisotropyRotation",[Math.cos(this.anisotropyRotation*wt.DEG_TO_RAD),Math.sin(this.anisotropyRotation*wt.DEG_TO_RAD)])}if(this.clearCoat>0){this._setParameter("material_clearCoat",this.clearCoat);this._setParameter("material_clearCoatGloss",this.clearCoatGloss);this._setParameter("material_clearCoatBumpiness",this.clearCoatBumpiness)}this._setParameter("material_gloss",this.gloss);this._setParameter("material_emissive",s("emissive"));this._setParameter("material_emissiveIntensity",this.emissiveIntensity);if(this.refraction>0){this._setParameter("material_refraction",this.refraction)}if(this.dispersion>0){this._setParameter("material_dispersion",this.dispersion)}if(this.useDynamicRefraction){this._setParameter("material_thickness",this.thickness);this._setParameter("material_attenuation",s("attenuation"));this._setParameter("material_invAttenuationDistance",this.attenuationDistance===0?0:1/this.attenuationDistance)}if(this.useIridescence){this._setParameter("material_iridescence",this.iridescence);this._setParameter("material_iridescenceRefractionIndex",this.iridescenceRefractionIndex);this._setParameter("material_iridescenceThicknessMin",this.iridescenceThicknessMin);this._setParameter("material_iridescenceThicknessMax",this.iridescenceThicknessMax)}this._setParameter("material_opacity",this.opacity);if(this.opacityFadesSpecular===false){this._setParameter("material_alphaFade",this.alphaFade)}if(this.occludeSpecular){this._setParameter("material_occludeSpecularIntensity",this.occludeSpecularIntensity)}if(this.cubeMapProjection===p_){this._setParameter(s("cubeMapProjectionBox"))}for(const t in Fb){this._updateMap(t)}if(this.ambientSH){this._setParameter("ambientSH[0]",this.ambientSH)}if(this.normalMap){this._setParameter("material_bumpiness",this.bumpiness)}if(this.normalMap&&this.normalDetailMap){this._setParameter("material_normalDetailMapBumpiness",this.normalDetailMapBumpiness)}if(this.heightMap){this._setParameter("material_heightMapFactor",s("heightMapFactor"))}if(this.envAtlas&&this.cubeMap){this._setParameter("texture_envAtlas",this.envAtlas);this._setParameter("texture_cubeMap",this.cubeMap)}else if(this.envAtlas){this._setParameter("texture_envAtlas",this.envAtlas)}else if(this.cubeMap){this._setParameter("texture_cubeMap",this.cubeMap)}else if(this.sphereMap){this._setParameter("texture_sphereMap",this.sphereMap)}this._setParameter("material_reflectivity",this.reflectivity);this._processParameters("_activeParams");super.updateUniforms(t,e)}updateEnvUniforms(t,e){const s=this.envAtlas||this.cubeMap||this.sphereMap;if(!s&&this.useSkybox){if(e.envAtlas&&e.skybox){this._setParameter("texture_envAtlas",e.envAtlas);this._setParameter("texture_cubeMap",e.skybox)}else if(e.envAtlas){this._setParameter("texture_envAtlas",e.envAtlas)}else if(e.skybox){this._setParameter("texture_cubeMap",e.skybox)}}this._processParameters("_activeLightingParams")}getShaderVariant(t){const{device:e,scene:s,pass:i,objDefs:n,sortedLights:r,cameraShaderParams:a}=t;this.updateEnvUniforms(e,s);const o=_v.get(e).getByIndex(i);const l=i===gg||i===mg||o.isShadow;let h=l?Bb.optionsContextMin:Bb.optionsContext;h.defines=Tv.getCoreDefines(this,t);if(l){this.shaderOptBuilder.updateMinRef(h,s,this,n,i,r)}else{this.shaderOptBuilder.updateRef(h,s,a,this,n,i,r)}if(!this.useFog)h.defines.set("FOG","NONE");h.defines.set("TONEMAP",I_[h.litOptions.toneMap]);if(this.onUpdateShader){h=this.onUpdateShader(h)}const c=new hv(t.viewUniformFormat,t.viewBindGroupFormat,t.vertexFormat);const d=dv(e);d.register("standard",Bb);const u=d.getProgram("standard",h,c,this.userId);this._dirtyShader=false;return u}destroy(){for(const t in this._assetReferences){this._assetReferences[t]._unbind()}this._assetReferences=null;super.destroy()}}const Jb=(t,e)=>{Yb[t]=e};const tE=(t,e,s,i)=>{Object.defineProperty(Qb.prototype,t,{get:i||function(){return this[`_${t}`]},set:s});jb[t]={value:e}};const eE=t=>{const e=`_${t.name}`;const s=t.dirtyShaderFunc||(()=>true);const i=function(t){const i=this[e];if(i!==t){this._dirtyShader=this._dirtyShader||s(i,t);this[e]=t}};tE(t.name,(()=>t.defaultValue),i,t.getterFunc)};const sE=t=>{const e=`_${t.name}`;const s=t.dirtyShaderFunc||(()=>true);const i=function(t){const i=this[e];if(!i.equals(t)){this._dirtyShader=this._dirtyShader||s(i,t);this[e]=i.copy(t)}};tE(t.name,(()=>t.defaultValue.clone()),i,t.getterFunc)};const iE=t=>t.defaultValue&&t.defaultValue.clone?sE(t):eE(t);function nE(t,e="rgb",s=true,i=0){Fb[t]=e.length||-1;iE({name:`${t}Map`,defaultValue:null,dirtyShaderFunc:(t,e)=>!!t!==!!e||t&&(t.type!==e.type||t.format!==e.format)});iE({name:`${t}MapTiling`,defaultValue:new Ot(1,1)});iE({name:`${t}MapOffset`,defaultValue:new Ot(0,0)});iE({name:`${t}MapRotation`,defaultValue:0});iE({name:`${t}MapUv`,defaultValue:i});if(e){iE({name:`${t}MapChannel`,defaultValue:e});if(s){iE({name:`${t}VertexColor`,defaultValue:false});iE({name:`${t}VertexColorChannel`,defaultValue:e})}}const n=`${t}MapTiling`;const r=`${t}MapOffset`;const a=`${t}MapRotation`;const o=`${t}MapTransform`;Jb(o,((t,e,s)=>{const i=t[n];const l=t[r];const h=t[a];if(i.x===1&&i.y===1&&l.x===0&&l.y===0&&h===0){return null}const c=t._allocUniform(o,(()=>[{name:`texture_${o}0`,value:new Float32Array(3)},{name:`texture_${o}1`,value:new Float32Array(3)}]));const d=Math.cos(h*wt.DEG_TO_RAD);const u=Math.sin(h*wt.DEG_TO_RAD);const f=c[0].value;f[0]=d*i.x;f[1]=-u*i.y;f[2]=l.x;const p=c[1].value;p[0]=u*i.x;p[1]=d*i.y;p[2]=1-i.y-l.y;return c}))}function rE(t,e){iE({name:t,defaultValue:e,getterFunc:function(){this._dirtyShader=true;return this[`_${t}`]}});Jb(t,((e,s,i)=>{const n=e._allocUniform(t,(()=>new Float32Array(3)));const r=e[t];Zb.linear(r);n[0]=Zb.r;n[1]=Zb.g;n[2]=Zb.b;return n}))}function aE(t,e,s){iE({name:t,defaultValue:e,dirtyShaderFunc:(t,e)=>(t===0||t===1)!==(e===0||e===1)});Jb(t,s)}function oE(t,e){iE({name:t,defaultValue:null,dirtyShaderFunc:(t,e)=>!!t===!!e});Jb(t,e)}function lE(t,e){iE({name:t,defaultValue:e})}function hE(){rE("ambient",new bt(1,1,1));rE("diffuse",new bt(1,1,1));rE("specular",new bt(0,0,0));rE("emissive",new bt(0,0,0));rE("sheen",new bt(1,1,1));rE("attenuation",new bt(1,1,1));aE("emissiveIntensity",1);aE("specularityFactor",1);aE("sheenGloss",0);aE("gloss",.25);aE("aoIntensity",1);aE("heightMapFactor",1,((t,e,s)=>t.heightMapFactor*.025));aE("opacity",1);aE("alphaFade",1);aE("alphaTest",0);aE("bumpiness",1);aE("normalDetailMapBumpiness",1);aE("reflectivity",1);aE("occludeSpecularIntensity",1);aE("refraction",0);aE("refractionIndex",1/1.5);aE("dispersion",0);aE("thickness",0);aE("attenuationDistance",0);aE("metalness",1);aE("anisotropyIntensity",0);aE("anisotropyRotation",0);aE("clearCoat",0);aE("clearCoatGloss",1);aE("clearCoatBumpiness",1);aE("aoUvSet",0,null);aE("iridescence",0);aE("iridescenceRefractionIndex",1/1.5);aE("iridescenceThicknessMin",0);aE("iridescenceThicknessMax",0);oE("ambientSH");oE("cubeMapProjectionBox",((t,e,s)=>{const i=t._allocUniform("cubeMapProjectionBox",(()=>[{name:"envBoxMin",value:new Float32Array(3)},{name:"envBoxMax",value:new Float32Array(3)}]));const n=t.cubeMapProjectionBox.getMin();const r=i[0].value;r[0]=n.x;r[1]=n.y;r[2]=n.z;const a=t.cubeMapProjectionBox.getMax();const o=i[1].value;o[0]=a.x;o[1]=a.y;o[2]=a.z;return i}));lE("specularTint",false);lE("specularityFactorTint",false);lE("useMetalness",false);lE("useMetalnessSpecularColor",false);lE("useSheen",false);lE("enableGGXSpecular",false);lE("occludeDirect",false);lE("opacityFadesSpecular",true);lE("occludeSpecular",O_);lE("fresnelModel",nm);lE("useDynamicRefraction",false);lE("cubeMapProjection",f_);lE("useFog",true);lE("useLighting",true);lE("useTonemap",true);lE("useSkybox",true);lE("forceUv1",false);lE("pixelSnap",false);lE("twoSidedLighting",false);lE("nineSlicedMode",undefined);lE("msdfTextAttribute",false);lE("useIridescence",false);lE("glossInvert",false);lE("sheenGlossInvert",false);lE("clearCoatGlossInvert",false);lE("opacityDither",Zg);lE("opacityShadowDither",Zg);lE("shadowCatcher",false);nE("diffuse");nE("specular");nE("emissive");nE("thickness","g");nE("specularityFactor","g");nE("normal","");nE("metalness","g");nE("gloss","g");nE("opacity","a");nE("refraction","g");nE("height","g",false);nE("ao","g");nE("light","rgb",true,1);nE("msdf","");nE("diffuseDetail","rgb",false);nE("normalDetail","");nE("aoDetail","g",false);nE("clearCoat","g");nE("clearCoatGloss","g");nE("clearCoatNormal","");nE("sheen","rgb");nE("sheenGloss","g");nE("iridescence","g");nE("iridescenceThickness","g");nE("anisotropy","");lE("diffuseDetailMode",__);lE("aoDetailMode",__);oE("cubeMap");oE("sphereMap");oE("envAtlas");const t=function(){return this._prefilteredCubemaps};const e=function(t){const e=this._prefilteredCubemaps;t=t||[];let s=false;let i=true;for(let n=0;n<6;++n){const r=t[n]||null;if(e[n]!==r){e[n]=r;s=true}i=i&&!!e[n]}if(s){if(i){this.envAtlas=ob.generatePrefilteredAtlas(e,{target:this.envAtlas})}else{if(this.envAtlas){this.envAtlas.destroy();this.envAtlas=null}}this._dirtyShader=true}};const s=[null,null,null,null,null,null];tE("prefilteredCubemaps",(()=>s.slice()),e,t)}hE();const cE=4/64;const dE=1-cE*2;class uE extends gw{constructor(t,e,s,i,n,r){super();const a=new It;const o=new It;const l=new It;const h=new It;const c=new It;const d=new It;const u=[];const f=[];const p=[];const m=[];const _=[];let g;if(s>0){for(let r=0;r<=i;r++){for(let g=0;g<=n;g++){const v=g/n*2*Math.PI-Math.PI;const y=Math.sin(v);const S=Math.cos(v);c.set(y*t,-s/2,S*t);h.set(y*e,s/2,S*e);a.lerp(c,h,r/i);o.sub2(h,c).normalize();d.set(S,0,-y);l.cross(d,o).normalize();u.push(a.x,a.y,a.z);f.push(l.x,l.y,l.z);let x=g/n;let T=r/i;p.push(x,1-T);const w=T;T=x;x=w;x=x*dE+cE;T=T*dE+cE;x/=3;m.push(x,1-T);if(r<i&&g<n){const t=r*(n+1)+g;const e=r*(n+1)+(g+1);const s=(r+1)*(n+1)+g;const i=(r+1)*(n+1)+(g+1);_.push(t,e,s);_.push(e,i,s)}}}}if(r){const t=Math.floor(n/2);const r=n;const a=s/2;for(let s=0;s<=t;s++){const i=s*Math.PI*.5/t;const n=Math.sin(i);const o=Math.cos(i);for(let i=0;i<=r;i++){const l=i*2*Math.PI/r-Math.PI/2;const h=Math.sin(l);const c=Math.cos(l);const d=c*n;const _=o;const g=h*n;let v=1-i/r;let y=1-s/t;u.push(d*e,_*e+a,g*e);f.push(d,_,g);p.push(v,1-y);v=v*dE+cE;y=y*dE+cE;v/=3;y/=3;v+=1/3;m.push(v,1-y)}}g=(i+1)*(n+1);for(let e=0;e<t;++e){for(let t=0;t<r;++t){const s=e*(r+1)+t;const i=s+r+1;_.push(g+s+1,g+i,g+s);_.push(g+s+1,g+i+1,g+i)}}for(let s=0;s<=t;s++){const i=Math.PI*.5+s*Math.PI*.5/t;const n=Math.sin(i);const o=Math.cos(i);for(let i=0;i<=r;i++){const l=i*2*Math.PI/r-Math.PI/2;const h=Math.sin(l);const c=Math.cos(l);const d=c*n;const _=o;const g=h*n;let v=1-i/r;let y=1-s/t;u.push(d*e,_*e-a,g*e);f.push(d,_,g);p.push(v,1-y);v=v*dE+cE;y=y*dE+cE;v/=3;y/=3;v+=2/3;m.push(v,1-y)}}g=(i+1)*(n+1)+(r+1)*(t+1);for(let e=0;e<t;++e){for(let t=0;t<r;++t){const s=e*(r+1)+t;const i=s+r+1;_.push(g+s+1,g+i,g+s);_.push(g+s+1,g+i+1,g+i)}}}else{g=(i+1)*(n+1);if(t>0){for(let e=0;e<n;e++){const i=e/n*2*Math.PI;const r=Math.sin(i);const a=-s/2;const o=Math.cos(i);let l=1-(r+1)/2;let h=(o+1)/2;u.push(r*t,a,o*t);f.push(0,-1,0);p.push(l,1-h);l=l*dE+cE;h=h*dE+cE;l/=3;h/=3;l+=1/3;m.push(l,1-h);if(e>1){_.push(g,g+e,g+e-1)}}}g+=n;if(e>0){for(let t=0;t<n;t++){const i=t/n*2*Math.PI;const r=Math.sin(i);const a=s/2;const o=Math.cos(i);let l=1-(r+1)/2;let h=(o+1)/2;u.push(r*e,a,o*e);f.push(0,1,0);p.push(l,1-h);l=l*dE+cE;h=h*dE+cE;l/=3;h/=3;l+=2/3;m.push(l,1-h);if(t>1){_.push(g,g+t-1,g+t)}}}}this.positions=u;this.normals=f;this.uvs=p;this.uvs1=m;this.indices=_}}class fE extends uE{constructor(t={}){const e=t.radius??.3;const s=t.height??1;const i=t.heightSegments??1;const n=t.sides??20;super(e,e,s-2*e,i,n,true);if(t.calculateTangents){this.tangents=_w(this.positions,this.normals,this.uvs,this.indices)}}}class pE extends uE{constructor(t={}){const e=t.baseRadius??.5;const s=t.peakRadius??0;const i=t.height??1;const n=t.heightSegments??5;const r=t.capSegments??18;super(e,s,i,n,r,false);if(t.calculateTangents){this.tangents=_w(this.positions,this.normals,this.uvs,this.indices)}}}class mE extends uE{constructor(t={}){const e=t.radius??.5;const s=t.height??1;const i=t.heightSegments??5;const n=t.capSegments??20;super(e,e,s,i,n,false);if(t.calculateTangents){this.tangents=_w(this.positions,this.normals,this.uvs,this.indices)}}}class _E extends gw{constructor(t={}){super();const e=t.halfExtents??new Ot(.5,.5);const s=t.widthSegments??5;const i=t.lengthSegments??5;const n=[];const r=[];const a=[];const o=[];let l=0;for(let t=0;t<=s;t++){for(let h=0;h<=i;h++){const c=-e.x+2*e.x*t/s;const d=0;const u=-(-e.y+2*e.y*h/i);const f=t/s;const p=h/i;n.push(c,d,u);r.push(0,1,0);a.push(f,1-p);if(t<s&&h<i){o.push(l+i+1,l+1,l);o.push(l+i+1,l+i+2,l+1)}l++}}this.positions=n;this.normals=r;this.uvs=a;this.uvs1=a;this.indices=o;if(t.calculateTangents){this.tangents=_w(n,r,a,o)}}}class gE extends gw{constructor(t={}){super();const e=t.tubeRadius??.2;const s=t.ringRadius??.3;const i=(t.sectorAngle??360)*wt.DEG_TO_RAD;const n=t.segments??30;const r=t.sides??20;const a=[];const o=[];const l=[];const h=[];for(let t=0;t<=r;t++){for(let c=0;c<=n;c++){const d=Math.cos(i*c/n)*(s+e*Math.cos(2*Math.PI*t/r));const u=Math.sin(2*Math.PI*t/r)*e;const f=Math.sin(i*c/n)*(s+e*Math.cos(2*Math.PI*t/r));const p=Math.cos(i*c/n)*Math.cos(2*Math.PI*t/r);const m=Math.sin(2*Math.PI*t/r);const _=Math.sin(i*c/n)*Math.cos(2*Math.PI*t/r);const g=t/r;const v=1-c/n;a.push(d,u,f);o.push(p,m,_);l.push(g,1-v);if(t<r&&c<n){const e=t*(n+1)+c;const s=(t+1)*(n+1)+c;const i=t*(n+1)+(c+1);const r=(t+1)*(n+1)+(c+1);h.push(e,s,i);h.push(s,r,i)}}}this.positions=a;this.normals=o;this.uvs=l;this.uvs1=l;this.indices=h;if(t.calculateTangents){this.tangents=_w(a,o,l,h)}}}class vE{constructor(t,e){this.processedCache=new Map;this.definitionsCache=new Map;this._generators=new Map;this._device=t;this._isClearingCache=false;this._precached=false;this._programsCollection=[];this._defaultStdMatOption=new Ob;this._defaultStdMatOptionMin=new Ob;const s=new py;e.shaderOptBuilder.updateRef(this._defaultStdMatOption,{},s,e,null,[],pg,null);e.shaderOptBuilder.updateMinRef(this._defaultStdMatOptionMin,{},e,null,_g,null);t.on("destroy:shader",(t=>{this.removeFromCache(t)}))}destroy(){this.clearCache()}register(t,e){if(!this._generators.has(t)){this._generators.set(t,e)}}unregister(t){if(this._generators.has(t)){this._generators.delete(t)}}isRegistered(t){return this._generators.has(t)}generateShaderDefinition(t,e,s,i){let n=this.definitionsCache.get(s);if(!n){let r;if(i.litOptions?.lights){r=i.litOptions.lights;i.litOptions.lights=r.map((t=>{const e=t.clone?t.clone():t;e.key=t.key;return e}))}this.storeNewProgram(e,i);if(i.litOptions?.lights){i.litOptions.lights=r}if(this._precached);const a=this._device;n=t.createShaderDefinition(a,i);n.name=n.name??(i.pass?`${e}-pass:${i.pass}`:e);this.definitionsCache.set(s,n)}return n}getCachedShader(t){return this.processedCache.get(t)}setCachedShader(t,e){this.processedCache.set(t,e)}getProgram(t,e,s,i){const n=this._generators.get(t);if(!n){return null}const r=n.generateKey(e);const a=$o(r);const o=s.generateKey(this._device);const l=$o(o);const h=`${a}#${l}`;let c=this.getCachedShader(h);if(!c){const r=this.generateShaderDefinition(n,t,a,e);let o="";let l;if(e.pass!==undefined){l=_v.get(this._device).getByIndex(e.pass);o=`-${l.name}`}this._device.fire("shader:generate",{userMaterialId:i,shaderPassInfo:l,definition:r});const d={name:`${r.name}${o}-proc`,attributes:r.attributes,vshader:r.vshader,vincludes:r.vincludes,fincludes:r.fincludes,fshader:r.fshader,processingOptions:s,shaderLanguage:r.shaderLanguage,meshUniformBufferFormat:r.meshUniformBufferFormat,meshBindGroupFormat:r.meshBindGroupFormat};c=new Zh(this._device,d);this.setCachedShader(h,c)}return c}storeNewProgram(t,e){let s={};if(t==="standard"){const t=this._getDefaultStdMatOptions(e.pass);for(const i in e){if(e.hasOwnProperty(i)&&t[i]!==e[i]||i==="pass"){s[i]=e[i]}}for(const t in e.litOptions){s[t]=e.litOptions[t]}}else{s=e}this._programsCollection.push(JSON.stringify({name:t,options:s}))}dumpPrograms(){let t="let device = pc.app ? pc.app.graphicsDevice : pc.Application.getApplication().graphicsDevice;\n";t+="let shaders = [";if(this._programsCollection[0]){t+=`\n\t${this._programsCollection[0]}`}for(let e=1;e<this._programsCollection.length;++e){t+=`,\n\t${this._programsCollection[e]}`}t+="\n];\n";t+="pc.getProgramLibrary(device).precompile(shaders);\n";t+=`if (pc.version != "${T}" || pc.revision != "${w}")\n`;t+='\tconsole.warn("precompile-shaders.js: engine version mismatch, rebuild shaders lib with current engine");';const e=document.createElement("a");e.setAttribute("href",`data:text/plain;charset=utf-8,${encodeURIComponent(t)}`);e.setAttribute("download","precompile-shaders.js");e.style.display="none";document.body.appendChild(e);e.click();document.body.removeChild(e)}clearCache(){this._isClearingCache=true;this.processedCache.forEach((t=>{t.destroy()}));this.processedCache.clear();this._isClearingCache=false}removeFromCache(t){if(this._isClearingCache){return}this.processedCache.forEach(((e,s)=>{if(t===e){this.processedCache.delete(s)}}))}_getDefaultStdMatOptions(t){const e=_v.get(this._device).getByIndex(t);return t===gg||t===mg||e.isShadow?this._defaultStdMatOptionMin:this._defaultStdMatOption}precompile(t){if(t){const e=new Array(t.length);for(let s=0;s<t.length;s++){if(t[s].name==="standard"){const e=t[s].options;const i=this._getDefaultStdMatOptions(e.pass);for(const t in i){if(i.hasOwnProperty(t)&&e[t]===undefined){e[t]=i[t]}}}e[s]=this.getProgram(t[s].name,t[s].options)}}this._precached=true}}const yE=new Vt;const SE=new Gt;const xE=new jt;const TE=new jt;const wE=new bt(1,1,0,.4);const bE=.28209479177387814;class EE{constructor(t,e,s,i,n){const r=t.getProp("x");const a=t.getProp("y");const o=t.getProp("z");const l=t.getProp("rot_1");const h=t.getProp("rot_2");const c=t.getProp("rot_3");const d=t.getProp("rot_0");const u=t.getProp("scale_0");const f=t.getProp("scale_1");const p=t.getProp("scale_2");const m=t.getProp("f_dc_0");const _=t.getProp("f_dc_1");const g=t.getProp("f_dc_2");const v=t.getProp("opacity");const y=t=>{if(t>0){return 1/(1+Math.exp(-t))}const e=Math.exp(t);return e/(1+e)};this.read=t=>{if(e){e.x=r[t];e.y=a[t];e.z=o[t]}if(s){s.set(l[t],h[t],c[t],d[t])}if(i){i.set(Math.exp(u[t]),Math.exp(f[t]),Math.exp(p[t]))}if(n){n.set(.5+m[t]*bE,.5+_[t]*bE,.5+g[t]*bE,y(v[t]))}}}}const AE=(t,e,s)=>{SE.set(s.x,s.y,s.z,s.w).normalize();t.setTRS(e,SE,It.ONE)};class CE{constructor(t,e=[]){this.elements=t;this.numSplats=this.getElement("vertex").count;this.comments=e}static calcSplatAabb(t,e,s,i){AE(yE,e,s);xE.center.set(0,0,0);xE.halfExtents.set(i.x*2,i.y*2,i.z*2);t.setFromTransformedAabb(xE,yE)}getProp(t,e="vertex"){return this.getElement(e)?.properties.find((e=>e.name===t))?.storage}getElement(t){return this.elements.find((e=>e.name===t))}addProp(t,e){this.getElement("vertex").properties.push({type:"float",name:t,storage:e,byteSize:4})}createIter(t,e,s,i){return new EE(this,t,e,s,i)}calcAabb(t,e){let s,i,n,r,a,o;let l=true;const h=this.getProp("x");const c=this.getProp("y");const d=this.getProp("z");const u=this.getProp("scale_0");const f=this.getProp("scale_1");const p=this.getProp("scale_2");for(let t=0;t<this.numSplats;++t){if(e&&!e(t)){continue}const m=h[t];const _=c[t];const g=d[t];const v=Math.max(u[t],f[t],p[t]);if(!isFinite(m)||!isFinite(_)||!isFinite(g)||!isFinite(v)){continue}const y=2*Math.exp(v);if(l){l=false;s=m-y;i=_-y;n=g-y;r=m+y;a=_+y;o=g+y}else{s=Math.min(s,m-y);i=Math.min(i,_-y);n=Math.min(n,g-y);r=Math.max(r,m+y);a=Math.max(a,_+y);o=Math.max(o,g+y)}}if(!l){t.center.set((s+r)*.5,(i+a)*.5,(n+o)*.5);t.halfExtents.set((r-s)*.5,(a-i)*.5,(o-n)*.5)}return!l}calcAabbExact(t,e){const s=new It;const i=new Gt;const n=new It;const r=this.createIter(s,i,n);let a=true;for(let o=0;o<this.numSplats;++o){if(e&&!e(o)){continue}r.read(o);if(a){a=false;CE.calcSplatAabb(t,s,i,n)}else{CE.calcSplatAabb(TE,s,i,n);t.add(TE)}}return!a}getCenters(t){const e=this.getProp("x");const s=this.getProp("y");const i=this.getProp("z");for(let n=0;n<this.numSplats;++n){t[n*3+0]=e[n];t[n*3+1]=s[n];t[n*3+2]=i[n]}}calcFocalPoint(t,e){const s=this.getProp("x");const i=this.getProp("y");const n=this.getProp("z");const r=this.getProp("scale_0");const a=this.getProp("scale_1");const o=this.getProp("scale_2");t.x=0;t.y=0;t.z=0;let l=0;for(let h=0;h<this.numSplats;++h){if(e&&!e(h)){continue}const c=s[h];const d=i[h];const u=n[h];if(!isFinite(c)||!isFinite(d)||!isFinite(u)){continue}const f=1/(1+Math.exp(Math.max(r[h],a[h],o[h])));t.x+=c*f;t.y+=d*f;t.z+=u*f;l+=f}t.mulScalar(1/l)}renderWireframeBounds(t,e){const s=new It;const i=new Gt;const n=new It;const r=new It;const a=new It;const o=this.createIter(s,i,n);for(let l=0;l<this.numSplats;++l){o.read(l);AE(yE,s,i);yE.mul2(e,yE);r.set(n.x*-2,n.y*-2,n.z*-2);a.set(n.x*2,n.y*2,n.z*2);t.immediate.drawWireAlignedBox(r,a,wE,true,t.defaultDrawLayer,yE)}}get isCompressed(){return false}get shBands(){const t=()=>{for(let t=0;t<45;++t){if(!this.getProp(`f_rest_${t}`)){return t}}return 45};const e={9:1,24:2,45:3};return e[t()]??0}calcMortonOrder(){const t=t=>{let e=t[0];let s=t[0];for(let i=1;i<t.length;i++){if(t[i]<e)e=t[i];if(t[i]>s)s=t[i]}return{min:e,max:s}};const e=(t,e,s)=>{const i=t=>{t&=1023;t=(t^t<<16)&4278190335;t=(t^t<<8)&50393103;t=(t^t<<4)&51130563;t=(t^t<<2)&153391689;return t};return(i(s)<<2)+(i(e)<<1)+i(t)};const s=this.getProp("x");const i=this.getProp("y");const n=this.getProp("z");const{min:r,max:a}=t(s);const{min:o,max:l}=t(i);const{min:h,max:c}=t(n);const d=r===a?0:1024/(a-r);const u=o===l?0:1024/(l-o);const f=h===c?0:1024/(c-h);const p=new Map;for(let t=0;t<this.numSplats;t++){const a=Math.min(1023,Math.floor((s[t]-r)*d));const l=Math.min(1023,Math.floor((i[t]-o)*u));const c=Math.min(1023,Math.floor((n[t]-h)*f));const m=e(a,l,c);const _=p.get(m);if(_){_.push(t)}else{p.set(m,[t])}}const m=Array.from(p.keys()).sort(((t,e)=>t-e));const _=new Uint32Array(this.numSplats);let g=0;for(let t=0;t<m.length;++t){const e=p.get(m[t]);for(let t=0;t<e.length;++t){_[g++]=e[t]}}return _}reorder(t){const e=new Map;const s=t=>{if(e.has(t)){const s=e.get(t);e.delete(t);return s}return new ArrayBuffer(t)};const i=t=>{e.set(t.byteLength,t)};const n=e=>{const n=new e.constructor(s(e.byteLength));for(let s=0;s<t.length;s++){n[s]=e[t[s]]}i(e.buffer);return n};this.elements.forEach((t=>{t.properties.forEach((t=>{if(t.storage){t.storage=n(t.storage)}}))}))}reorderData(){this.reorder(this.calcMortonOrder())}}class PE{constructor(t,e){this.device=t;this.gsplatData=e;this.centers=new Float32Array(e.numSplats*3);e.getCenters(this.centers);this.aabb=new jt;e.calcAabb(this.aabb);const s=128;const i=Math.ceil(e.numSplats/s)*s;const n=i/s;const r=new Uint32Array(n);for(let t=0;t<n;++t){r[t]=t*s}const a=new Qo(t,[{semantic:En,components:1,type:gr,asInt:true}]);const o=new Float32Array(12*s);const l=new Uint32Array(6*s);for(let t=0;t<s;++t){o.set([-1,-1,t,1,-1,t,1,1,t,-1,1,t],t*12);const e=t*4;l.set([0+e,1+e,2+e,0+e,2+e,3+e],t*6)}this.mesh=new Vv(t);this.mesh.setPositions(o,3);this.mesh.setIndices(l);this.mesh.update();this.mesh.incRefCount();this.mesh.aabb.copy(this.aabb);this.instanceIndices=new qo(t,a,n,{usage:He,data:r.buffer})}destroy(){this.mesh?.destroy();this.instanceIndices?.destroy()}get instanceSize(){return 128}get numSplats(){return this.gsplatData.numSplats}configureMaterial(t){}evalTextureSize(t){return Ot.ZERO}createTexture(t,e,s,i){return new lo(this.device,{name:t,width:s.x,height:s.y,format:e,cubemap:false,mipmaps:false,minFilter:as,magFilter:as,addressU:pe,addressV:pe,...i?{levels:[i]}:{}})}instantiate(){}}const LE=(t,e)=>{const s=[];for(let i=0;i<e;++i){s.push(t.getProp(`f_rest_${i}`))}return s};class DE extends PE{constructor(t,e){super(t,e);const s=e.numSplats;const i=this.evalTextureSize(s);this.colorTexture=this.createTexture("splatColor",Fs,i);this.transformATexture=this.createTexture("transformA",vi,i);this.transformBTexture=this.createTexture("transformB",Fs,i);this.updateColorData(e);this.updateTransformData(e);this.shBands=e.shBands;if(this.shBands>0){this.sh1to3Texture=this.createTexture("splatSH_1to3",vi,i);if(this.shBands>1){this.sh4to7Texture=this.createTexture("splatSH_4to7",vi,i);if(this.shBands>2){this.sh8to11Texture=this.createTexture("splatSH_8to11",vi,i);this.sh12to15Texture=this.createTexture("splatSH_12to15",vi,i)}else{this.sh8to11Texture=this.createTexture("splatSH_8to11",ai,i)}}this.updateSHData(e)}}destroy(){this.colorTexture?.destroy();this.transformATexture?.destroy();this.transformBTexture?.destroy();this.sh1to3Texture?.destroy();this.sh4to7Texture?.destroy();this.sh8to11Texture?.destroy();this.sh12to15Texture?.destroy();super.destroy()}configureMaterial(t){t.setParameter("splatColor",this.colorTexture);t.setParameter("transformA",this.transformATexture);t.setParameter("transformB",this.transformBTexture);t.setDefine("SH_BANDS",this.shBands);if(this.sh1to3Texture)t.setParameter("splatSH_1to3",this.sh1to3Texture);if(this.sh4to7Texture)t.setParameter("splatSH_4to7",this.sh4to7Texture);if(this.sh8to11Texture)t.setParameter("splatSH_8to11",this.sh8to11Texture);if(this.sh12to15Texture)t.setParameter("splatSH_12to15",this.sh12to15Texture)}evalTextureSize(t){const e=Math.ceil(Math.sqrt(t));const s=Math.ceil(t/e);return new Ot(e,s)}updateColorData(t){const e=this.colorTexture;if(!e){return}const s=Dt.float2Half;const i=e.lock();const n=t.getProp("f_dc_0");const r=t.getProp("f_dc_1");const a=t.getProp("f_dc_2");const o=t.getProp("opacity");const l=.28209479177387814;for(let t=0;t<this.numSplats;++t){const e=n[t]*l+.5;const h=r[t]*l+.5;const c=a[t]*l+.5;const d=1/(1+Math.exp(-o[t]));i[t*4+0]=s(e);i[t*4+1]=s(h);i[t*4+2]=s(c);i[t*4+3]=s(d)}e.unlock()}updateTransformData(t){const e=Dt.float2Half;if(!this.transformATexture){return}const s=this.transformATexture.lock();const i=new Float32Array(s.buffer);const n=this.transformBTexture.lock();const r=new It;const a=new Gt;const o=new It;const l=t.createIter(r,a,o);for(let t=0;t<this.numSplats;t++){l.read(t);a.normalize();if(a.w<0){a.mulScalar(-1)}i[t*4+0]=r.x;i[t*4+1]=r.y;i[t*4+2]=r.z;s[t*4+3]=e(a.x)|e(a.y)<<16;n[t*4+0]=e(o.x);n[t*4+1]=e(o.y);n[t*4+2]=e(o.z);n[t*4+3]=e(a.z)}this.transformATexture.unlock();this.transformBTexture.unlock()}updateSHData(t){const e=this.sh1to3Texture.lock();const s=this.sh4to7Texture?.lock();const i=this.sh8to11Texture?.lock();const n=this.sh12to15Texture?.lock();const r={1:3,2:8,3:15}[this.shBands];const a=LE(t,r*3);const o=(1<<11)-1;const l=(1<<10)-1;const h=new Float32Array(1);const c=new Uint32Array(h.buffer);const d=new Array(r*3).fill(0);for(let u=0;u<t.numSplats;++u){for(let t=0;t<r;++t){d[t*3]=a[t][u];d[t*3+1]=a[t+r][u];d[t*3+2]=a[t+r*2][u]}let t=d[0];for(let e=1;e<r*3;++e){t=Math.max(t,Math.abs(d[e]))}if(t===0){continue}for(let e=0;e<r;++e){d[e*3+0]=Math.max(0,Math.min(o,Math.floor((d[e*3+0]/t*.5+.5)*o+.5)));d[e*3+1]=Math.max(0,Math.min(l,Math.floor((d[e*3+1]/t*.5+.5)*l+.5)));d[e*3+2]=Math.max(0,Math.min(o,Math.floor((d[e*3+2]/t*.5+.5)*o+.5)))}h[0]=t;e[u*4+0]=c[0];e[u*4+1]=d[0]<<21|d[1]<<11|d[2];e[u*4+2]=d[3]<<21|d[4]<<11|d[5];e[u*4+3]=d[6]<<21|d[7]<<11|d[8];if(this.shBands>1){s[u*4+0]=d[9]<<21|d[10]<<11|d[11];s[u*4+1]=d[12]<<21|d[13]<<11|d[14];s[u*4+2]=d[15]<<21|d[16]<<11|d[17];s[u*4+3]=d[18]<<21|d[19]<<11|d[20];if(this.shBands>2){i[u*4+0]=d[21]<<21|d[22]<<11|d[23];i[u*4+1]=d[24]<<21|d[25]<<11|d[26];i[u*4+2]=d[27]<<21|d[28]<<11|d[29];i[u*4+3]=d[30]<<21|d[31]<<11|d[32];n[u*4+0]=d[33]<<21|d[34]<<11|d[35];n[u*4+1]=d[36]<<21|d[37]<<11|d[38];n[u*4+2]=d[39]<<21|d[40]<<11|d[41];n[u*4+3]=d[42]<<21|d[43]<<11|d[44]}else{i[u]=d[21]<<21|d[22]<<11|d[23]}}}this.sh1to3Texture.unlock();this.sh4to7Texture?.unlock();this.sh8to11Texture?.unlock();this.sh12to15Texture?.unlock()}}const ME=`\n\tattribute vec2 vertex_position;\n\tvoid main(void) {\n\t\tgl_Position = vec4(vertex_position, 0.0, 1.0);\n\t}\n`;const IE=`\n\t#include "gsplatEvalSHVS"\n\tvec4 packRgb(vec3 v) {\n\t\tuvec3 vb = uvec3(clamp(v, vec3(0.0), vec3(1.0)) * vec3(2047.0, 2047.0, 1023.0));\n\t\tuint bits = (vb.x << 21) | (vb.y << 10) | vb.z;\n\t\treturn vec4((uvec4(bits) >> uvec4(24, 16, 8, 0)) & uvec4(0xff)) / vec4(255.0);\n\t}\n\tuniform mediump vec3 dir;\n\tuniform mediump sampler2D centroids;\n\tuniform mediump float shN_mins;\n\tuniform mediump float shN_maxs;\n\tvoid main(void) {\n\t\tivec2 uv = ivec2(gl_FragCoord.xy) * ivec2(SH_COEFFS, 1);\n\t\tmediump vec3 coefficients[SH_COEFFS];\n\t\tfor (int i = 0; i < SH_COEFFS; i++) {\n\t\t\tvec3 s = texelFetch(centroids, ivec2(uv.x + i, uv.y), 0).xyz;\n\t\t\tcoefficients[i] = mix(vec3(shN_mins), vec3(shN_maxs), s);\n\t\t}\n\t\tgl_FragColor = packRgb(evalSH(coefficients, dir) * 0.25 + 0.5);\n\t}\n`;const RE=`\n\tattribute vertex_position: vec2f;\n\t@vertex\n\tfn vertexMain(input: VertexInput) -> VertexOutput {\n\t\tvar output: VertexOutput;\n\t\toutput.position = vec4f(vertex_position, 0.0, 1.0);\n\t\treturn output;\n\t}\n`;const OE=`\n\t#include "gsplatEvalSHVS"\n\tfn packRgb(v: vec3f) -> vec4f {\n\t\tlet vb = vec3u(clamp(v, vec3f(0.0), vec3f(1.0)) * vec3f(2047.0, 2047.0, 1023.0));\n\t\tlet bits = dot(vb, vec3u(1 << 21, 1 << 10, 1));\n\t\treturn vec4f((vec4u(bits) >> vec4u(24, 16, 8, 0)) & vec4u(0xff)) / vec4f(255.0);\n\t}\n\tuniform dir: vec3f;\n\tuniform shN_mins: f32;\n\tuniform shN_maxs: f32;\n\tvar centroids: texture_2d<f32>;\n\t@fragment\n\tfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\tvar uv = vec2i(input.position.xy) * vec2i(SH_COEFFS, 1);\n\t\tvar coefficients: array<vec3f, SH_COEFFS>;\n\t\tfor (var i: i32 = 0; i < SH_COEFFS; i++) {\n\t\t\tlet s: vec3f = textureLoad(centroids, vec2i(uv.x + i, uv.y), 0).xyz;\n\t\t\tcoefficients[i] = mix(vec3f(uniform.shN_mins), vec3f(uniform.shN_maxs), s);\n\t\t}\n\t\toutput.color = packRgb(evalSH(&coefficients, uniform.dir) * 0.25 + 0.5);\n\t\treturn output;\n\t}\n`;const FE=`\n\tuniform mediump sampler2D sh0;\n\tuniform highp sampler2D sh_labels;\n\tuniform mediump sampler2D sh_result;\n\tuniform vec4 sh0_mins;\n\tuniform vec4 sh0_maxs;\n\tfloat SH_C0 = 0.28209479177387814;\n\tvec3 unpackRgb(vec4 v) {\n\t\tuvec4 uv = uvec4(v * 255.0);\n\t\tuint bits = (uv.x << 24) | (uv.y << 16) | (uv.z << 8) | uv.w;\n\t\tuvec3 vb = (uvec3(bits) >> uvec3(21, 10, 0)) & uvec3(0x7ffu, 0x7ffu, 0x3ffu);\n\t\treturn vec3(vb) / vec3(2047.0, 2047.0, 1023.0);\n\t}\n\tvec4 readColor(in SplatSource source) {\n\t\tvec4 baseSample = mix(sh0_mins, sh0_maxs, texelFetch(sh0, source.uv, 0));\n\t\tvec4 base = vec4(vec3(0.5) + baseSample.xyz * SH_C0, 1.0 / (1.0 + exp(-baseSample.w)));\n\t\tivec2 labelSample = ivec2(texelFetch(sh_labels, source.uv, 0).xy * 255.0);\n\t\tint n = labelSample.x + labelSample.y * 256;\n\t\tvec4 shSample = texelFetch(sh_result, ivec2(n % 64, n / 64), 0);\n\t\tvec3 sh = (unpackRgb(shSample) - vec3(0.5)) * 4.0;\n\t\treturn vec4(base.xyz + sh, base.w);\n\t}\n`;const NE=`\n\tvar sh0: texture_2d<f32>;\n\tvar sh_labels: texture_2d<f32>;\n\tvar sh_result: texture_2d<f32>;\n\tuniform sh0_mins: vec4f;\n\tuniform sh0_maxs: vec4f;\n\tconst SH_C0: f32 = 0.28209479177387814;\n\tfn unpackRgb(v: vec4f) -> vec3f {\n\t\tlet bits = dot(vec4u(v * 255.0), vec4u(1u << 24, 1u << 16, 1u << 8, 1u));\n\t\tlet vb = (vec3u(bits) >> vec3u(21, 10, 0)) & vec3u(0x7ffu, 0x7ffu, 0x3ffu);\n\t\treturn vec3f(vb) / vec3f(2047.0, 2047.0, 1023.0);\n\t}\n\tfn readColor(source: ptr<function, SplatSource>) -> vec4f {\n\t\tlet baseSample: vec4f = mix(uniform.sh0_mins, uniform.sh0_maxs, textureLoad(sh0, source.uv, 0));\n\t\tlet base = vec4f(vec3f(0.5) + baseSample.xyz * SH_C0, 1.0 / (1.0 + exp(-baseSample.w)));\n\t\tlet labelSample: vec2i = vec2i(textureLoad(sh_labels, source.uv, 0).xy * 255.0);\n\t\tlet n = labelSample.x + labelSample.y * 256;\n\t\tlet shSample: vec4f = textureLoad(sh_result, vec2i(n % 64, n / 64), 0);\n\t\tlet sh: vec3f = (unpackRgb(shSample) - vec3f(0.5)) * 4.0;\n\t\treturn vec4f(base.xyz + sh, base.w);\n\t}\n`;const kE=(t,e)=>{for(const s in e){t.resolve(s).setValue(e[s])}};class BE extends Yc{execute(){this.executeCallback?.()}constructor(...t){super(...t),this.executeCallback=null}}const UE=new Vt;const zE=new It;class VE{constructor(t,e){this.prevDir=new It;this.updateMode="enable";this.device=t;this.gsplatInstance=e;const{resource:s}=e;const i=new Map(yv.get(t,t.isWebGPU?"wgsl":"glsl"));this.shader=Tv.createShader(t,{uniqueName:"gsplatResolveSH",vertexGLSL:ME,fragmentGLSL:IE,vertexWGSL:RE,fragmentWGSL:OE,vertexIncludes:i,fragmentIncludes:i,fragmentDefines:new Map([["SH_BANDS",s.gsplatData.shBands.toString()]]),attributes:{vertex_position:Ki}});this.texture=s.createTexture("centroids",Ds,new Ot(64,1024));this.renderTarget=new il({colorBuffer:this.texture,depth:false});this.renderPass=new BE(t);this.renderPass.init(this.renderTarget,{});this.renderPass.colorOps.clear=true;this.quadRender=new Lv(this.shader);const{material:n}=e;n.setDefine("SH_BANDS","0");const{shaderChunks:r}=n;r.glsl.set("gsplatSogsColorVS",FE);r.wgsl.set("gsplatSogsColorVS",NE);n.update();t.scope.resolve("sh_result").setValue(this.texture)}destroy(){const{gsplatInstance:t}=this;const{material:e}=t;e.setDefine("SH_BANDS",t.resource.gsplatData.shBands.toString());const{shaderChunks:s}=e;s.glsl.delete("gsplatSogsColorVS");s.wgsl.delete("gsplatSogsColorVS");e.update();this.quadRender.destroy();this.renderPass.destroy();this.renderTarget.destroy();this.texture.destroy();this.shader.destroy()}render(t,e){const{prevDir:s,updateMode:i}=this;if(i==="disable"){return}UE.invert(e);UE.transformVector(t.forward,zE);zE.normalize();if(i==="enable"&&zE.equalsApprox(s,.001)){return}s.copy(zE);const n=()=>{const{device:t}=this;const{sh_centroids:e,meta:s}=this.gsplatInstance.resource.gsplatData;kE(t.scope,{dir:zE.toArray(),centroids:e,shN_mins:s.shN.mins,shN_maxs:s.shN.maxs});t.setCullMode(ss);t.setDepthState(Uo.NODEPTH);t.setStencilState(null,null);t.setBlendState(Ro.NOBLEND);this.quadRender.render()};this.renderPass.executeCallback=n;this.renderPass.render()}}function GE(){const t=typeof self!=="undefined"&&self||require("node:worker_threads").parentPort;let e;let s;let i;let n;let r;let a;let o=false;const l={x:0,y:0,z:0};const h={x:0,y:0,z:0};const c={x:0,y:0,z:0};const d={x:0,y:0,z:0};let u;let f;const p=32;const m=new Array(p).fill(0);const _=new Array(p).fill(0);const g=new Array(p).fill(0);const v=(t,e,s)=>{while(t<=e){const i=e+t>>1;const n=s(i);if(n>0){t=i+1}else if(n<0){e=i-1}else{return i}}return~t};const y=()=>{if(!e||!s||s.length===0||!r||!a)return;const y=r.x;const S=r.y;const x=r.z;const T=a.x;const w=a.y;const b=a.z;const E=.001;if(!o&&Math.abs(y-l.x)<E&&Math.abs(S-l.y)<E&&Math.abs(x-l.z)<E&&Math.abs(T-h.x)<E&&Math.abs(w-h.y)<E&&Math.abs(b-h.z)<E){return}o=false;l.x=y;l.y=S;l.z=x;h.x=T;h.y=w;h.z=b;let A;let C;for(let t=0;t<8;++t){const e=t&1?c.x:d.x;const s=t&2?c.y:d.y;const i=t&4?c.z:d.z;const n=e*T+s*w+i*b;if(t===0){A=C=n}else{A=Math.min(A,n);C=Math.max(C,n)}}const P=s.length/3;const L=Math.max(10,Math.min(20,Math.round(Math.log2(P/4))));const D=2**L+1;if(u?.length!==P){u=new Uint32Array(P)}if(!f||f.length!==D){f=new Uint32Array(D)}else{f.fill(0)}const M=C-A;if(M<1e-6){for(let t=0;t<P;++t){u[t]=0;f[0]++}}else{const t=i.length/4;m.fill(0);for(let e=0;e<t;++e){const t=i[e*4+0];const s=i[e*4+1];const n=i[e*4+2];const r=i[e*4+3];const a=t*T+s*w+n*b-A;const o=Math.max(0,Math.floor((a-r)*p/M));const l=Math.min(p,Math.ceil((a+r)*p/M));for(let t=o;t<l;++t){m[t]++}}const e=m.reduce(((t,e)=>t+e),0);for(let t=0;t<p;++t){g[t]=m[t]/e*D>>>0}for(let t=0;t<p;++t){_[t]=t===0?0:_[t-1]+g[t-1]}const n=M/p;let r=0;for(let t=0;t<P;++t){const e=s[r++];const i=s[r++];const a=s[r++];const o=(e*T+i*w+a*b-A)/n;const l=o>>>0;const h=_[l]+g[l]*(o-l)>>>0;u[t]=h;f[h]++}}for(let t=1;t<D;t++){f[t]+=f[t-1]}for(let t=0;t<P;t++){const s=u[t];const i=--f[s];e[i]=t}const I=y*T+S*w+x*b;const R=t=>{let i=e[t]*3;return s[i++]*T+s[i++]*w+s[i]*b-I};const O=()=>{const t=v(0,P-1,(t=>-R(t)));return Math.min(P,Math.abs(t))};const F=R(P-1)>=0?O():P;if(n){for(let t=0;t<P;++t){e[t]=n[e[t]]}}t.postMessage({order:e.buffer,count:F},[e.buffer]);e=null};t.addEventListener("message",(t=>{const l=t.data??t;if(l.order){e=new Uint32Array(l.order)}if(l.centers){s=new Float32Array(l.centers);o=true;if(l.chunks){const t=new Float32Array(l.chunks);i=new Float32Array(l.chunks,0,t.length*4/6);c.x=t[0];c.y=t[1];c.z=t[2];d.x=t[3];d.y=t[4];d.z=t[5];for(let e=0;e<t.length/6;++e){const s=t[e*6+0];const n=t[e*6+1];const r=t[e*6+2];const a=t[e*6+3];const o=t[e*6+4];const l=t[e*6+5];i[e*4+0]=(s+a)*.5;i[e*4+1]=(n+o)*.5;i[e*4+2]=(r+l)*.5;i[e*4+3]=Math.sqrt((a-s)**2+(o-n)**2+(l-r)**2)*.5;if(s<c.x)c.x=s;if(n<c.y)c.y=n;if(r<c.z)c.z=r;if(a>d.x)d.x=a;if(o>d.y)d.y=o;if(l>d.z)d.z=l}}else{const t=s.length/3;const e=Math.ceil(t/256);i=new Float32Array(e*4);c.x=c.y=c.z=Infinity;d.x=d.y=d.z=-Infinity;let n,r,a,o,l,h;for(let u=0;u<e;++u){n=r=a=Infinity;o=l=h=-Infinity;const e=u*256;const f=Math.min(t,(u+1)*256);for(let t=e;t<f;++t){const e=s[t*3+0];const i=s[t*3+1];const u=s[t*3+2];const f=Number.isFinite(e);const p=Number.isFinite(i);const m=Number.isFinite(u);if(!f)s[t*3+0]=0;if(!p)s[t*3+1]=0;if(!m)s[t*3+2]=0;if(!f||!p||!m){continue}if(e<n)n=e;else if(e>o)o=e;if(i<r)r=i;else if(i>l)l=i;if(u<a)a=u;else if(u>h)h=u;if(e<c.x)c.x=e;else if(e>d.x)d.x=e;if(i<c.y)c.y=i;else if(i>d.y)d.y=i;if(u<c.z)c.z=u;else if(u>d.z)d.z=u}i[u*4+0]=(n+o)*.5;i[u*4+1]=(r+l)*.5;i[u*4+2]=(a+h)*.5;i[u*4+3]=Math.sqrt((o-n)**2+(l-r)**2+(h-a)**2)*.5}}}if(l.hasOwnProperty("mapping")){n=l.mapping?new Uint32Array(l.mapping):null;o=true}if(l.cameraPosition)r=l.cameraPosition;if(l.cameraDirection)a=l.cameraDirection;y()}))}class HE extends at{constructor(){super();const t=t=>{const e=t.data??t;const s=e.order;const i=this.orderTexture._levels[0].buffer;this.worker.postMessage({order:i},[i]);this.orderTexture._levels[0]=new Uint32Array(s);this.orderTexture.upload();this.fire("updated",e.count)};const e=`(${GE.toString()})()`;if(B.environment==="node"){this.worker=new Worker(e,{eval:true});this.worker.on("message",t)}else{this.worker=new Worker(URL.createObjectURL(new Blob([e],{type:"application/javascript"})));this.worker.addEventListener("message",t)}}destroy(){this.worker.terminate();this.worker=null}init(t,e,s){this.orderTexture=t;this.centers=e.slice();const i=this.orderTexture.lock({mode:Bn}).slice();this.orderTexture.unlock();for(let t=0;t<i.length;++t){i[t]=t}const n={order:i.buffer,centers:e.buffer,chunks:s?.buffer};const r=[i.buffer,e.buffer].concat(s?[s.buffer]:[]);this.worker.postMessage(n,r)}setMapping(t){if(t){const e=new Float32Array(t.length*3);for(let s=0;s<t.length;++s){const i=t[s]*3;const n=s*3;e[n+0]=this.centers[i+0];e[n+1]=this.centers[i+1];e[n+2]=this.centers[i+2]}this.worker.postMessage({centers:e.buffer,mapping:t.buffer},[e.buffer,t.buffer])}else{const t=this.centers.slice();this.worker.postMessage({centers:t.buffer,mapping:null},[t.buffer])}}setCamera(t,e){this.worker.postMessage({cameraPosition:{x:t.x,y:t.y,z:t.z},cameraDirection:{x:e.x,y:e.y,z:e.z}})}}var WE=`\n\tuniform highp sampler2D means_l;\n\tuniform highp sampler2D means_u;\n\tuniform highp sampler2D quats;\n\tuniform highp sampler2D scales;\n\tuniform highp sampler2D sh_labels;\n\tuniform highp uint numSplats;\n\tuint packU32(vec4 v) {\n\t\treturn uint(v.x * 255.0) << 24u |\n\t\t\t   uint(v.y * 255.0) << 16u |\n\t\t\t   uint(v.z * 255.0) << 8u |\n\t\t\t   uint(v.w * 255.0);\n\t}\n\tuvec4 packU32(vec4 a, vec4 b, vec4 c, vec4 d) {\n\t\treturn uvec4(packU32(a), packU32(b), packU32(c), packU32(d));\n\t}\n\tvoid main(void) {\n\t\tint w = int(textureSize(means_l, 0).x);\n\t\tivec2 uv = ivec2(gl_FragCoord.xy);\n\t\tif (uint(uv.x + uv.y * w) >= numSplats) {\n\t\t\tdiscard;\n\t\t}\n\t\tvec3 meansLSample = texelFetch(means_l, uv, 0).xyz;\n\t\tvec3 meansUSample = texelFetch(means_u, uv, 0).xyz;\n\t\tvec4 quatsSample = texelFetch(quats, uv, 0);\n\t\tvec3 scalesSample = texelFetch(scales, uv, 0).xyz;\n\t\tvec2 shLabelsSample = texelFetch(sh_labels, uv, 0).xy;\n\t\tpcFragColor0 = packU32(\n\t\t\tvec4(meansLSample, shLabelsSample.x),\n\t\t\tvec4(meansUSample, shLabelsSample.y),\n\t\t\tvec4(quatsSample),\n\t\t\tvec4(scalesSample, 0.0)\n\t\t);\n\t}\n`;var XE=`\n\tvar means_l: texture_2d<f32>;\n\tvar means_u: texture_2d<f32>;\n\tvar quats: texture_2d<f32>;\n\tvar scales: texture_2d<f32>;\n\tvar sh_labels: texture_2d<f32>;\n\tuniform numSplats: u32;\n\tfn packU32(v: vec4<f32>) -> u32 {\n\t\treturn (u32(v.x * 255.0) << 24u)  |\n\t\t\t   (u32(v.y * 255.0) << 16u)  |\n\t\t\t   (u32(v.z * 255.0) << 8u) |\n\t\t\t   u32(v.w * 255.0);\n\t}\n\tfn packUVec32(a: vec4<f32>, b: vec4<f32>, c: vec4<f32>, d: vec4<f32>) -> vec4<u32> {\n\t\treturn vec4<u32>(packU32(a), packU32(b), packU32(c), packU32(d));\n\t}\n\t@fragment\n\tfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\tlet w: u32 = textureDimensions(means_l, 0).x;\n\t\tlet uv: vec2<u32> = vec2<u32>(pcPosition.xy);\n\t\tif (uv.x + uv.y * w >= uniform.numSplats) {\n\t\t\tdiscard;\n\t\t\treturn output;\n\t\t}\n\t\tlet meansLSample: vec3<f32> = textureLoad(means_l, uv, 0).xyz;\n\t\tlet meansUSample: vec3<f32> = textureLoad(means_u, uv, 0).xyz;\n\t\tlet quatsSample: vec4<f32> = textureLoad(quats, uv, 0);\n\t\tlet scalesSample: vec3<f32> = textureLoad(scales, uv, 0).xyz;\n\t\tlet shLabelsSample: vec2<f32> = textureLoad(sh_labels, uv, 0).xy;\n\t\toutput.color = packUVec32(\n\t\t\tvec4(meansLSample, shLabelsSample.x),\n\t\t\tvec4(meansUSample, shLabelsSample.y),\n\t\t\tvec4(quatsSample),\n\t\t\tvec4(scalesSample, 0.0)\n\t\t);\n\t\treturn output;\n\t}\n`;const qE=.28209479177387814;const $E=t=>t.read(0,0,t.width,t.height,{mipLevel:0,face:0,immediate:true});const jE=(t,e)=>{for(const s in e){t.resolve(s).setValue(e[s])}};class YE{constructor(t,e,s,i,n,r){const a=(t,e,s)=>t*(1-s)+e*s;const{meta:o}=t;const{means:l,scales:h,sh0:c,shN:d}=o;const u=e&&t.means_l._levels[0];const f=e&&t.means_u._levels[0];const p=s&&t.quats._levels[0];const m=i&&t.scales._levels[0];const _=n&&t.sh0._levels[0];const g=r&&t.sh_labels._levels[0];const v=r&&t.sh_centroids._levels[0];const y=2/Math.sqrt(2);this.read=o=>{if(e){const t=a(l.mins[0],l.maxs[0],((f[o*4+0]<<8)+u[o*4+0])/65535);const s=a(l.mins[1],l.maxs[1],((f[o*4+1]<<8)+u[o*4+1])/65535);const i=a(l.mins[2],l.maxs[2],((f[o*4+2]<<8)+u[o*4+2])/65535);e.x=Math.sign(t)*(Math.exp(Math.abs(t))-1);e.y=Math.sign(s)*(Math.exp(Math.abs(s))-1);e.z=Math.sign(i)*(Math.exp(Math.abs(i))-1)}if(s){const t=(p[o*4+0]/255-.5)*y;const e=(p[o*4+1]/255-.5)*y;const i=(p[o*4+2]/255-.5)*y;const n=Math.sqrt(Math.max(0,1-(t*t+e*e+i*i)));const r=p[o*4+3]-252;switch(r){case 0:s.set(t,e,i,n);break;case 1:s.set(n,e,i,t);break;case 2:s.set(e,n,i,t);break;case 3:s.set(e,i,n,t);break}}if(i){const t=a(h.mins[0],h.maxs[0],m[o*4+0]/255);const e=a(h.mins[1],h.maxs[1],m[o*4+1]/255);const s=a(h.mins[2],h.maxs[2],m[o*4+2]/255);i.set(t,e,s)}if(n){const t=a(c.mins[0],c.maxs[0],_[o*4+0]/255);const e=a(c.mins[1],c.maxs[1],_[o*4+1]/255);const s=a(c.mins[2],c.maxs[2],_[o*4+2]/255);const i=a(c.mins[3],c.maxs[3],_[o*4+3]/255);n.set(.5+t*qE,.5+e*qE,.5+s*qE,1/(1+Math.exp(-i)))}if(r){const e=g[o*4+0]+(g[o*4+1]<<8);const s=e%64*15;const i=Math.floor(e/64);for(let e=0;e<3;++e){for(let n=0;n<15;++n){r[e*15+n]=a(d.mins,d.maxs,v[(s+n)*4+e+i*t.sh_centroids.width*4]/255)}}}}}}class KE{destroy(){this.means_l?.destroy();this.means_u?.destroy();this.quats?.destroy();this.scales?.destroy();this.sh0?.destroy();this.sh_centroids?.destroy();this.sh_labels?.destroy();this.packedTexture?.destroy()}createIter(t,e,s,i,n){return new YE(this,t,e,s,i,n)}calcAabb(t){const{mins:e,maxs:s}=this.meta.means;const i=t=>Math.sign(t)*(Math.exp(Math.abs(t))-1);t.center.set((i(e[0])+i(s[0]))*.5,(i(e[1])+i(s[1]))*.5,(i(e[2])+i(s[2]))*.5);t.halfExtents.set((i(s[0])-i(e[0]))*.5,(i(s[1])-i(e[1]))*.5,(i(s[2])-i(e[2]))*.5)}getCenters(t){const{meta:e,means_l:s,means_u:i,numSplats:n}=this;const{means:r}=e;const a=new Uint32Array(i._levels[0].buffer);const o=new Uint32Array(s._levels[0].buffer);const l=r.mins[0]/65535;const h=r.mins[1]/65535;const c=r.mins[2]/65535;const d=r.maxs[0]/65535;const u=r.maxs[1]/65535;const f=r.maxs[2]/65535;for(let e=0;e<n;e++){const s=e;const i=a[s];const n=o[s];const r=i<<8&65280|n&255;const p=i&65280|n>>>8&255;const m=i>>>8&65280|n>>>16&255;const _=l*(65535-r)+d*r;const g=h*(65535-p)+u*p;const v=c*(65535-m)+f*m;const y=_<0?-_:_;const S=g<0?-g:g;const x=v<0?-v:v;t[e*3]=(_<0?-1:1)*(Math.exp(y)-1);t[e*3+1]=(g<0?-1:1)*(Math.exp(S)-1);t[e*3+2]=(v<0?-1:1)*(Math.exp(x)-1)}}calcFocalPoint(t,e){t.set(0,0,0)}get isSogs(){return true}get shBands(){const t={192:1,512:2,960:3};return t[this.sh_centroids?.width]??0}async decompress(){const t=["x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity","scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3"];const{shBands:e}=this;const{means_l:s,means_u:i,quats:n,scales:r,sh0:a,sh_labels:o,sh_centroids:l}=this;s._levels[0]=await $E(s);i._levels[0]=await $E(i);n._levels[0]=await $E(n);r._levels[0]=await $E(r);a._levels[0]=await $E(a);if(e>0){o._levels[0]=await $E(o);l._levels[0]=await $E(l);const e=[];for(let t=0;t<45;++t){e.push(`f_rest_${t}`)}t.splice(t.indexOf("f_dc_0")+1,0,...e)}const h={};t.forEach((t=>{h[t]=new Float32Array(this.numSplats)}));const c=new It;const d=new Gt;const u=new It;const f=new Ft;const p=e>0?new Float32Array(45):null;const m=this.createIter(c,d,u,f,p);for(let t=0;t<this.numSplats;++t){m.read(t);h.x[t]=c.x;h.y[t]=c.y;h.z[t]=c.z;h.rot_1[t]=d.x;h.rot_2[t]=d.y;h.rot_3[t]=d.z;h.rot_0[t]=d.w;h.scale_0[t]=u.x;h.scale_1[t]=u.y;h.scale_2[t]=u.z;h.f_dc_0[t]=(f.x-.5)/qE;h.f_dc_1[t]=(f.y-.5)/qE;h.f_dc_2[t]=(f.z-.5)/qE;h.opacity[t]=f.w<=0?-40:f.w>=1?40:-Math.log(1/f.w-1);if(p){for(let e=0;e<45;++e){h[`f_rest_${e}`][t]=p[e]}}}return new CE([{name:"vertex",count:this.numSplats,properties:t.map((t=>({name:t,type:"float",byteSize:4,storage:h[t]})))}])}packGpuMemory(){const{means_l:t,means_u:e,quats:s,scales:i,sh_labels:n,numSplats:r}=this;const{device:a}=t;const{scope:o}=a;const l=Tv.createShader(a,{uniqueName:"GsplatSogsReorderShader",attributes:{vertex_position:Ki},vertexChunk:"fullscreenQuadVS",fragmentGLSL:WE,fragmentWGSL:XE,fragmentOutputTypes:["uvec4"]});const h=new il({colorBuffer:this.packedTexture,depth:false,mipLevel:0});a.setCullMode(ss);a.setBlendState(Ro.NOBLEND);a.setDepthState(Uo.NODEPTH);jE(o,{means_l:t,means_u:e,quats:s,scales:i,sh_labels:n??t,numSplats:r});Iv(a,h,l);h.destroy();l.destroy()}async prepareGpuData(){const{device:t,height:e,width:s}=this.means_l;this.means_l._levels[0]=await $E(this.means_l);this.means_u._levels[0]=await $E(this.means_u);this.packedTexture=new lo(t,{name:"sogsPackedTexture",width:s,height:e,format:vi,mipmaps:false});t.on("devicerestored",(()=>{this.packGpuMemory()}));this.packGpuMemory()}reorderData(){return this.prepareGpuData()}}const ZE=new Vt;const QE=new It;const JE=new It;const tA=[0,0];class eA{constructor(t,e={}){this.options={};this.sorter=null;this.lastCameraPosition=new It;this.lastCameraDirection=new It;this.resolveSH=null;this.cameras=[];this.resource=t;this.orderTexture=t.createTexture("splatOrder",ai,t.evalTextureSize(t.numSplats));if(e.material){this._material=e.material;this._material.setParameter("splatOrder",this.orderTexture)}else{this._material=new dw({uniqueName:"SplatMaterial",vertexGLSL:'#include "gsplatVS"',fragmentGLSL:'#include "gsplatPS"',vertexWGSL:'#include "gsplatVS"',fragmentWGSL:'#include "gsplatPS"',attributes:{vertex_position:Ki,vertex_id_attrib:En}});this.configureMaterial(this._material);this._material.update()}this.meshInstance=new sy(t.mesh,this._material);this.meshInstance.setInstancing(t.instanceIndices,true);this.meshInstance.gsplatInstance=this;this.meshInstance.instancingCount=0;const s=t.centers.slice();const i=t.chunks?.slice();this.sorter=new HE;this.sorter.init(this.orderTexture,s,i);this.sorter.on("updated",(e=>{this.meshInstance.instancingCount=Math.ceil(e/t.instanceSize);this.material.setParameter("numSplats",e)}));this.setHighQualitySH(e.highQualitySH??false)}destroy(){this.resolveSH?.destroy();this.material?.destroy();this.meshInstance?.destroy();this.sorter?.destroy()}set material(t){if(this._material!==t){this._material=t;this._material.setParameter("splatOrder",this.orderTexture);if(this.meshInstance){this.meshInstance.material=t}}}get material(){return this._material}configureMaterial(t,e={}){this.resource.configureMaterial(t);t.setParameter("numSplats",0);t.setParameter("splatOrder",this.orderTexture);t.setParameter("alphaClip",.3);t.setDefine(`DITHER_${e.dither?"BLUENOISE":"NONE"}`,"");t.cull=ss;t.blendType=e.dither?Wp:Xp;t.depthWrite=!!e.dither}updateViewport(t){const e=t?.camera;const s=e?.renderTarget;const{width:i,height:n}=s??this.resource.device;tA[0]=i;tA[1]=n;const r=e?.camera?.xr;if(r?.active&&r.views.list.length===2){tA[0]*=.5}this.material.setParameter("viewport",tA)}sort(t){if(this.sorter){const e=t.getWorldTransform();e.getTranslation(QE);e.getZ(JE);const s=this.meshInstance.node.getWorldTransform();const i=ZE.invert(s);i.transformPoint(QE,QE);i.transformVector(JE,JE);if(!QE.equalsApprox(this.lastCameraPosition)||!JE.equalsApprox(this.lastCameraDirection)){this.lastCameraPosition.copy(QE);this.lastCameraDirection.copy(JE);this.sorter.setCamera(QE,JE)}}this.updateViewport(t)}update(){if(this.cameras.length>0){const t=this.cameras[0];this.sort(t._node);this.resolveSH?.render(t._node,this.meshInstance.node.getWorldTransform());this.cameras.length=0}}setHighQualitySH(t){const{resource:e}=this;const{gsplatData:s}=e;if(s instanceof KE&&s.shBands>0&&t===!!this.resolveSH){if(this.resolveSH){this.resolveSH.destroy();this.resolveSH=null}else{this.resolveSH=new VE(e.device,this)}}}}class sA extends PE{destroy(){this.gsplatData.destroy();super.destroy()}configureMaterial(t){const{gsplatData:e}=this;t.setDefine("GSPLAT_SOGS_DATA",true);t.setDefine("SH_BANDS",this.gsplatData.shBands);["packedTexture","sh0","sh_centroids"].forEach((s=>{if(e[s]){t.setParameter(s,e[s])}}));["means","scales","sh0","shN"].forEach((s=>{const i=e.meta[s];if(i){t.setParameter(`${s}_mins`,i.mins);t.setParameter(`${s}_maxs`,i.maxs)}}))}evalTextureSize(t){return new Ot(this.gsplatData.means_l.width,this.gsplatData.means_l.height)}}const iA="NONE";const nA="FILL_WINDOW";const rA="KEEP_ASPECT";const aA="AUTO";const oA="FIXED";let lA;function hA(){return lA}function cA(t){lA=t}let dA=false;const uA={app:null,createLoadingScreen(t){if(dA){return}dA=true;const e=hA();t(e)}};class fA{addRenderPass(t){t.frameUpdate();const e=t.beforePasses;for(let t=0;t<e.length;t++){const s=e[t];if(s.enabled){this.addRenderPass(s)}}if(t.enabled){this.renderPasses.push(t)}const s=t.afterPasses;for(let t=0;t<s.length;t++){const e=s[t];if(e.enabled){this.addRenderPass(e)}}}reset(){this.renderPasses.length=0}compile(){const t=this.renderTargetMap;const e=this.renderPasses;for(let s=0;s<e.length;s++){const i=e[s];const n=i.renderTarget;if(n!==undefined){const e=t.get(n);if(e){const t=i.colorArrayOps.length;for(let s=0;s<t;s++){const t=i.colorArrayOps[s];if(!t.clear){e.colorArrayOps[s].store=true}}if(!i.depthStencilOps.clearDepth){e.depthStencilOps.storeDepth=true}if(!i.depthStencilOps.clearStencil){e.depthStencilOps.storeStencil=true}}t.set(n,i)}}for(let t=0;t<e.length-1;t++){const s=e[t];const i=s.renderTarget;const n=e[t+1];const r=n.renderTarget;if(i!==r||i===undefined){continue}if(n.depthStencilOps.clearDepth||n.depthStencilOps.clearStencil||n.colorArrayOps.some((t=>t.clear))){continue}if(s.afterPasses.length>0){continue}if(n.beforePasses.length>0){continue}s._skipEnd=true;n._skipStart=true}let s=null;let i=null;for(let t=0;t<e.length;t++){const n=e[t];const r=n.renderTarget;const a=r?.colorBuffer;if(a?.cubemap){if(s===a){const t=i.colorArrayOps.length;for(let e=0;e<t;e++){i.colorArrayOps[e].mipmaps=false}}s=r.colorBuffer;i=n}else if(n.requiresCubemaps){s=null;i=null}}t.clear()}render(t){this.compile();const e=this.renderPasses;for(let t=0;t<e.length;t++){e[t].render()}}constructor(){this.renderPasses=[];this.renderTargetMap=new Map}}class pA{constructor(t,e){this.texture0=t;this.texture1=e}destroy(){this.texture0?.destroy();this.texture1?.destroy()}}const mA=new ro;class _A{static createTexture(t,e,s,i=""){const n=new lo(t,{name:`AreaLightLUT${i}`,width:s,height:s,format:e,addressU:pe,addressV:pe,type:zn,magFilter:os,minFilter:as,anisotropy:1,mipmaps:false});return n}static applyTextures(t,e,s){mA.remove(t);mA.get(t,(()=>new pA(e,e===s?null:s)));t.scope.resolve("areaLightsLutTex1").setValue(e);t.scope.resolve("areaLightsLutTex2").setValue(s)}static createPlaceholder(t){const e=_A.createTexture(t,Fs,2,"placeholder");const s=e.lock();s.fill(0);e.unlock();_A.applyTextures(t,e,e)}static set(t,e,s){function i(t,e,s){const i=_A.createTexture(t,s,64);i.lock().set(e);i.unlock();return i}function n(t){const e=t.length;const s=new Uint16Array(e);const i=Dt.float2Half;for(let n=0;n<e;n++){s[n]=i(t[n])}return s}const r=e;const a=s;const o=n(r);const l=n(a);const h=i(t,o,Fs);const c=i(t,l,Fs);_A.applyTextures(t,h,c)}}const gA="en-US";const vA={en:"en-US",es:"en-ES",zh:"zh-CN","zh-HK":"zh-TW","zh-TW":"zh-HK","zh-MO":"zh-HK",fr:"fr-FR",de:"de-DE",it:"it-IT",ru:"ru-RU",ja:"ja-JP"};const yA={};function SA(t,e){for(let s=0,i=t.length;s<i;s++){yA[t[s]]=e}}function xA(t){const e=t.indexOf("-");if(e!==-1){return t.substring(0,e)}return t}function TA(t,e){const s=t.indexOf("-");if(s!==-1){return e+t.substring(s)}return e}function wA(t,e){if(e[t]){return t}let s=vA[t];if(s&&e[s]){return s}const i=xA(t);s=vA[i];if(e[s]){return s}if(e[i]){return i}return gA}SA(["ja","ko","th","vi","zh","id"],(t=>0));SA(["fa","hi"],(t=>{if(t>=0&&t<=1){return 0}return 1}));SA(["fr","pt"],(t=>{if(t>=0&&t<2){return 0}return 1}));SA(["da"],(t=>{if(t===1||!Number.isInteger(t)&&t>=0&&t<=1){return 0}return 1}));SA(["de","en","it","el","es","tr","fi","sv","nb","no","ur"],(t=>{if(t===1){return 0}return 1}));SA(["ru","uk"],(t=>{if(Number.isInteger(t)){const e=t%10;const s=t%100;if(e===1&&s!==11){return 0}else if(e>=2&&e<=4&&(s<12||s>14)){return 1}else if(e===0||e>=5&&e<=9||s>=11&&s<=14){return 2}}return 3}));SA(["pl"],(t=>{if(Number.isInteger(t)){if(t===1){return 0}const e=t%10;const s=t%100;if(e>=2&&e<=4&&(s<12||s>14)){return 1}else if(e>=0&&e<=1||e>=5&&e<=9||s>=12&&s<=14){return 2}}return 3}));SA(["ar"],(t=>{if(t===0){return 0}else if(t===1){return 1}else if(t===2){return 2}if(Number.isInteger(t)){const e=t%100;if(e>=3&&e<=10){return 3}else if(e>=11&&e<=99){return 4}}return 5}));const bA=yA[xA(gA)];function EA(t){return yA[t]||bA}const AA=new RegExp("^"+"\\s*"+"(?:"+"(?:"+"[a-z]+[a-z0-9\\-+.]*"+":"+")?"+"//"+"|"+"data:"+"|blob:"+")","i");const CA="animation";const PA="audio";const LA="image";const DA="json";const MA="model";const IA="material";const RA="text";const OA="texture";const FA="textureatlas";const NA="cubemap";const kA="shader";const BA="css";const UA="html";const zA="script";const VA="container";class GA{constructor(t="",e="",s=null,i=null,n=null,r=null){this.url=t;this.filename=e;this.hash=s;this.size=i;this.opt=n;this.contents=r}equals(t){return this.url===t.url&&this.filename===t.filename&&this.hash===t.hash&&this.size===t.size&&this.opt===t.opt&&this.contents===t.contents}}let HA=-1;const WA={pvr:"extCompressedTexturePVRTC",dxt:"extCompressedTextureS3TC",etc2:"extCompressedTextureETC",etc1:"extCompressedTextureETC1",basis:"canvas"};const XA=["pvr","dxt","etc2","etc1","basis"];class qA extends at{static{this.EVENT_LOAD="load"}static{this.EVENT_UNLOAD="unload"}static{this.EVENT_REMOVE="remove"}static{this.EVENT_ERROR="error"}static{this.EVENT_CHANGE="change"}static{this.EVENT_PROGRESS="progress"}static{this.EVENT_ADDLOCALIZED="add:localized"}static{this.EVENT_REMOVELOCALIZED="remove:localized"}constructor(t,e,s,i={},n={}){super(),this._file=null,this._i18n={},this._preload=false,this._resources=[],this.id=HA--,this.loaded=false,this.loading=false,this.options={},this.registry=null,this.tags=new ft(this),this.urlObject=null;this._name=t||"";this.type=e;this._data=i||{};this.options=n||{};if(s)this.file=s}set name(t){if(this._name===t){return}const e=this._name;this._name=t;this.fire("name",this,this._name,e)}get name(){return this._name}set file(t){if(t&&t.variants&&["texture","textureatlas","bundle"].indexOf(this.type)!==-1){const e=this.registry?._loader?._app||hA();const s=e?.graphicsDevice;if(s){for(let i=0,n=XA.length;i<n;i++){const n=XA[i];if(t.variants[n]&&s[WA[n]]){t=t.variants[n];break}if(e.enableBundles){const t=e.bundles.listBundlesForAsset(this);if(t&&t.find((t=>t?.file?.variants[n]))){break}}}}}const e=this._file;const s=t?new GA(t.url,t.filename,t.hash,t.size,t.opt,t.contents):null;if(!!s!==!!e||s&&!s.equals(e)){this._file=s;this.fire("change",this,"file",s,e);this.reload()}}get file(){return this._file}set data(t){const e=this._data;this._data=t;if(t!==e){this.fire("change",this,"data",t,e);if(this.loaded){this.registry._loader.patch(this,this.registry)}}}get data(){return this._data}set resource(t){const e=this._resources[0];this._resources[0]=t;this.fire("change",this,"resource",t,e)}get resource(){return this._resources[0]}set resources(t){const e=this._resources;this._resources=t;this.fire("change",this,"resources",t,e)}get resources(){return this._resources}set preload(t){t=!!t;if(this._preload===t){return}this._preload=t;if(this._preload&&!this.loaded&&!this.loading&&this.registry){this.registry.load(this)}}get preload(){return this._preload}set loadFaces(t){t=!!t;if(!this.hasOwnProperty("_loadFaces")||t!==this._loadFaces){this._loadFaces=t;if(this.loaded){this.registry._loader.patch(this,this.registry)}}}get loadFaces(){return this._loadFaces}getFileUrl(){const t=this.file;if(!t||!t.url){return null}let e=t.url;if(this.registry&&this.registry.prefix&&!AA.test(e)){e=this.registry.prefix+e}if(this.type!=="script"&&t.hash){const s=e.indexOf("?")!==-1?"&":"?";e+=`${s}t=${t.hash}`}return e}getAbsoluteUrl(t){if(t.startsWith("blob:")||t.startsWith("data:")){return t}const e=A.getDirectory(this.file.url);return A.join(e,t)}getLocalizedAssetId(t){t=wA(t,this._i18n);return this._i18n[t]||null}addLocalizedAssetId(t,e){this._i18n[t]=e;this.fire("add:localized",t,e)}removeLocalizedAssetId(t){const e=this._i18n[t];if(e){delete this._i18n[t];this.fire("remove:localized",t,e)}}ready(t,e){e=e||this;if(this.loaded){t.call(e,this)}else{this.once("load",(s=>{t.call(e,s)}))}}reload(){if(this.loaded){this.loaded=false;this.registry.load(this)}}unload(){if(!this.loaded&&this._resources.length===0){return}this.fire("unload",this);this.registry.fire(`unload:${this.id}`,this);const t=this._resources;if(this.urlObject){URL.revokeObjectURL(this.urlObject);this.urlObject=null}this.resources=[];this.loaded=false;if(this.file){this.registry._loader.clearCache(this.getFileUrl(),this.type)}for(let e=0;e<t.length;++e){const s=t[e];if(s&&s.destroy){s.destroy()}}}static fetchArrayBuffer(t,e,s,i=0){if(s?.file?.contents){setTimeout((()=>{e(null,s.file.contents)}))}else{bp.get(t,{cache:true,responseType:"arraybuffer",retry:i>0,maxRetries:i},e)}}}class $A{constructor(t=null){this._index={};this._key=t}addItem(t){const e=t.tags._list;for(const s of e){this.add(s,t)}}removeItem(t){const e=t.tags._list;for(const s of e){this.remove(s,t)}}add(t,e){if(this._index[t]&&this._index[t].list.indexOf(e)!==-1){return}if(!this._index[t]){this._index[t]={list:[]};if(this._key){this._index[t].keys={}}}this._index[t].list.push(e);if(this._key){this._index[t].keys[e[this._key]]=e}}remove(t,e){if(!this._index[t]){return}if(this._key){if(!this._index[t].keys[e[this._key]]){return}}const s=this._index[t].list.indexOf(e);if(s===-1){return}this._index[t].list.splice(s,1);if(this._key){delete this._index[t].keys[e[this._key]]}if(this._index[t].list.length===0){delete this._index[t]}}find(t){const e={};const s=[];let i,n,r,a,o;const l=(t,e)=>this._index[t].list.length-this._index[e].list.length;for(let h=0;h<t.length;h++){n=t[h];if(n instanceof Array){if(n.length===0){continue}if(n.length===1){n=n[0]}else{o=false;for(let t=0;t<n.length;t++){if(!this._index[n[t]]){o=true;break}}if(o){continue}r=n.slice(0).sort(l);a=r.slice(1);if(a.length===1){a=a[0]}for(let t=0;t<this._index[r[0]].list.length;t++){i=this._index[r[0]].list[t];if((this._key?!e[i[this._key]]:s.indexOf(i)===-1)&&i.tags.has(a)){if(this._key){e[i[this._key]]=true}s.push(i)}}continue}}if(n&&typeof n==="string"&&this._index[n]){for(let t=0;t<this._index[n].list.length;t++){i=this._index[n].list[t];if(this._key){if(!e[i[this._key]]){e[i[this._key]]=true;s.push(i)}}else if(s.indexOf(i)===-1){s.push(i)}}}}return s}}class jA extends at{static{this.EVENT_LOAD="load"}static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}static{this.EVENT_ERROR="error"}constructor(t){super(),this._assets=new Set,this._idToAsset=new Map,this._urlToAsset=new Map,this._nameToAsset=new Map,this._tags=new $A("id"),this.prefix=null,this.bundles=null;this._loader=t}list(t={}){const e=Array.from(this._assets);if(t.preload!==undefined){return e.filter((e=>e.preload===t.preload))}return e}add(t){if(this._assets.has(t))return;this._assets.add(t);this._idToAsset.set(t.id,t);if(t.file?.url){this._urlToAsset.set(t.file.url,t)}if(!this._nameToAsset.has(t.name)){this._nameToAsset.set(t.name,new Set)}this._nameToAsset.get(t.name).add(t);t.on("name",this._onNameChange,this);t.registry=this;this._tags.addItem(t);t.tags.on("add",this._onTagAdd,this);t.tags.on("remove",this._onTagRemove,this);this.fire("add",t);this.fire(`add:${t.id}`,t);if(t.file?.url){this.fire(`add:url:${t.file.url}`,t)}if(t.preload){this.load(t)}}remove(t){if(!this._assets.has(t))return false;this._assets.delete(t);this._idToAsset.delete(t.id);if(t.file?.url){this._urlToAsset.delete(t.file.url)}t.off("name",this._onNameChange,this);if(this._nameToAsset.has(t.name)){const e=this._nameToAsset.get(t.name);e.delete(t);if(e.size===0){this._nameToAsset.delete(t.name)}}this._tags.removeItem(t);t.tags.off("add",this._onTagAdd,this);t.tags.off("remove",this._onTagRemove,this);t.fire("remove",t);this.fire("remove",t);this.fire(`remove:${t.id}`,t);if(t.file?.url){this.fire(`remove:url:${t.file.url}`,t)}return true}get(t){return this._idToAsset.get(Number(t))}getByUrl(t){return this._urlToAsset.get(t)}load(t,e){if((t.loading||t.loaded)&&!e?.force){return}const s=t.file;const i=()=>{this.fire("load",t);this.fire(`load:${t.id}`,t);if(s&&s.url){this.fire(`load:url:${s.url}`,t)}t.fire("load",t)};const n=e=>{if(e instanceof Array){t.resources=e}else{t.resource=e}this._loader.patch(t,this);if(t.type==="bundle"){const e=t.data.assets;for(let t=0;t<e.length;t++){const s=this._idToAsset.get(e[t]);if(s&&!s.loaded){this.load(s,{force:true})}}if(t.resource.loaded){i()}else{this.fire("load:start",t);this.fire(`load:start:${t.id}`,t);if(s&&s.url){this.fire(`load:start:url:${s.url}`,t)}t.fire("load:start",t);t.resource.on("load",i)}}else{i()}};const r=(e,s,i)=>{t.loaded=true;t.loading=false;if(e){this.fire("error",e,t);this.fire(`error:${t.id}`,e,t);t.fire("error",e,t)}else{if(t.type==="script"){const e=this._loader.getHandler("script");if(e._cache[t.id]&&e._cache[t.id].parentNode===document.head){document.head.removeChild(e._cache[t.id])}e._cache[t.id]=i}n(s)}};if(s||t.type==="cubemap"){this.fire("load:start",t);this.fire(`load:${t.id}:start`,t);t.loading=true;const s=t.getFileUrl();if(t.type==="bundle"){const e=t.data.assets;for(let t=0;t<e.length;t++){const s=this._idToAsset.get(e[t]);if(!s){continue}if(s.loaded||s.resource||s.loading){continue}s.loading=true}}this._loader.load(s,t.type,r,t,e)}else{const e=this._loader.open(t.type,t.data);t.loaded=true;n(e)}}loadFromUrl(t,e,s){this.loadFromUrlAndFilename(t,null,e,s)}loadFromUrlAndFilename(t,e,s,i){const n=A.getBasename(e||t);const r={filename:e||n,url:t};let a=this.getByUrl(t);if(!a){a=new qA(n,s,r);this.add(a)}else if(a.loaded){i(a.loadFromUrlError||null,a);return}const o=t=>{t.once("load",(t=>{if(s==="material"){this._loadTextures(t,((e,s)=>{i(e,t)}))}else{i(null,t)}}));t.once("error",(e=>{if(e){this.loadFromUrlError=e}i(e,t)}));this.load(t)};if(a.resource){i(null,a)}else if(s==="model"){this._loadModel(a,o)}else{o(a)}}_loadModel(t,e){const s=t.getFileUrl();const i=A.getExtension(s);if(i===".json"||i===".glb"){const n=A.getDirectory(s);const r=A.getBasename(s);const a=A.join(n,r.replace(i,".mapping.json"));this._loader.load(a,"json",((s,i)=>{if(s){t.data={mapping:[]};e(t)}else{this._loadMaterials(t,i,((s,n)=>{t.data=i;e(t)}))}}))}else{e(t)}}_loadMaterials(t,e,s){const i=[];let n=0;const r=(t,e)=>{this._loadTextures(e,((t,r)=>{i.push(e);if(i.length===n){s(null,i)}}))};for(let s=0;s<e.mapping.length;s++){const i=e.mapping[s].path;if(i){n++;const e=t.getAbsoluteUrl(i);this.loadFromUrl(e,"material",r)}}if(n===0){s(null,i)}}_loadTextures(t,e){const s=[];let i=0;const n=t.data;if(n.mappingFormat!=="path"){e(null,s);return}const r=(t,n)=>{if(t)console.error(t);s.push(n);if(s.length===i){e(null,s)}};const a=Xb;for(let e=0;e<a.length;e++){const s=n[a[e]];if(s&&typeof s==="string"){i++;const e=t.getAbsoluteUrl(s);this.loadFromUrl(e,"texture",r)}}if(i===0){e(null,s)}}_onTagAdd(t,e){this._tags.add(t,e)}_onTagRemove(t,e){this._tags.remove(t,e)}_onNameChange(t,e,s){if(this._nameToAsset.has(s)){const e=this._nameToAsset.get(s);e.delete(t);if(e.size===0){this._nameToAsset.delete(s)}}if(!this._nameToAsset.has(t.name)){this._nameToAsset.set(t.name,new Set)}this._nameToAsset.get(t.name).add(t)}findByTag(...t){return this._tags.find(t)}filter(t){return Array.from(this._assets).filter((e=>t(e)))}find(t,e){const s=this._nameToAsset.get(t);if(!s)return null;for(const t of s){if(!e||t.type===e){return t}}return null}findAll(t,e){const s=this._nameToAsset.get(t);if(!s)return[];const i=Array.from(s);if(!e)return i;return i.filter((t=>t.type===e))}}class YA{constructor(t){this._idToBundle=new Map;this._assetToBundles=new Map;this._urlsToBundles=new Map;this._fileRequests=new Map;this._assets=t;this._assets.bundles=this;this._assets.on("add",this._onAssetAdd,this);this._assets.on("remove",this._onAssetRemove,this)}_onAssetAdd(t){if(t.type==="bundle"){this._idToBundle.set(t.id,t);this._assets.on(`load:start:${t.id}`,this._onBundleLoadStart,this);this._assets.on(`load:${t.id}`,this._onBundleLoad,this);this._assets.on(`error:${t.id}`,this._onBundleError,this);const e=t.data.assets;for(let s=0;s<e.length;s++){this._indexAssetInBundle(e[s],t)}}else{if(this._assetToBundles.has(t.id)){this._indexAssetFileUrls(t)}}}_unbindAssetEvents(t){this._assets.off(`load:start:${t}`,this._onBundleLoadStart,this);this._assets.off(`load:${t}`,this._onBundleLoad,this);this._assets.off(`error:${t}`,this._onBundleError,this)}_indexAssetInBundle(t,e){let s=this._assetToBundles.get(t);if(!s){s=new Set;this._assetToBundles.set(t,s)}s.add(e);const i=this._assets.get(t);if(i)this._indexAssetFileUrls(i)}_indexAssetFileUrls(t){const e=this._getAssetFileUrls(t);if(!e)return;for(let s=0;s<e.length;s++){const i=this._assetToBundles.get(t.id);if(!i)continue;this._urlsToBundles.set(e[s],i)}}_getAssetFileUrls(t){let e=t.getFileUrl();if(!e)return null;e=e.split("?")[0];const s=[e];if(t.type==="font"){const i=t.data.info.maps.length;for(let t=1;t<i;t++){s.push(e.replace(".png",`${t}.png`))}}return s}_onAssetRemove(t){if(t.type==="bundle"){this._idToBundle.delete(t.id);this._unbindAssetEvents(t.id);const e=t.data.assets;for(let s=0;s<e.length;s++){const i=this._assetToBundles.get(e[s]);if(!i)continue;i.delete(t);if(i.size===0){this._assetToBundles.delete(e[s]);for(const[t,e]of this._urlsToBundles){if(e!==i){continue}this._urlsToBundles.delete(t)}}}this._onBundleError(`Bundle ${t.id} was removed`)}else{const e=this._assetToBundles.get(t.id);if(!e)return;this._assetToBundles.delete(t.id);const s=this._getAssetFileUrls(t);if(!s)return;for(let t=0;t<s.length;t++){this._urlsToBundles.delete(s[t])}}}_onBundleLoadStart(t){t.resource.on("add",((t,e)=>{const s=this._fileRequests.get(t);if(!s)return;for(let t=0;t<s.length;t++){s[t](null,e)}this._fileRequests.delete(t)}))}_onBundleLoad(t){if(!t.resource){this._onBundleError(`Bundle ${t.id} failed to load`);return}if(!this._fileRequests){return}for(const[e,s]of this._fileRequests){const i=this._urlsToBundles.get(e);if(!i||!i.has(t))continue;const n=decodeURIComponent(e);let r,a;if(t.resource.has(n)){a=t.resource.get(n)}else if(t.resource.loaded){r=`Bundle ${t.id} does not contain URL ${e}`}else{continue}for(let t=0;t<s.length;t++){s[t](r,r||a)}this._fileRequests.delete(e)}}_onBundleError(t){for(const[e,s]of this._fileRequests){const i=this._findLoadedOrLoadingBundleForUrl(e);if(!i){for(let e=0;e<s.length;e++){s[e](t)}this._fileRequests.delete(e)}}}_findLoadedOrLoadingBundleForUrl(t){const e=this._urlsToBundles.get(t);if(!e)return null;let s=null;for(const t of e){if(t.loaded&&t.resource){return t}else if(t.loading){s=t}}return s}listBundlesForAsset(t){const e=this._assetToBundles.get(t.id);if(e)return Array.from(e);return null}list(){return Array.from(this._idToBundle.values())}hasUrl(t){return this._urlsToBundles.has(t)}urlIsLoadedOrLoading(t){return!!this._findLoadedOrLoadingBundleForUrl(t)}loadUrl(t,e){const s=this._findLoadedOrLoadingBundleForUrl(t);if(!s){e(`URL ${t} not found in any bundles`);return}if(s.loaded){const i=decodeURIComponent(t);if(s.resource.has(i)){e(null,s.resource.get(i));return}else if(s.resource.loaded){e(`Bundle ${s.id} does not contain URL ${t}`);return}}let i=this._fileRequests.get(t);if(!i){i=[];this._fileRequests.set(t,i)}i.push(e)}destroy(){this._assets.off("add",this._onAssetAdd,this);this._assets.off("remove",this._onAssetRemove,this);for(const t of this._idToBundle.keys()){this._unbindAssetEvents(t)}this._assets=null;this._idToBundle.clear();this._idToBundle=null;this._assetToBundles.clear();this._assetToBundles=null;this._urlsToBundles.clear();this._urlsToBundles=null;this._fileRequests.clear();this._fileRequests=null}}class KA extends at{constructor(){super();this.list=[]}add(t){const e=t.id;if(this[e]){throw new Error(`ComponentSystem name '${e}' already registered or not allowed`)}this[e]=t;this.list.push(t)}remove(t){const e=t.id;if(!this[e]){throw new Error(`No ComponentSystem named '${e}' registered`)}delete this[e];const s=this.list.indexOf(this[e]);if(s!==-1){this.list.splice(s,1)}}destroy(){this.off();for(let t=0;t<this.list.length;t++){this.list[t].destroy()}}}class ZA extends at{static{this.EVENT_ADD="add"}static{this.EVENT_LOAD="load"}addFile(t,e){if(this._index.has(t)){return}this._index.set(t,e);this.fire("add",t,e)}has(t){return this._index.has(t)}get(t){return this._index.get(t)||null}destroy(){this._index.clear()}set loaded(t){if(!t||this._loaded){return}this._loaded=true;this.fire("load")}get loaded(){return this._loaded}constructor(...t){super(...t),this._index=new Map,this._loaded=false}}class QA extends at{constructor(t,e=""){super(),this.headerSize=512,this.paddingSize=512,this.bytesRead=0,this.bytesReceived=0,this.headerRead=false,this.reader=null,this.data=new Uint8Array(0),this.decoder=null,this.prefix="",this.fileName="",this.fileSize=0,this.fileType="",this.ustarFormat="";this.prefix=e||"";this.reader=t.body.getReader();this.reader.read().then((t=>{this.pump(t.done,t.value)})).catch((t=>{this.fire("error",t)}))}pump(t,e){if(t){this.fire("done");return null}this.bytesReceived+=e.byteLength;const s=new Uint8Array(this.data.length+e.length);s.set(this.data);s.set(e,this.data.length);this.data=s;while(this.readFile());return this.reader.read().then((t=>{this.pump(t.done,t.value)})).catch((t=>{this.fire("error",t)}))}readFile(){if(!this.headerRead&&this.bytesReceived>this.bytesRead+this.headerSize){this.headerRead=true;const t=new DataView(this.data.buffer,this.bytesRead,this.headerSize);this.decoder??=new TextDecoder("windows-1252");const e=this.decoder.decode(t);this.fileName=e.substring(0,100).replace(/\0/g,"");this.fileSize=parseInt(e.substring(124,136),8);this.fileType=e.substring(156,157);this.ustarFormat=e.substring(257,263);if(this.ustarFormat.indexOf("ustar")!==-1){const t=e.substring(345,500).replace(/\0/g,"");if(t.length>0){this.fileName=t.trim()+this.fileName.trim()}}this.bytesRead+=512}if(this.headerRead){if(this.bytesReceived<this.bytesRead+this.fileSize){return false}if(this.fileType===""||this.fileType==="0"){const t=new DataView(this.data.buffer,this.bytesRead,this.fileSize);const e={name:this.prefix+this.fileName,size:this.fileSize,data:t};this.fire("file",e)}this.bytesRead+=this.fileSize;this.headerRead=false;const t=this.bytesRead%this.paddingSize;if(t!==0){this.bytesRead+=this.paddingSize-t}return true}return false}}class JA{constructor(t,e){this.handlerType="";this._maxRetries=0;this._app=t;this.handlerType=e}set maxRetries(t){this._maxRetries=t}get maxRetries(){return this._maxRetries}load(t,e,s){}open(t,e,s){return e}patch(t,e){}}class tC extends JA{constructor(t){super(t,"bundle");this._assets=t.assets}_fetchRetries(t,e,s=0){return new Promise(((i,n)=>{const r=()=>{fetch(t,e).then(i).catch((t=>{s++;if(s<this.maxRetries){r()}else{n(t)}}))};r()}))}load(t,e){if(typeof t==="string"){t={load:t,original:t}}this._fetchRetries(t.load,{mode:"cors"},this.maxRetries).then((t=>{const s=new ZA;e(null,s);const i=new QA(t,this._assets.prefix);i.on("file",(t=>{s.addFile(t.name,t.data)}));i.on("done",(()=>{s.loaded=true}));i.on("error",(t=>{e(t)}))})).catch((t=>{e(t)}))}open(t,e){return e}}class eC{constructor(t){this._handlers={};this._requests={};this._cache={};this._app=t}addHandler(t,e){this._handlers[t]=e;e._loader=this}removeHandler(t){delete this._handlers[t]}getHandler(t){return this._handlers[t]}static makeKey(t,e){return`${t}-${e}`}load(t,e,s,i,n){const r=this._handlers[e];if(!r){const i=`No resource handler for asset type: '${e}' when loading [${t}]`;s(i);return}if(!t){this._loadNull(r,s,i);return}const a=eC.makeKey(t,e);if(this._cache[a]!==undefined){s(null,this._cache[a])}else if(this._requests[a]){this._requests[a].push(s)}else{this._requests[a]=[s];const e=this;const o=function(t,s){if(t){e._onFailure(a,t);return}if(s.load instanceof DataView){if(r.openBinary){if(!e._requests[a]){return}try{const t=r.openBinary(s.load);e._onSuccess(a,t)}catch(t){e._onFailure(a,t)}return}s.load=URL.createObjectURL(new Blob([s.load]));if(i){if(i.urlObject){URL.revokeObjectURL(i.urlObject)}i.urlObject=s.load}}r.load(s,((t,n,o)=>{if(!e._requests[a]){return}if(t){e._onFailure(a,t);return}try{e._onSuccess(a,r.open(s.original,n,i),o)}catch(t){e._onFailure(a,t)}}),i)};const l=t.split("?")[0];if(this._app.enableBundles&&this._app.bundles.hasUrl(l)&&!(n&&n.bundlesIgnore)){if(!this._app.bundles.urlIsLoadedOrLoading(l)){const t=this._app.bundles.listBundlesForAsset(i);let e;if(n&&n.bundlesFilter){e=n.bundlesFilter(t)}if(!e){t?.sort(((t,e)=>t.file.size-e.file.size));e=t?.[0]}if(e)this._app.assets?.load(e)}this._app.bundles.loadUrl(l,((t,e)=>{o(t,{load:e,original:l})}))}else{o(null,{load:t,original:i&&i.file.filename||t})}}}_loadNull(t,e,s){const i=function(i,n,r){if(i){e(i)}else{try{e(null,t.open(null,n,s),r)}catch(t){e(t)}}};t.load(null,i,s)}_onSuccess(t,e,s){if(e!==null){this._cache[t]=e}else{delete this._cache[t]}for(let i=0;i<this._requests[t].length;i++){this._requests[t][i](null,e,s)}delete this._requests[t]}_onFailure(t,e){console.error(e);if(this._requests[t]){for(let s=0;s<this._requests[t].length;s++){this._requests[t][s](e)}delete this._requests[t]}}open(t,e){const s=this._handlers[t];if(!s){console.warn(`No resource handler found for: ${t}`);return e}return s.open(null,e)}patch(t,e){const s=this._handlers[t.type];if(!s){console.warn(`No resource handler found for: ${t.type}`);return}if(s.patch){s.patch(t,e)}}clearCache(t,e){const s=eC.makeKey(t,e);delete this._cache[s]}getFromCache(t,e){const s=eC.makeKey(t,e);if(this._cache[s]){return this._cache[s]}return undefined}enableRetry(t=5){t=Math.max(0,t)||0;for(const e in this._handlers){this._handlers[e].maxRetries=t}}disableRetry(){for(const t in this._handlers){this._handlers[t].maxRetries=0}}destroy(){this._handlers={};this._requests={};this._cache={}}}class sC{_validate(t){if(!t.header){throw new Error('pc.I18n#addData: Missing "header" field')}if(!t.header.version){throw new Error('pc.I18n#addData: Missing "header.version" field')}if(t.header.version!==1){throw new Error('pc.I18n#addData: Invalid "header.version" field')}if(!t.data){throw new Error('pc.I18n#addData: Missing "data" field')}else if(!Array.isArray(t.data)){throw new Error('pc.I18n#addData: "data" field must be an array')}for(let e=0,s=t.data.length;e<s;e++){const s=t.data[e];if(!s.info){throw new Error(`pc.I18n#addData: missing "data[${e}].info" field`)}if(!s.info.locale){throw new Error(`pc.I18n#addData: missing "data[${e}].info.locale" field`)}if(typeof s.info.locale!=="string"){throw new Error(`pc.I18n#addData: "data[${e}].info.locale" must be a string`)}if(!s.messages){throw new Error(`pc.I18n#addData: missing "data[${e}].messages" field`)}}}parse(t){return t.data}}class iC extends at{static{this.EVENT_CHANGE="change"}constructor(t){super();this.locale=gA;this._translations={};this._availableLangs={};this._app=t;this._assets=[];this._parser=new sC}set assets(t){const e={};for(let s=0,i=t.length;s<i;s++){const i=t[s]instanceof qA?t[s].id:t[s];e[i]=true}let s=this._assets.length;while(s--){const t=this._assets[s];if(!e[t]){this._app.assets.off(`add:${t}`,this._onAssetAdd,this);const e=this._app.assets.get(t);if(e){this._onAssetRemove(e)}this._assets.splice(s,1)}}for(const t in e){const e=parseInt(t,10);if(this._assets.indexOf(e)!==-1)continue;this._assets.push(e);const s=this._app.assets.get(e);if(!s){this._app.assets.once(`add:${e}`,this._onAssetAdd,this)}else{this._onAssetAdd(s)}}}get assets(){return this._assets}set locale(t){if(this._locale===t){return}let e=xA(t);if(e==="in"){e="id";t=TA(t,e);if(this._locale===t){return}}const s=this._locale;this._locale=t;this._lang=e;this._pluralFn=EA(this._lang);this.fire(iC.EVENT_CHANGE,t,s)}get locale(){return this._locale}static findAvailableLocale(t,e){return wA(t,e)}findAvailableLocale(t){if(this._translations[t]){return t}const e=xA(t);return this._findFallbackLocale(t,e)}getText(t,e){let s=t;let i;if(!e){e=this._locale;i=this._lang}let n=this._translations[e];if(!n){if(!i){i=xA(e)}e=this._findFallbackLocale(e,i);n=this._translations[e]}if(n&&n.hasOwnProperty(t)){s=n[t];if(Array.isArray(s)){s=s[0]}if(s===null||s===undefined){s=t}}return s}getPluralText(t,e,s){let i=t;let n;let r;if(!s){s=this._locale;n=this._lang;r=this._pluralFn}else{n=xA(s);r=EA(n)}let a=this._translations[s];if(!a){s=this._findFallbackLocale(s,n);n=xA(s);r=EA(n);a=this._translations[s]}if(a&&a[t]&&r){const s=r(e);i=a[t][s];if(i===null||i===undefined){i=t}}return i}addData(t){let e;try{e=this._parser.parse(t)}catch(t){console.error(t);return}for(let t=0,s=e.length;t<s;t++){const s=e[t];const i=s.info.locale;const n=s.messages;if(!this._translations[i]){this._translations[i]={};const t=xA(i);if(!this._availableLangs[t]){this._availableLangs[t]=i}}Object.assign(this._translations[i],n);this.fire("data:add",i,n)}}removeData(t){let e;try{e=this._parser.parse(t)}catch(t){console.error(t);return}for(let t=0,s=e.length;t<s;t++){const s=e[t];const i=s.info.locale;const n=this._translations[i];if(!n)continue;const r=s.messages;for(const t in r){delete n[t]}if(Object.keys(n).length===0){delete this._translations[i];delete this._availableLangs[xA(i)]}this.fire("data:remove",i,r)}}destroy(){this._translations=null;this._availableLangs=null;this._assets=null;this._parser=null;this.off()}_findFallbackLocale(t,e){let s=vA[t];if(s&&this._translations[s]){return s}s=vA[e];if(s&&this._translations[s]){return s}s=this._availableLangs[e];if(s&&this._translations[s]){return s}return gA}_onAssetAdd(t){t.on("load",this._onAssetLoad,this);t.on("change",this._onAssetChange,this);t.on("remove",this._onAssetRemove,this);t.on("unload",this._onAssetUnload,this);if(t.resource){this._onAssetLoad(t)}}_onAssetLoad(t){this.addData(t.resource)}_onAssetChange(t){if(t.resource){this.addData(t.resource)}}_onAssetRemove(t){t.off("load",this._onAssetLoad,this);t.off("change",this._onAssetChange,this);t.off("remove",this._onAssetRemove,this);t.off("unload",this._onAssetUnload,this);if(t.resource){this.removeData(t.resource)}this._app.assets.once(`add:${t.id}`,this._onAssetAdd,this)}_onAssetUnload(t){if(t.resource){this.removeData(t.resource)}}}class nC extends at{constructor(t){super(),this._scripts={},this._list=[],this._scriptSchemas=new Map;this.app=t}destroy(){this.app=null;this.off()}addSchema(t,e){if(!e)return;this._scriptSchemas.set(t,e)}getSchema(t){return this._scriptSchemas.get(t)}add(t){const e=t.__name;if(this._scripts.hasOwnProperty(e)){setTimeout((()=>{if(t.prototype.swap){const s=this._scripts[e];const i=this._list.indexOf(s);this._list[i]=t;this._scripts[e]=t;this.fire("swap",e,t);this.fire(`swap:${e}`,t)}else{console.warn(`script registry already has '${e}' script, define 'swap' method for new script type to enable code hot swapping`)}}));return false}this._scripts[e]=t;this._list.push(t);this.fire("add",e,t);this.fire(`add:${e}`,t);setTimeout((()=>{if(!this._scripts.hasOwnProperty(e)){return}if(!this.app||!this.app.systems||!this.app.systems.script){return}const t=this.app.systems.script._components;let s;const i=[];const n=[];for(t.loopIndex=0;t.loopIndex<t.length;t.loopIndex++){const n=t.items[t.loopIndex];if(n._scriptsIndex[e]&&n._scriptsIndex[e].awaiting){if(n._scriptsData&&n._scriptsData[e]){s=n._scriptsData[e].attributes}const t=n.create(e,{preloading:true,ind:n._scriptsIndex[e].ind,attributes:s});if(t){i.push(t)}for(const t of n.scripts){n.initializeAttributes(t)}}}for(let t=0;t<i.length;t++){if(i[t].enabled){i[t]._initialized=true;n.push(i[t]);if(i[t].initialize){i[t].initialize()}}}for(let t=0;t<n.length;t++){if(!n[t].enabled||n[t]._postInitialized){continue}n[t]._postInitialized=true;if(n[t].postInitialize){n[t].postInitialize()}}}));return true}remove(t){let e=t;let s=t;if(typeof s!=="string"){s=e.__name}else{e=this.get(s)}if(this.get(s)!==e){return false}delete this._scripts[s];const i=this._list.indexOf(e);this._list.splice(i,1);this.fire("remove",s,e);this.fire(`remove:${s}`,e);return true}get(t){return this._scripts[t]||null}has(t){if(typeof t==="string"){return this._scripts.hasOwnProperty(t)}if(!t)return false;const e=t.__name;return this._scripts[e]===t}list(){return this._list}}const rC=(t,e)=>t.constructor.order-e.constructor.order;const aC=t=>t.sort(rC);const oC=[];const lC=[];const hC=()=>lC.pop()??[];const cC=t=>{t.length=0;lC.push(t)};class dC extends By{static{this.EVENT_DESTROY="destroy"}constructor(t,e=hA()){super(t),this.c={},this._destroying=false,this._guid=null,this._template=false;this._app=e}addComponent(t,e){const s=this._app.systems[t];if(!s){return null}if(this.c[t]){return null}return s.addComponent(this,e)}removeComponent(t){const e=this._app.systems[t];if(!e){return}if(!this.c[t]){return}e.removeComponent(this)}findComponent(t){const e=this.findOne((e=>e.c?.[t]));return e&&e.c[t]}findComponents(t){return this.find((e=>e.c?.[t])).map((e=>e.c[t]))}findScript(t){const e=this.findOne((e=>e.c?.script?.has(t)));return e?.c.script.get(t)}findScripts(t){const e=this.find((e=>e.c?.script?.has(t)));return e.map((e=>e.c.script.get(t)))}getGuid(){if(!this._guid){this.setGuid(E.create())}return this._guid}setGuid(t){const e=this._app._entityIndex;if(this._guid){delete e[this._guid]}this._guid=t;e[this._guid]=this}_notifyHierarchyStateChanged(t,e){let s=false;if(t===this&&oC.length===0){s=true}t._beingEnabled=true;t._onHierarchyStateChanged(e);if(t._onHierarchyStatePostChanged){oC.push(t)}const i=t._children;for(let t=0,s=i.length;t<s;t++){if(i[t]._enabled){this._notifyHierarchyStateChanged(i[t],e)}}t._beingEnabled=false;if(s){for(let t=0;t<oC.length;t++){oC[t]._onHierarchyStatePostChanged()}oC.length=0}}_onHierarchyStateChanged(t){super._onHierarchyStateChanged(t);const e=this._getSortedComponents();for(let s=0;s<e.length;s++){const i=e[s];if(i.enabled){if(t){i.onEnable()}else{i.onDisable()}}}cC(e)}_onHierarchyStatePostChanged(){const t=this._getSortedComponents();for(let e=0;e<t.length;e++){t[e].onPostStateChange()}cC(t)}findByGuid(t){if(this._guid===t)return this;const e=this._app._entityIndex[t];if(e&&(e===this||e.isDescendantOf(this))){return e}return null}destroy(){this._destroying=true;for(const t in this.c){this.c[t].enabled=false}for(const t in this.c){this.c[t].system.removeComponent(this)}super.destroy();if(this._guid){delete this._app._entityIndex[this._guid]}this._destroying=false}clone(){const t={};const e=this._cloneRecursively(t);t[this.getGuid()]=e;uC(this,this,e,t);return e}_getSortedComponents(){const t=this.c;const e=hC();let s=0;for(const i in t){if(t.hasOwnProperty(i)){const n=t[i];s|=n.constructor.order!==0;e.push(n)}}if(s&&e.length>1){aC(e)}return e}_cloneRecursively(t){const e=new this.constructor(undefined,this._app);super._cloneInternal(e);for(const t in this.c){const s=this.c[t];s.system.cloneComponent(this,e)}for(let s=0;s<this._children.length;s++){const i=this._children[s];if(i instanceof dC){const s=i._cloneRecursively(t);e.addChild(s);t[i.getGuid()]=s}}return e}}function uC(t,e,s,i){if(e instanceof dC){const n=e.c;for(const e in n){const r=n[e];const a=r.system.getPropertiesOfType("entity");for(let n=0,o=a.length;n<o;n++){const o=a[n];const l=o.name;const h=r[l];const c=!!t.findByGuid(h);if(c){const t=i[h].getGuid();if(t){s.c[e][l]=t}}}}if(n.script){s.script.resolveDuplicatedEntityReferenceProperties(n.script,i)}if(n.render){s.render.resolveDuplicatedEntityReferenceProperties(n.render,i)}if(n.button){s.button.resolveDuplicatedEntityReferenceProperties(n.button,i)}if(n.scrollview){s.scrollview.resolveDuplicatedEntityReferenceProperties(n.scrollview,i)}if(n.scrollbar){s.scrollbar.resolveDuplicatedEntityReferenceProperties(n.scrollbar,i)}if(n.anim){s.anim.resolveDuplicatedEntityReferenceProperties(n.anim,i)}const r=e.children.filter((t=>t instanceof dC));const a=s.children.filter((t=>t instanceof dC));for(let e=0,s=r.length;e<s;e++){uC(t,r[e],a[e],i)}}}class fC{constructor(t,e){this.data=null;this._loading=false;this._onLoadedCallbacks=[];this.name=t;this.url=e}get loaded(){return!!this.data}get loading(){return this._loading}}class pC{constructor(t){this._list=[];this._index={};this._urlIndex={};this._app=t}destroy(){this._app=null}list(){return this._list}add(t,e){if(this._index.hasOwnProperty(t)){return false}const s=new fC(t,e);const i=this._list.push(s);this._index[s.name]=i-1;this._urlIndex[s.url]=i-1;return true}find(t){if(this._index.hasOwnProperty(t)){return this._list[this._index[t]]}return null}findByUrl(t){if(this._urlIndex.hasOwnProperty(t)){return this._list[this._urlIndex[t]]}return null}remove(t){if(this._index.hasOwnProperty(t)){const e=this._index[t];let s=this._list[e];delete this._urlIndex[s.url];delete this._index[t];this._list.splice(e,1);for(let t=0;t<this._list.length;t++){s=this._list[t];this._index[s.name]=t;this._urlIndex[s.url]=t}}}_loadSceneData(t,e,s){const i=this._app;let n=t;if(typeof t==="string"){t=this.findByUrl(n)||this.find(n)||new fC("Untitled",n)}n=t.url;if(!n){s("Cannot find scene to load");return}if(t.loaded){s(null,t);return}if(i.assets&&i.assets.prefix&&!AA.test(n)){n=A.join(i.assets.prefix,n)}t._onLoadedCallbacks.push(s);if(!t._loading){const s=i.loader.getHandler("hierarchy");s.load(n,((s,i)=>{t.data=i;t._loading=false;for(let e=0;e<t._onLoadedCallbacks.length;e++){t._onLoadedCallbacks[e](s,t)}if(!e){t.data=null}t._onLoadedCallbacks.length=0}))}t._loading=true}loadSceneData(t,e){this._loadSceneData(t,true,e)}unloadSceneData(t){if(typeof t==="string"){t=this.findByUrl(t)}if(t){t.data=null}}_loadSceneHierarchy(t,e,s){this._loadSceneData(t,false,((t,i)=>{if(t){if(s){s(t)}return}if(e){e(i)}const n=this._app;const r=()=>{const t=n.loader.getHandler("hierarchy");n.systems.script.preloading=true;const e=t.open(i.url,i.data);n.systems.script.preloading=false;n.loader.clearCache(i.url,"hierarchy");n.root.addChild(e);n.systems.fire("initialize",e);n.systems.fire("postInitialize",e);n.systems.fire("postPostInitialize",e);if(s)s(null,e)};n._preloadScripts(i.data,r)}))}loadSceneHierarchy(t,e){this._loadSceneHierarchy(t,null,e)}loadSceneSettings(t,e){this._loadSceneData(t,false,((t,s)=>{if(!t){this._app.applySceneSettings(s.data.settings);if(e){e(null)}}else{if(e){e(t)}}}))}changeScene(t,e){const s=this._app;const i=t=>{const{children:e}=s.root;while(e.length){e[0].destroy()}s.applySceneSettings(t.data.settings)};this._loadSceneHierarchy(t,i,e)}loadScene(t,e){const s=this._app;const i=s.loader.getHandler("scene");if(s.assets&&s.assets.prefix&&!AA.test(t)){t=A.join(s.assets.prefix,t)}i.load(t,((n,r)=>{if(!n){const n=()=>{s.systems.script.preloading=true;const n=i.open(t,r);const a=this.findByUrl(t);if(a&&!a.loaded){a.data=r}s.systems.script.preloading=false;s.loader.clearCache(t,"scene");s.loader.patch({resource:n,type:"scene"},s.assets);s.root.addChild(n.root);if(s.systems.rigidbody&&typeof Ammo!=="undefined"){s.systems.rigidbody.gravity.set(n._gravity.x,n._gravity.y,n._gravity.z)}if(e){e(null,n)}};s._preloadScripts(r,n)}else{if(e){e(n)}}}))}}class mC{constructor(t){this.frame={fps:0,ms:0,dt:0,updateStart:0,updateTime:0,renderStart:0,renderTime:0,physicsStart:0,physicsTime:0,cullTime:0,sortTime:0,skinTime:0,morphTime:0,instancingTime:0,triangles:0,otherPrimitives:0,shaders:0,materials:0,cameras:0,shadowMapUpdates:0,shadowMapTime:0,depthMapTime:0,forwardTime:0,lightClustersTime:0,lightClusters:0,_timeToCountFrames:0,_fpsAccum:0};this.drawCalls={forward:0,depth:0,shadow:0,immediate:0,misc:0,total:0,skinned:0,instanced:0,removedByInstancing:0};this.misc={renderTargetCreationTime:0};this.particles={updatesPerFrame:0,_updatesPerFrame:0,frameTime:0,_frameTime:0};this.shaders=t._shaderStats;this.vram=t._vram;Object.defineProperty(this.vram,"totalUsed",{get:function(){return this.tex+this.vb+this.ib}});Object.defineProperty(this.vram,"geom",{get:function(){return this.vb+this.ib}})}get scene(){return hA().scene._stats}get lightmapper(){return hA().lightmapper?.stats}get batcher(){const t=hA()._batcher;return t?t._stats:null}}var _C=`\nuniform float alpha_ref;\nvoid alphaTest(float a) {\n\tif (a < alpha_ref) discard;\n}\n`;var gC=`\n#ifdef LIT_AMBIENT_SOURCE == AMBIENTSH\n\tuniform vec3 ambientSH[9];\n#endif\n#if LIT_AMBIENT_SOURCE == ENVALATLAS\n\t#include "envAtlasPS"\n\t#ifndef ENV_ATLAS\n\t#define ENV_ATLAS\n\t\tuniform sampler2D texture_envAtlas;\n\t#endif\n#endif\nvoid addAmbient(vec3 worldNormal) {\n\t#ifdef LIT_AMBIENT_SOURCE == AMBIENTSH\n\t\tvec3 n = cubeMapRotate(worldNormal);\n\t\tvec3 color =\n\t\t\tambientSH[0] +\n\t\t\tambientSH[1] * n.x +\n\t\t\tambientSH[2] * n.y +\n\t\t\tambientSH[3] * n.z +\n\t\t\tambientSH[4] * n.x * n.z +\n\t\t\tambientSH[5] * n.z * n.y +\n\t\t\tambientSH[6] * n.y * n.x +\n\t\t\tambientSH[7] * (3.0 * n.z * n.z - 1.0) +\n\t\t\tambientSH[8] * (n.x * n.x - n.y * n.y);\n\t\tdDiffuseLight += processEnvironment(max(color, vec3(0.0)));\n\t#endif\n\t#if LIT_AMBIENT_SOURCE == ENVALATLAS\n\t\tvec3 dir = normalize(cubeMapRotate(worldNormal) * vec3(-1.0, 1.0, 1.0));\n\t\tvec2 uv = mapUv(toSphericalUv(dir), vec4(128.0, 256.0 + 128.0, 64.0, 32.0) / atlasSize);\n\t\tvec4 raw = texture2D(texture_envAtlas, uv);\n\t\tvec3 linear = {ambientDecode}(raw);\n\t\tdDiffuseLight += processEnvironment(linear);\n\t#endif\n\t#if LIT_AMBIENT_SOURCE == CONSTANT\n\t\tdDiffuseLight += light_globalAmbient;\n\t#endif\n}\n`;var vC=`\n#ifdef LIT_GGX_SPECULAR\n\tuniform float material_anisotropyIntensity;\n\tuniform vec2 material_anisotropyRotation;\n#endif\nvoid getAnisotropy() {\n\tdAnisotropy = 0.0;\n\tdAnisotropyRotation = vec2(1.0, 0.0);\n#ifdef LIT_GGX_SPECULAR\n\tdAnisotropy = material_anisotropyIntensity;\n\tdAnisotropyRotation = material_anisotropyRotation;\n#endif\n\t#ifdef STD_ANISOTROPY_TEXTURE\n\tvec3 anisotropyTex = texture2DBias({STD_ANISOTROPY_TEXTURE_NAME}, {STD_ANISOTROPY_TEXTURE_UV}, textureBias).rgb;\n\tdAnisotropy *= anisotropyTex.b;\n\tvec2 anisotropyRotationFromTex = anisotropyTex.rg * 2.0 - vec2(1.0);\n\tmat2 rotationMatrix = mat2(dAnisotropyRotation.x, dAnisotropyRotation.y, -dAnisotropyRotation.y, dAnisotropyRotation.x);\n\tdAnisotropyRotation = rotationMatrix * anisotropyRotationFromTex;\n\t#endif\n\t\n\tdAnisotropy = clamp(dAnisotropy, 0.0, 1.0);\n}\n`;var yC=`\n#if defined(STD_AO_TEXTURE) || defined(STD_AO_VERTEX)\n\tuniform float material_aoIntensity;\n#endif\n#ifdef STD_AODETAIL_TEXTURE\n\t#include "detailModesPS"\n#endif\nvoid getAO() {\n\tdAo = 1.0;\n\t#ifdef STD_AO_TEXTURE\n\t\tfloat aoBase = texture2DBias({STD_AO_TEXTURE_NAME}, {STD_AO_TEXTURE_UV}, textureBias).{STD_AO_TEXTURE_CHANNEL};\n\t\t#ifdef STD_AODETAIL_TEXTURE\n\t\t\tfloat aoDetail = texture2DBias({STD_AODETAIL_TEXTURE_NAME}, {STD_AODETAIL_TEXTURE_UV}, textureBias).{STD_AODETAIL_TEXTURE_CHANNEL};\n\t\t\taoBase = detailMode_{STD_AODETAIL_DETAILMODE}(vec3(aoBase), vec3(aoDetail)).r;\n\t\t#endif\n\t\tdAo *= aoBase;\n\t#endif\n\t#ifdef STD_AO_VERTEX\n\t\tdAo *= saturate(vVertexColor.{STD_AO_VERTEX_CHANNEL});\n\t#endif\n\t#if defined(STD_AO_TEXTURE) || defined(STD_AO_VERTEX)\n\t\tdAo = mix(1.0, dAo, material_aoIntensity);\n\t#endif\n}\n`;var SC=`\nvoid occludeDiffuse(float ao) {\n\tdDiffuseLight *= ao;\n}\n`;var xC=`\n#if LIT_OCCLUDE_SPECULAR != NONE\n\t#ifdef LIT_OCCLUDE_SPECULAR_FLOAT\n\t\tuniform float material_occludeSpecularIntensity;\n\t#endif\n#endif\nvoid occludeSpecular(float gloss, float ao, vec3 worldNormal, vec3 viewDir) {\n\t#if LIT_OCCLUDE_SPECULAR == AO\n\t\t#ifdef LIT_OCCLUDE_SPECULAR_FLOAT\n\t\t\tfloat specOcc = mix(1.0, ao, material_occludeSpecularIntensity);\n\t\t#else\n\t\t\tfloat specOcc = ao;\n\t\t#endif\n\t#endif\n\t#if LIT_OCCLUDE_SPECULAR == GLOSSDEPENDENT\n\t\tfloat specPow = exp2(gloss * 11.0);\n\t\tfloat specOcc = saturate(pow(dot(worldNormal, viewDir) + ao, 0.01 * specPow) - 1.0 + ao);\n\t\t#ifdef LIT_OCCLUDE_SPECULAR_FLOAT\n\t\t\tspecOcc = mix(1.0, specOcc, material_occludeSpecularIntensity);\n\t\t#endif\n\t#endif\n\t#if LIT_OCCLUDE_SPECULAR != NONE\n\t\tdSpecularLight *= specOcc;\n\t\tdReflection *= specOcc;\n\t\t#ifdef LIT_SHEEN\n\t\t\tsSpecularLight *= specOcc;\n\t\t\tsReflection *= specOcc;\n\t\t#endif\n\t#endif\n}\n`;var TC=`\n\tvec4 dirLm = texture2D(texture_dirLightMap, vUv1);\n\tif (bakeDir > 0.5) {\n\t\tif (dAtten > 0.00001) {\n\t\t\tdirLm.xyz = dirLm.xyz * 2.0 - vec3(1.0);\n\t\t\tdAtten = saturate(dAtten);\n\t\t\tgl_FragColor.rgb = normalize(dLightDirNormW.xyz*dAtten + dirLm.xyz*dirLm.w) * 0.5 + vec3(0.5);\n\t\t\tgl_FragColor.a = dirLm.w + dAtten;\n\t\t\tgl_FragColor.a = max(gl_FragColor.a, 1.0 / 255.0);\n\t\t} else {\n\t\t\tgl_FragColor = dirLm;\n\t\t}\n\t} else {\n\t\tgl_FragColor.rgb = dirLm.xyz;\n\t\tgl_FragColor.a = max(dirLm.w, dAtten > 0.00001 ? (1.0/255.0) : 0.0);\n\t}\n`;var wC=`\n#ifdef LIT_LIGHTMAP_BAKING_ADD_AMBIENT\n\tdDiffuseLight = ((dDiffuseLight - 0.5) * max(ambientBakeOcclusionContrast + 1.0, 0.0)) + 0.5;\n\tdDiffuseLight += vec3(ambientBakeOcclusionBrightness);\n\tdDiffuseLight = saturate(dDiffuseLight);\n\tdDiffuseLight *= dAmbientLight;\n#endif\n#ifdef LIGHTMAP_RGBM\n\tgl_FragColor.rgb = dDiffuseLight;\n\tgl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(0.5));\n\tgl_FragColor.rgb /= 8.0;\n\tgl_FragColor.a = clamp( max( max( gl_FragColor.r, gl_FragColor.g ), max( gl_FragColor.b, 1.0 / 255.0 ) ), 0.0,1.0 );\n\tgl_FragColor.a = ceil(gl_FragColor.a * 255.0) / 255.0;\n\tgl_FragColor.rgb /= gl_FragColor.a;\n#else\n\tgl_FragColor = vec4(dDiffuseLight, 1.0);\n#endif\n`;var bC=`\nuniform vec3 view_position;\nuniform vec3 light_globalAmbient;\nfloat square(float x) {\n\treturn x*x;\n}\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvec3 saturate(vec3 x) {\n\treturn clamp(x, vec3(0.0), vec3(1.0));\n}\n`;var EC=`\n#define NINESLICED\nvarying vec2 vMask;\nvarying vec2 vTiledUv;\nuniform mediump vec4 innerOffset;\nuniform mediump vec2 outerScale;\nuniform mediump vec4 atlasRect;\nvec2 nineSlicedUv;\n`;var AC=`\n#define NINESLICED\n#define NINESLICETILED\nvarying vec2 vMask;\nvarying vec2 vTiledUv;\nuniform mediump vec4 innerOffset;\nuniform mediump vec2 outerScale;\nuniform mediump vec4 atlasRect;\nvec2 nineSlicedUv;\n`;var CC=`\nfloat bayer2(vec2 p) {\n\treturn mod(2.0 * p.y + p.x + 1.0, 4.0);\n}\nfloat bayer4(vec2 p) {\n\tvec2 p1 = mod(p, 2.0);\n\tvec2 p2 = floor(0.5 * mod(p, 4.0));\n\treturn 4.0 * bayer2(p1) + bayer2(p2);\n}\nfloat bayer8(vec2 p) {\n\tvec2 p1 = mod(p, 2.0);\n\tvec2 p2 = floor(0.5 * mod(p, 4.0));\n\tvec2 p4 = floor(0.25 * mod(p, 8.0));\n\treturn 4.0 * (4.0 * bayer2(p1) + bayer2(p2)) + bayer2(p4);\n}\n`;var PC=`\nvarying vec2 vUv0;\nuniform sampler2D source;\nuniform vec2 pixelOffset;\n#ifdef GAUSS\n\tuniform float weight[{SAMPLES}];\n#endif\nvoid main(void) {\n\tvec3 moments = vec3(0.0);\n\tvec2 uv = vUv0 - pixelOffset * (float({SAMPLES}) * 0.5);\n\tfor (int i = 0; i < {SAMPLES}; i++) {\n\t\tvec4 c = texture2D(source, uv + pixelOffset * float(i));\n\t\t#ifdef GAUSS\n\t\t\tmoments += c.xyz * weight[i];\n\t\t#else\n\t\t\tmoments += c.xyz;\n\t\t#endif\n\t}\n\t#ifndef GAUSS\n\t\tmoments *= 1.0 / float({SAMPLES});\n\t#endif\n\tgl_FragColor = vec4(moments.x, moments.y, moments.z, 1.0);\n}\n`;var LC=`\nuniform float material_clearCoat;\nvoid getClearCoat() {\n\tccSpecularity = material_clearCoat;\n\t#ifdef STD_CLEARCOAT_TEXTURE\n\tccSpecularity *= texture2DBias({STD_CLEARCOAT_TEXTURE_NAME}, {STD_CLEARCOAT_TEXTURE_UV}, textureBias).{STD_CLEARCOAT_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_CLEARCOAT_VERTEX\n\tccSpecularity *= saturate(vVertexColor.{STD_CLEARCOAT_VERTEX_CHANNEL});\n\t#endif\n}\n`;var DC=`\nuniform float material_clearCoatGloss;\nvoid getClearCoatGlossiness() {\n\tccGlossiness = material_clearCoatGloss;\n\t#ifdef STD_CLEARCOATGLOSS_TEXTURE\n\tccGlossiness *= texture2DBias({STD_CLEARCOATGLOSS_TEXTURE_NAME}, {STD_CLEARCOATGLOSS_TEXTURE_UV}, textureBias).{STD_CLEARCOATGLOSS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_CLEARCOATGLOSS_VERTEX\n\tccGlossiness *= saturate(vVertexColor.{STD_CLEARCOATGLOSS_VERTEX_CHANNEL});\n\t#endif\n\t#ifdef STD_CLEARCOATGLOSS_INVERT\n\tccGlossiness = 1.0 - ccGlossiness;\n\t#endif\n\tccGlossiness += 0.0000001;\n}\n`;var MC=`\n#ifdef STD_CLEARCOATNORMAL_TEXTURE\nuniform float material_clearCoatBumpiness;\n#endif\nvoid getClearCoatNormal() {\n#ifdef STD_CLEARCOATNORMAL_TEXTURE\n\tvec3 normalMap = {STD_CLEARCOATNORMAL_TEXTURE_DECODE}(texture2DBias({STD_CLEARCOATNORMAL_TEXTURE_NAME}, {STD_CLEARCOATNORMAL_TEXTURE_UV}, textureBias));\n\tnormalMap = mix(vec3(0.0, 0.0, 1.0), normalMap, material_clearCoatBumpiness);\n\tccNormalW = normalize(dTBN * normalMap);\n#else\n\tccNormalW = dVertexNormalW;\n#endif\n}\n`;var IC=`\nvec2 getCubemapFaceCoordinates(const vec3 dir, out float faceIndex, out vec2 tileOffset)\n{\n\tvec3 vAbs = abs(dir);\n\tfloat ma;\n\tvec2 uv;\n\tif (vAbs.z >= vAbs.x && vAbs.z >= vAbs.y) {\n\t\tfaceIndex = dir.z < 0.0 ? 5.0 : 4.0;\n\t\tma = 0.5 / vAbs.z;\n\t\tuv = vec2(dir.z < 0.0 ? -dir.x : dir.x, -dir.y);\n\t\ttileOffset.x = 2.0;\n\t\ttileOffset.y = dir.z < 0.0 ? 1.0 : 0.0;\n\t} else if(vAbs.y >= vAbs.x) {\n\t\tfaceIndex = dir.y < 0.0 ? 3.0 : 2.0;\n\t\tma = 0.5 / vAbs.y;\n\t\tuv = vec2(dir.x, dir.y < 0.0 ? -dir.z : dir.z);\n\t\ttileOffset.x = 1.0;\n\t\ttileOffset.y = dir.y < 0.0 ? 1.0 : 0.0;\n\t} else {\n\t\tfaceIndex = dir.x < 0.0 ? 1.0 : 0.0;\n\t\tma = 0.5 / vAbs.x;\n\t\tuv = vec2(dir.x < 0.0 ? dir.z : -dir.z, -dir.y);\n\t\ttileOffset.x = 0.0;\n\t\ttileOffset.y = dir.x < 0.0 ? 1.0 : 0.0;\n\t}\n\treturn uv * ma + 0.5;\n}\nvec2 getCubemapAtlasCoordinates(const vec3 omniAtlasViewport, float shadowEdgePixels, float shadowTextureResolution, const vec3 dir) {\n\tfloat faceIndex;\n\tvec2 tileOffset;\n\tvec2 uv = getCubemapFaceCoordinates(dir, faceIndex, tileOffset);\n\tfloat atlasFaceSize = omniAtlasViewport.z;\n\tfloat tileSize = shadowTextureResolution * atlasFaceSize;\n\tfloat offset = shadowEdgePixels / tileSize;\n\tuv = uv * vec2(1.0 - offset * 2.0) + vec2(offset * 1.0);\n\tuv *= atlasFaceSize;\n\tuv += tileOffset * atlasFaceSize;\n\tuv += omniAtlasViewport.xy;\n\treturn uv;\n}\n`;var RC=`\nvec3 _getCookieClustered(TEXTURE_ACCEPT(tex), vec2 uv, float intensity, vec4 cookieChannel) {\n\tvec4 pixel = mix(vec4(1.0), texture2DLod(tex, uv, 0.0), intensity);\n\tbool isRgb = dot(cookieChannel.rgb, vec3(1.0)) == 3.0;\n\treturn isRgb ? pixel.rgb : vec3(dot(pixel, cookieChannel));\n}\nvec3 getCookie2DClustered(TEXTURE_ACCEPT(tex), mat4 transform, vec3 worldPosition, float intensity, vec4 cookieChannel) {\n\tvec4 projPos = transform * vec4(worldPosition, 1.0);\n\treturn _getCookieClustered(TEXTURE_PASS(tex), projPos.xy / projPos.w, intensity, cookieChannel);\n}\nvec3 getCookieCubeClustered(TEXTURE_ACCEPT(tex), vec3 dir, float intensity, vec4 cookieChannel, float shadowTextureResolution, float shadowEdgePixels, vec3 omniAtlasViewport) {\n\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, dir);\n\treturn _getCookieClustered(TEXTURE_PASS(tex), uv, intensity, cookieChannel);\n}\n`;var OC=`\nvec3 _getShadowCoordPerspZbuffer(mat4 shadowMatrix, vec4 shadowParams, vec3 wPos) {\n\tvec4 projPos = shadowMatrix * vec4(wPos, 1.0);\n\tprojPos.xyz /= projPos.w;\n\treturn projPos.xyz;\n}\nvec3 getShadowCoordPerspZbufferNormalOffset(mat4 shadowMatrix, vec4 shadowParams, vec3 normal) {\n\tvec3 wPos = vPositionW + normal * shadowParams.y;\n\treturn _getShadowCoordPerspZbuffer(shadowMatrix, shadowParams, wPos);\n}\nvec3 normalOffsetPointShadow(vec4 shadowParams, vec3 lightPos, vec3 lightDir, vec3 lightDirNorm, vec3 normal) {\n\tfloat distScale = length(lightDir);\n\tvec3 wPos = vPositionW + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\tvec3 dir = wPos - lightPos;\n\treturn dir;\n}\n#if defined(CLUSTER_SHADOW_TYPE_PCF1)\nfloat getShadowOmniClusteredPCF1(SHADOWMAP_ACCEPT(shadowMap), vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {\n\tfloat shadowTextureResolution = shadowParams.x;\n\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\treturn textureShadow(shadowMap, vec3(uv, shadowZ));\n}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF3)\nfloat getShadowOmniClusteredPCF3(SHADOWMAP_ACCEPT(shadowMap), vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {\n\tfloat shadowTextureResolution = shadowParams.x;\n\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\tvec3 shadowCoord = vec3(uv, shadowZ);\n\treturn getShadowPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF5)\nfloat getShadowOmniClusteredPCF5(SHADOWMAP_ACCEPT(shadowMap), vec4 shadowParams, vec3 omniAtlasViewport, float shadowEdgePixels, vec3 lightDir) {\n\tfloat shadowTextureResolution = shadowParams.x;\n\tvec2 uv = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\tvec3 shadowCoord = vec3(uv, shadowZ);\n\treturn getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF1)\nfloat getShadowSpotClusteredPCF1(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn textureShadow(shadowMap, shadowCoord);\n}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF3)\nfloat getShadowSpotClusteredPCF3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn getShadowSpotPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF5)\nfloat getShadowSpotClusteredPCF5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams);\n}\n#endif\n`;var FC=`\n#include "lightBufferDefinesPS"\n#include "clusteredLightUtilsPS"\n#ifdef CLUSTER_COOKIES\n\t#include "clusteredLightCookiesPS"\n#endif\n#ifdef CLUSTER_SHADOWS\n\t#include "clusteredLightShadowsPS"\n#endif\nuniform highp sampler2D clusterWorldTexture;\nuniform highp sampler2D lightsTexture;\n#ifdef CLUSTER_SHADOWS\n\tuniform sampler2DShadow shadowAtlasTexture;\n#endif\n#ifdef CLUSTER_COOKIES\n\tuniform sampler2D cookieAtlasTexture;\n#endif\nuniform int clusterMaxCells;\nuniform float clusterSkip;\nuniform vec3 clusterCellsCountByBoundsSize;\nuniform vec3 clusterTextureSize;\nuniform vec3 clusterBoundsMin;\nuniform vec3 clusterBoundsDelta;\nuniform vec3 clusterCellsDot;\nuniform vec3 clusterCellsMax;\nuniform vec2 shadowAtlasParams;\nstruct ClusterLightData {\n\tuint flags;\n\tvec3 halfWidth;\n\tbool isSpot;\n\tvec3 halfHeight;\n\tint lightIndex;\n\tvec3 position;\n\tuint shape;\n\tvec3 direction;\n\tbool falloffModeLinear;\n\tvec3 color;\n\tfloat shadowIntensity;\n\tvec3 omniAtlasViewport;\n\tfloat range;\n\tvec4 cookieChannelMask;\n\tfloat biasesData;\n\tfloat shadowBias;\n\tfloat shadowNormalBias;\n\tfloat anglesData;\n\tfloat innerConeAngleCos;\n\tfloat outerConeAngleCos;\n\tfloat cookieIntensity;\n\tbool isDynamic;\n\tbool isLightmapped;\n};\nmat4 lightProjectionMatrix;\nvec4 sampleLightTextureF(const ClusterLightData clusterLightData, int index) {\n\treturn texelFetch(lightsTexture, ivec2(index, clusterLightData.lightIndex), 0);\n}\nvoid decodeClusterLightCore(inout ClusterLightData clusterLightData, float lightIndex) {\n\tclusterLightData.lightIndex = int(lightIndex);\n\tvec4 halfData = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_COLOR_ANGLES_BIAS});\n\tclusterLightData.anglesData = halfData.z;\n\tclusterLightData.biasesData = halfData.w;\n\tvec2 colorRG = unpackHalf2x16(floatBitsToUint(halfData.x));\n\tvec2 colorB_ = unpackHalf2x16(floatBitsToUint(halfData.y));\n\tclusterLightData.color = vec3(colorRG, colorB_.x) * {LIGHT_COLOR_DIVIDER};\n\tvec4 lightPosRange = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_POSITION_RANGE});\n\tclusterLightData.position = lightPosRange.xyz;\n\tclusterLightData.range = lightPosRange.w;\n\tvec4 lightDir_Flags = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_DIRECTION_FLAGS});\n\tclusterLightData.direction = lightDir_Flags.xyz;\n\tclusterLightData.flags = floatBitsToUint(lightDir_Flags.w);\n\tclusterLightData.isSpot = (clusterLightData.flags & (1u << 30u)) != 0u;\n\tclusterLightData.shape = (clusterLightData.flags >> 28u) & 0x3u;\n\tclusterLightData.falloffModeLinear = (clusterLightData.flags & (1u << 27u)) == 0u;\n\tclusterLightData.shadowIntensity = float((clusterLightData.flags >> 0u) & 0xFFu) / 255.0;\n\tclusterLightData.cookieIntensity = float((clusterLightData.flags >> 8u) & 0xFFu) / 255.0;\n\tclusterLightData.isDynamic = (clusterLightData.flags & (1u << 22u)) != 0u;\n\tclusterLightData.isLightmapped = (clusterLightData.flags & (1u << 21u)) != 0u;\n}\nvoid decodeClusterLightSpot(inout ClusterLightData clusterLightData) {\n\tvec2 angles = unpackHalf2x16(floatBitsToUint(clusterLightData.anglesData));\n\tclusterLightData.innerConeAngleCos = angles.x;\n\tclusterLightData.outerConeAngleCos = angles.y;\n}\nvoid decodeClusterLightOmniAtlasViewport(inout ClusterLightData clusterLightData) {\n\tclusterLightData.omniAtlasViewport = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_PROJ_MAT_0}).xyz;\n}\nvoid decodeClusterLightAreaData(inout ClusterLightData clusterLightData) {\n\tclusterLightData.halfWidth = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_AREA_DATA_WIDTH}).xyz;\n\tclusterLightData.halfHeight = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_AREA_DATA_HEIGHT}).xyz;\n}\nvoid decodeClusterLightProjectionMatrixData(inout ClusterLightData clusterLightData) {\n\t\n\tvec4 m0 = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_PROJ_MAT_0});\n\tvec4 m1 = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_PROJ_MAT_1});\n\tvec4 m2 = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_PROJ_MAT_2});\n\tvec4 m3 = sampleLightTextureF(clusterLightData, {CLUSTER_TEXTURE_PROJ_MAT_3});\n\tlightProjectionMatrix = mat4(m0, m1, m2, m3);\n}\nvoid decodeClusterLightShadowData(inout ClusterLightData clusterLightData) {\n\t\n\tvec2 biases = unpackHalf2x16(floatBitsToUint(clusterLightData.biasesData));\n\tclusterLightData.shadowBias = biases.x;\n\tclusterLightData.shadowNormalBias = biases.y;\n}\nvoid decodeClusterLightCookieData(inout ClusterLightData clusterLightData) {\n\tuint cookieFlags = (clusterLightData.flags >> 23u) & 0x0Fu;\n\tclusterLightData.cookieChannelMask = vec4(uvec4(cookieFlags) & uvec4(1u, 2u, 4u, 8u));\n\tclusterLightData.cookieChannelMask = step(1.0, clusterLightData.cookieChannelMask);\n}\nvoid evaluateLight(\n\tClusterLightData light, \n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir,\n#if defined(LIT_CLEARCOAT)\n\tvec3 clearcoatReflectionDir,\n#endif\n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 geometricNormal, \n\tmat3 tbn, \n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel,\n#endif\n\tvec3 clearcoat_worldNormal,\n\tfloat clearcoat_gloss,\n\tfloat sheen_gloss,\n\tfloat iridescence_intensity\n) {\n\tvec3 cookieAttenuation = vec3(1.0);\n\tfloat diffuseAttenuation = 1.0;\n\tfloat falloffAttenuation = 1.0;\n\tvec3 lightDirW = evalOmniLight(light.position);\n\tvec3 lightDirNormW = normalize(lightDirW);\n\t#ifdef CLUSTER_AREALIGHTS\n\tif (light.shape != {LIGHTSHAPE_PUNCTUAL}) {\n\t\tdecodeClusterLightAreaData(light);\n\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\tcalcRectLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\tcalcDiskLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t} else {\n\t\t\tcalcSphereLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t}\n\t\tfalloffAttenuation = getFalloffWindow(light.range, lightDirW);\n\t} else\n\t#endif\n\t{\n\t\tif (light.falloffModeLinear)\n\t\t\tfalloffAttenuation = getFalloffLinear(light.range, lightDirW);\n\t\telse\n\t\t\tfalloffAttenuation = getFalloffInvSquared(light.range, lightDirW);\n\t}\n\tif (falloffAttenuation > 0.00001) {\n\t\t#ifdef CLUSTER_AREALIGHTS\n\t\tif (light.shape != {LIGHTSHAPE_PUNCTUAL}) {\n\t\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\t\tdiffuseAttenuation = getRectLightDiffuse(worldNormal, viewDir, lightDirW, lightDirNormW) * 16.0;\n\t\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\t\tdiffuseAttenuation = getDiskLightDiffuse(worldNormal, viewDir, lightDirW, lightDirNormW) * 16.0;\n\t\t\t} else {\n\t\t\t\tdiffuseAttenuation = getSphereLightDiffuse(worldNormal, viewDir, lightDirW, lightDirNormW) * 16.0;\n\t\t\t}\n\t\t} else\n\t\t#endif\n\t\t{\n\t\t\tfalloffAttenuation *= getLightDiffuse(worldNormal, viewDir, lightDirNormW); \n\t\t}\n\t\tif (light.isSpot) {\n\t\t\tdecodeClusterLightSpot(light);\n\t\t\tfalloffAttenuation *= getSpotEffect(light.direction, light.innerConeAngleCos, light.outerConeAngleCos, lightDirNormW);\n\t\t}\n\t\t#if defined(CLUSTER_COOKIES) || defined(CLUSTER_SHADOWS)\n\t\tif (falloffAttenuation > 0.00001) {\n\t\t\tif (light.shadowIntensity > 0.0 || light.cookieIntensity > 0.0) {\n\t\t\t\tif (light.isSpot) {\n\t\t\t\t\tdecodeClusterLightProjectionMatrixData(light);\n\t\t\t\t} else {\n\t\t\t\t\tdecodeClusterLightOmniAtlasViewport(light);\n\t\t\t\t}\n\t\t\t\tfloat shadowTextureResolution = shadowAtlasParams.x;\n\t\t\t\tfloat shadowEdgePixels = shadowAtlasParams.y;\n\t\t\t\t#ifdef CLUSTER_COOKIES\n\t\t\t\tif (light.cookieIntensity > 0.0) {\n\t\t\t\t\tdecodeClusterLightCookieData(light);\n\t\t\t\t\tif (light.isSpot) {\n\t\t\t\t\t\tcookieAttenuation = getCookie2DClustered(TEXTURE_PASS(cookieAtlasTexture), lightProjectionMatrix, vPositionW, light.cookieIntensity, light.cookieChannelMask);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcookieAttenuation = getCookieCubeClustered(TEXTURE_PASS(cookieAtlasTexture), lightDirW, light.cookieIntensity, light.cookieChannelMask, shadowTextureResolution, shadowEdgePixels, light.omniAtlasViewport);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t\t#ifdef CLUSTER_SHADOWS\n\t\t\t\tif (light.shadowIntensity > 0.0) {\n\t\t\t\t\tdecodeClusterLightShadowData(light);\n\t\t\t\t\tvec4 shadowParams = vec4(shadowTextureResolution, light.shadowNormalBias, light.shadowBias, 1.0 / light.range);\n\t\t\t\t\tif (light.isSpot) {\n\t\t\t\t\t\tvec3 shadowCoord = getShadowCoordPerspZbufferNormalOffset(lightProjectionMatrix, shadowParams, geometricNormal);\n\t\t\t\t\t\t\n\t\t\t\t\t\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\t\t\t\t\t\t\tfloat shadow = getShadowSpotClusteredPCF1(SHADOWMAP_PASS(shadowAtlasTexture), shadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF3)\n\t\t\t\t\t\t\tfloat shadow = getShadowSpotClusteredPCF3(SHADOWMAP_PASS(shadowAtlasTexture), shadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF5)\n\t\t\t\t\t\t\tfloat shadow = getShadowSpotClusteredPCF5(SHADOWMAP_PASS(shadowAtlasTexture), shadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCSS)\n\t\t\t\t\t\t\tfloat shadow = getShadowSpotClusteredPCSS(SHADOWMAP_PASS(shadowAtlasTexture), shadowCoord, shadowParams);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tfalloffAttenuation *= mix(1.0, shadow, light.shadowIntensity);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvec3 dir = normalOffsetPointShadow(shadowParams, light.position, lightDirW, lightDirNormW, geometricNormal);\n\t\t\t\t\t\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\t\t\t\t\t\t\tfloat shadow = getShadowOmniClusteredPCF1(SHADOWMAP_PASS(shadowAtlasTexture), shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF3)\n\t\t\t\t\t\t\tfloat shadow = getShadowOmniClusteredPCF3(SHADOWMAP_PASS(shadowAtlasTexture), shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF5)\n\t\t\t\t\t\t\tfloat shadow = getShadowOmniClusteredPCF5(SHADOWMAP_PASS(shadowAtlasTexture), shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tfalloffAttenuation *= mix(1.0, shadow, light.shadowIntensity);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t}\n\t\t}\n\t\t#endif\n\t\t#ifdef CLUSTER_AREALIGHTS\n\t\tif (light.shape != {LIGHTSHAPE_PUNCTUAL}) {\n\t\t\t{\n\t\t\t\tvec3 areaDiffuse = (diffuseAttenuation * falloffAttenuation) * light.color * cookieAttenuation;\n\t\t\t\t#if defined(LIT_SPECULAR)\n\t\t\t\t\tareaDiffuse = mix(areaDiffuse, vec3(0), dLTCSpecFres);\n\t\t\t\t#endif\n\t\t\t\tdDiffuseLight += areaDiffuse;\n\t\t\t}\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tfloat areaLightSpecular;\n\t\t\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\t\t\tareaLightSpecular = getRectLightSpecular(worldNormal, viewDir);\n\t\t\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\t\t\tareaLightSpecular = getDiskLightSpecular(worldNormal, viewDir);\n\t\t\t\t} else {\n\t\t\t\t\tareaLightSpecular = getSphereLightSpecular(worldNormal, viewDir);\n\t\t\t\t}\n\t\t\t\tdSpecularLight += dLTCSpecFres * areaLightSpecular * falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t\tfloat areaLightSpecularCC;\n\t\t\t\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\t\t\t\tareaLightSpecularCC = getRectLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\t\t\t\tareaLightSpecularCC = getDiskLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tareaLightSpecularCC = getSphereLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t}\n\t\t\t\t\tccSpecularLight += ccLTCSpecFres * areaLightSpecularCC * falloffAttenuation * light.color  * cookieAttenuation;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t} else\n\t\t#endif\n\t\t{\n\t\t\t{\n\t\t\t\tvec3 punctualDiffuse = falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#if defined(CLUSTER_AREALIGHTS)\n\t\t\t\t#if defined(LIT_SPECULAR)\n\t\t\t\t\tpunctualDiffuse = mix(punctualDiffuse, vec3(0), specularity);\n\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t\tdDiffuseLight += punctualDiffuse;\n\t\t\t}\n\t \n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvec3 halfDir = normalize(-lightDirNormW + viewDir);\n\t\t\t\t\n\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\tdSpecularLight += \n\t\t\t\t\t\tgetLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, lightDirNormW, gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * \n\t\t\t\t\t\tgetFresnel(\n\t\t\t\t\t\t\tdot(viewDir, halfDir), \n\t\t\t\t\t\t\tgloss, \n\t\t\t\t\t\t\tspecularity\n\t\t\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\t\t\tiridescence_intensity\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\t);\n\t\t\t\t#else\n\t\t\t\t\tdSpecularLight += getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, lightDirNormW, gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * specularity;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\t\tccSpecularLight += getLightSpecular(halfDir, clearcoatReflectionDir, clearcoat_worldNormal, viewDir, lightDirNormW, clearcoat_gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * getFresnelCC(dot(viewDir, halfDir));\n\t\t\t\t\t#else\n\t\t\t\t\t\tccSpecularLight += getLightSpecular(halfDir, clearcoatReflectionDir, clearcoat_worldNormal, viewDir, lightDirNormW, clearcoat_gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation; \n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t\tsSpecularLight += getLightSpecularSheen(halfDir, worldNormal, viewDir, lightDirNormW, sheen_gloss) * falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t}\n\t}\n\tdAtten = falloffAttenuation;\n\tdLightDirNormW = lightDirNormW;\n}\nvoid evaluateClusterLight(\n\tfloat lightIndex, \n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir, \n#if defined(LIT_CLEARCOAT)\n\tvec3 clearcoatReflectionDir,\n#endif\n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 geometricNormal, \n\tmat3 tbn, \n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel,\n#endif\n\tvec3 clearcoat_worldNormal,\n\tfloat clearcoat_gloss,\n\tfloat sheen_gloss,\n\tfloat iridescence_intensity\n) {\n\tClusterLightData clusterLightData;\n\tdecodeClusterLightCore(clusterLightData, lightIndex);\n\t#ifdef CLUSTER_MESH_DYNAMIC_LIGHTS\n\t\tbool acceptLightMask = clusterLightData.isDynamic;\n\t#else\n\t\tbool acceptLightMask = clusterLightData.isLightmapped;\n\t#endif\n\tif (acceptLightMask)\n\t\tevaluateLight(\n\t\t\tclusterLightData, \n\t\t\tworldNormal, \n\t\t\tviewDir, \n\t\t\treflectionDir, \n#if defined(LIT_CLEARCOAT)\n\t\t\tclearcoatReflectionDir, \n#endif\n\t\t\tgloss, \n\t\t\tspecularity, \n\t\t\tgeometricNormal, \n\t\t\ttbn, \n#if defined(LIT_IRIDESCENCE)\n\t\t\tiridescenceFresnel,\n#endif\n\t\t\tclearcoat_worldNormal,\n\t\t\tclearcoat_gloss,\n\t\t\tsheen_gloss,\n\t\t\tiridescence_intensity\n\t\t);\n}\nvoid addClusteredLights(\n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir, \n#if defined(LIT_CLEARCOAT)\n\tvec3 clearcoatReflectionDir,\n#endif\n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 geometricNormal, \n\tmat3 tbn, \n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel,\n#endif\n\tvec3 clearcoat_worldNormal,\n\tfloat clearcoat_gloss,\n\tfloat sheen_gloss,\n\tfloat iridescence_intensity\n) {\n\tif (clusterSkip > 0.5)\n\t\treturn;\n\tvec3 cellCoords = floor((vPositionW - clusterBoundsMin) * clusterCellsCountByBoundsSize);\n\tif (!(any(lessThan(cellCoords, vec3(0.0))) || any(greaterThanEqual(cellCoords, clusterCellsMax)))) {\n\t\tfloat cellIndex = dot(clusterCellsDot, cellCoords);\n\t\tfloat clusterV = floor(cellIndex * clusterTextureSize.y);\n\t\tfloat clusterU = cellIndex - (clusterV * clusterTextureSize.x);\n\t\tfor (int lightCellIndex = 0; lightCellIndex < clusterMaxCells; lightCellIndex++) {\n\t\t\tfloat lightIndex = texelFetch(clusterWorldTexture, ivec2(int(clusterU) + lightCellIndex, clusterV), 0).x;\n\t\t\tif (lightIndex <= 0.0)\n\t\t\t\tbreak;\n\t\t\tevaluateClusterLight(\n\t\t\t\tlightIndex * 255.0, \n\t\t\t\tworldNormal, \n\t\t\t\tviewDir, \n\t\t\t\treflectionDir,\n#if defined(LIT_CLEARCOAT)\n\t\t\t\tclearcoatReflectionDir,\n#endif\n\t\t\t\tgloss, \n\t\t\t\tspecularity, \n\t\t\t\tgeometricNormal, \n\t\t\t\ttbn, \n#if defined(LIT_IRIDESCENCE)\n\t\t\t\tiridescenceFresnel,\n#endif\n\t\t\t\tclearcoat_worldNormal,\n\t\t\t\tclearcoat_gloss,\n\t\t\t\tsheen_gloss,\n\t\t\t\tiridescence_intensity\n\t\t\t); \n\t\t}\n\t}\n}\n`;var NC=`\nvec3 combineColor(vec3 albedo, vec3 sheenSpecularity, float clearcoatSpecularity) {\n\tvec3 ret = vec3(0);\n#ifdef LIT_OLD_AMBIENT\n\tret += (dDiffuseLight - light_globalAmbient) * albedo + material_ambient * light_globalAmbient;\n#else\n\tret += albedo * dDiffuseLight;\n#endif\n#ifdef LIT_SPECULAR\n\tret += dSpecularLight;\n#endif\n#ifdef LIT_REFLECTIONS\n\tret += dReflection.rgb * dReflection.a;\n#endif\n#ifdef LIT_SHEEN\n\tfloat sheenScaling = 1.0 - max(max(sheenSpecularity.r, sheenSpecularity.g), sheenSpecularity.b) * 0.157;\n\tret = ret * sheenScaling + (sSpecularLight + sReflection.rgb) * sheenSpecularity;\n#endif\n#ifdef LIT_CLEARCOAT\n\tfloat clearCoatScaling = 1.0 - ccFresnel * clearcoatSpecularity;\n\tret = ret * clearCoatScaling + (ccSpecularLight + ccReflection) * clearcoatSpecularity;\n#endif\n\treturn ret;\n}\n`;var kC=`\n\tvarying vec2 uv0;\n\tuniform sampler2D blitTexture;\n\tvoid main(void) {\n\t\tgl_FragColor = texture2D(blitTexture, uv0);\n\t}\n`;var BC=`\n\tvarying vec2 uv0;\n\tuniform samplerCube blitTexture;\n\tuniform mat4 invViewProj;\n\tvoid main(void) {\n\t\tvec4 projPos = vec4(uv0 * 2.0 - 1.0, 0.5, 1.0);\n\t\tvec4 worldPos = invViewProj * projPos;\n\t\tgl_FragColor = textureCube(blitTexture, worldPos.xyz);\n\t}\n`;var UC=`\n\tattribute vec2 vertex_position;\n\tvarying vec2 uv0;\n\tvoid main(void) {\n\t\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\t\tuv0 = vertex_position.xy * 0.5 + 0.5;\n\t\t#ifndef WEBGPU\n\t\t\tuv0.y = 1.0 - uv0.y;\n\t\t#endif\n\t}\n`;var zC=`\nvec4 getCookie2D(sampler2D tex, mat4 transform, float intensity) {\n\tvec4 projPos = transform * vec4(vPositionW, 1.0);\n\tprojPos.xy /= projPos.w;\n\treturn mix(vec4(1.0), texture2D(tex, projPos.xy), intensity);\n}\nvec4 getCookie2DClip(sampler2D tex, mat4 transform, float intensity) {\n\tvec4 projPos = transform * vec4(vPositionW, 1.0);\n\tprojPos.xy /= projPos.w;\n\tif (projPos.x < 0.0 || projPos.x > 1.0 || projPos.y < 0.0 || projPos.y > 1.0 || projPos.z < 0.0) return vec4(0.0);\n\treturn mix(vec4(1.0), texture2D(tex, projPos.xy), intensity);\n}\nvec4 getCookie2DXform(sampler2D tex, mat4 transform, float intensity, vec4 cookieMatrix, vec2 cookieOffset) {\n\tvec4 projPos = transform * vec4(vPositionW, 1.0);\n\tprojPos.xy /= projPos.w;\n\tprojPos.xy += cookieOffset;\n\tvec2 uv = mat2(cookieMatrix) * (projPos.xy-vec2(0.5)) + vec2(0.5);\n\treturn mix(vec4(1.0), texture2D(tex, uv), intensity);\n}\nvec4 getCookie2DClipXform(sampler2D tex, mat4 transform, float intensity, vec4 cookieMatrix, vec2 cookieOffset) {\n\tvec4 projPos = transform * vec4(vPositionW, 1.0);\n\tprojPos.xy /= projPos.w;\n\tprojPos.xy += cookieOffset;\n\tif (projPos.x < 0.0 || projPos.x > 1.0 || projPos.y < 0.0 || projPos.y > 1.0 || projPos.z < 0.0) return vec4(0.0);\n\tvec2 uv = mat2(cookieMatrix) * (projPos.xy-vec2(0.5)) + vec2(0.5);\n\treturn mix(vec4(1.0), texture2D(tex, uv), intensity);\n}\nvec4 getCookieCube(samplerCube tex, mat4 transform, float intensity) {\n\treturn mix(vec4(1.0), textureCube(tex, dLightDirNormW * mat3(transform)), intensity);\n}\n`;var VC=`\n#if LIT_CUBEMAP_PROJECTION == BOX\n\tuniform vec3 envBoxMin;\n\tuniform vec3 envBoxMax;\n#endif\nvec3 cubeMapProject(vec3 nrdir) {\n\t#if LIT_CUBEMAP_PROJECTION == NONE\n\t\treturn cubeMapRotate(nrdir);\n\t#endif\n\t#if LIT_CUBEMAP_PROJECTION == BOX\n\t\tnrdir = cubeMapRotate(nrdir);\n\t\tvec3 rbmax = (envBoxMax - vPositionW) / nrdir;\n\t\tvec3 rbmin = (envBoxMin - vPositionW) / nrdir;\n\t\tvec3 rbminmax = mix(rbmin, rbmax, vec3(greaterThan(nrdir, vec3(0.0))));\n\t\tfloat fa = min(min(rbminmax.x, rbminmax.y), rbminmax.z);\n\t\tvec3 posonbox = vPositionW + nrdir * fa;\n\t\tvec3 envBoxPos = (envBoxMin + envBoxMax) * 0.5;\n\t\treturn normalize(posonbox - envBoxPos);\n\t#endif\n}\n`;var GC=`\n#ifdef CUBEMAP_ROTATION\nuniform mat3 cubeMapRotationMatrix;\n#endif\nvec3 cubeMapRotate(vec3 refDir) {\n#ifdef CUBEMAP_ROTATION\n\treturn refDir * cubeMapRotationMatrix;\n#else\n\treturn refDir;\n#endif\n}\n`;var HC=`\n#ifdef DEBUG_ALBEDO_PASS\ngl_FragColor = vec4(gammaCorrectOutput(dAlbedo), 1.0);\n#endif\n#ifdef DEBUG_UV0_PASS\ngl_FragColor = vec4(litArgs_albedo , 1.0);\n#endif\n#ifdef DEBUG_WORLD_NORMAL_PASS\ngl_FragColor = vec4(litArgs_worldNormal * 0.5 + 0.5, 1.0);\n#endif\n#ifdef DEBUG_OPACITY_PASS\ngl_FragColor = vec4(vec3(litArgs_opacity) , 1.0);\n#endif\n#ifdef DEBUG_SPECULARITY_PASS\ngl_FragColor = vec4(litArgs_specularity, 1.0);\n#endif\n#ifdef DEBUG_GLOSS_PASS\ngl_FragColor = vec4(vec3(litArgs_gloss) , 1.0);\n#endif\n#ifdef DEBUG_METALNESS_PASS\ngl_FragColor = vec4(vec3(litArgs_metalness) , 1.0);\n#endif\n#ifdef DEBUG_AO_PASS\ngl_FragColor = vec4(vec3(litArgs_ao) , 1.0);\n#endif\n#ifdef DEBUG_EMISSION_PASS\ngl_FragColor = vec4(gammaCorrectOutput(litArgs_emission), 1.0);\n#endif\n`;var WC=`\n#ifdef DEBUG_LIGHTING_PASS\nlitArgs_albedo = vec3(0.5);\n#endif\n#ifdef DEBUG_UV0_PASS\n#ifdef VARYING_VUV0\nlitArgs_albedo = vec3(vUv0, 0);\n#else\nlitArgs_albedo = vec3(0);\n#endif\n#endif\n`;var XC=`\n#ifndef _DECODE_INCLUDED_\n#define _DECODE_INCLUDED_\nvec3 decodeLinear(vec4 raw) {\n\treturn raw.rgb;\n}\nfloat decodeGamma(float raw) {\n\treturn pow(raw, 2.2);\n}\nvec3 decodeGamma(vec3 raw) {\n\treturn pow(raw, vec3(2.2));\n}\nvec3 decodeGamma(vec4 raw) {\n\treturn pow(raw.xyz, vec3(2.2));\n}\nvec3 decodeRGBM(vec4 raw) {\n\tvec3 color = (8.0 * raw.a) * raw.rgb;\n\treturn color * color;\n}\nvec3 decodeRGBP(vec4 raw) {\n\tvec3 color = raw.rgb * (-raw.a * 7.0 + 8.0);\n\treturn color * color;\n}\nvec3 decodeRGBE(vec4 raw) {\n\tif (raw.a == 0.0) {\n\t\treturn vec3(0.0, 0.0, 0.0);\n\t} else {\n\t\treturn raw.xyz * pow(2.0, raw.w * 255.0 - 128.0);\n\t}\n}\nvec4 passThrough(vec4 raw) {\n\treturn raw;\n}\nvec3 unpackNormalXYZ(vec4 nmap) {\n\treturn nmap.xyz * 2.0 - 1.0;\n}\nvec3 unpackNormalXY(vec4 nmap) {\n\tvec3 normal;\n\tnormal.xy = nmap.wy * 2.0 - 1.0;\n\tnormal.z = sqrt(1.0 - clamp(dot(normal.xy, normal.xy), 0.0, 1.0));\n\treturn normal;\n}\n#endif\n`;var qC=`\n#ifndef _DETAILMODES_INCLUDED_\n#define _DETAILMODES_INCLUDED_\nvec3 detailMode_mul(vec3 c1, vec3 c2) {\n\treturn c1 * c2;\n}\nvec3 detailMode_add(vec3 c1, vec3 c2) {\n\treturn c1 + c2;\n}\nvec3 detailMode_screen(vec3 c1, vec3 c2) {\n\treturn 1.0 - (1.0 - c1)*(1.0 - c2);\n}\nvec3 detailMode_overlay(vec3 c1, vec3 c2) {\n\treturn mix(1.0 - 2.0 * (1.0 - c1)*(1.0 - c2), 2.0 * c1 * c2, step(c1, vec3(0.5)));\n}\nvec3 detailMode_min(vec3 c1, vec3 c2) {\n\treturn min(c1, c2);\n}\nvec3 detailMode_max(vec3 c1, vec3 c2) {\n\treturn max(c1, c2);\n}\n#endif\n`;var $C=`\nuniform vec3 material_diffuse;\n#ifdef STD_DIFFUSEDETAIL_TEXTURE\n\t#include "detailModesPS"\n#endif\nvoid getAlbedo() {\n\tdAlbedo = material_diffuse.rgb;\n\t#ifdef STD_DIFFUSE_TEXTURE\n\t\tvec3 albedoTexture = {STD_DIFFUSE_TEXTURE_DECODE}(texture2DBias({STD_DIFFUSE_TEXTURE_NAME}, {STD_DIFFUSE_TEXTURE_UV}, textureBias)).{STD_DIFFUSE_TEXTURE_CHANNEL};\n\t\t#ifdef STD_DIFFUSEDETAIL_TEXTURE\n\t\t\tvec3 albedoDetail = {STD_DIFFUSEDETAIL_TEXTURE_DECODE}(texture2DBias({STD_DIFFUSEDETAIL_TEXTURE_NAME}, {STD_DIFFUSEDETAIL_TEXTURE_UV}, textureBias)).{STD_DIFFUSEDETAIL_TEXTURE_CHANNEL};\n\t\t\talbedoTexture = detailMode_{STD_DIFFUSEDETAIL_DETAILMODE}(albedoTexture, albedoDetail);\n\t\t#endif\n\t\tdAlbedo *= albedoTexture;\n\t#endif\n\t#ifdef STD_DIFFUSE_VERTEX\n\t\tdAlbedo *= gammaCorrectInput(saturate(vVertexColor.{STD_DIFFUSE_VERTEX_CHANNEL}));\n\t#endif\n}\n`;var jC=`\nuniform vec3 material_emissive;\nuniform float material_emissiveIntensity;\nvoid getEmission() {\n\tdEmission = material_emissive * material_emissiveIntensity;\n\t#ifdef STD_EMISSIVE_TEXTURE\n\tdEmission *= {STD_EMISSIVE_TEXTURE_DECODE}(texture2DBias({STD_EMISSIVE_TEXTURE_NAME}, {STD_EMISSIVE_TEXTURE_UV}, textureBias)).{STD_EMISSIVE_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_EMISSIVE_VERTEX\n\tdEmission *= gammaCorrectInput(saturate(vVertexColor.{STD_EMISSIVE_VERTEX_CHANNEL}));\n\t#endif\n}\n`;var YC=`\nvec4 encodeLinear(vec3 source) {\n\treturn vec4(source, 1.0);\n}\nvec4 encodeGamma(vec3 source) {\n\treturn vec4(pow(source + 0.0000001, vec3(1.0 / 2.2)), 1.0);\n}\nvec4 encodeRGBM(vec3 source) {\n\tvec4 result;\n\tresult.rgb = pow(source.rgb, vec3(0.5));\n\tresult.rgb *= 1.0 / 8.0;\n\tresult.a = saturate( max( max( result.r, result.g ), max( result.b, 1.0 / 255.0 ) ) );\n\tresult.a = ceil(result.a * 255.0) / 255.0;\n\tresult.rgb /= result.a;\n\treturn result;\n}\nvec4 encodeRGBP(vec3 source) {\n\tvec3 gamma = pow(source, vec3(0.5));\n\tfloat maxVal = min(8.0, max(1.0, max(gamma.x, max(gamma.y, gamma.z))));\n\tfloat v = 1.0 - ((maxVal - 1.0) / 7.0);\n\tv = ceil(v * 255.0) / 255.0;\n\treturn vec4(gamma / (-v * 7.0 + 8.0), v);\t\n}\nvec4 encodeRGBE(vec3 source) {\n\tfloat maxVal = max(source.x, max(source.y, source.z));\n\tif (maxVal < 1e-32) {\n\t\treturn vec4(0, 0, 0, 0);\n\t} else {\n\t\tfloat e = ceil(log2(maxVal));\n\t\treturn vec4(source / pow(2.0, e), (e + 128.0) / 255.0);\n\t}\n}\n`;var KC=`\n\tgl_FragColor.rgb = combineColor(litArgs_albedo, litArgs_sheen_specularity, litArgs_clearcoat_specularity);\n\tgl_FragColor.rgb += litArgs_emission;\n\tgl_FragColor.rgb = addFog(gl_FragColor.rgb);\n\tgl_FragColor.rgb = toneMap(gl_FragColor.rgb);\n\tgl_FragColor.rgb = gammaCorrectOutput(gl_FragColor.rgb);\n`;var ZC=`\n#ifndef _ENVATLAS_INCLUDED_\n#define _ENVATLAS_INCLUDED_\nconst float atlasSize = 512.0;\nconst float seamSize = 1.0 / atlasSize;\nvec2 mapUv(vec2 uv, vec4 rect) {\n\treturn vec2(mix(rect.x + seamSize, rect.x + rect.z - seamSize, uv.x),\n\t\t\t\tmix(rect.y + seamSize, rect.y + rect.w - seamSize, uv.y));\n}\nvec2 mapRoughnessUv(vec2 uv, float level) {\n\tfloat t = 1.0 / exp2(level);\n\treturn mapUv(uv, vec4(0, 1.0 - t, t, t * 0.5));\n}\nvec2 mapShinyUv(vec2 uv, float level) {\n\tfloat t = 1.0 / exp2(level);\n\treturn mapUv(uv, vec4(1.0 - t, 1.0 - t, t, t * 0.5));\n}\n#endif\n`;var QC=`\n#ifdef LIT_SKYBOX_INTENSITY\n\tuniform float skyboxIntensity;\n#endif\nvec3 processEnvironment(vec3 color) {\n\t#ifdef LIT_SKYBOX_INTENSITY\n\t\treturn color * skyboxIntensity;\n\t#else\n\t\treturn color;\n\t#endif\n}\n`;var JC=`\nfloat getFalloffWindow(float lightRadius, vec3 lightDir) {\n\tfloat sqrDist = dot(lightDir, lightDir);\n\tfloat invRadius = 1.0 / lightRadius;\n\treturn square(saturate(1.0 - square(sqrDist * square(invRadius))));\n}\nfloat getFalloffInvSquared(float lightRadius, vec3 lightDir) {\n\tfloat sqrDist = dot(lightDir, lightDir);\n\tfloat falloff = 1.0 / (sqrDist + 1.0);\n\tfloat invRadius = 1.0 / lightRadius;\n\tfalloff *= 16.0;\n\tfalloff *= square(saturate(1.0 - square(sqrDist * square(invRadius))));\n\treturn falloff;\n}\n`;var tP=`\nfloat getFalloffLinear(float lightRadius, vec3 lightDir) {\n\tfloat d = length(lightDir);\n\treturn max(((lightRadius - d) / lightRadius), 0.0);\n}\n`;var eP=`\n#ifndef FLOAT_AS_UINT\n#define FLOAT_AS_UINT\nvec4 float2uint(float value) {\n\tuint intBits = floatBitsToUint(value);\n\treturn vec4(\n\t\tfloat((intBits >> 24u) & 0xFFu) / 255.0,\n\t\tfloat((intBits >> 16u) & 0xFFu) / 255.0,\n\t\tfloat((intBits >> 8u) & 0xFFu) / 255.0,\n\t\tfloat(intBits & 0xFFu) / 255.0\n\t);\n}\nfloat uint2float(vec4 value) {\n\tuint intBits = \n\t\t(uint(value.r * 255.0) << 24u) |\n\t\t(uint(value.g * 255.0) << 16u) |\n\t\t(uint(value.b * 255.0) << 8u) |\n\t\tuint(value.a * 255.0);\n\treturn uintBitsToFloat(intBits);\n}\nvec4 float2vec4(float value) {\n\t#if defined(CAPS_TEXTURE_FLOAT_RENDERABLE)\n\t\treturn vec4(value, 1.0, 1.0, 1.0);\n\t#else\n\t\treturn float2uint(value);\n\t#endif\n}\n#endif\n`;var sP=`\nfloat dBlendModeFogFactor = 1.0;\n#if (FOG != NONE)\n\tuniform vec3 fog_color;\n\t#if (FOG == LINEAR)\n\t\tuniform float fog_start;\n\t\tuniform float fog_end;\n\t#else\n\t\tuniform float fog_density;\n\t#endif\n#endif\nfloat getFogFactor() {\n\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n\tfloat fogFactor = 0.0;\n\t#if (FOG == LINEAR)\n\t\tfogFactor = (fog_end - depth) / (fog_end - fog_start);\n\t#elif (FOG == EXP)\n\t\tfogFactor = exp(-depth * fog_density);\n\t#elif (FOG == EXP2)\n\t\tfogFactor = exp(-depth * depth * fog_density * fog_density);\n\t#endif\n\treturn clamp(fogFactor, 0.0, 1.0);\n}\nvec3 addFog(vec3 color) {\n\t#if (FOG != NONE)\n\t\treturn mix(fog_color * dBlendModeFogFactor, color, getFogFactor());\n\t#endif\n\treturn color;\n}\n`;var iP=`\nvec3 getFresnel(\n\t\tfloat cosTheta, \n\t\tfloat gloss, \n\t\tvec3 specularity\n#if defined(LIT_IRIDESCENCE)\n\t\t, vec3 iridescenceFresnel, \n\t\tfloat iridescenceIntensity\n#endif\n\t) {\n\tfloat fresnel = pow(1.0 - saturate(cosTheta), 5.0);\n\tfloat glossSq = gloss * gloss;\n\tvec3 ret = specularity + (max(vec3(glossSq), specularity) - specularity) * fresnel;\n#if defined(LIT_IRIDESCENCE)\n\treturn mix(ret, iridescenceFresnel, iridescenceIntensity);\n#else\n\treturn ret;\n#endif\t\n}\nfloat getFresnelCC(float cosTheta) {\n\tfloat fresnel = pow(1.0 - saturate(cosTheta), 5.0);\n\treturn 0.04 + (1.0 - 0.04) * fresnel;\n}\n`;var nP=`\nattribute vec2 vertex_position;\nvarying vec2 vUv0;\nvoid main(void)\n{\n\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\tvUv0 = vertex_position.xy * 0.5 + 0.5;\n}\n`;var rP=`\n#include "decodePS"\n#if (GAMMA == SRGB)\n\tfloat gammaCorrectInput(float color) {\n\t\treturn decodeGamma(color);\n\t}\n\tvec3 gammaCorrectInput(vec3 color) {\n\t\treturn decodeGamma(color);\n\t}\n\tvec4 gammaCorrectInput(vec4 color) {\n\t\treturn vec4(decodeGamma(color.xyz), color.w);\n\t}\n\tvec3 gammaCorrectOutput(vec3 color) {\n\t\treturn pow(color + 0.0000001, vec3(1.0 / 2.2));\n\t}\n#else\n\tfloat gammaCorrectInput(float color) {\n\t\treturn color;\n\t}\n\tvec3 gammaCorrectInput(vec3 color) {\n\t\treturn color;\n\t}\n\tvec4 gammaCorrectInput(vec4 color) {\n\t\treturn color;\n\t}\n\tvec3 gammaCorrectOutput(vec3 color) {\n\t\treturn color;\n\t}\n#endif\n`;var aP=`\n#ifdef STD_GLOSS_CONSTANT\nuniform float material_gloss;\n#endif\nvoid getGlossiness() {\n\tdGlossiness = 1.0;\n\t#ifdef STD_GLOSS_CONSTANT\n\tdGlossiness *= material_gloss;\n\t#endif\n\t#ifdef STD_GLOSS_TEXTURE\n\tdGlossiness *= texture2DBias({STD_GLOSS_TEXTURE_NAME}, {STD_GLOSS_TEXTURE_UV}, textureBias).{STD_GLOSS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_GLOSS_VERTEX\n\tdGlossiness *= saturate(vVertexColor.{STD_GLOSS_VERTEX_CHANNEL});\n\t#endif\n\t#ifdef STD_GLOSS_INVERT\n\tdGlossiness = 1.0 - dGlossiness;\n\t#endif\n\tdGlossiness += 0.0000001;\n}\n`;var oP=`\nuniform mat4 matrix_model;\nuniform mat4 matrix_view;\nuniform mat4 matrix_projection;\nbool initCenter(vec3 modelCenter, out SplatCenter center) {\n\tmat4 modelView = matrix_view * matrix_model;\n\tvec4 centerView = modelView * vec4(modelCenter, 1.0);\n\tif (centerView.z > 0.0) {\n\t\treturn false;\n\t}\n\tvec4 centerProj = matrix_projection * centerView;\n\t#if WEBGPU\n\t\tcenterProj.z = clamp(centerProj.z, 0, abs(centerProj.w));\n\t#else\n\t\tcenterProj.z = clamp(centerProj.z, -abs(centerProj.w), abs(centerProj.w));\n\t#endif\n\tcenter.view = centerView.xyz / centerView.w;\n\tcenter.proj = centerProj;\n\tcenter.projMat00 = matrix_projection[0][0];\n\tcenter.modelView = modelView;\n\treturn true;\n}\n`;var lP=`\nuniform mediump sampler2D splatColor;\nvec4 readColor(in SplatSource source) {\n\treturn texelFetch(splatColor, source.uv, 0);\n}\n`;var hP=`\nstruct SplatSource {\n\tuint order;\n\tuint id;\n\tivec2 uv;\n\tvec2 cornerUV;\n};\nstruct SplatCenter {\n\tvec3 view;\n\tvec4 proj;\n\tmat4 modelView;\n\tfloat projMat00;\n};\nstruct SplatCorner {\n\tvec2 offset;\n\tvec2 uv;\n\t#if GSPLAT_AA\n\t\tfloat aaFactor;\n\t#endif\n\tvec2 v;\n\tfloat dlen;\n};\n#include "gsplatEvalSHVS"\n#include "gsplatQuatToMat3VS"\n#if GSPLAT_COMPRESSED_DATA == true\n\t#include "gsplatCompressedDataVS"\n\t#if SH_COEFFS > 0\n\t\t#include "gsplatCompressedSHVS"\n\t#endif\n#elif GSPLAT_SOGS_DATA == true\n\t#include "gsplatSogsDataVS"\n\t#include "gsplatSogsColorVS"\n\t#if SH_COEFFS > 0\n\t\t#include "gsplatSogsSHVS"\n\t#endif\n#else\n\t#include "gsplatDataVS"\n\t#include "gsplatColorVS"\n\t#if SH_COEFFS > 0\n\t\t#include "gsplatSHVS"\n\t#endif\n#endif\n#include "gsplatSourceVS"\n#include "gsplatCenterVS"\n#include "gsplatCornerVS"\n#include "gsplatOutputVS"\nvoid clipCorner(inout SplatCorner corner, float alpha) {\n\tfloat clip = min(1.0, sqrt(-log(1.0 / 255.0 / alpha)) / 2.0);\n\tcorner.offset *= clip;\n\tcorner.uv *= clip;\n}\n`;var cP=`\nuniform highp usampler2D packedTexture;\nuniform highp sampler2D chunkTexture;\nvec4 chunkDataA;\nvec4 chunkDataB;\nvec4 chunkDataC;\nvec4 chunkDataD;\nvec4 chunkDataE;\nuvec4 packedData;\nvec3 unpack111011(uint bits) {\n\treturn vec3(\n\t\tfloat(bits >> 21u) / 2047.0,\n\t\tfloat((bits >> 11u) & 0x3ffu) / 1023.0,\n\t\tfloat(bits & 0x7ffu) / 2047.0\n\t);\n}\nvec4 unpack8888(uint bits) {\n\treturn vec4(\n\t\tfloat(bits >> 24u) / 255.0,\n\t\tfloat((bits >> 16u) & 0xffu) / 255.0,\n\t\tfloat((bits >> 8u) & 0xffu) / 255.0,\n\t\tfloat(bits & 0xffu) / 255.0\n\t);\n}\nconst float norm = 1.0 / (sqrt(2.0) * 0.5);\nvec4 unpackRotation(uint bits) {\n\tfloat a = (float((bits >> 20u) & 0x3ffu) / 1023.0 - 0.5) * norm;\n\tfloat b = (float((bits >> 10u) & 0x3ffu) / 1023.0 - 0.5) * norm;\n\tfloat c = (float(bits & 0x3ffu) / 1023.0 - 0.5) * norm;\n\tfloat m = sqrt(1.0 - (a * a + b * b + c * c));\n\tuint mode = bits >> 30u;\n\tif (mode == 0u) return vec4(m, a, b, c);\n\tif (mode == 1u) return vec4(a, m, b, c);\n\tif (mode == 2u) return vec4(a, b, m, c);\n\treturn vec4(a, b, c, m);\n}\nvec3 readCenter(SplatSource source) {\n\tuint w = uint(textureSize(chunkTexture, 0).x) / 5u;\n\tuint chunkId = source.id / 256u;\n\tivec2 chunkUV = ivec2((chunkId % w) * 5u, chunkId / w);\n\tchunkDataA = texelFetch(chunkTexture, chunkUV, 0);\n\tchunkDataB = texelFetch(chunkTexture, chunkUV + ivec2(1, 0), 0);\n\tchunkDataC = texelFetch(chunkTexture, chunkUV + ivec2(2, 0), 0);\n\tchunkDataD = texelFetch(chunkTexture, chunkUV + ivec2(3, 0), 0);\n\tchunkDataE = texelFetch(chunkTexture, chunkUV + ivec2(4, 0), 0);\n\tpackedData = texelFetch(packedTexture, source.uv, 0);\n\treturn mix(chunkDataA.xyz, vec3(chunkDataA.w, chunkDataB.xy), unpack111011(packedData.x));\n}\nvec4 readColor(in SplatSource source) {\n\tvec4 r = unpack8888(packedData.w);\n\treturn vec4(mix(chunkDataD.xyz, vec3(chunkDataD.w, chunkDataE.xy), r.rgb), r.w);\n}\nvec4 getRotation() {\n\treturn unpackRotation(packedData.y);\n}\nvec3 getScale() {\n\treturn exp(mix(vec3(chunkDataB.zw, chunkDataC.x), chunkDataC.yzw, unpack111011(packedData.z)));\n}\nvoid readCovariance(in SplatSource source, out vec3 covA, out vec3 covB) {\n\tmat3 rot = quatToMat3(getRotation());\n\tvec3 scale = getScale();\n\tmat3 M = transpose(mat3(\n\t\tscale.x * rot[0],\n\t\tscale.y * rot[1],\n\t\tscale.z * rot[2]\n\t));\n\tcovA = vec3(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));\n\tcovB = vec3(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));\n}\n`;var dP=`\n#if SH_BANDS > 0\nuniform highp usampler2D shTexture0;\nuniform highp usampler2D shTexture1;\nuniform highp usampler2D shTexture2;\nvec4 unpack8888s(in uint bits) {\n\treturn vec4((uvec4(bits) >> uvec4(0u, 8u, 16u, 24u)) & 0xffu) * (8.0 / 255.0) - 4.0;\n}\nvoid readSHData(in SplatSource source, out vec3 sh[15], out float scale) {\n\tuvec4 shData0 = texelFetch(shTexture0, source.uv, 0);\n\tuvec4 shData1 = texelFetch(shTexture1, source.uv, 0);\n\tuvec4 shData2 = texelFetch(shTexture2, source.uv, 0);\n\tvec4 r0 = unpack8888s(shData0.x);\n\tvec4 r1 = unpack8888s(shData0.y);\n\tvec4 r2 = unpack8888s(shData0.z);\n\tvec4 r3 = unpack8888s(shData0.w);\n\tvec4 g0 = unpack8888s(shData1.x);\n\tvec4 g1 = unpack8888s(shData1.y);\n\tvec4 g2 = unpack8888s(shData1.z);\n\tvec4 g3 = unpack8888s(shData1.w);\n\tvec4 b0 = unpack8888s(shData2.x);\n\tvec4 b1 = unpack8888s(shData2.y);\n\tvec4 b2 = unpack8888s(shData2.z);\n\tvec4 b3 = unpack8888s(shData2.w);\n\tsh[0] =  vec3(r0.x, g0.x, b0.x);\n\tsh[1] =  vec3(r0.y, g0.y, b0.y);\n\tsh[2] =  vec3(r0.z, g0.z, b0.z);\n\tsh[3] =  vec3(r0.w, g0.w, b0.w);\n\tsh[4] =  vec3(r1.x, g1.x, b1.x);\n\tsh[5] =  vec3(r1.y, g1.y, b1.y);\n\tsh[6] =  vec3(r1.z, g1.z, b1.z);\n\tsh[7] =  vec3(r1.w, g1.w, b1.w);\n\tsh[8] =  vec3(r2.x, g2.x, b2.x);\n\tsh[9] =  vec3(r2.y, g2.y, b2.y);\n\tsh[10] = vec3(r2.z, g2.z, b2.z);\n\tsh[11] = vec3(r2.w, g2.w, b2.w);\n\tsh[12] = vec3(r3.x, g3.x, b3.x);\n\tsh[13] = vec3(r3.y, g3.y, b3.y);\n\tsh[14] = vec3(r3.z, g3.z, b3.z);\n\tscale = 1.0;\n}\n#endif\n`;var uP=`\n\t#if SH_BANDS == 1\n\t\t#define SH_COEFFS 3\n\t#elif SH_BANDS == 2\n\t\t#define SH_COEFFS 8\n\t#elif SH_BANDS == 3\n\t\t#define SH_COEFFS 15\n\t#else\n\t\t#define SH_COEFFS 0\n\t#endif\n\t#if SH_BANDS > 0\n\tconst float SH_C1 = 0.4886025119029199f;\n\t#if SH_BANDS > 1\n\t\tconst float SH_C2_0 = 1.0925484305920792f;\n\t\tconst float SH_C2_1 = -1.0925484305920792f;\n\t\tconst float SH_C2_2 = 0.31539156525252005f;\n\t\tconst float SH_C2_3 = -1.0925484305920792f;\n\t\tconst float SH_C2_4 = 0.5462742152960396f;\n\t#endif\n\t#if SH_BANDS > 2\n\t\tconst float SH_C3_0 = -0.5900435899266435f;\n\t\tconst float SH_C3_1 = 2.890611442640554f;\n\t\tconst float SH_C3_2 = -0.4570457994644658f;\n\t\tconst float SH_C3_3 = 0.3731763325901154f;\n\t\tconst float SH_C3_4 = -0.4570457994644658f;\n\t\tconst float SH_C3_5 = 1.445305721320277f;\n\t\tconst float SH_C3_6 = -0.5900435899266435f;\n\t#endif\n\tvec3 evalSH(in vec3 sh[SH_COEFFS], in vec3 dir) {\n\t\tfloat x = dir.x;\n\t\tfloat y = dir.y;\n\t\tfloat z = dir.z;\n\t\tvec3 result = SH_C1 * (-sh[0] * y + sh[1] * z - sh[2] * x);\n\t\t#if SH_BANDS > 1\n\t\t\tfloat xx = x * x;\n\t\t\tfloat yy = y * y;\n\t\t\tfloat zz = z * z;\n\t\t\tfloat xy = x * y;\n\t\t\tfloat yz = y * z;\n\t\t\tfloat xz = x * z;\n\t\t\tresult +=\n\t\t\t\tsh[3] * (SH_C2_0 * xy) +\n\t\t\t\tsh[4] * (SH_C2_1 * yz) +\n\t\t\t\tsh[5] * (SH_C2_2 * (2.0 * zz - xx - yy)) +\n\t\t\t\tsh[6] * (SH_C2_3 * xz) +\n\t\t\t\tsh[7] * (SH_C2_4 * (xx - yy));\n\t\t#endif\n\t\t#if SH_BANDS > 2\n\t\t\tresult +=\n\t\t\t\tsh[8]  * (SH_C3_0 * y * (3.0 * xx - yy)) +\n\t\t\t\tsh[9]  * (SH_C3_1 * xy * z) +\n\t\t\t\tsh[10] * (SH_C3_2 * y * (4.0 * zz - xx - yy)) +\n\t\t\t\tsh[11] * (SH_C3_3 * z * (2.0 * zz - 3.0 * xx - 3.0 * yy)) +\n\t\t\t\tsh[12] * (SH_C3_4 * x * (4.0 * zz - xx - yy)) +\n\t\t\t\tsh[13] * (SH_C3_5 * z * (xx - yy)) +\n\t\t\t\tsh[14] * (SH_C3_6 * x * (xx - 3.0 * yy));\n\t\t#endif\n\t\treturn result;\n\t}\n\t#endif\n`;var fP=`\nmat3 quatToMat3(vec4 R) {\n\tvec4 R2 = R + R;\n\tfloat X = R2.x * R.w;\n\tvec4 Y  = R2.y * R;\n\tvec4 Z  = R2.z * R;\n\tfloat W = R2.w * R.w;\n\treturn mat3(\n\t\t1.0 - Z.z - W,\n\t\t\t  Y.z + X,\n\t\t\t  Y.w - Z.x,\n\t\t\t  Y.z - X,\n\t\t1.0 - Y.y - W,\n\t\t\t  Z.w + Y.x,\n\t\t\t  Y.w + Z.x,\n\t\t\t  Z.w - Y.x,\n\t\t1.0 - Y.y - Z.z\n\t);\n}\n`;var pP=`\nuniform mediump sampler2D sh0;\nuniform vec4 sh0_mins;\nuniform vec4 sh0_maxs;\nfloat SH_C0 = 0.28209479177387814;\nvec4 readColor(in SplatSource source) {\n\tvec4 clr = mix(sh0_mins, sh0_maxs, texelFetch(sh0, source.uv, 0));\n\treturn vec4(vec3(0.5) + clr.xyz * SH_C0, 1.0 / (1.0 + exp(-clr.w)));\n}\n`;var mP=`\nuniform highp usampler2D packedTexture;\nuniform vec3 means_mins;\nuniform vec3 means_maxs;\nuniform vec3 scales_mins;\nuniform vec3 scales_maxs;\nvec4 unpackU32(uint v) {\n\treturn vec4(\n\t\tfloat((v >> 24u) & 0xFFu) / 255.0,\n\t\tfloat((v >> 16u) & 0xFFu) / 255.0,\n\t\tfloat((v >> 8u) & 0xFFu) / 255.0,\n\t\tfloat(v & 0xFFu) / 255.0\n\t);\n}\nuvec4 packedSample;\nvec3 readCenter(SplatSource source) {\n\tpackedSample = texelFetch(packedTexture, source.uv, 0);\n\tvec3 l = unpackU32(packedSample.x).xyz;\n\tvec3 u = unpackU32(packedSample.y).xyz;\n\tvec3 n = (l * 255.0 + u * 255.0 * 256.0) / 65535.0;\n\tvec3 v = mix(means_mins, means_maxs, n);\n\treturn sign(v) * (exp(abs(v)) - 1.0);\n}\nconst float norm = 2.0 / sqrt(2.0);\nvoid readCovariance(in SplatSource source, out vec3 covA, out vec3 covB) {\n\tvec4 qdata = unpackU32(packedSample.z);\n\tvec3 sdata = unpackU32(packedSample.w).xyz;\n\tvec3 abc = (qdata.xyz - 0.5) * norm;\n\tfloat d = sqrt(max(0.0, 1.0 - dot(abc, abc)));\n\tuint mode = uint(qdata.w * 255.0 + 0.5) - 252u;\n\tvec4 quat = (mode == 0u) ? vec4(d, abc) :\n\t\t\t\t((mode == 1u) ? vec4(abc.x, d, abc.yz) :\n\t\t\t\t((mode == 2u) ? vec4(abc.xy, d, abc.z) : vec4(abc, d)));\n\tmat3 rot = quatToMat3(quat);\n\tvec3 scale = exp(mix(scales_mins, scales_maxs, sdata));\n\tmat3 M = transpose(mat3(\n\t\tscale.x * rot[0],\n\t\tscale.y * rot[1],\n\t\tscale.z * rot[2]\n\t));\n\tcovA = vec3(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));\n\tcovB = vec3(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));\n}\n`;var _P=`\nuniform highp sampler2D sh_centroids;\nuniform float shN_mins;\nuniform float shN_maxs;\nvoid readSHData(in SplatSource source, out vec3 sh[SH_COEFFS], out float scale) {\n\tivec2 t = ivec2(packedSample.x & 255u, packedSample.y & 255u);\n\tint n = t.x + t.y * 256;\n\tint u = (n % 64) * SH_COEFFS;\n\tint v = n / 64;\n\tfor (int i = 0; i < SH_COEFFS; i++) {\n\t\tsh[i] = mix(vec3(shN_mins), vec3(shN_maxs), texelFetch(sh_centroids, ivec2(u + i, v), 0).xyz);\n\t}\n\tscale = 1.0;\n}\n`;var gP=`\nuniform vec2 viewport;\nuniform vec4 camera_params;\nbool initCorner(SplatSource source, SplatCenter center, out SplatCorner corner) {\n\tvec3 covA, covB;\n\treadCovariance(source, covA, covB);\n\tmat3 Vrk = mat3(\n\t\tcovA.x, covA.y, covA.z, \n\t\tcovA.y, covB.x, covB.y,\n\t\tcovA.z, covB.y, covB.z\n\t);\n\tfloat focal = viewport.x * center.projMat00;\n\tvec3 v = camera_params.w == 1.0 ? vec3(0.0, 0.0, 1.0) : center.view.xyz;\n\tfloat J1 = focal / v.z;\n\tvec2 J2 = -J1 / v.z * v.xy;\n\tmat3 J = mat3(\n\t\tJ1, 0.0, J2.x, \n\t\t0.0, J1, J2.y, \n\t\t0.0, 0.0, 0.0\n\t);\n\tmat3 W = transpose(mat3(center.modelView));\n\tmat3 T = W * J;\n\tmat3 cov = transpose(T) * Vrk * T;\n\t#if GSPLAT_AA\n\t\tfloat detOrig = cov[0][0] * cov[1][1] - cov[0][1] * cov[0][1];\n\t\tfloat detBlur = (cov[0][0] + 0.3) * (cov[1][1] + 0.3) - cov[0][1] * cov[0][1];\n\t\tcorner.aaFactor = sqrt(max(detOrig / detBlur, 0.0));\n\t#endif\n\tfloat diagonal1 = cov[0][0] + 0.3;\n\tfloat offDiagonal = cov[0][1];\n\tfloat diagonal2 = cov[1][1] + 0.3;\n\tfloat mid = 0.5 * (diagonal1 + diagonal2);\n\tfloat radius = length(vec2((diagonal1 - diagonal2) / 2.0, offDiagonal));\n\tfloat lambda1 = mid + radius;\n\tfloat lambda2 = max(mid - radius, 0.1);\n\tfloat vmin = min(1024.0, min(viewport.x, viewport.y));\n\tfloat l1 = 2.0 * min(sqrt(2.0 * lambda1), vmin);\n\tfloat l2 = 2.0 * min(sqrt(2.0 * lambda2), vmin);\n\tif (l1 < 2.0 && l2 < 2.0) {\n\t\treturn false;\n\t}\n\tvec2 c = center.proj.ww / viewport;\n\tif (any(greaterThan(abs(center.proj.xy) - vec2(max(l1, l2)) * c, center.proj.ww))) {\n\t\treturn false;\n\t}\n\tvec2 diagonalVector = normalize(vec2(offDiagonal, lambda1 - diagonal1));\n\tvec2 v1 = l1 * diagonalVector;\n\tvec2 v2 = l2 * vec2(diagonalVector.y, -diagonalVector.x);\n\tcorner.offset = (source.cornerUV.x * v1 + source.cornerUV.y * v2) * c;\n\tcorner.uv = source.cornerUV;\n\treturn true;\n}\n`;var vP=`\nuniform highp usampler2D transformA;\nuniform highp sampler2D transformB;\nuint tAw;\nvec3 readCenter(SplatSource source) {\n\tuvec4 tA = texelFetch(transformA, source.uv, 0);\n\ttAw = tA.w;\n\treturn uintBitsToFloat(tA.xyz);\n}\nvec4 unpackRotation(vec3 packed) {\n\treturn vec4(packed.xyz, sqrt(max(0.0, 1.0 - dot(packed, packed))));\n}\nvoid readCovariance(in SplatSource source, out vec3 covA, out vec3 covB) {\n\tvec4 tB = texelFetch(transformB, source.uv, 0);\n\tmat3 rot = quatToMat3(unpackRotation(vec3(unpackHalf2x16(tAw), tB.w)).wxyz);\n\tvec3 scale = tB.xyz;\n\t\n\tmat3 M = transpose(mat3(\n\t\tscale.x * rot[0],\n\t\tscale.y * rot[1],\n\t\tscale.z * rot[2]\n\t));\n\tcovA = vec3(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));\n\tcovB = vec3(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));\n}\n`;var yP=`\n#include "tonemappingPS"\n#include "decodePS"\n#include "gammaPS"\nvec3 prepareOutputFromGamma(vec3 gammaColor) {\n\t#if TONEMAP == NONE\n\t\t#if GAMMA == NONE\n\t\t\treturn decodeGamma(gammaColor);\n\t\t#else\n\t\t\treturn gammaColor;\n\t\t#endif\n\t#else\n\t\treturn gammaCorrectOutput(toneMap(decodeGamma(gammaColor)));\n\t#endif\n}\n`;var SP=`\n#ifndef DITHER_NONE\n\t#include "bayerPS"\n\t#include "opacityDitherPS"\n\tvarying float id;\n#endif\n#ifdef PICK_PASS\n\t#include "pickPS"\n#endif\n#if defined(SHADOW_PASS) || defined(PICK_PASS) || defined(PREPASS_PASS)\n\tuniform float alphaClip;\n#endif\n#ifdef PREPASS_PASS\n\tvarying float vLinearDepth;\n\t#include "floatAsUintPS"\n#endif\nconst float  EXP_A\t  = 12102203.0;\nconst int\tEXP_BC_RMS = 1064866808;\nfloat fastExp(float x) {\n\tint i = int(EXP_A * x) + EXP_BC_RMS;\n\treturn intBitsToFloat(i);\n}\nvarying mediump vec2 gaussianUV;\nvarying mediump vec4 gaussianColor;\nvoid main(void) {\n\tmediump float A = dot(gaussianUV, gaussianUV);\n\tif (A > 1.0) {\n\t\tdiscard;\n\t}\n\tmediump float alpha = fastExp(-A * 4.0) * gaussianColor.a;\n\t#if defined(SHADOW_PASS) || defined(PICK_PASS) || defined(PREPASS_PASS)\n\t\tif (alpha < alphaClip) {\n\t\t\tdiscard;\n\t\t}\n\t#endif\n\t#ifdef PICK_PASS\n\t\tgl_FragColor = getPickOutput();\n\t#elif SHADOW_PASS\n\t\tgl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n\t#elif PREPASS_PASS\n\t\tgl_FragColor = float2vec4(vLinearDepth);\n\t#else\n\t\tif (alpha < 1.0 / 255.0) {\n\t\t\tdiscard;\n\t\t}\n\t\t#ifndef DITHER_NONE\n\t\t\topacityDither(alpha, id * 0.013);\n\t\t#endif\n\t\tgl_FragColor = vec4(gaussianColor.xyz * alpha, alpha);\n\t#endif\n}\n`;var xP=`\n#if SH_BANDS > 0\nvec3 unpack111011s(uint bits) {\n\treturn vec3((uvec3(bits) >> uvec3(21u, 11u, 0u)) & uvec3(0x7ffu, 0x3ffu, 0x7ffu)) / vec3(2047.0, 1023.0, 2047.0) * 2.0 - 1.0;\n}\nvoid fetchScale(in uvec4 t, out float scale, out vec3 a, out vec3 b, out vec3 c) {\n\tscale = uintBitsToFloat(t.x);\n\ta = unpack111011s(t.y);\n\tb = unpack111011s(t.z);\n\tc = unpack111011s(t.w);\n}\nvoid fetch(in uvec4 t, out vec3 a, out vec3 b, out vec3 c, out vec3 d) {\n\ta = unpack111011s(t.x);\n\tb = unpack111011s(t.y);\n\tc = unpack111011s(t.z);\n\td = unpack111011s(t.w);\n}\nvoid fetch(in uint t, out vec3 a) {\n\ta = unpack111011s(t);\n}\n#if SH_BANDS == 1\n\tuniform highp usampler2D splatSH_1to3;\n\tvoid readSHData(in SplatSource source, out vec3 sh[3], out float scale) {\n\t\tfetchScale(texelFetch(splatSH_1to3, source.uv, 0), scale, sh[0], sh[1], sh[2]);\n\t}\n#elif SH_BANDS == 2\n\tuniform highp usampler2D splatSH_1to3;\n\tuniform highp usampler2D splatSH_4to7;\n\tuniform highp usampler2D splatSH_8to11;\n\tvoid readSHData(in SplatSource source, out vec3 sh[8], out float scale) {\n\t\tfetchScale(texelFetch(splatSH_1to3, source.uv, 0), scale, sh[0], sh[1], sh[2]);\n\t\tfetch(texelFetch(splatSH_4to7, source.uv, 0), sh[3], sh[4], sh[5], sh[6]);\n\t\tfetch(texelFetch(splatSH_8to11, source.uv, 0).x, sh[7]);\n\t}\n#else\n\tuniform highp usampler2D splatSH_1to3;\n\tuniform highp usampler2D splatSH_4to7;\n\tuniform highp usampler2D splatSH_8to11;\n\tuniform highp usampler2D splatSH_12to15;\n\tvoid readSHData(in SplatSource source, out vec3 sh[15], out float scale) {\n\t\tfetchScale(texelFetch(splatSH_1to3, source.uv, 0), scale, sh[0], sh[1], sh[2]);\n\t\tfetch(texelFetch(splatSH_4to7, source.uv, 0), sh[3], sh[4], sh[5], sh[6]);\n\t\tfetch(texelFetch(splatSH_8to11, source.uv, 0), sh[7], sh[8], sh[9], sh[10]);\n\t\tfetch(texelFetch(splatSH_12to15, source.uv, 0), sh[11], sh[12], sh[13], sh[14]);\n\t}\n#endif\n#endif\n`;var TP=`\nattribute vec3 vertex_position;\nattribute uint vertex_id_attrib;\nuniform uint numSplats;\nuniform highp usampler2D splatOrder;\nbool initSource(out SplatSource source) {\n\tuint w = uint(textureSize(splatOrder, 0).x);\n\tsource.order = vertex_id_attrib + uint(vertex_position.z);\n\tif (source.order >= numSplats) {\n\t\treturn false;\n\t}\n\tivec2 orderUV = ivec2(source.order % w, source.order / w);\n\tsource.id = texelFetch(splatOrder, orderUV, 0).r;\n\tsource.uv = ivec2(source.id % w, source.id / w);\n\tsource.cornerUV = vertex_position.xy;\n\treturn true;\n}\n`;var wP=`\n#include "gsplatCommonVS"\nvarying mediump vec2 gaussianUV;\nvarying mediump vec4 gaussianColor;\n#ifndef DITHER_NONE\n\tvarying float id;\n#endif\nmediump vec4 discardVec = vec4(0.0, 0.0, 2.0, 1.0);\n#ifdef PREPASS_PASS\n\tvarying float vLinearDepth;\n#endif\nvoid main(void) {\n\tSplatSource source;\n\tif (!initSource(source)) {\n\t\tgl_Position = discardVec;\n\t\treturn;\n\t}\n\tvec3 modelCenter = readCenter(source);\n\tSplatCenter center;\n\tif (!initCenter(modelCenter, center)) {\n\t\tgl_Position = discardVec;\n\t\treturn;\n\t}\n\tSplatCorner corner;\n\tif (!initCorner(source, center, corner)) {\n\t\tgl_Position = discardVec;\n\t\treturn;\n\t}\n\tvec4 clr = readColor(source);\n\t#if GSPLAT_AA\n\t\tclr.a *= corner.aaFactor;\n\t#endif\n\t#if SH_BANDS > 0\n\t\tvec3 dir = normalize(center.view * mat3(center.modelView));\n\t\tvec3 sh[SH_COEFFS];\n\t\tfloat scale;\n\t\treadSHData(source, sh, scale);\n\t\tclr.xyz += evalSH(sh, dir) * scale;\n\t#endif\n\tclipCorner(corner, clr.w);\n\tgl_Position = center.proj + vec4(corner.offset, 0, 0);\n\tgaussianUV = corner.uv;\n\tgaussianColor = vec4(prepareOutputFromGamma(max(clr.xyz, 0.0)), clr.w);\n\t#ifndef DITHER_NONE\n\t\tid = float(source.id);\n\t#endif\n\t#ifdef PREPASS_PASS\n\t\tvLinearDepth = -center.view.z;\n\t#endif\n}\n`;var bP=`\n\tattribute vec2 aPosition;\n\tvarying vec2 uv0;\n\tvoid main(void)\n\t{\n\t\tgl_Position = vec4(aPosition, 0.0, 1.0);\n\t\tuv0 = getImageEffectUV((aPosition.xy + 1.0) * 0.5);\n\t}\n`;var EP=`\n\t\t#include "gammaPS"\n\t\tvarying vec4 color;\n\t\tvoid main(void) {\n\t\t\tgl_FragColor = vec4(gammaCorrectOutput(decodeGamma(color.rgb)), color.a);\n\t\t}\n`;var AP=`\n\tattribute vec4 vertex_position;\n\tattribute vec4 vertex_color;\n\tuniform mat4 matrix_model;\n\tuniform mat4 matrix_viewProjection;\n\tvarying vec4 color;\n\tvoid main(void) {\n\t\tcolor = vertex_color;\n\t\tgl_Position = matrix_viewProjection * matrix_model * vertex_position;\n\t}\n`;var CP=`\nuniform float material_iridescenceRefractionIndex;\nfloat iridescence_iorToFresnel(float transmittedIor, float incidentIor) {\n\treturn pow((transmittedIor - incidentIor) / (transmittedIor + incidentIor), 2.0);\n}\nvec3 iridescence_iorToFresnel(vec3 transmittedIor, float incidentIor) {\n\treturn pow((transmittedIor - vec3(incidentIor)) / (transmittedIor + vec3(incidentIor)), vec3(2.0));\n}\nvec3 iridescence_fresnelToIor(vec3 f0) {\n\tvec3 sqrtF0 = sqrt(f0);\n\treturn (vec3(1.0) + sqrtF0) / (vec3(1.0) - sqrtF0);\n}\nvec3 iridescence_sensitivity(float opd, vec3 shift) {\n\tfloat PI = 3.141592653589793;\n\tfloat phase = 2.0 * PI * opd * 1.0e-9;\n\tconst vec3 val = vec3(5.4856e-13, 4.4201e-13, 5.2481e-13);\n\tconst vec3 pos = vec3(1.6810e+06, 1.7953e+06, 2.2084e+06);\n\tconst vec3 var = vec3(4.3278e+09, 9.3046e+09, 6.6121e+09);\n\tvec3 xyz = val * sqrt(2.0 * PI * var) * cos(pos * phase + shift) * exp(-pow(phase, 2.0) * var);\n\txyz.x += 9.7470e-14 * sqrt(2.0 * PI * 4.5282e+09) * cos(2.2399e+06 * phase + shift[0]) * exp(-4.5282e+09 * pow(phase, 2.0));\n\txyz /= vec3(1.0685e-07);\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t3.2404542, -0.9692660,  0.0556434,\n\t   -1.5371385,  1.8760108, -0.2040259,\n\t   -0.4985314,  0.0415560,  1.0572252\n\t);\n\treturn XYZ_TO_REC709 * xyz;\n}\nfloat iridescence_fresnel(float cosTheta, float f0) {\n\tfloat x = clamp(1.0 - cosTheta, 0.0, 1.0);\n\tfloat x2 = x * x;\n\tfloat x5 = x * x2 * x2;\n\treturn f0 + (1.0 - f0) * x5;\n} \nvec3 iridescence_fresnel(float cosTheta, vec3 f0) {\n\tfloat x = clamp(1.0 - cosTheta, 0.0, 1.0);\n\tfloat x2 = x * x;\n\tfloat x5 = x * x2 * x2; \n\treturn f0 + (vec3(1.0) - f0) * x5;\n}\nvec3 calcIridescence(float outsideIor, float cosTheta, vec3 base_f0, float iridescenceThickness) {\n\tfloat PI = 3.141592653589793;\n\tfloat iridescenceIor = mix(outsideIor, material_iridescenceRefractionIndex, smoothstep(0.0, 0.03, iridescenceThickness));\n\tfloat sinTheta2Sq = pow(outsideIor / iridescenceIor, 2.0) * (1.0 - pow(cosTheta, 2.0));\n\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\tif (cosTheta2Sq < 0.0) {\n\t\treturn vec3(1.0);\n\t}\n\tfloat cosTheta2 = sqrt(cosTheta2Sq);\n\tfloat r0 = iridescence_iorToFresnel(iridescenceIor, outsideIor);\n\tfloat r12 = iridescence_fresnel(cosTheta, r0);\n\tfloat r21 = r12;\n\tfloat t121 = 1.0 - r12;\n\tfloat phi12 = iridescenceIor < outsideIor ? PI : 0.0;\n\tfloat phi21 = PI - phi12;\n\tvec3 baseIor = iridescence_fresnelToIor(base_f0 + vec3(0.0001));\n\tvec3 r1 = iridescence_iorToFresnel(baseIor, iridescenceIor);\n\tvec3 r23 = iridescence_fresnel(cosTheta2, r1);\n\tvec3 phi23 = vec3(0.0);\n\tif (baseIor[0] < iridescenceIor) phi23[0] = PI;\n\tif (baseIor[1] < iridescenceIor) phi23[1] = PI;\n\tif (baseIor[2] < iridescenceIor) phi23[2] = PI;\n\tfloat opd = 2.0 * iridescenceIor * iridescenceThickness * cosTheta2;\n\tvec3 phi = vec3(phi21) + phi23; \n\tvec3 r123Sq = clamp(r12 * r23, 1e-5, 0.9999);\n\tvec3 r123 = sqrt(r123Sq);\n\tvec3 rs = pow(t121, 2.0) * r23 / (1.0 - r123Sq);\n\tvec3 c0 = r12 + rs;\n\tvec3 i = c0;\n\tvec3 cm = rs - t121;\n\tfor (int m = 1; m <= 2; m++) {\n\t\tcm *= r123;\n\t\tvec3 sm = 2.0 * iridescence_sensitivity(float(m) * opd, float(m) * phi);\n\t\ti += cm * sm;\n\t}\n\treturn max(i, vec3(0.0));\n}\nvec3 getIridescence(float cosTheta, vec3 specularity, float iridescenceThickness) {\n\treturn calcIridescence(1.0, cosTheta, specularity, iridescenceThickness);\n}\n`;var PP=`\n#ifdef STD_IRIDESCENCE_CONSTANT\nuniform float material_iridescence;\n#endif\nvoid getIridescence() {\n\tfloat iridescence = 1.0;\n\t#ifdef STD_IRIDESCENCE_CONSTANT\n\tiridescence *= material_iridescence;\n\t#endif\n\t#ifdef STD_IRIDESCENCE_TEXTURE\n\tiridescence *= texture2DBias({STD_IRIDESCENCE_TEXTURE_NAME}, {STD_IRIDESCENCE_TEXTURE_UV}, textureBias).{STD_IRIDESCENCE_TEXTURE_CHANNEL};\n\t#endif\n\tdIridescence = iridescence; \n}\n`;var LP=`\nuniform float material_iridescenceThicknessMax;\n#ifdef STD_IRIDESCENCETHICKNESS_TEXTURE\nuniform float material_iridescenceThicknessMin;\n#endif\nvoid getIridescenceThickness() {\n\t#ifdef STD_IRIDESCENCETHICKNESS_TEXTURE\n\t\tfloat blend = texture2DBias({STD_IRIDESCENCETHICKNESS_TEXTURE_NAME}, {STD_IRIDESCENCETHICKNESS_TEXTURE_UV}, textureBias).{STD_IRIDESCENCETHICKNESS_TEXTURE_CHANNEL};\n\t\tfloat iridescenceThickness = mix(material_iridescenceThicknessMin, material_iridescenceThicknessMax, blend);\n\t#else\n\t\tfloat iridescenceThickness = material_iridescenceThicknessMax;\n\t#endif\n\tdIridescenceThickness = iridescenceThickness; \n}\n`;var DP=`\n#ifdef STD_IOR_CONSTANT\nuniform float material_refractionIndex;\n#endif\nvoid getIor() {\n#ifdef STD_IOR_CONSTANT\n\tdIor = material_refractionIndex;\n#else\n\tdIor = 1.0 / 1.5;\n#endif\n}\n`;var MP=`\n#if defined(LIGHT{i})\n\tuniform vec3 light{i}_color;\n\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\tuniform vec3 light{i}_direction;\n\t#else\n\t\t#define LIT_CODE_LIGHTS_POINT\n\t\tuniform vec3 light{i}_position;\n\t\tuniform float light{i}_radius;\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t#define LIT_CODE_LIGHTS_SPOT\n\t\t\tuniform vec3 light{i}_direction;\n\t\t\tuniform float light{i}_innerConeAngle;\n\t\t\tuniform float light{i}_outerConeAngle;\n\t\t#endif\n\t#endif\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#define LIT_CODE_FALLOFF_SQUARED\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tuniform vec3 light{i}_position;\n\t\t#endif\n\t\tuniform vec3 light{i}_halfWidth;\n\t\tuniform vec3 light{i}_halfHeight;\n\t#else\n\t\t#if LIGHT{i}FALLOFF == LINEAR\n\t\t\t#define LIT_CODE_FALLOFF_LINEAR\n\t\t#endif\n\t\t#if LIGHT{i}FALLOFF == INVERSESQUARED\n\t\t\t#define LIT_CODE_FALLOFF_SQUARED\n\t\t#endif\n\t#endif\n\t#if defined(LIGHT{i}CASTSHADOW)\n\t\tuniform mat4 light{i}_shadowMatrix;\n\t\tuniform float light{i}_shadowIntensity;\n\t\tuniform vec4 light{i}_shadowParams;\n\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\tuniform float light{i}_shadowSearchArea;\n\t\t\tuniform vec4 light{i}_cameraParams;\n\t\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\t\tuniform vec4 light{i}_softShadowParams;\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tuniform mat4 light{i}_shadowMatrixPalette[4];\n\t\t\tuniform vec4 light{i}_shadowCascadeDistances;\n\t\t\tuniform int light{i}_shadowCascadeCount;\n\t\t\tuniform float light{i}_shadowCascadeBlend;\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\t#if defined(LIGHT{i}SHADOW_PCF)\n\t\t\t\tuniform samplerCubeShadow light{i}_shadowMap;\n\t\t\t#else\n\t\t\t\tuniform samplerCube light{i}_shadowMap;\n\t\t\t#endif\n\t\t#else\n\t\t\t#if defined(LIGHT{i}SHADOW_PCF)\n\t\t\t\tuniform sampler2DShadow light{i}_shadowMap;\n\t\t\t#else\n\t\t\t\tuniform sampler2D light{i}_shadowMap;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\t#if defined(LIGHT{i}COOKIE)\n\t\t#define LIT_CODE_COOKIE\n\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\tuniform samplerCube light{i}_cookie;\n\t\t\tuniform float light{i}_cookieIntensity;\n\t\t\t#if !defined(LIGHT{i}CASTSHADOW)\n\t\t\t\tuniform mat4 light{i}_shadowMatrix;\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\tuniform sampler2D light{i}_cookie;\n\t\t\tuniform float light{i}_cookieIntensity;\n\t\t\t#if !defined(LIGHT{i}CASTSHADOW)\n\t\t\t\tuniform mat4 light{i}_shadowMatrix;\n\t\t\t#endif\n\t\t\t#if defined(LIGHT{i}COOKIE_TRANSFORM)\n\t\t\t\tuniform vec4 light{i}_cookieMatrix;\n\t\t\t\tuniform vec2 light{i}_cookieOffset;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n#endif\n`;var IP=`\nfloat getLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm) {\n\treturn max(dot(worldNormal, -lightDirNorm), 0.0);\n}\n`;var RP=`\nvec3 evalOmniLight(vec3 lightPosW) {\n\treturn vPositionW - lightPosW;\n}\n`;var OP=`\n#if defined(LIGHT{i})\n\tevaluateLight{i}(\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\tiridescenceFresnel\n\t\t#endif\n\t);\n#endif\n`;var FP=`\n#if defined(LIGHT{i})\nvoid evaluateLight{i}(\n\t#if defined(LIT_IRIDESCENCE)\n\t\tvec3 iridescenceFresnel\n\t#endif\n) {\n\tvec3 lightColor = light{i}_color;\n\t#if LIGHT{i}TYPE == DIRECTIONAL && !defined(LIT_SHADOW_CATCHER)\n\t\tif (all(equal(lightColor, vec3(0.0)))) {\n\t\t\treturn;\n\t\t}\n\t#endif\n\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\tdLightDirNormW = light{i}_direction;\n\t\tdAtten = 1.0;\n\t#else\n\t\t\n\t\tvec3 lightDirW = evalOmniLight(light{i}_position);\n\t\tdLightDirNormW = normalize(lightDirW);\n\t\t#if defined(LIGHT{i}COOKIE)\n\t\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t\t#ifdef LIGHT{i}COOKIE_FALLOFF\n\t\t\t\t\t#ifdef LIGHT{i}COOKIE_TRANSFORM\n\t\t\t\t\t\tvec3 cookieAttenuation = getCookie2DXform(light{i}_cookie, light{i}_shadowMatrix, light{i}_cookieIntensity, light{i}_cookieMatrix, light{i}_cookieOffset).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#else\n\t\t\t\t\t\tvec3 cookieAttenuation = getCookie2D(light{i}_cookie, light{i}_shadowMatrix, light{i}_cookieIntensity).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#endif\n\t\t\t\t#else\n\t\t\t\t\t#ifdef LIGHT{i}COOKIE_TRANSFORM\n\t\t\t\t\t\tvec3 cookieAttenuation = getCookie2DClipXform(light{i}_cookie, light{i}_shadowMatrix, light{i}_cookieIntensity, light{i}_cookieMatrix, light{i}_cookieOffset).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#else\n\t\t\t\t\t\tvec3 cookieAttenuation = getCookie2DClip(light{i}_cookie, light{i}_shadowMatrix, light{i}_cookieIntensity).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\t\tvec3 cookieAttenuation = getCookieCube(light{i}_cookie, light{i}_shadowMatrix, light{i}_cookieIntensity).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t#endif\n\t\t\tlightColor *= cookieAttenuation;\n\t\t#endif\n\t\t#if LIGHT{i}SHAPE == PUNCTUAL\n\t\t\t#if LIGHT{i}FALLOFF == LINEAR\n\t\t\t\tdAtten = getFalloffLinear(light{i}_radius, lightDirW);\n\t\t\t#else\n\t\t\t\tdAtten = getFalloffInvSquared(light{i}_radius, lightDirW);\n\t\t\t#endif\n\t\t#else\n\t\t\tdAtten = getFalloffWindow(light{i}_radius, lightDirW);\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t#if !defined(LIGHT{i}COOKIE) || defined(LIGHT{i}COOKIE_FALLOFF)\n\t\t\t\tdAtten *= getSpotEffect(light{i}_direction, light{i}_innerConeAngle, light{i}_outerConeAngle, dLightDirNormW);\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\tif (dAtten < 0.00001) {\n\t\treturn;\n\t}\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\tcalcRectLightValues(light{i}_position, light{i}_halfWidth, light{i}_halfHeight);\n\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\tcalcDiskLightValues(light{i}_position, light{i}_halfWidth, light{i}_halfHeight);\n\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\tcalcSphereLightValues(light{i}_position, light{i}_halfWidth, light{i}_halfHeight);\n\t\t#endif\n\t#endif\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tfloat attenDiffuse = getLightDiffuse(litArgs_worldNormal, dViewDirW, dLightDirNormW);\n\t\t#else\n\t\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\t\tfloat attenDiffuse = getRectLightDiffuse(litArgs_worldNormal, dViewDirW, lightDirW, dLightDirNormW) * 16.0;\n\t\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\t\tfloat attenDiffuse = getDiskLightDiffuse(litArgs_worldNormal, dViewDirW, lightDirW, dLightDirNormW) * 16.0;\n\t\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\t\tfloat attenDiffuse = getSphereLightDiffuse(litArgs_worldNormal, dViewDirW, lightDirW, dLightDirNormW) * 16.0;\n\t\t\t#endif\n\t\t#endif\n\t#else\n\t\tdAtten *= getLightDiffuse(litArgs_worldNormal, vec3(0.0), dLightDirNormW);\n\t#endif\n\t#ifdef LIGHT{i}CASTSHADOW\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tfloat shadow = getShadow{i}(vec3(0.0));\n\t\t#else\n\t\t\tfloat shadow = getShadow{i}(lightDirW);\n\t\t#endif\n\t\tshadow = mix(1.0, shadow, light{i}_shadowIntensity);\n\t\tdAtten *= shadow;\n\t\t#if defined(LIT_SHADOW_CATCHER) && LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tdShadowCatcher *= shadow;\n\t\t#endif\t\t\t\n\t#endif\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#ifdef LIT_SPECULAR\n\t\t\tdDiffuseLight += ((attenDiffuse * dAtten) * lightColor) * (1.0 - dLTCSpecFres);\n\t\t#else\n\t\t\tdDiffuseLight += (attenDiffuse * dAtten) * lightColor;\n\t\t#endif\t\t\t\t\t\t\n\t#else\n\t\t#if defined(AREA_LIGHTS) && defined(LIT_SPECULAR)\n\t\t\tdDiffuseLight += (dAtten * lightColor) * (1.0 - litArgs_specularity);\n\t\t#else\n\t\t\tdDiffuseLight += dAtten * lightColor;\n\t\t#endif\n\t#endif\n\t#ifdef LIGHT{i}AFFECT_SPECULARITY\n\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\t\t\tccSpecularLight += ccLTCSpecFres * getRectLightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * lightColor;\n\t\t\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\t\t\tccSpecularLight += ccLTCSpecFres * getDiskLightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * lightColor;\n\t\t\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\t\t\tccSpecularLight += ccLTCSpecFres * getSphereLightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * lightColor;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\t\t\tdSpecularLight += dLTCSpecFres * getRectLightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * lightColor;\n\t\t\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\t\t\tdSpecularLight += dLTCSpecFres * getDiskLightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * lightColor;\n\t\t\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\t\t\tdSpecularLight += dLTCSpecFres * getSphereLightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * lightColor;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t#else\n\t\t\t#if LIGHT{i}TYPE == DIRECTIONAL && LIT_FRESNEL_MODEL != NONE\n\t\t\t\t#define LIGHT{i}FRESNEL\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvec3 halfDirW = normalize(-dLightDirNormW + dViewDirW);\n\t\t\t#endif\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tvec3 lightspecularCC = getLightSpecular(halfDirW, ccReflDirW, litArgs_clearcoat_worldNormal, dViewDirW, dLightDirNormW, litArgs_clearcoat_gloss, dTBN) * dAtten * lightColor;\n\t\t\t\t#ifdef LIGHT{i}FRESNEL\n\t\t\t\t\tlightspecularCC *= getFresnelCC(dot(dViewDirW, halfDirW));\n\t\t\t\t#endif\n\t\t\t\tccSpecularLight += lightspecularCC;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\tsSpecularLight += getLightSpecularSheen(halfDirW, litArgs_worldNormal, dViewDirW, dLightDirNormW, litArgs_sheen_gloss) * dAtten * lightColor;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvec3 lightSpecular = getLightSpecular(halfDirW, dReflDirW, litArgs_worldNormal, dViewDirW, dLightDirNormW, litArgs_gloss, dTBN) * dAtten * lightColor;\n\t\t\t\t#ifdef LIGHT{i}FRESNEL\n\t\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\tlightSpecular *= getFresnel(dot(dViewDirW, halfDirW), litArgs_gloss, litArgs_specularity, iridescenceFresnel, litArgs_iridescence_intensity);\n\t\t\t\t\t#else\n\t\t\t\t\t\tlightSpecular *= getFresnel(dot(dViewDirW, halfDirW), litArgs_gloss, litArgs_specularity);\n\t\t\t\t\t#endif\n\t\t\t\t#else\n\t\t\t\t\tlightSpecular *= litArgs_specularity;\n\t\t\t\t#endif\n\t\t\t\t\n\t\t\t\tdSpecularLight += lightSpecular;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n}\n#endif\n`;var NP=`\n#ifdef LIGHT{i}CASTSHADOW\n\tvec3 getShadowSampleCoord{i}(mat4 shadowTransform, vec4 shadowParams, vec3 worldPosition, vec3 lightPos, inout vec3 lightDir, vec3 lightDirNorm, vec3 normal) {\n\t\tvec3 surfacePosition = worldPosition;\n\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_POINT\n\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t\tfloat distScale = length(lightDir);\n\t\t\t\tsurfacePosition = surfacePosition + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\t\t\t\tlightDir = surfacePosition - lightPos;\n\t\t\t\treturn lightDir;\n\t\t\t#endif\n\t\t#else\n\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_SOURCE_ZBUFFER\n\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t\t\tsurfacePosition = surfacePosition + normal * shadowParams.y;\n\t\t\t\t#endif\n\t\t\t#else\n\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_ORTHO\n\t\t\t\t\t\tfloat distScale = 1.0;\n\t\t\t\t\t#else\n\t\t\t\t\t\tfloat distScale = abs(dot(vPositionW - lightPos, lightDirNorm));\n\t\t\t\t\t#endif\n\t\t\t\t\tsurfacePosition = surfacePosition + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\tvec4 positionInShadowSpace = shadowTransform * vec4(surfacePosition, 1.0);\n\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_ORTHO\n\t\t\t\tpositionInShadowSpace.z = saturate(positionInShadowSpace.z) - 0.0001;\n\t\t\t#else\n\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_SOURCE_ZBUFFER\n\t\t\t\t\tpositionInShadowSpace.xyz /= positionInShadowSpace.w;\n\t\t\t\t#else\n\t\t\t\t\tpositionInShadowSpace.xy /= positionInShadowSpace.w;\n\t\t\t\t\tpositionInShadowSpace.z = length(lightDir) * shadowParams.w;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef SHADOW_SAMPLE_Z_BIAS\n\t\t\t#endif\n\t\t\tsurfacePosition = positionInShadowSpace.xyz;\n\t\t#endif\n\t\treturn surfacePosition;\n\t}\n\tfloat getShadow{i}(vec3 lightDirW) {\n\t\t#ifdef LIGHT{i}_SHADOW_CASCADES\n\t\t\tint cascadeIndex = getShadowCascadeIndex(light{i}_shadowCascadeDistances, light{i}_shadowCascadeCount);\n\t\t\t#ifdef LIGHT{i}_SHADOW_CASCADE_BLEND\n\t\t\t\tcascadeIndex = ditherShadowCascadeIndex(cascadeIndex, light{i}_shadowCascadeDistances, light{i}_shadowCascadeCount, light{i}_shadowCascadeBlend);\n\t\t\t#endif\n\t\t\tmat4 shadowMatrix = light{i}_shadowMatrixPalette[cascadeIndex];\n\t\t#else\n\t\t\tmat4 shadowMatrix = light{i}_shadowMatrix;\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tvec3 shadowCoord = getShadowSampleCoord{i}(shadowMatrix, light{i}_shadowParams, vPositionW, vec3(0.0), lightDirW, dLightDirNormW, dVertexNormalW);\n\t\t#else\n\t\t\tvec3 shadowCoord = getShadowSampleCoord{i}(shadowMatrix, light{i}_shadowParams, vPositionW, light{i}_position, lightDirW, dLightDirNormW, dVertexNormalW);\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tshadowCoord = fadeShadow(shadowCoord, light{i}_shadowCascadeDistances);\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_16F\n\t\t\t\treturn getShadowVSM16(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, 5.54);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_32F\n\t\t\t\treturn getShadowVSM32(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, 15.0);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t\t\tvec2 shadowSearchArea = vec2(length(light{i}_halfWidth), length(light{i}_halfHeight)) * light{i}_shadowSearchArea;\n\t\t\t\t\treturn getShadowPCSS(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, light{i}_cameraParams, shadowSearchArea, lightDirW);\n\t\t\t\t#else\n\t\t\t\t\treturn getShadowPCSS(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, light{i}_cameraParams, light{i}_softShadowParams, lightDirW);\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF1_16F || LIGHT{i}SHADOWTYPE == PCF1_32F\n\t\t\t\treturn getShadowPCF1x1(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF3_16F || LIGHT{i}SHADOWTYPE == PCF3_32F\n\t\t\t\treturn getShadowPCF3x3(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF5_16F || LIGHT{i}SHADOWTYPE == PCF5_32F\n\t\t\t\treturn getShadowPCF5x5(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams);\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_16F\n\t\t\t\treturn getShadowSpotVSM16(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, 5.54, lightDirW);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_32F\n\t\t\t\treturn getShadowSpotVSM32(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, 15.0, lightDirW);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t\t\tvec2 shadowSearchArea = vec2(length(light{i}_halfWidth), length(light{i}_halfHeight)) * light{i}_shadowSearchArea;\n\t\t\t\t#else\n\t\t\t\t\tvec2 shadowSearchArea = vec2(light{i}_shadowSearchArea);\n\t\t\t\t#endif\n\t\t\t\treturn getShadowSpotPCSS(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, light{i}_cameraParams, shadowSearchArea, lightDirW);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF1_16F || LIGHT{i}SHADOWTYPE == PCF1_32F\n\t\t\t\treturn getShadowSpotPCF1x1(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF3_16F || LIGHT{i}SHADOWTYPE == PCF3_32F\n\t\t\t\treturn getShadowSpotPCF3x3(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF5_16F || LIGHT{i}SHADOWTYPE == PCF5_32F\n\t\t\t\treturn getShadowSpotPCF5x5(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams);\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t\t\tvec2 shadowSearchArea = vec2(length(light{i}_halfWidth), length(light{i}_halfHeight)) * light{i}_shadowSearchArea;\n\t\t\t\t#else\n\t\t\t\t\tvec2 shadowSearchArea = vec2(light{i}_shadowSearchArea);\n\t\t\t\t#endif\n\t\t\t\treturn getShadowOmniPCSS(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, light{i}_cameraParams, shadowSearchArea, lightDirW);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF1_16F || LIGHT{i}SHADOWTYPE == PCF1_32F\n\t\t\t\treturn getShadowOmniPCF1x1(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, lightDirW);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF3_16F || LIGHT{i}SHADOWTYPE == PCF3_32F\n\t\t\t\treturn getShadowOmniPCF3x3(SHADOWMAP_PASS(light{i}_shadowMap), shadowCoord, light{i}_shadowParams, lightDirW);\n\t\t\t#endif\n\t\t#endif\n\t}\n#endif\n`;var kP=`\n#ifdef LIT_CLUSTERED_LIGHTS\n\t#define LIT_CODE_FALLOFF_LINEAR\n\t#define LIT_CODE_FALLOFF_SQUARED\n\t#define LIT_CODE_LIGHTS_POINT\n\t#define LIT_CODE_LIGHTS_SPOT\n#endif\n#ifdef AREA_LIGHTS\n\tuniform highp sampler2D areaLightsLutTex1;\n\tuniform highp sampler2D areaLightsLutTex2;\n#endif\n#ifdef LIT_LIGHTING\n\t#include "lightDiffuseLambertPS"\n\t#if defined(AREA_LIGHTS) || defined(LIT_CLUSTERED_AREA_LIGHTS)\n\t\t#include "ltcPS"\n\t#endif\n#endif\n#ifdef SHADOW_DIRECTIONAL\n\t#include "shadowCascadesPS"\n#endif\n#if defined(SHADOW_KIND_PCF1)\n\t#include "shadowPCF1PS"\n#endif\n#if defined(SHADOW_KIND_PCF3)\n\t#include "shadowPCF3PS"\n#endif\n#if defined(SHADOW_KIND_PCF5)\n\t#include "shadowPCF5PS"\n#endif\n#if defined(SHADOW_KIND_PCSS)\n\t#include "linearizeDepthPS"\n\t#include "shadowPCSSPS"\n\t#include "shadowSoftPS"\n#endif\n#if defined(SHADOW_KIND_VSM)\n\t#include "shadowEVSMPS"\n#endif\n#ifdef LIT_CODE_FALLOFF_LINEAR\n\t#include "falloffLinearPS"\n#endif\n#ifdef LIT_CODE_FALLOFF_SQUARED\n\t#include "falloffInvSquaredPS"\n#endif\n#ifdef LIT_CODE_LIGHTS_POINT\n\t#include "lightDirPointPS"\n#endif\n#ifdef LIT_CODE_LIGHTS_SPOT\n\t#include "spotPS"\n#endif\n#ifdef LIT_CODE_COOKIE\n\t#include "cookiePS"\n#endif\n#ifdef LIT_CLUSTERED_LIGHTS\n\t#include "clusteredLightPS"\n#endif\n#ifdef LIGHT_COUNT > 0\n\t#include "lightFunctionShadowPS, LIGHT_COUNT"\n\t#include "lightFunctionLightPS, LIGHT_COUNT"\n#endif\n`;var BP=`\nvoid addLightMap(\n\tvec3 lightmap, \n\tvec3 dir, \n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tvec3 reflectionDir, \n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 vertexNormal, \n\tmat3 tbn\n#if defined(LIT_IRIDESCENCE)\n\tvec3 iridescenceFresnel, \n\tfloat iridescenceIntensity\n#endif\n) {\n\t#if defined(LIT_SPECULAR) && defined(LIT_DIR_LIGHTMAP)\n\t\tif (dot(dir, dir) < 0.0001) {\n\t\t\t\tdDiffuseLight += lightmap;\n\t\t} else {\n\t\t\tfloat vlight = saturate(dot(dir, -vertexNormal));\n\t\t\tfloat flight = saturate(dot(dir, -worldNormal));\n\t\t\tfloat nlight = (flight / max(vlight, 0.01)) * 0.5;\n\t\t\tdDiffuseLight += lightmap * nlight * 2.0;\n\t\t\tvec3 halfDir = normalize(-dir + viewDir);\n\t\t\tvec3 specularLight = lightmap * getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, dir, gloss, tbn);\n\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\tspecularLight *= \n\t\t\t\t\tgetFresnel(dot(viewDir, halfDir), \n\t\t\t\t\tgloss, \n\t\t\t\t\tspecularity\n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\tiridescenceIntensity\n\t\t\t\t#endif\n\t\t\t\t\t);\n\t\t\t#endif\n\t\t\tdSpecularLight += specularLight;\n\t\t}\n\t#else\n\t\tdDiffuseLight += lightmap;\n\t#endif\n}\n`;var UP=`\n#ifdef STD_LIGHTMAP_DIR\n\tvec3 dLightmapDir;\n\tuniform sampler2D texture_dirLightMap;\n#endif\nvoid getLightMap() {\n\tdLightmap = vec3(1.0);\n\t#ifdef STD_LIGHT_TEXTURE\n\t\tdLightmap *= {STD_LIGHT_TEXTURE_DECODE}(texture2DBias({STD_LIGHT_TEXTURE_NAME}, {STD_LIGHT_TEXTURE_UV}, textureBias)).{STD_LIGHT_TEXTURE_CHANNEL};\n\t\t#ifdef STD_LIGHTMAP_DIR\n\t\t\tvec3 dir = texture2DBias(texture_dirLightMap, {STD_LIGHT_TEXTURE_UV}, textureBias).xyz * 2.0 - 1.0;\n\t\t\tfloat dirDot = dot(dir, dir);\n\t\t\tdLightmapDir = (dirDot > 0.001) ? dir / sqrt(dirDot) : vec3(0.0);\n\t\t#endif\n\t#endif\n\t#ifdef STD_LIGHT_VERTEX\n\t\tdLightmap *= saturate(vVertexColor.{STD_LIGHT_VERTEX_CHANNEL});\n\t#endif\n}\n`;var zP=`\nfloat calcLightSpecular(float gloss, vec3 worldNormal, vec3 viewDir, vec3 h, vec3 lightDirNorm, mat3 tbn) {\n\tfloat PI = 3.141592653589793;\n\tfloat roughness = max((1.0 - gloss) * (1.0 - gloss), 0.001);\n\tfloat alphaRoughness = roughness * roughness;\n\tfloat anisotropy = dAnisotropy;\n\tvec2 direction = dAnisotropyRotation;\n\tfloat at = mix(alphaRoughness, 1.0, anisotropy * anisotropy);\n\tfloat ab = clamp(alphaRoughness, 0.001, 1.0);\n\tvec3 anisotropicT = normalize(tbn * vec3(direction, 0.0));\n\tvec3 anisotropicB = normalize(cross(tbn[2], anisotropicT));\n\tfloat NoH = dot(worldNormal, h);\n\tfloat ToH = dot(anisotropicT, h);\n\tfloat BoH = dot(anisotropicB, h);\n\tfloat a2 = at * ab;\n\tvec3 v = vec3(ab * ToH, at * BoH, a2 * NoH);\n\tfloat v2 = dot(v, v);\n\tfloat w2 = a2 / v2;\n\tfloat D = a2 * w2 * w2 * (1.0 / PI);\n\tfloat ToV = dot(anisotropicT, viewDir);\n\tfloat BoV = dot(anisotropicB, viewDir);\n\tfloat ToL = dot(anisotropicT, -lightDirNorm);\n\tfloat BoL = dot(anisotropicB, -lightDirNorm);\n\tfloat NoV = dot(worldNormal, viewDir);\n\tfloat NoL = dot(worldNormal, -lightDirNorm);\n\tfloat lambdaV = NoL * length(vec3(at * ToV, ab * BoV, NoV));\n\tfloat lambdaL = NoV * length(vec3(at * ToL, ab * BoL, NoL));\n\tfloat G = 0.5 / (lambdaV + lambdaL);\n\treturn D * G;\n}\nfloat getLightSpecular(vec3 h, vec3 reflDir, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float gloss, mat3 tbn) {\n\treturn calcLightSpecular(gloss, worldNormal, viewDir, h, lightDirNorm, tbn);\n}\n`;var VP=`\nfloat calcLightSpecular(float gloss, vec3 worldNormal, vec3 h) {\n\tfloat nh = max( dot( h, worldNormal ), 0.0 );\n\tfloat specPow = exp2(gloss * 11.0);\n\tspecPow = max(specPow, 0.0001);\n\treturn pow(nh, specPow) * (specPow + 2.0) / 8.0;\n}\nfloat getLightSpecular(vec3 h, vec3 reflDir, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float gloss, mat3 tbn) {\n\treturn calcLightSpecular(gloss, worldNormal, h);\n}\n`;var GP=`\nfloat sheenD(vec3 normal, vec3 h, float roughness) {\n\tconst float PI = 3.141592653589793;\n\tfloat invR = 1.0 / (roughness * roughness);\n\tfloat cos2h = max(dot(normal, h), 0.0);\n\tcos2h *= cos2h;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\n\treturn (2.0 + invR) * pow(sin2h, invR * 0.5) / (2.0 * PI);\n}\nfloat sheenV(vec3 normal, vec3 viewDir, vec3 light) {\n\tfloat NoV = max(dot(normal, viewDir), 0.000001);\n\tfloat NoL = max(dot(normal, light), 0.000001);\n\treturn 1.0 / (4.0 * (NoL + NoV - NoL * NoV));\n}\nfloat getLightSpecularSheen(vec3 h, vec3 worldNormal, vec3 viewDir, vec3 lightDirNorm, float sheenGloss) {\n\tfloat D = sheenD(worldNormal, h, sheenGloss);\n\tfloat V = sheenV(worldNormal, viewDir, -lightDirNorm);\n\treturn D * V;\n}\n`;var HP=`\n#ifndef LINEARIZE_DEPTH\n#define LINEARIZE_DEPTH\nfloat linearizeDepthWithParams(float z, vec4 cameraParams) {\n\tif (cameraParams.w == 0.0)\n\t\treturn (cameraParams.z * cameraParams.y) / (cameraParams.y + z * (cameraParams.z - cameraParams.y));\n\telse\n\t\treturn cameraParams.z + z * (cameraParams.y - cameraParams.z);\n}\n#ifndef CAMERAPLANES\n\t#define CAMERAPLANES\n\tuniform vec4 camera_params;\n#endif\nfloat linearizeDepth(float z) {\n\treturn linearizeDepthWithParams(z, camera_params);\n}\n#endif\n`;var WP=`\nvoid evaluateBackend() {\n\t#ifdef LIT_SSAO\n\t\tlitArgs_ao *= texture2DLod(ssaoTexture, gl_FragCoord.xy * ssaoTextureSizeInv, 0.0).r;\n\t#endif\n\t#ifdef LIT_NEEDS_NORMAL\n\t\t#ifdef LIT_SPECULAR\n\t\t\tgetReflDir(litArgs_worldNormal, dViewDirW, litArgs_gloss, dTBN);\n\t\t#endif\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\tccReflDirW = normalize(-reflect(dViewDirW, litArgs_clearcoat_worldNormal));\n\t\t#endif\n\t#endif\n\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t#ifdef LIT_METALNESS\n\t\t\tfloat f0 = 1.0 / litArgs_ior;\n\t\t\tf0 = (f0 - 1.0) / (f0 + 1.0);\n\t\t\tf0 *= f0;\n\t\t\tlitArgs_specularity = getSpecularModulate(litArgs_specularity, litArgs_albedo, litArgs_metalness, f0);\n\t\t\tlitArgs_albedo = getAlbedoModulate(litArgs_albedo, litArgs_metalness);\n\t\t#endif\n\t\t#ifdef LIT_IRIDESCENCE\n\t\t\tvec3 iridescenceFresnel = getIridescence(saturate(dot(dViewDirW, litArgs_worldNormal)), litArgs_specularity, litArgs_iridescence_thickness);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_ADD_AMBIENT\n\t\taddAmbient(litArgs_worldNormal);\n\t\t#ifdef LIT_SPECULAR\n\t\t\tdDiffuseLight = dDiffuseLight * (1.0 - litArgs_specularity);\n\t\t#endif\n\t\t#ifdef LIT_SEPARATE_AMBIENT\n\t\t\tvec3 dAmbientLight = dDiffuseLight;\n\t\t\tdDiffuseLight = vec3(0);\n\t\t#endif\n\t#endif\n\t#ifndef LIT_OLD_AMBIENT\n\t\tdDiffuseLight *= material_ambient;\n\t#endif\n\t#ifdef LIT_AO\n\t\t#ifndef LIT_OCCLUDE_DIRECT\n\t\t\toccludeDiffuse(litArgs_ao);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_LIGHTMAP\n\t\taddLightMap(\n\t\t\tlitArgs_lightmap, \n\t\t\tlitArgs_lightmapDir, \n\t\t\tlitArgs_worldNormal, \n\t\t\tdViewDirW, \n\t\t\tdReflDirW, \n\t\t\tlitArgs_gloss, \n\t\t\tlitArgs_specularity, \n\t\t\tdVertexNormalW,\n\t\t\tdTBN\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t, iridescenceFresnel,\n\t\t\tlitArgs_iridescence_intensity\n\t\t#endif\n\t\t);\n\t#endif\n\t#ifdef LIT_LIGHTING || LIT_REFLECTIONS\n\t\t#ifdef LIT_REFLECTIONS\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\taddReflectionCC(ccReflDirW, litArgs_clearcoat_gloss);\n\t\t\t\n\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\tccFresnel = getFresnelCC(dot(dViewDirW, litArgs_clearcoat_worldNormal));\n\t\t\t\t\tccReflection *= ccFresnel;\n\t\t\t\t#else\n\t\t\t\t\tccFresnel = 0.0;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\tccReflection *= litArgs_specularityFactor;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\taddReflectionSheen(litArgs_worldNormal, dViewDirW, litArgs_sheen_gloss);\n\t\t\t#endif\n\t\t\taddReflection(dReflDirW, litArgs_gloss);\n\t\t\t#ifdef LIT_FRESNEL_MODEL\n\t\t\t\tdReflection.rgb *= getFresnel(\n\t\t\t\t\tdot(dViewDirW, litArgs_worldNormal), \n\t\t\t\t\tlitArgs_gloss, \n\t\t\t\t\tlitArgs_specularity\n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\tlitArgs_iridescence_intensity\n\t\t\t\t#endif\n\t\t\t\t\t);\n\t\t\t#else\n\t\t\t\tdReflection.rgb *= litArgs_specularity;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\tdReflection.rgb *= litArgs_specularityFactor;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef AREA_LIGHTS\n\t\t\tdSpecularLight *= litArgs_specularity;\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tcalcLTCLightValues(litArgs_gloss, litArgs_worldNormal, dViewDirW, litArgs_specularity, litArgs_clearcoat_gloss, litArgs_clearcoat_worldNormal, litArgs_clearcoat_specularity);\n\t\t\t#endif\n\t\t#endif\n\t\t\n\t\t#ifdef LIGHT_COUNT > 0\n\t\t\t#include "lightEvaluationPS, LIGHT_COUNT"\n\t\t#endif\n\t\t#ifdef LIT_CLUSTERED_LIGHTS\n\t\t\taddClusteredLights(litArgs_worldNormal, dViewDirW, dReflDirW,\n\t\t\t\t#if defined(LIT_CLEARCOAT)\n\t\t\t\t\t\tccReflDirW,\n\t\t\t\t#endif\n\t\t\t\t\t\tlitArgs_gloss, litArgs_specularity, dVertexNormalW, dTBN, \n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\tiridescenceFresnel,\n\t\t\t\t#endif\n\t\t\t\t\t\tlitArgs_clearcoat_worldNormal, litArgs_clearcoat_gloss, litArgs_sheen_gloss, litArgs_iridescence_intensity\n\t\t\t);\n\t\t#endif\n\t\t#ifdef AREA_LIGHTS\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tlitArgs_clearcoat_specularity = 1.0;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tlitArgs_specularity = vec3(1);\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef LIT_REFRACTION\n\t\t\taddRefraction(\n\t\t\t\tlitArgs_worldNormal, \n\t\t\t\tdViewDirW, \n\t\t\t\tlitArgs_thickness, \n\t\t\t\tlitArgs_gloss, \n\t\t\t\tlitArgs_specularity, \n\t\t\t\tlitArgs_albedo, \n\t\t\t\tlitArgs_transmission,\n\t\t\t\tlitArgs_ior,\n\t\t\t\tlitArgs_dispersion\n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t, iridescenceFresnel, \n\t\t\t\t\tlitArgs_iridescence_intensity\n\t\t\t\t#endif\n\t\t\t);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_AO\n\t\t#ifdef LIT_OCCLUDE_DIRECT\n\t\t\toccludeDiffuse(litArgs_ao);\n\t\t#endif\n\t\t#if LIT_OCCLUDE_SPECULAR != NONE\n\t\t\toccludeSpecular(litArgs_gloss, litArgs_ao, litArgs_worldNormal, dViewDirW);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_SPECULARITY_FACTOR\n\t\tdSpecularLight *= litArgs_specularityFactor;\n\t#endif\n\t#if !defined(LIT_OPACITY_FADES_SPECULAR)\n\t\t#if LIT_BLEND_TYPE == NORMAL || LIT_BLEND_TYPE == PREMULTIPLIED\n\t\t\tfloat specLum = dot((dSpecularLight + dReflection.rgb * dReflection.a), vec3( 0.2126, 0.7152, 0.0722 ));\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tspecLum += dot(ccSpecularLight * litArgs_clearcoat_specularity + ccReflection * litArgs_clearcoat_specularity, vec3( 0.2126, 0.7152, 0.0722 ));\n\t\t\t#endif\n\t\t\tlitArgs_opacity = clamp(litArgs_opacity + gammaCorrectInput(specLum), 0.0, 1.0);\n\t\t#endif\n\t\tlitArgs_opacity *= material_alphaFade;\n\t#endif\n\t#ifdef LIT_LIGHTMAP_BAKING\n\t\t#ifdef LIT_LIGHTMAP_BAKING_COLOR\n\t\t\t#include "bakeLmEndPS"\n\t\t#endif\n\t\t#ifdef LIT_LIGHTMAP_BAKING_DIR\n\t\t\t#include "bakeDirLmEndPS"\n\t\t#endif\n\t#else\n\t\t#include "endPS"\n\t\t#include "outputAlphaPS"\n\t#endif\n\t#ifdef LIT_MSDF\n\t\tgl_FragColor = applyMsdf(gl_FragColor);\n\t#endif\n\t#include "outputPS"\n\t#include "debugOutputPS"\n\t#ifdef LIT_SHADOW_CATCHER\n\t\tgl_FragColor.rgb = vec3(dShadowCatcher);\n\t#endif\n}\n`;var XP=`\nvec3 sReflection;\nvec3 dVertexNormalW;\nvec3 dTangentW;\nvec3 dBinormalW;\nvec3 dViewDirW;\nvec3 dReflDirW;\nvec3 ccReflDirW;\nvec3 dLightDirNormW;\nfloat dAtten;\nmat3 dTBN;\nvec4 dReflection;\nvec3 dDiffuseLight;\nvec3 dSpecularLight;\nfloat ccFresnel;\nvec3 ccReflection;\nvec3 ccSpecularLight;\nfloat ccSpecularityNoFres;\nvec3 sSpecularLight;\n#ifdef LIT_DISPERSION\n\tuniform float material_dispersion;\n#endif\n#ifndef LIT_OPACITY_FADES_SPECULAR\n\tuniform float material_alphaFade;\n#endif\n#ifdef LIT_SSAO\n\tuniform sampler2D ssaoTexture;\n\tuniform vec2 ssaoTextureSizeInv;\n#endif\n#ifdef LIT_SHADOW_CATCHER\n\tfloat dShadowCatcher = 1.0;\n#endif\n#if LIGHT_COUNT > 0\n\t#include "lightDeclarationPS, LIGHT_COUNT"\n#endif\n#ifdef LIT_SPECULAR\n\t#if LIT_FRESNEL_MODEL == NONE && !defined(LIT_REFLECTIONS) && !defined(LIT_DIFFUSE_MAP) \n\t\t#define LIT_OLD_AMBIENT\n\t#endif\n#endif\n#ifdef STD_LIGHTMAP_DIR\n\tuniform float bakeDir;\n#endif\n#ifdef LIT_LIGHTMAP_BAKING_ADD_AMBIENT\n\tuniform float ambientBakeOcclusionContrast;\n\tuniform float ambientBakeOcclusionBrightness;\n#endif\n`;var qP=`\nvoid main(void) {\n\t#include "litUserMainStartPS"\n\tdReflection = vec4(0);\n\t#ifdef LIT_CLEARCOAT\n\t\tccSpecularLight = vec3(0);\n\t\tccReflection = vec3(0);\n\t#endif\n\t#if LIT_NONE_SLICE_MODE == SLICED\n\t\t#include "startNineSlicedPS"\n\t#elif LIT_NONE_SLICE_MODE == TILED\n\t\t#include "startNineSlicedTiledPS"\n\t#endif\n\t#ifdef LIT_NEEDS_NORMAL\n\t\tdVertexNormalW = normalize(vNormalW);\n\t\t#ifdef LIT_TANGENTS\n\t\t\t#if defined(LIT_HEIGHTS) || defined(LIT_USE_NORMALS) || defined(LIT_USE_CLEARCOAT_NORMALS) || defined(LIT_GGX_SPECULAR)\n\t\t\t\tdTangentW = vTangentW;\n\t\t\t\tdBinormalW = vBinormalW;\n\t\t\t#endif\n\t\t#endif\n\t\tgetViewDir();\n\t\t#ifdef LIT_TBN\n\t\t\tgetTBN(dTangentW, dBinormalW, dVertexNormalW);\n\t\t\t#ifdef LIT_TWO_SIDED_LIGHTING\n\t\t\t\thandleTwoSidedLighting();\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\tevaluateFrontend();\n\t#include "debugProcessFrontendPS"\n\tevaluateBackend();\n\t#include "litUserMainEndPS"\n}\n`;var $P=`\n#ifdef LIT_NEEDS_NORMAL\n\t#include "cubeMapRotatePS"\n\t#include "cubeMapProjectPS"\n\t#include "envProcPS"\n#endif\n#ifdef LIT_SPECULAR_OR_REFLECTION\n\t#ifdef LIT_METALNESS\n\t\t#include "metalnessModulatePS"\n\t#endif\n\t#if LIT_FRESNEL_MODEL == SCHLICK\n\t\t#include "fresnelSchlickPS"\n\t#endif\n\t#ifdef LIT_IRIDESCENCE\n\t\t#include "iridescenceDiffractionPS"\n\t#endif\n#endif\n#ifdef LIT_AO\n\t#include "aoDiffuseOccPS"\n\t#include "aoSpecOccPS"\n#endif\n#if LIT_REFLECTION_SOURCE == ENVATLASHQ\n\t#include "envAtlasPS"\n\t#include "reflectionEnvHQPS"\n#elif LIT_REFLECTION_SOURCE == ENVATLAS\n\t#include "envAtlasPS"\n\t#include "reflectionEnvPS"\n#elif LIT_REFLECTION_SOURCE == CUBEMAP\n\t#include "reflectionCubePS"\n#elif LIT_REFLECTION_SOURCE == SPHEREMAP\n\t#include "reflectionSpherePS"\n#endif\n#ifdef LIT_REFLECTIONS\n\t#ifdef LIT_CLEARCOAT\n\t\t#include "reflectionCCPS"\n\t#endif\n\t#ifdef LIT_SHEEN\n\t\t#include "reflectionSheenPS"\n\t#endif\n#endif\n#ifdef LIT_REFRACTION\n\t#if defined(LIT_DYNAMIC_REFRACTION)\n\t\t#include "refractionDynamicPS"\n\t#elif defined(LIT_REFLECTIONS)\n\t\t#include "refractionCubePS"\n\t#endif\n#endif\n#ifdef LIT_SHEEN\n\t#include "lightSheenPS"\n#endif\nuniform vec3 material_ambient;\n#ifdef LIT_SPECULAR\n\t#ifdef LIT_LIGHTING\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\t#include "lightSpecularAnisoGGXPS"\n\t\t#else\n\t\t\t#include "lightSpecularBlinnPS"\n\t\t#endif\n\t#endif\n#endif\n#include "combinePS"\n#ifdef LIT_LIGHTMAP\n\t#include "lightmapAddPS"\n#endif\n#ifdef LIT_ADD_AMBIENT\n\t#include "ambientPS"\n#endif\n#ifdef LIT_MSDF\n\t#include "msdfPS"\n#endif\n#ifdef LIT_NEEDS_NORMAL\n\t#include "viewDirPS"\n\t#ifdef LIT_SPECULAR\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\t#include "reflDirAnisoPS"\n\t\t#else\n\t\t\t#include "reflDirPS"\n\t\t#endif\n\t#endif\n#endif\n#include "lightingPS"\n`;var jP=`\n#include "basePS"\n#include "sphericalPS"\n#include "decodePS"\n#include "gammaPS"\n#include "tonemappingPS"\n#include "fogPS"\n#if LIT_NONE_SLICE_MODE == SLICED\n\t#include "baseNineSlicedPS"\n#elif LIT_NONE_SLICE_MODE == TILED\n\t#include "baseNineSlicedTiledPS"\n#endif\n#ifdef LIT_TBN\n\t#include "TBNPS"\n\t#ifdef LIT_TWO_SIDED_LIGHTING\n\t\t#include "twoSidedLightingPS"\n\t#endif\n#endif\n`;var YP=`\n#include "varyingsPS"\n#include "litUserDeclarationPS"\n#include "frontendDeclPS"\n#if defined(PICK_PASS) || defined(PREPASS_PASS)\n\t#include "frontendCodePS"\n\t#include "litUserCodePS"\n\t#include "litOtherMainPS"\n#elif defined(SHADOW_PASS)\n\t#include "frontendCodePS"\n\t#include "litUserCodePS"\n\t#include "litShadowMainPS"\n#else\n\t#include "litForwardDeclarationPS"\n\t#include "litForwardPreCodePS"\n\t#include "frontendCodePS"\n\t#include "litForwardPostCodePS"\n\t#include "litForwardBackendPS"\n\t#include "litUserCodePS"\n\t#include "litForwardMainPS"\n#endif\n`;var KP=`\n#include "varyingsVS"\n#include  "litUserDeclarationVS"\n#ifdef VERTEX_COLOR\n\tattribute vec4 vertex_color;\n#endif\n#ifdef NINESLICED\n\tvarying vec2 vMask;\n\tvarying vec2 vTiledUv;\n\tuniform mediump vec4 innerOffset;\n\tuniform mediump vec2 outerScale;\n\tuniform mediump vec4 atlasRect;\n#endif\nvec3 dPositionW;\nmat4 dModelMatrix;\n#include "transformCoreVS"\n#ifdef UV0\n\tattribute vec2 vertex_texCoord0;\n\t#include "uv0VS"\n#endif\n#ifdef UV1\n\tattribute vec2 vertex_texCoord1;\n\t#include "uv1VS"\n#endif\n#ifdef LINEAR_DEPTH\n\t#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\t\tuniform mat4 matrix_view;\n\t#endif\n#endif\n#include "transformVS"\n#ifdef NORMALS\n\t#include "normalCoreVS"\n\t#include "normalVS"\n#endif\n#ifdef TANGENTS\n\tattribute vec4 vertex_tangent;\n#endif\n#include "uvTransformUniformsPS, UV_TRANSFORMS_COUNT"\n#ifdef MSDF\n\t#include "msdfVS"\n#endif\n#include  "litUserCodeVS"\nvoid main(void) {\n\t#include "litUserMainStartVS"\n\tgl_PointSize = 1.0;\n\tgl_Position = getPosition();\n\tvPositionW = getWorldPosition();\n\t#ifdef NORMALS\n\t\tvNormalW = getNormal();\n\t#endif\n\t#ifdef TANGENTS\n\t\tvTangentW = normalize(dNormalMatrix * vertex_tangent.xyz);\n\t\tvBinormalW = cross(vNormalW, vTangentW) * vertex_tangent.w;\n\t#elif defined(GGX_SPECULAR)\n\t\tvObjectSpaceUpW = normalize(dNormalMatrix * vec3(0, 1, 0));\n\t#endif\n\t#ifdef UV0\n\t\tvec2 uv0 = getUv0();\n\t\t#ifdef UV0_UNMODIFIED\n\t\t\tvUv0 = uv0;\n\t\t#endif\n\t#endif\n\t#ifdef UV1\n\t\tvec2 uv1 = getUv1();\n\t\t#ifdef UV1_UNMODIFIED\n\t\t\tvUv1 = uv1;\n\t\t#endif\n\t#endif\n\t#include "uvTransformVS, UV_TRANSFORMS_COUNT"\n\t#ifdef VERTEX_COLOR\n\t\tvVertexColor = vertex_color;\n\t#endif\n\t#ifdef LINEAR_DEPTH\n\t\tvLinearDepth = -(matrix_view * vec4(vPositionW, 1.0)).z;\n\t#endif\n\t#ifdef MSDF\n\t\tunpackMsdfParams();\n\t#endif\n\t#include "litUserMainEndVS"\n}\n`;var ZP=`\n#ifdef PICK_PASS\n\t#include "pickPS"\n#endif\n#ifdef PREPASS_PASS\n\t#include "floatAsUintPS"\n#endif\nvoid main(void) {\n\t#include "litUserMainStartPS"\n\tevaluateFrontend();\n\t#ifdef PICK_PASS\n\t\tgl_FragColor = getPickOutput();\n\t#endif\n\t#ifdef PREPASS_PASS\n\t\tgl_FragColor = float2vec4(vLinearDepth);\n\t#endif\n\t#include "litUserMainEndPS"\n}\n`;var QP=`\nvec3 litArgs_albedo;\nfloat litArgs_opacity;\nvec3 litArgs_emission;\nvec3 litArgs_worldNormal;\nfloat litArgs_ao;\nvec3 litArgs_lightmap;\nvec3 litArgs_lightmapDir;\nfloat litArgs_metalness;\nvec3 litArgs_specularity;\nfloat litArgs_specularityFactor;\nfloat litArgs_gloss;\nfloat litArgs_sheen_gloss;\nvec3 litArgs_sheen_specularity;\nfloat litArgs_transmission;\nfloat litArgs_thickness;\nfloat litArgs_ior;\nfloat litArgs_dispersion;\nfloat litArgs_iridescence_intensity;\nfloat litArgs_iridescence_thickness;\nvec3 litArgs_clearcoat_worldNormal;\nfloat litArgs_clearcoat_specularity;\nfloat litArgs_clearcoat_gloss;\n`;var JP=`\n\t#if LIT_NONE_SLICE_MODE == TILED\n\t\tconst float textureBias = -1000.0;\n\t#else\n\t\tuniform float textureBias;\n\t#endif\n\t#include "litShaderArgsPS"\n`;var tL=`\n#if LIGHT_TYPE != DIRECTIONAL\n\tuniform vec3 view_position;\n\tuniform float light_radius;\n#endif\n#if SHADOW_TYPE == PCSS_32F\n\t#include "linearizeDepthPS"\n#endif\nvoid main(void) {\n\t#include "litUserMainStartPS"\n\tevaluateFrontend();\n\t#ifdef PERSPECTIVE_DEPTH\n\t\tfloat depth = gl_FragCoord.z;\n\t\t#if SHADOW_TYPE == PCSS_32F\n\t\t\t#if LIGHT_TYPE != DIRECTIONAL\n\t\t\t\tdepth = linearizeDepthWithParams(depth, camera_params);\n\t\t\t#endif\n\t\t#endif\n\t#else\n\t\tfloat depth = min(distance(view_position, vPositionW) / light_radius, 0.99999);\n\t\t#define MODIFIED_DEPTH\n\t#endif\n\t#if SHADOW_TYPE == VSM_16F || SHADOW_TYPE == VSM_32F\n\t\t#if SHADOW_TYPE == VSM_32F\n\t\t\tfloat exponent = 15.0;\n\t\t#else\n\t\t\tfloat exponent = 5.54;\n\t\t#endif\n\t\tdepth = 2.0 * depth - 1.0;\n\t\tdepth =  exp(exponent * depth);\n\t\tgl_FragColor = vec4(depth, depth*depth, 1.0, 1.0);\n\t#else\n\t\t#if SHADOW_TYPE == PCSS_32F\n\t\t\tgl_FragColor.r = depth;\n\t\t#else\n\t\t\t#ifdef MODIFIED_DEPTH\n\t\t\t\tgl_FragDepth = depth;\n\t\t\t#endif\n\t\t\tgl_FragColor = vec4(1.0);\n\t\t#endif\n\t#endif\n\t#include "litUserMainEndPS"\n}\n`;var eL=`\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nstruct Coords {\n\tvec3 coord0;\n\tvec3 coord1;\n\tvec3 coord2;\n\tvec3 coord3;\n};\nfloat LTC_EvaluateRect( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in Coords rectCoords) {\n\tvec3 v1 = rectCoords.coord1 - rectCoords.coord0;\n\tvec3 v2 = rectCoords.coord3 - rectCoords.coord0;\n\t\n\tvec3 lightNormal = cross( v1, v2 );\n\tfloat factor = sign(-dot( lightNormal, P - rectCoords.coord0 ));\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 =  factor * cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords.coord0 - P );\n\tcoords[ 1 ] = mat * ( rectCoords.coord1 - P );\n\tcoords[ 2 ] = mat * ( rectCoords.coord2 - P );\n\tcoords[ 3 ] = mat * ( rectCoords.coord3 - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn result;\n}\nCoords dLTCCoords;\nCoords getLTCLightCoords(vec3 lightPos, vec3 halfWidth, vec3 halfHeight){\n\tCoords coords;\n\tcoords.coord0 = lightPos + halfWidth - halfHeight;\n\tcoords.coord1 = lightPos - halfWidth - halfHeight;\n\tcoords.coord2 = lightPos - halfWidth + halfHeight;\n\tcoords.coord3 = lightPos + halfWidth + halfHeight;\n\treturn coords;\n}\nfloat dSphereRadius;\nCoords getSphereLightCoords(vec3 lightPos, vec3 halfWidth, vec3 halfHeight){\n\tdSphereRadius = max(length(halfWidth), length(halfHeight));\n\tvec3 f = reflect(normalize(lightPos - view_position), vNormalW);\n\tvec3 w = normalize(cross(f, halfHeight));\n\tvec3 h = normalize(cross(f, w));\n\treturn getLTCLightCoords(lightPos, w * dSphereRadius, h * dSphereRadius);\n}\nvec2 dLTCUV;\n#ifdef LIT_CLEARCOAT\n\tvec2 ccLTCUV;\n#endif\nvec2 getLTCLightUV(float gloss, vec3 worldNormal, vec3 viewDir)\n{\n\tfloat roughness = max((1.0 - gloss) * (1.0 - gloss), 0.001);\n\treturn LTC_Uv( worldNormal, viewDir, roughness );\n}\nvec3 dLTCSpecFres;\n#ifdef LIT_CLEARCOAT\n\tvec3 ccLTCSpecFres;\n#endif\nvec3 getLTCLightSpecFres(vec2 uv, vec3 specularity)\n{\n\tvec4 t2 = texture2DLod(areaLightsLutTex2, uv, 0.0);\n\treturn specularity * t2.x + ( vec3( 1.0 ) - specularity) * t2.y;\n}\nvoid calcLTCLightValues(float gloss, vec3 worldNormal, vec3 viewDir, vec3 specularity, float clearcoatGloss, vec3 clearcoatWorldNormal, float clearcoatSpecularity)\n{\n\tdLTCUV = getLTCLightUV(gloss, worldNormal, viewDir);\n\tdLTCSpecFres = getLTCLightSpecFres(dLTCUV, specularity); \n#ifdef LIT_CLEARCOAT\n\tccLTCUV = getLTCLightUV(clearcoatGloss, clearcoatWorldNormal, viewDir);\n\tccLTCSpecFres = getLTCLightSpecFres(ccLTCUV, vec3(clearcoatSpecularity));\n#endif\n}\nvoid calcRectLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight) {\n\tdLTCCoords = getLTCLightCoords(lightPos, halfWidth, halfHeight);\n}\nvoid calcDiskLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight) {\n\tcalcRectLightValues(lightPos, halfWidth, halfHeight);\n}\nvoid calcSphereLightValues(vec3 lightPos, vec3 halfWidth, vec3 halfHeight) {\n\tdLTCCoords = getSphereLightCoords(lightPos, halfWidth, halfHeight);\n}\nvec3 SolveCubic(vec4 Coefficient)\n{\n\tfloat pi = 3.14159;\n\tCoefficient.xyz /= Coefficient.w;\n\tCoefficient.yz /= 3.0;\n\tfloat A = Coefficient.w;\n\tfloat B = Coefficient.z;\n\tfloat C = Coefficient.y;\n\tfloat D = Coefficient.x;\n\tvec3 Delta = vec3(\n\t\t-Coefficient.z * Coefficient.z + Coefficient.y,\n\t\t-Coefficient.y * Coefficient.z + Coefficient.x,\n\t\tdot(vec2(Coefficient.z, -Coefficient.y), Coefficient.xy)\n\t);\n\tfloat Discriminant = dot(vec2(4.0 * Delta.x, -Delta.y), Delta.zy);\n\tvec2 xlc, xsc;\n\t{\n\t\tfloat A_a = 1.0;\n\t\tfloat C_a = Delta.x;\n\t\tfloat D_a = -2.0 * B * Delta.x + Delta.y;\n\t\tfloat Theta = atan(sqrt(Discriminant), -D_a) / 3.0;\n\t\tfloat x_1a = 2.0 * sqrt(-C_a) * cos(Theta);\n\t\tfloat x_3a = 2.0 * sqrt(-C_a) * cos(Theta + (2.0 / 3.0) * pi);\n\t\tfloat xl;\n\t\tif ((x_1a + x_3a) > 2.0 * B)\n\t\t\txl = x_1a;\n\t\telse\n\t\t\txl = x_3a;\n\t\txlc = vec2(xl - B, A);\n\t}\n\t{\n\t\tfloat A_d = D;\n\t\tfloat C_d = Delta.z;\n\t\tfloat D_d = -D * Delta.y + 2.0 * C * Delta.z;\n\t\tfloat Theta = atan(D * sqrt(Discriminant), -D_d) / 3.0;\n\t\tfloat x_1d = 2.0 * sqrt(-C_d) * cos(Theta);\n\t\tfloat x_3d = 2.0 * sqrt(-C_d) * cos(Theta + (2.0 / 3.0) * pi);\n\t\tfloat xs;\n\t\tif (x_1d + x_3d < 2.0 * C)\n\t\t\txs = x_1d;\n\t\telse\n\t\t\txs = x_3d;\n\t\txsc = vec2(-D, xs + C);\n\t}\n\tfloat E =  xlc.y * xsc.y;\n\tfloat F = -xlc.x * xsc.y - xlc.y * xsc.x;\n\tfloat G =  xlc.x * xsc.x;\n\tvec2 xmc = vec2(C * F - B * G, -B * F + C * E);\n\tvec3 Root = vec3(xsc.x / xsc.y, xmc.x / xmc.y, xlc.x / xlc.y);\n\tif (Root.x < Root.y && Root.x < Root.z)\n\t\tRoot.xyz = Root.yxz;\n\telse if (Root.z < Root.x && Root.z < Root.y)\n\t\tRoot.xyz = Root.xzy;\n\treturn Root;\n}\nfloat LTC_EvaluateDisk(vec3 N, vec3 V, vec3 P, mat3 Minv, Coords points)\n{\n\tvec3 T1 = normalize(V - N * dot(V, N));\n\tvec3 T2 = cross(N, T1);\n\tmat3 R = transposeMat3( mat3( T1, T2, N ) );\n\tvec3 L_[ 3 ];\n\tL_[ 0 ] = R * ( points.coord0 - P );\n\tL_[ 1 ] = R * ( points.coord1 - P );\n\tL_[ 2 ] = R * ( points.coord2 - P );\n\tvec3 C  = 0.5 * (L_[0] + L_[2]);\n\tvec3 V1 = 0.5 * (L_[1] - L_[2]);\n\tvec3 V2 = 0.5 * (L_[1] - L_[0]);\n\tC  = Minv * C;\n\tV1 = Minv * V1;\n\tV2 = Minv * V2;\n\tfloat a, b;\n\tfloat d11 = dot(V1, V1);\n\tfloat d22 = dot(V2, V2);\n\tfloat d12 = dot(V1, V2);\n\tif (abs(d12) / sqrt(d11 * d22) > 0.0001)\n\t{\n\t\tfloat tr = d11 + d22;\n\t\tfloat det = -d12 * d12 + d11 * d22;\n\t\tdet = sqrt(det);\n\t\tfloat u = 0.5 * sqrt(tr - 2.0 * det);\n\t\tfloat v = 0.5 * sqrt(tr + 2.0 * det);\n\t\tfloat e_max = (u + v) * (u + v);\n\t\tfloat e_min = (u - v) * (u - v);\n\t\tvec3 V1_, V2_;\n\t\tif (d11 > d22)\n\t\t{\n\t\t\tV1_ = d12 * V1 + (e_max - d11) * V2;\n\t\t\tV2_ = d12 * V1 + (e_min - d11) * V2;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tV1_ = d12*V2 + (e_max - d22)*V1;\n\t\t\tV2_ = d12*V2 + (e_min - d22)*V1;\n\t\t}\n\t\ta = 1.0 / e_max;\n\t\tb = 1.0 / e_min;\n\t\tV1 = normalize(V1_);\n\t\tV2 = normalize(V2_);\n\t}\n\telse\n\t{\n\t\ta = 1.0 / dot(V1, V1);\n\t\tb = 1.0 / dot(V2, V2);\n\t\tV1 *= sqrt(a);\n\t\tV2 *= sqrt(b);\n\t}\n\tvec3 V3 = normalize(cross(V1, V2));\n\tif (dot(C, V3) < 0.0)\n\t\tV3 *= -1.0;\n\tfloat L  = dot(V3, C);\n\tfloat x0 = dot(V1, C) / L;\n\tfloat y0 = dot(V2, C) / L;\n\tfloat E1 = inversesqrt(a);\n\tfloat E2 = inversesqrt(b);\n\ta *= L * L;\n\tb *= L * L;\n\tfloat c0 = a * b;\n\tfloat c1 = a * b * (1.0 + x0 * x0 + y0 * y0) - a - b;\n\tfloat c2 = 1.0 - a * (1.0 + x0 * x0) - b * (1.0 + y0 * y0);\n\tfloat c3 = 1.0;\n\tvec3 roots = SolveCubic(vec4(c0, c1, c2, c3));\n\tfloat e1 = roots.x;\n\tfloat e2 = roots.y;\n\tfloat e3 = roots.z;\n\tvec3 avgDir = vec3(a * x0 / (a - e2), b * y0 / (b - e2), 1.0);\n\tmat3 rotate = mat3(V1, V2, V3);\n\tavgDir = rotate * avgDir;\n\tavgDir = normalize(avgDir);\n\tfloat L1 = sqrt(-e2 / e3);\n\tfloat L2 = sqrt(-e2 / e1);\n\tfloat formFactor = max(0.0, L1 * L2 * inversesqrt((1.0 + L1 * L1) * (1.0 + L2 * L2)));\n\t\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tvec2 uv = vec2(avgDir.z * 0.5 + 0.5, formFactor);\n\tuv = uv*LUT_SCALE + LUT_BIAS;\n\tfloat scale = texture2DLod(areaLightsLutTex2, uv, 0.0).w;\n\treturn formFactor*scale;\n}\nfloat FixNan(float value) {\n\t#ifdef WEBGPU\n\t\treturn value != value ? 0.0 : value;\n\t#else\n\t\treturn isnan(value) ? 0.0 : value;\n\t#endif\n}\nfloat getRectLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {\n\treturn LTC_EvaluateRect( worldNormal, viewDir, vPositionW, mat3( 1.0 ), dLTCCoords );\n}\nfloat getDiskLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {\n\treturn FixNan(LTC_EvaluateDisk( worldNormal, viewDir, vPositionW, mat3( 1.0 ), dLTCCoords ));\n}\nfloat getSphereLightDiffuse(vec3 worldNormal, vec3 viewDir, vec3 lightDir, vec3 lightDirNorm) {\n\tfloat falloff = dSphereRadius / (dot(lightDir, lightDir) + dSphereRadius);\n\treturn FixNan(getLightDiffuse(worldNormal, viewDir, lightDirNorm) * falloff);\n}\nmat3 getLTCLightInvMat(vec2 uv)\n{\n\tvec4 t1 = texture2DLod(areaLightsLutTex1, uv, 0.0);\n\treturn mat3(\n\t\tvec3( t1.x, 0, t1.y ),\n\t\tvec3(\t0, 1,\t0 ),\n\t\tvec3( t1.z, 0, t1.w )\n\t);\n}\nfloat calcRectLightSpecular(vec3 worldNormal, vec3 viewDir, vec2 uv) {\n\tmat3 mInv = getLTCLightInvMat(uv);\n\treturn LTC_EvaluateRect( worldNormal, viewDir, vPositionW, mInv, dLTCCoords );\n}\nfloat getRectLightSpecular(vec3 worldNormal, vec3 viewDir) {\n\treturn calcRectLightSpecular(worldNormal, viewDir, dLTCUV);\n}\nfloat calcDiskLightSpecular(vec3 worldNormal, vec3 viewDir, vec2 uv) {\n\tmat3 mInv = getLTCLightInvMat(uv);\n\treturn LTC_EvaluateDisk( worldNormal, viewDir, vPositionW, mInv, dLTCCoords );\n}\nfloat getDiskLightSpecular(vec3 worldNormal, vec3 viewDir) {\n\treturn calcDiskLightSpecular(worldNormal, viewDir, dLTCUV);\n}\nfloat getSphereLightSpecular(vec3 worldNormal, vec3 viewDir) {\n\treturn calcDiskLightSpecular(worldNormal, viewDir, dLTCUV);\n}\n`;var sL=`\n#ifdef STD_METALNESS_CONSTANT\nuniform float material_metalness;\n#endif\nvoid getMetalness() {\n\tfloat metalness = 1.0;\n\t#ifdef STD_METALNESS_CONSTANT\n\tmetalness *= material_metalness;\n\t#endif\n\t#ifdef STD_METALNESS_TEXTURE\n\tmetalness *= texture2DBias({STD_METALNESS_TEXTURE_NAME}, {STD_METALNESS_TEXTURE_UV}, textureBias).{STD_METALNESS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_METALNESS_VERTEX\n\tmetalness *= saturate(vVertexColor.{STD_METALNESS_VERTEX_CHANNEL});\n\t#endif\n\tdMetalness = metalness;\n}\n`;var iL=`\nuniform sampler2D texture_msdfMap;\nfloat median(float r, float g, float b) {\n\treturn max(min(r, g), min(max(r, g), b));\n}\nfloat map (float min, float max, float v) {\n\treturn (v - min) / (max - min);\n}\nuniform float font_sdfIntensity;\nuniform float font_pxrange;\nuniform float font_textureWidth;\n#ifndef LIT_MSDF_TEXT_ATTRIBUTE\n\tuniform vec4 outline_color;\n\tuniform float outline_thickness;\n\tuniform vec4 shadow_color;\n\tuniform vec2 shadow_offset;\n#else\n\tvarying vec4 outline_color;\n\tvarying float outline_thickness;\n\tvarying vec4 shadow_color;\n\tvarying vec2 shadow_offset;\n#endif\nvec4 applyMsdf(vec4 color) {\n\tcolor.rgb = gammaCorrectInput(color.rgb);\n\tvec3 tsample = texture2D(texture_msdfMap, vUv0).rgb;\n\tvec2 uvShdw = vUv0 - shadow_offset;\n\tvec3 ssample = texture2D(texture_msdfMap, uvShdw).rgb;\n\tfloat sigDist = median(tsample.r, tsample.g, tsample.b);\n\tfloat sigDistShdw = median(ssample.r, ssample.g, ssample.b);\n\tfloat smoothingMax = 0.2;\n\tvec2 w = fwidth(vUv0);\n\tfloat smoothing = clamp(w.x * font_textureWidth / font_pxrange, 0.0, smoothingMax);\n\tfloat mapMin = 0.05;\n\tfloat mapMax = clamp(1.0 - font_sdfIntensity, mapMin, 1.0);\n\tfloat sigDistInner = map(mapMin, mapMax, sigDist);\n\tfloat sigDistOutline = map(mapMin, mapMax, sigDist + outline_thickness);\n\tsigDistShdw = map(mapMin, mapMax, sigDistShdw + outline_thickness);\n\tfloat center = 0.5;\n\tfloat inside = smoothstep(center-smoothing, center+smoothing, sigDistInner);\n\tfloat outline = smoothstep(center-smoothing, center+smoothing, sigDistOutline);\n\tfloat shadow = smoothstep(center-smoothing, center+smoothing, sigDistShdw);\n\tvec4 tcolor = (outline > inside) ? outline * vec4(outline_color.a * outline_color.rgb, outline_color.a) : vec4(0.0);\n\ttcolor = mix(tcolor, color, inside);\n\tvec4 scolor = (shadow > outline) ? shadow * vec4(shadow_color.a * shadow_color.rgb, shadow_color.a) : tcolor;\n\ttcolor = mix(scolor, tcolor, outline);\n\ttcolor.rgb = gammaCorrectOutput(tcolor.rgb);\n\t\n\treturn tcolor;\n}\n`;var nL=`\nvec3 getSpecularModulate(in vec3 specularity, in vec3 albedo, in float metalness, in float f0) {\n\tvec3 dielectricF0 = f0 * specularity;\n\treturn mix(dielectricF0, albedo, metalness);\n}\nvec3 getAlbedoModulate(in vec3 albedo, in float metalness) {\n\treturn albedo * (1.0 - metalness);\n}\n`;var rL=`\n\tvarying vec2 uv0;\n\tuniform sampler2DArray morphTexture;\n\tuniform highp float morphFactor[{MORPH_TEXTURE_MAX_COUNT}];\n\tuniform highp uint morphIndex[{MORPH_TEXTURE_MAX_COUNT}];\n\tuniform int count;\n\t#ifdef MORPH_INT\n\t\tuniform vec3 aabbSize;\n\t\tuniform vec3 aabbMin;\n\t#endif\n\tvoid main (void) {\n\t\thighp vec3 color = vec3(0, 0, 0);\n\t\tivec2 pixelCoords = ivec2(uv0 * vec2(textureSize(morphTexture, 0).xy));\n\t\t\n\t\tfor (int i = 0; i < count; i++) {\n\t\t\tuint textureIndex = morphIndex[i];\n\t\t\tvec3 delta = texelFetch(morphTexture, ivec3(pixelCoords, int(textureIndex)), 0).xyz;\n\t\t\tcolor += morphFactor[i] * delta;\n\t\t}\n\t\t#ifdef MORPH_INT\n\t\t\tcolor = (color - aabbMin) / aabbSize * 65535.0;\n\t\t\tgl_FragColor = uvec4(color, 1u);\n\t\t#else\n\t\t\tgl_FragColor = vec4(color, 1.0);\n\t\t#endif\n\t}\n`;var aL=`\n\tattribute vec2 vertex_position;\n\tvarying vec2 uv0;\n\tvoid main(void) {\n\t\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\t\tuv0 = vertex_position.xy * 0.5 + 0.5;\n\t}\n`;var oL=`\nattribute vec3 vertex_outlineParameters;\nattribute vec3 vertex_shadowParameters;\nvarying vec4 outline_color;\nvarying float outline_thickness;\nvarying vec4 shadow_color;\nvarying vec2 shadow_offset;\nvoid unpackMsdfParams() {\n\tvec3 little = mod(vertex_outlineParameters, 256.);\n\tvec3 big = (vertex_outlineParameters - little) / 256.;\n\toutline_color.rb = little.xy / 255.;\n\toutline_color.ga = big.xy / 255.;\n\toutline_thickness = little.z / 255. * 0.2;\n\tlittle = mod(vertex_shadowParameters, 256.);\n\tbig = (vertex_shadowParameters - little) / 256.;\n\tshadow_color.rb = little.xy / 255.;\n\tshadow_color.ga = big.xy / 255.;\n\tshadow_offset = (vec2(little.z, big.z) / 127. - 1.) * 0.005;\n}\n`;var lL=`\nmat3 dNormalMatrix;\nvec3 getNormal() {\n\tdNormalMatrix = getNormalMatrix(dModelMatrix);\n\tvec3 localNormal = getLocalNormal(vertex_normal);\n\treturn normalize(dNormalMatrix * localNormal);\n}\n`;var hL=`\nattribute vec3 vertex_normal;\nuniform mat3 matrix_normal;\n#ifdef MORPHING_NORMAL\n\t#ifdef MORPHING_INT\n\t\tuniform highp usampler2D morphNormalTex;\n\t#else\n\t\tuniform highp sampler2D morphNormalTex;\n\t#endif\n#endif\nvec3 getLocalNormal(vec3 vertexNormal) {\n\tvec3 localNormal = vertex_normal;\n\t#ifdef MORPHING_NORMAL\n\t\tivec2 morphUV = getTextureMorphCoords();\n\t\t#ifdef MORPHING_INT\n\t\t\tvec3 morphNormal = vec3(texelFetch(morphNormalTex, ivec2(morphUV), 0).xyz) / 65535.0 * 2.0 - 1.0;\n\t\t#else\n\t\t\tvec3 morphNormal = texelFetch(morphNormalTex, ivec2(morphUV), 0).xyz;\n\t\t#endif\n\t\tlocalNormal += morphNormal;\n\t#endif\n\treturn localNormal;\n}\n#if defined(SKIN) || defined(BATCH)\n\tmat3 getNormalMatrix(mat4 modelMatrix) {\n\t\treturn mat3(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz);\n\t}\n#elif defined(INSTANCING)\n\tmat3 getNormalMatrix(mat4 modelMatrix) {\n\t\treturn mat3(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz);\n\t}\n#else\n\tmat3 getNormalMatrix(mat4 modelMatrix) {\n\t\treturn matrix_normal;\n\t}\n#endif\n`;var cL=`\n#ifdef STD_NORMAL_TEXTURE\n\tuniform float material_bumpiness;\n#endif\n#ifdef STD_NORMALDETAIL_TEXTURE\n\tuniform float material_normalDetailMapBumpiness;\n\tvec3 blendNormals(vec3 n1, vec3 n2) {\n\t\tn1 += vec3(0, 0, 1);\n\t\tn2 *= vec3(-1, -1, 1);\n\t\treturn n1 * dot(n1, n2) / n1.z - n2;\n\t}\n#endif\nvoid getNormal() {\n#ifdef STD_NORMAL_TEXTURE\n\tvec3 normalMap = {STD_NORMAL_TEXTURE_DECODE}(texture2DBias({STD_NORMAL_TEXTURE_NAME}, {STD_NORMAL_TEXTURE_UV}, textureBias));\n\tnormalMap = mix(vec3(0.0, 0.0, 1.0), normalMap, material_bumpiness);\n\t#ifdef STD_NORMALDETAIL_TEXTURE\n\t\tvec3 normalDetailMap = {STD_NORMALDETAIL_TEXTURE_DECODE}(texture2DBias({STD_NORMALDETAIL_TEXTURE_NAME}, {STD_NORMALDETAIL_TEXTURE_UV}, textureBias));\n\t\tnormalDetailMap = mix(vec3(0.0, 0.0, 1.0), normalDetailMap, material_normalDetailMapBumpiness);\n\t\tnormalMap = blendNormals(normalMap, normalDetailMap);\n\t#endif\n\tdNormalW = normalize(dTBN * normalMap);\n#else\n\tdNormalW = dVertexNormalW;\n#endif\n}\n`;var dL=`\nuniform float material_opacity;\nvoid getOpacity() {\n\tdAlpha = material_opacity;\n\t#ifdef STD_OPACITY_TEXTURE\n\tdAlpha *= texture2DBias({STD_OPACITY_TEXTURE_NAME}, {STD_OPACITY_TEXTURE_UV}, textureBias).{STD_OPACITY_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_OPACITY_VERTEX\n\tdAlpha *= clamp(vVertexColor.{STD_OPACITY_VERTEX_CHANNEL}, 0.0, 1.0);\n\t#endif\n}\n`;var uL=`\n#if STD_OPACITY_DITHER == BAYER8\n\t#include "bayerPS"\n#endif\nuniform vec4 blueNoiseJitter;\n#if STD_OPACITY_DITHER == BLUENOISE\n\tuniform sampler2D blueNoiseTex32;\n#endif\nvoid opacityDither(float alpha, float id) {\n\t#if STD_OPACITY_DITHER == BAYER8\n\t\tfloat noise = bayer8(floor(mod(gl_FragCoord.xy + blueNoiseJitter.xy + id, 8.0))) / 64.0;\n\t#else\n\t\t#if STD_OPACITY_DITHER == BLUENOISE\n\t\t\tvec2 uv = fract(gl_FragCoord.xy / 32.0 + blueNoiseJitter.xy + id);\n\t\t\tfloat noise = texture2DLod(blueNoiseTex32, uv, 0.0).y;\n\t\t#endif\n\t\t#if STD_OPACITY_DITHER == IGNNOISE\n\t\t\tvec3 magic = vec3(0.06711056, 0.00583715, 52.9829189);\n\t\t\tfloat noise = fract(magic.z * fract(dot(gl_FragCoord.xy + blueNoiseJitter.xy + id, magic.xy)));\n\t\t#endif\n\t#endif\n\tnoise = pow(noise, 2.2);\n\tif (alpha < noise)\n\t\tdiscard;\n}\n`;var fL=`\n`;var pL=`\n#if LIT_BLEND_TYPE == NORMAL || LIT_BLEND_TYPE == ADDITIVEALPHA || defined(LIT_ALPHA_TO_COVERAGE)\n\tgl_FragColor.a = litArgs_opacity;\n#elif LIT_BLEND_TYPE == PREMULTIPLIED\n\tgl_FragColor.rgb *= litArgs_opacity;\n\tgl_FragColor.a = litArgs_opacity;\n#else\n\tgl_FragColor.a = 1.0;\n#endif\n`;var mL=`\nvarying vec2 vUv0;\nuniform sampler2D source;\nvoid main(void) {\n\tgl_FragColor = texture2D(source, vUv0);\n}\n`;var _L=`\nuniform vec3 material_sheen;\nvoid getSheen() {\n\tvec3 sheenColor = material_sheen;\n\t#ifdef STD_SHEEN_TEXTURE\n\tsheenColor *= {STD_SHEEN_TEXTURE_DECODE}(texture2DBias({STD_SHEEN_TEXTURE_NAME}, {STD_SHEEN_TEXTURE_UV}, textureBias)).{STD_SHEEN_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SHEEN_VERTEX\n\tsheenColor *= saturate(vVertexColor.{STD_SHEEN_VERTEX_CHANNEL});\n\t#endif\n\tsSpecularity = sheenColor;\n}\n`;var gL=`\nuniform float material_sheenGloss;\nvoid getSheenGlossiness() {\n\tfloat sheenGlossiness = material_sheenGloss;\n\t#ifdef STD_SHEENGLOSS_TEXTURE\n\tsheenGlossiness *= texture2DBias({STD_SHEENGLOSS_TEXTURE_NAME}, {STD_SHEENGLOSS_TEXTURE_UV}, textureBias).{STD_SHEENGLOSS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SHEENGLOSS_VERTEX\n\tsheenGlossiness *= saturate(vVertexColor.{STD_SHEENGLOSS_VERTEX_CHANNEL});\n\t#endif\n\t#ifdef STD_SHEENGLOSS_INVERT\n\tsheenGlossiness = 1.0 - sheenGlossiness;\n\t#endif\n\tsGlossiness = sheenGlossiness + 0.0000001;\n}\n`;var vL=`\nuniform float material_heightMapFactor;\nvoid getParallax() {\n\tfloat parallaxScale = material_heightMapFactor;\n\tfloat height = texture2DBias({STD_HEIGHT_TEXTURE_NAME}, {STD_HEIGHT_TEXTURE_UV}, textureBias).{STD_HEIGHT_TEXTURE_CHANNEL};\n\theight = height * parallaxScale - parallaxScale * 0.5;\n\tvec3 viewDirT = dViewDirW * dTBN;\n\tviewDirT.z += 0.42;\n\tdUvOffset = height * (viewDirT.xy / viewDirT.z);\n}\n`;var yL=`\nuniform uint meshInstanceId;\nvec4 getPickOutput() {\n\tconst vec4 inv = vec4(1.0 / 255.0);\n\tconst uvec4 shifts = uvec4(16, 8, 0, 24);\n\tuvec4 col = (uvec4(meshInstanceId) >> shifts) & uvec4(0xff);\n\treturn vec4(col) * inv;\n}\n`;var SL=`\nvoid getReflDir(vec3 worldNormal, vec3 viewDir, float gloss, mat3 tbn) {\n\tdReflDirW = normalize(-reflect(viewDir, worldNormal));\n}\n`;var xL=`\nvoid getReflDir(vec3 worldNormal, vec3 viewDir, float gloss, mat3 tbn) {\n\tfloat roughness = sqrt(1.0 - min(gloss, 1.0));\n\tvec2 direction = dAnisotropyRotation;\n\tvec3 anisotropicT = normalize(tbn * vec3(direction, 0.0));\n\tvec3 anisotropicB = normalize(cross(tbn[2], anisotropicT));\n\tfloat anisotropy = dAnisotropy;\n\tvec3 anisotropicDirection = anisotropicB;\n\tvec3 anisotropicTangent = cross(anisotropicDirection, viewDir);\n\tvec3 anisotropicNormal = cross(anisotropicTangent, anisotropicDirection);\n\tfloat bendFactor = 1.0 - anisotropy * (1.0 - roughness);\n\tfloat bendFactor4 = bendFactor * bendFactor * bendFactor * bendFactor;\n\tvec3 bentNormal = normalize(mix(normalize(anisotropicNormal), normalize(worldNormal), bendFactor4));\n\tdReflDirW = reflect(-viewDir, bentNormal);\n}\n`;var TL=`\n#ifdef LIT_CLEARCOAT\nvoid addReflectionCC(vec3 reflDir, float gloss) {\n\tccReflection += calcReflection(reflDir, gloss);\n}\n#endif\n`;var wL=`\nuniform samplerCube texture_cubeMap;\nuniform float material_reflectivity;\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 lookupVec = cubeMapProject(reflDir);\n\tlookupVec.x *= -1.0;\n\treturn {reflectionDecode}(textureCube(texture_cubeMap, lookupVec));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n`;var bL=`\n#ifndef ENV_ATLAS\n\t#define ENV_ATLAS\n\tuniform sampler2D texture_envAtlas;\n#endif\nuniform samplerCube texture_cubeMap;\nuniform float material_reflectivity;\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 dir = cubeMapProject(reflDir) * vec3(-1.0, 1.0, 1.0);\n\tvec2 uv = toSphericalUv(dir);\n\tfloat level = saturate(1.0 - gloss) * 5.0;\n\tfloat ilevel = floor(level);\n\tfloat flevel = level - ilevel;\n\tvec3 sharp = {reflectionCubemapDecode}(textureCube(texture_cubeMap, dir));\n\tvec3 roughA = {reflectionDecode}(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel)));\n\tvec3 roughB = {reflectionDecode}(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel + 1.0)));\n\treturn processEnvironment(mix(sharp, mix(roughA, roughB, flevel), min(level, 1.0)));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n`;var EL=`\n#ifndef ENV_ATLAS\n#define ENV_ATLAS\n\tuniform sampler2D texture_envAtlas;\n#endif\nuniform float material_reflectivity;\nfloat shinyMipLevel(vec2 uv) {\n\tvec2 dx = dFdx(uv);\n\tvec2 dy = dFdy(uv);\n\tvec2 uv2 = vec2(fract(uv.x + 0.5), uv.y);\n\tvec2 dx2 = dFdx(uv2);\n\tvec2 dy2 = dFdy(uv2);\n\tfloat maxd = min(max(dot(dx, dx), dot(dy, dy)), max(dot(dx2, dx2), dot(dy2, dy2)));\n\treturn clamp(0.5 * log2(maxd) - 1.0 + textureBias, 0.0, 5.0);\n}\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 dir = cubeMapProject(reflDir) * vec3(-1.0, 1.0, 1.0);\n\tvec2 uv = toSphericalUv(dir);\n\tfloat level = saturate(1.0 - gloss) * 5.0;\n\tfloat ilevel = floor(level);\n\tfloat level2 = shinyMipLevel(uv * atlasSize);\n\tfloat ilevel2 = floor(level2);\n\tvec2 uv0, uv1;\n\tfloat weight;\n\tif (ilevel == 0.0) {\n\t\tuv0 = mapShinyUv(uv, ilevel2);\n\t\tuv1 = mapShinyUv(uv, ilevel2 + 1.0);\n\t\tweight = level2 - ilevel2;\n\t} else {\n\t\tuv0 = uv1 = mapRoughnessUv(uv, ilevel);\n\t\tweight = 0.0;\n\t}\n\tvec3 linearA = {reflectionDecode}(texture2D(texture_envAtlas, uv0));\n\tvec3 linearB = {reflectionDecode}(texture2D(texture_envAtlas, uv1));\n\tvec3 linear0 = mix(linearA, linearB, weight);\n\tvec3 linear1 = {reflectionDecode}(texture2D(texture_envAtlas, mapRoughnessUv(uv, ilevel + 1.0)));\n\treturn processEnvironment(mix(linear0, linear1, level - ilevel));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n`;var AL=`\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform mat4 matrix_view;\n#endif\nuniform sampler2D texture_sphereMap;\nuniform float material_reflectivity;\nvec3 calcReflection(vec3 reflDir, float gloss) {\n\tvec3 reflDirV = (mat3(matrix_view) * reflDir);\n\tfloat m = 2.0 * sqrt(dot(reflDirV.xy, reflDirV.xy) + (reflDirV.z + 1.0) * (reflDirV.z + 1.0));\n\tvec2 sphereMapUv = reflDirV.xy / m + 0.5;\n\treturn {reflectionDecode}(texture2D(texture_sphereMap, sphereMapUv));\n}\nvoid addReflection(vec3 reflDir, float gloss) {   \n\tdReflection += vec4(calcReflection(reflDir, gloss), material_reflectivity);\n}\n`;var CL=`\nvoid addReflectionSheen(vec3 worldNormal, vec3 viewDir, float gloss) {\n\tfloat NoV = dot(worldNormal, viewDir);\n\tfloat alphaG = gloss * gloss;\n\tfloat a = gloss < 0.25 ? -339.2 * alphaG + 161.4 * gloss - 25.9 : -8.48 * alphaG + 14.3 * gloss - 9.95;\n\tfloat b = gloss < 0.25 ? 44.0 * alphaG - 23.7 * gloss + 3.26 : 1.97 * alphaG - 3.27 * gloss + 0.72;\n\tfloat DG = exp( a * NoV + b ) + ( gloss < 0.25 ? 0.0 : 0.1 * ( gloss - 0.25 ) );\n\tsReflection += calcReflection(worldNormal, 0.0) * saturate(DG);\n}\n`;var PL=`\nvec3 refract2(vec3 viewVec, vec3 normal, float IOR) {\n\tfloat vn = dot(viewVec, normal);\n\tfloat k = 1.0 - IOR * IOR * (1.0 - vn * vn);\n\tvec3 refrVec = IOR * viewVec - (IOR * vn + sqrt(k)) * normal;\n\treturn refrVec;\n}\nvoid addRefraction(\n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tfloat thickness, \n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 albedo, \n\tfloat transmission,\n\tfloat refractionIndex,\n\tfloat dispersion\n#if defined(LIT_IRIDESCENCE)\n\t, vec3 iridescenceFresnel,\n\tfloat iridescenceIntensity\n#endif \n) {\n\tvec4 tmpRefl = dReflection;\n\tvec3 reflectionDir = refract2(-viewDir, worldNormal, refractionIndex);\n\tdReflection = vec4(0);\n\taddReflection(reflectionDir, gloss);\n\tdDiffuseLight = mix(dDiffuseLight, dReflection.rgb * albedo, transmission);\n\tdReflection = tmpRefl;\n}\n`;var LL=`\nuniform float material_invAttenuationDistance;\nuniform vec3 material_attenuation;\nvec3 evalRefractionColor(vec3 refractionVector, float gloss, float refractionIndex) {\n\tvec4 pointOfRefraction = vec4(vPositionW + refractionVector, 1.0);\n\tvec4 projectionPoint = matrix_viewProjection * pointOfRefraction;\n\tvec2 uv = getGrabScreenPos(projectionPoint);\n\tfloat iorToRoughness = (1.0 - gloss) * clamp((1.0 / refractionIndex) * 2.0 - 2.0, 0.0, 1.0);\n\tfloat refractionLod = log2(uScreenSize.x) * iorToRoughness;\n\tvec3 refraction = texture2DLod(uSceneColorMap, uv, refractionLod).rgb;\n\treturn refraction;\n}\nvoid addRefraction(\n\tvec3 worldNormal, \n\tvec3 viewDir, \n\tfloat thickness, \n\tfloat gloss, \n\tvec3 specularity, \n\tvec3 albedo, \n\tfloat transmission,\n\tfloat refractionIndex,\n\tfloat dispersion\n#if defined(LIT_IRIDESCENCE)\n\t, vec3 iridescenceFresnel,\n\tfloat iridescenceIntensity\n#endif\n) {\n\tvec3 modelScale;\n\tmodelScale.x = length(vec3(matrix_model[0].xyz));\n\tmodelScale.y = length(vec3(matrix_model[1].xyz));\n\tmodelScale.z = length(vec3(matrix_model[2].xyz));\n\tvec3 scale = thickness * modelScale;\n\tvec3 refractionVector = normalize(refract(-viewDir, worldNormal, refractionIndex)) * scale;\n\tvec3 refraction = evalRefractionColor(refractionVector, gloss, refractionIndex);\n\t#ifdef LIT_DISPERSION\n\t\tfloat halfSpread = (1.0 / refractionIndex - 1.0) * 0.025 * dispersion;\n\t\tfloat refractionIndexR = refractionIndex - halfSpread;\n\t\trefractionVector = normalize(refract(-viewDir, worldNormal, refractionIndexR)) * scale;\n\t\trefraction.r = evalRefractionColor(refractionVector, gloss, refractionIndexR).r;\n\t\tfloat refractionIndexB = refractionIndex + halfSpread;\n\t\trefractionVector = normalize(refract(-viewDir, worldNormal, refractionIndexB)) * scale;\n\t\trefraction.b = evalRefractionColor(refractionVector, gloss, refractionIndexB).b;\n\t#endif\n\tvec3 transmittance;\n\tif (material_invAttenuationDistance != 0.0)\n\t{\n\t\tvec3 attenuation = -log(material_attenuation) * material_invAttenuationDistance;\n\t\ttransmittance = exp(-attenuation * length(refractionVector));\n\t}\n\telse\n\t{\n\t\ttransmittance = refraction;\n\t}\n\tvec3 fresnel = vec3(1.0) - \n\t\tgetFresnel(\n\t\t\tdot(viewDir, worldNormal), \n\t\t\tgloss, \n\t\t\tspecularity\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t, iridescenceFresnel,\n\t\t\tiridescenceIntensity\n\t\t#endif\n\t\t);\n\tdDiffuseLight = mix(dDiffuseLight, refraction * transmittance * fresnel, transmission);\n}\n`;var DL=`\nvarying vec2 vUv0;\n#ifdef CUBEMAP_SOURCE\n\tuniform samplerCube sourceCube;\n#else\n\tuniform sampler2D sourceTex;\n#endif\n#ifdef USE_SAMPLES_TEX\n\tuniform sampler2D samplesTex;\n\tuniform vec2 samplesTexInverseSize;\n#endif\nuniform vec3 params;\nfloat targetFace() { return params.x; }\nfloat targetTotalPixels() { return params.y; }\nfloat sourceTotalPixels() { return params.z; }\nfloat PI = 3.141592653589793;\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\n#include "decodePS"\n#include "encodePS"\nvec3 modifySeams(vec3 dir, float scale) {\n\tvec3 adir = abs(dir);\n\tfloat M = max(max(adir.x, adir.y), adir.z);\n\treturn dir / M * vec3(\n\t\tadir.x == M ? 1.0 : scale,\n\t\tadir.y == M ? 1.0 : scale,\n\t\tadir.z == M ? 1.0 : scale\n\t);\n}\nvec2 toSpherical(vec3 dir) {\n\treturn vec2(dir.xz == vec2(0.0) ? 0.0 : atan(dir.x, dir.z), asin(dir.y));\n}\nvec3 fromSpherical(vec2 uv) {\n\treturn vec3(cos(uv.y) * sin(uv.x),\n\t\t\t\tsin(uv.y),\n\t\t\t\tcos(uv.y) * cos(uv.x));\n}\nvec3 getDirectionEquirect() {\n\treturn fromSpherical((vec2(vUv0.x, 1.0 - vUv0.y) * 2.0 - 1.0) * vec2(PI, PI * 0.5));\n}\nfloat signNotZero(float k){\n\treturn(k >= 0.0) ? 1.0 : -1.0;\n}\nvec2 signNotZero(vec2 v) {\n\treturn vec2(signNotZero(v.x), signNotZero(v.y));\n}\nvec3 octDecode(vec2 o) {\n\tvec3 v = vec3(o.x, 1.0 - abs(o.x) - abs(o.y), o.y);\n\tif (v.y < 0.0) {\n\t\tv.xz = (1.0 - abs(v.zx)) * signNotZero(v.xz);\n\t}\n\treturn normalize(v);\n}\nvec3 getDirectionOctahedral() {\n\treturn octDecode(vec2(vUv0.x, 1.0 - vUv0.y) * 2.0 - 1.0);\n}\nvec2 octEncode(in vec3 v) {\n\tfloat l1norm = abs(v.x) + abs(v.y) + abs(v.z);\n\tvec2 result = v.xz * (1.0 / l1norm);\n\tif (v.y < 0.0) {\n\t\tresult = (1.0 - abs(result.yx)) * signNotZero(result.xy);\n\t}\n\treturn result;\n}\n#ifdef CUBEMAP_SOURCE\n\tvec4 sampleCubemap(vec3 dir) {\n\t\treturn textureCube(sourceCube, modifySeams(dir, 1.0));\n\t}\n\tvec4 sampleCubemap(vec2 sph) {\n\t\treturn sampleCubemap(fromSpherical(sph));\n\t}\n\tvec4 sampleCubemap(vec3 dir, float mipLevel) {\n\t\treturn textureCubeLod(sourceCube, modifySeams(dir, 1.0), mipLevel);\n\t}\n\tvec4 sampleCubemap(vec2 sph, float mipLevel) {\n\t\treturn sampleCubemap(fromSpherical(sph), mipLevel);\n\t}\n#else\n\tvec4 sampleEquirect(vec2 sph) {\n\t\tvec2 uv = sph / vec2(PI * 2.0, PI) + 0.5;\n\t\treturn texture2D(sourceTex, vec2(uv.x, 1.0 - uv.y));\n\t}\n\tvec4 sampleEquirect(vec3 dir) {\n\t\treturn sampleEquirect(toSpherical(dir));\n\t}\n\tvec4 sampleEquirect(vec2 sph, float mipLevel) {\n\t\tvec2 uv = sph / vec2(PI * 2.0, PI) + 0.5;\n\t\treturn texture2DLod(sourceTex, vec2(uv.x, 1.0 - uv.y), mipLevel);\n\t}\n\tvec4 sampleEquirect(vec3 dir, float mipLevel) {\n\t\treturn sampleEquirect(toSpherical(dir), mipLevel);\n\t}\n\tvec4 sampleOctahedral(vec3 dir) {\n\t\tvec2 uv = octEncode(dir) * 0.5 + 0.5;\n\t\treturn texture2D(sourceTex, vec2(uv.x, 1.0 - uv.y));\n\t}\n\tvec4 sampleOctahedral(vec2 sph) {\n\t\treturn sampleOctahedral(fromSpherical(sph));\n\t}\n\tvec4 sampleOctahedral(vec3 dir, float mipLevel) {\n\t\tvec2 uv = octEncode(dir) * 0.5 + 0.5;\n\t\treturn texture2DLod(sourceTex, vec2(uv.x, 1.0 - uv.y), mipLevel);\n\t}\n\tvec4 sampleOctahedral(vec2 sph, float mipLevel) {\n\t\treturn sampleOctahedral(fromSpherical(sph), mipLevel);\n\t}\n#endif\nvec3 getDirectionCubemap() {\n\tvec2 st = vUv0 * 2.0 - 1.0;\n\tfloat face = targetFace();\n\tvec3 vec;\n\tif (face == 0.0) {\n\t\tvec = vec3(1, -st.y, -st.x);\n\t} else if (face == 1.0) {\n\t\tvec = vec3(-1, -st.y, st.x);\n\t} else if (face == 2.0) {\n\t\tvec = vec3(st.x, 1, st.y);\n\t} else if (face == 3.0) {\n\t\tvec = vec3(st.x, -1, -st.y);\n\t} else if (face == 4.0) {\n\t\tvec = vec3(st.x, -st.y, 1);\n\t} else {\n\t\tvec = vec3(-st.x, -st.y, -1);\n\t}\n\treturn normalize(modifySeams(vec, 1.0));\n}\nmat3 matrixFromVector(vec3 n) {\n\tfloat a = 1.0 / (1.0 + n.z);\n\tfloat b = -n.x * n.y * a;\n\tvec3 b1 = vec3(1.0 - n.x * n.x * a, b, -n.x);\n\tvec3 b2 = vec3(b, 1.0 - n.y * n.y * a, -n.y);\n\treturn mat3(b1, b2, n);\n}\nmat3 matrixFromVectorSlow(vec3 n) {\n\tvec3 up = (1.0 - abs(n.y) <= 0.0000001) ? vec3(0.0, 0.0, n.y > 0.0 ? 1.0 : -1.0) : vec3(0.0, 1.0, 0.0);\n\tvec3 x = normalize(cross(up, n));\n\tvec3 y = cross(n, x);\n\treturn mat3(x, y, n);\n}\nvec4 reproject() {\n\tif ({NUM_SAMPLES} <= 1) {\n\t\treturn {ENCODE_FUNC}({DECODE_FUNC}({SOURCE_FUNC}({TARGET_FUNC}())));\n\t} else {\n\t\tvec3 t = {TARGET_FUNC}();\n\t\tvec3 tu = dFdx(t);\n\t\tvec3 tv = dFdy(t);\n\t\tvec3 result = vec3(0.0);\n\t\tfor (float u = 0.0; u < {NUM_SAMPLES_SQRT}; ++u) {\n\t\t\tfor (float v = 0.0; v < {NUM_SAMPLES_SQRT}; ++v) {\n\t\t\t\tresult += {DECODE_FUNC}({SOURCE_FUNC}(normalize(t +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttu * (u / {NUM_SAMPLES_SQRT} - 0.5) +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttv * (v / {NUM_SAMPLES_SQRT} - 0.5))));\n\t\t\t}\n\t\t}\n\t\treturn {ENCODE_FUNC}(result / ({NUM_SAMPLES_SQRT} * {NUM_SAMPLES_SQRT}));\n\t}\n}\nvec4 unpackFloat = vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0);\n#ifdef USE_SAMPLES_TEX\n\tvoid unpackSample(int i, out vec3 L, out float mipLevel) {\n\t\tfloat u = (float(i * 4) + 0.5) * samplesTexInverseSize.x;\n\t\tfloat v = (floor(u) + 0.5) * samplesTexInverseSize.y;\n\t\tvec4 raw;\n\t\traw.x = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat); u += samplesTexInverseSize.x;\n\t\traw.y = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat); u += samplesTexInverseSize.x;\n\t\traw.z = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat); u += samplesTexInverseSize.x;\n\t\traw.w = dot(texture2D(samplesTex, vec2(u, v)), unpackFloat);\n\t\tL.xyz = raw.xyz * 2.0 - 1.0;\n\t\tmipLevel = raw.w * 8.0;\n\t}\n\tvec4 prefilterSamples() {\n\t\tmat3 vecSpace = matrixFromVectorSlow({TARGET_FUNC}());\n\t\tvec3 L;\n\t\tfloat mipLevel;\n\t\tvec3 result = vec3(0.0);\n\t\tfloat totalWeight = 0.0;\n\t\tfor (int i = 0; i < {NUM_SAMPLES}; ++i) {\n\t\t\tunpackSample(i, L, mipLevel);\n\t\t\tresult += {DECODE_FUNC}({SOURCE_FUNC}(vecSpace * L, mipLevel)) * L.z;\n\t\t\ttotalWeight += L.z;\n\t\t}\n\t\treturn {ENCODE_FUNC}(result / totalWeight);\n\t}\n\tvec4 prefilterSamplesUnweighted() {\n\t\tmat3 vecSpace = matrixFromVectorSlow({TARGET_FUNC}());\n\t\tvec3 L;\n\t\tfloat mipLevel;\n\t\tvec3 result = vec3(0.0);\n\t\tfloat totalWeight = 0.0;\n\t\tfor (int i = 0; i < {NUM_SAMPLES}; ++i) {\n\t\t\tunpackSample(i, L, mipLevel);\n\t\t\tresult += {DECODE_FUNC}({SOURCE_FUNC}(vecSpace * L, mipLevel));\n\t\t}\n\t\treturn {ENCODE_FUNC}(result / float({NUM_SAMPLES}));\n\t}\n#endif\nvoid main(void) {\n\tgl_FragColor = {PROCESS_FUNC}();\n}\n`;var ML=`\nattribute vec2 vertex_position;\nuniform vec4 uvMod;\nvarying vec2 vUv0;\nvoid main(void) {\n\tgl_Position = vec4(vertex_position, 0.5, 1.0);\n\tvUv0 = getImageEffectUV((vertex_position.xy * 0.5 + 0.5) * uvMod.xy + uvMod.zw);\n}\n`;var IL=`\nuniform highp sampler2D uSceneDepthMap;\n#ifndef SCREENSIZE\n\t#define SCREENSIZE\n\tuniform vec4 uScreenSize;\n#endif\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform mat4 matrix_view;\n#endif\n#ifndef LINEARIZE_DEPTH\n\t#define LINEARIZE_DEPTH\n\t\n\t#ifndef CAMERAPLANES\n\t\t#define CAMERAPLANES\n\t\tuniform vec4 camera_params;\n\t#endif\n\tfloat linearizeDepth(float z) {\n\t\tif (camera_params.w == 0.0)\n\t\t\treturn (camera_params.z * camera_params.y) / (camera_params.y + z * (camera_params.z - camera_params.y));\n\t\telse\n\t\t\treturn camera_params.z + z * (camera_params.y - camera_params.z);\n\t}\n#endif\nfloat delinearizeDepth(float linearDepth) {\n\tif (camera_params.w == 0.0) {\n\t\treturn (camera_params.y * (camera_params.z - linearDepth)) / (linearDepth * (camera_params.z - camera_params.y));\n\t} else {\n\t\treturn (linearDepth - camera_params.z) / (camera_params.y - camera_params.z);\n\t}\n}\nfloat getLinearScreenDepth(vec2 uv) {\n\t#ifdef SCENE_DEPTHMAP_LINEAR\n\t\t#ifdef SCENE_DEPTHMAP_FLOAT\n\t\t\treturn texture2D(uSceneDepthMap, uv).r;\n\t\t#else\n\t\t\tivec2 textureSize = textureSize(uSceneDepthMap, 0);\n\t\t\tivec2 texel = ivec2(uv * vec2(textureSize));\n\t\t\tvec4 data = texelFetch(uSceneDepthMap, texel, 0);\n\t\t\tuint intBits = \n\t\t\t\t(uint(data.r * 255.0) << 24u) |\n\t\t\t\t(uint(data.g * 255.0) << 16u) |\n\t\t\t\t(uint(data.b * 255.0) << 8u) |\n\t\t\t\tuint(data.a * 255.0);\n\t\t\treturn uintBitsToFloat(intBits);\n\t\t#endif\n\t#else\n\t\treturn linearizeDepth(texture2D(uSceneDepthMap, uv).r);\n\t#endif\n}\n#ifndef VERTEXSHADER\n\tfloat getLinearScreenDepth() {\n\t\tvec2 uv = gl_FragCoord.xy * uScreenSize.zw;\n\t\treturn getLinearScreenDepth(uv);\n\t}\n#endif\nfloat getLinearDepth(vec3 pos) {\n\treturn -(matrix_view * vec4(pos, 1.0)).z;\n}\n`;var RL=`\nint getShadowCascadeIndex(vec4 shadowCascadeDistances, int shadowCascadeCount) {\n\tfloat depth = 1.0 / gl_FragCoord.w;\n\tvec4 comparisons = step(shadowCascadeDistances, vec4(depth));\n\tint cascadeIndex = int(dot(comparisons, vec4(1.0)));\n\treturn min(cascadeIndex, shadowCascadeCount - 1);\n}\nint ditherShadowCascadeIndex(int cascadeIndex, vec4 shadowCascadeDistances, int shadowCascadeCount, float blendFactor) {\n \n\tif (cascadeIndex < shadowCascadeCount - 1) {\n\t\tfloat currentRangeEnd = shadowCascadeDistances[cascadeIndex];\n\t\tfloat transitionStart = blendFactor * currentRangeEnd;\n\t\tfloat depth = 1.0 / gl_FragCoord.w;\n\t\tif (depth > transitionStart) {\n\t\t\tfloat transitionFactor = smoothstep(transitionStart, currentRangeEnd, depth);\n\t\t\tfloat dither = fract(sin(dot(gl_FragCoord.xy, vec2(12.9898, 78.233))) * 43758.5453);\n\t\t\tif (dither < transitionFactor) {\n\t\t\t\tcascadeIndex += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn cascadeIndex;\n}\nvec3 fadeShadow(vec3 shadowCoord, vec4 shadowCascadeDistances) {\t\t\t\t  \n\tfloat depth = 1.0 / gl_FragCoord.w;\n\tif (depth > shadowCascadeDistances.w) {\n\t\tshadowCoord.z = -9999999.0;\n\t}\n\treturn shadowCoord;\n}\n`;var OL=`\nfloat linstep(float a, float b, float v) {\n\treturn saturate((v - a) / (b - a));\n}\nfloat reduceLightBleeding(float pMax, float amount) {\n\t return linstep(amount, 1.0, pMax);\n}\nfloat chebyshevUpperBound(vec2 moments, float mean, float minVariance, float lightBleedingReduction) {\n\tfloat variance = moments.y - (moments.x * moments.x);\n\tvariance = max(variance, minVariance);\n\tfloat d = mean - moments.x;\n\tfloat pMax = variance / (variance + (d * d));\n\tpMax = reduceLightBleeding(pMax, lightBleedingReduction);\n\treturn (mean <= moments.x ? 1.0 : pMax);\n}\nfloat calculateEVSM(vec3 moments, float Z, float vsmBias, float exponent) {\n\tZ = 2.0 * Z - 1.0;\n\tfloat warpedDepth = exp(exponent * Z);\n\tmoments.xy += vec2(warpedDepth, warpedDepth*warpedDepth) * (1.0 - moments.z);\n\tfloat VSMBias = vsmBias;\n\tfloat depthScale = VSMBias * exponent * warpedDepth;\n\tfloat minVariance1 = depthScale * depthScale;\n\treturn chebyshevUpperBound(moments.xy, warpedDepth, minVariance1, 0.1);\n}\nfloat VSM16(TEXTURE_ACCEPT(tex), vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\n\tvec3 moments = texture2DLod(tex, texCoords, 0.0).xyz;\n\treturn calculateEVSM(moments, Z, vsmBias, exponent);\n}\nfloat getShadowVSM16(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent) {\n\treturn VSM16(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, exponent);\n}\nfloat getShadowSpotVSM16(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {\n\treturn VSM16(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, length(lightDir) * shadowParams.w + shadowParams.z, shadowParams.y, exponent);\n}\nfloat VSM32(TEXTURE_ACCEPT(tex), vec2 texCoords, float resolution, float Z, float vsmBias, float exponent) {\n\t#ifdef CAPS_TEXTURE_FLOAT_FILTERABLE\n\t\tvec3 moments = texture2DLod(tex, texCoords, 0.0).xyz;\n\t#else\n\t\tfloat pixelSize = 1.0 / resolution;\n\t\ttexCoords -= vec2(pixelSize);\n\t\tvec3 s00 = texture2DLod(tex, texCoords, 0.0).xyz;\n\t\tvec3 s10 = texture2DLod(tex, texCoords + vec2(pixelSize, 0), 0.0).xyz;\n\t\tvec3 s01 = texture2DLod(tex, texCoords + vec2(0, pixelSize), 0.0).xyz;\n\t\tvec3 s11 = texture2DLod(tex, texCoords + vec2(pixelSize), 0.0).xyz;\n\t\tvec2 fr = fract(texCoords * resolution);\n\t\tvec3 h0 = mix(s00, s10, fr.x);\n\t\tvec3 h1 = mix(s01, s11, fr.x);\n\t\tvec3 moments = mix(h0, h1, fr.y);\n\t#endif\n\treturn calculateEVSM(moments, Z, vsmBias, exponent);\n}\nfloat getShadowVSM32(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent) {\n\treturn VSM32(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, exponent);\n}\nfloat getShadowSpotVSM32(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, float exponent, vec3 lightDir) {\n\tfloat Z = length(lightDir) * shadowParams.w + shadowParams.z;\n\treturn VSM32(TEXTURE_PASS(shadowMap), shadowCoord.xy, shadowParams.x, Z, shadowParams.y, exponent);\n}\n`;var FL=`\nfloat getShadowPCF1x1(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn textureShadow(shadowMap, shadowCoord);\n}\nfloat getShadowSpotPCF1x1(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn textureShadow(shadowMap, shadowCoord);\n}\n#ifndef WEBGPU\nfloat getShadowOmniPCF1x1(samplerCubeShadow shadowMap, vec3 shadowCoord, vec4 shadowParams, vec3 lightDir) {\n\tfloat shadowZ = length(lightDir) * shadowParams.w + shadowParams.z;\n\treturn texture(shadowMap, vec4(lightDir, shadowZ));\n}\n#endif\n`;var NL=`\nfloat _getShadowPCF3x3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec3 shadowParams) {\n\tfloat z = shadowCoord.z;\n\tvec2 uv = shadowCoord.xy * shadowParams.x;\n\tfloat shadowMapSizeInv = 1.0 / shadowParams.x;\n\tvec2 base_uv = floor(uv + 0.5);\n\tfloat s = (uv.x + 0.5 - base_uv.x);\n\tfloat t = (uv.y + 0.5 - base_uv.y); \n\tbase_uv -= vec2(0.5);\n\tbase_uv *= shadowMapSizeInv;\n\tfloat sum = 0.0;\n\tfloat uw0 = (3.0 - 2.0 * s);\n\tfloat uw1 = (1.0 + 2.0 * s);\n\tfloat u0 = (2.0 - s) / uw0 - 1.0;\n\tfloat u1 = s / uw1 + 1.0;\n\tfloat vw0 = (3.0 - 2.0 * t);\n\tfloat vw1 = (1.0 + 2.0 * t);\n\tfloat v0 = (2.0 - t) / vw0 - 1.0;\n\tfloat v1 = t / vw1 + 1.0;\n\tu0 = u0 * shadowMapSizeInv + base_uv.x;\n\tv0 = v0 * shadowMapSizeInv + base_uv.y;\n\tu1 = u1 * shadowMapSizeInv + base_uv.x;\n\tv1 = v1 * shadowMapSizeInv + base_uv.y;\n\tsum += uw0 * vw0 * textureShadow(shadowMap, vec3(u0, v0, z));\n\tsum += uw1 * vw0 * textureShadow(shadowMap, vec3(u1, v0, z));\n\tsum += uw0 * vw1 * textureShadow(shadowMap, vec3(u0, v1, z));\n\tsum += uw1 * vw1 * textureShadow(shadowMap, vec3(u1, v1, z));\n\tsum *= 1.0f / 16.0;\n\treturn sum;\n}\nfloat getShadowPCF3x3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\nfloat getShadowSpotPCF3x3(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF3x3(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\n#ifndef WEBGPU\nfloat getShadowOmniPCF3x3(samplerCubeShadow shadowMap, vec4 shadowParams, vec3 dir) {\n\t\n\tfloat shadowZ = length(dir) * shadowParams.w + shadowParams.z;\n\tfloat z = 1.0 / float(textureSize(shadowMap, 0));\n\tvec3 tc = normalize(dir);\n\tmediump vec4 shadows;\n\tshadows.x = texture(shadowMap, vec4(tc + vec3( z, z, z), shadowZ));\n\tshadows.y = texture(shadowMap, vec4(tc + vec3(-z,-z, z), shadowZ));\n\tshadows.z = texture(shadowMap, vec4(tc + vec3(-z, z,-z), shadowZ));\n\tshadows.w = texture(shadowMap, vec4(tc + vec3( z,-z,-z), shadowZ));\n\treturn dot(shadows, vec4(0.25));\n}\nfloat getShadowOmniPCF3x3(samplerCubeShadow shadowMap, vec3 shadowCoord, vec4 shadowParams, vec3 lightDir) {\n\treturn getShadowOmniPCF3x3(shadowMap, shadowParams, lightDir);\n}\n#endif\n`;var kL=`\nfloat _getShadowPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec3 shadowParams) {\n\tfloat z = shadowCoord.z;\n\tvec2 uv = shadowCoord.xy * shadowParams.x;\n\tfloat shadowMapSizeInv = 1.0 / shadowParams.x;\n\tvec2 base_uv = floor(uv + 0.5);\n\tfloat s = (uv.x + 0.5 - base_uv.x);\n\tfloat t = (uv.y + 0.5 - base_uv.y);\n\tbase_uv -= vec2(0.5);\n\tbase_uv *= shadowMapSizeInv;\n\tfloat uw0 = (4.0 - 3.0 * s);\n\tfloat uw1 = 7.0;\n\tfloat uw2 = (1.0 + 3.0 * s);\n\tfloat u0 = (3.0 - 2.0 * s) / uw0 - 2.0;\n\tfloat u1 = (3.0 + s) / uw1;\n\tfloat u2 = s / uw2 + 2.0;\n\tfloat vw0 = (4.0 - 3.0 * t);\n\tfloat vw1 = 7.0;\n\tfloat vw2 = (1.0 + 3.0 * t);\n\tfloat v0 = (3.0 - 2.0 * t) / vw0 - 2.0;\n\tfloat v1 = (3.0 + t) / vw1;\n\tfloat v2 = t / vw2 + 2.0;\n\tfloat sum = 0.0;\n\tu0 = u0 * shadowMapSizeInv + base_uv.x;\n\tv0 = v0 * shadowMapSizeInv + base_uv.y;\n\tu1 = u1 * shadowMapSizeInv + base_uv.x;\n\tv1 = v1 * shadowMapSizeInv + base_uv.y;\n\tu2 = u2 * shadowMapSizeInv + base_uv.x;\n\tv2 = v2 * shadowMapSizeInv + base_uv.y;\n\tsum += uw0 * vw0 * textureShadow(shadowMap, vec3(u0, v0, z));\n\tsum += uw1 * vw0 * textureShadow(shadowMap, vec3(u1, v0, z));\n\tsum += uw2 * vw0 * textureShadow(shadowMap, vec3(u2, v0, z));\n\tsum += uw0 * vw1 * textureShadow(shadowMap, vec3(u0, v1, z));\n\tsum += uw1 * vw1 * textureShadow(shadowMap, vec3(u1, v1, z));\n\tsum += uw2 * vw1 * textureShadow(shadowMap, vec3(u2, v1, z));\n\tsum += uw0 * vw2 * textureShadow(shadowMap, vec3(u0, v2, z));\n\tsum += uw1 * vw2 * textureShadow(shadowMap, vec3(u1, v2, z));\n\tsum += uw2 * vw2 * textureShadow(shadowMap, vec3(u2, v2, z));\n\tsum *= 1.0f / 144.0;\n\tsum = saturate(sum);\n\treturn sum;\n}\nfloat getShadowPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\nfloat getShadowSpotPCF5x5(SHADOWMAP_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams) {\n\treturn _getShadowPCF5x5(SHADOWMAP_PASS(shadowMap), shadowCoord, shadowParams.xyz);\n}\n`;var BL=`\n#define PCSS_SAMPLE_COUNT 16\nuniform float pcssDiskSamples[PCSS_SAMPLE_COUNT];\nuniform float pcssSphereSamples[PCSS_SAMPLE_COUNT];\nvec2 vogelDisk(int sampleIndex, float count, float phi, float r) {\n\tconst float GoldenAngle = 2.4;\n\tfloat theta = float(sampleIndex) * GoldenAngle + phi;\n\tfloat sine = sin(theta);\n\tfloat cosine = cos(theta);\n\treturn vec2(r * cosine, r * sine);\n}\nvec3 vogelSphere(int sampleIndex, float count, float phi, float r) {\n\tconst float GoldenAngle = 2.4;\n\tfloat theta = float(sampleIndex) * GoldenAngle + phi;\n\tfloat weight = float(sampleIndex) / count;\n\treturn vec3(cos(theta) * r, weight, sin(theta) * r);\n}\nfloat noise(vec2 screenPos) {\n\tconst float PHI = 1.61803398874989484820459;\n\treturn fract(sin(dot(screenPos * PHI, screenPos)) * screenPos.x);\n}\nfloat viewSpaceDepth(float depth, mat4 invProjection) {\n\tfloat z = depth * 2.0 - 1.0;\n\tvec4 clipSpace = vec4(0.0, 0.0, z, 1.0);\n\tvec4 viewSpace = invProjection * clipSpace;\n\treturn viewSpace.z;\n}\nfloat PCSSBlockerDistance(TEXTURE_ACCEPT(shadowMap), vec2 sampleCoords[PCSS_SAMPLE_COUNT], vec2 shadowCoords, vec2 searchSize, float z, vec4 cameraParams) {\n\tfloat blockers = 0.0;\n\tfloat averageBlocker = 0.0;\n\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {\n\t\tvec2 offset = sampleCoords[i] * searchSize;\n\t\tvec2 sampleUV = shadowCoords + offset;\n\t\tfloat blocker = texture2DLod(shadowMap, sampleUV, 0.0).r;\n\t\tfloat isBlocking = step(blocker, z);\n\t\tblockers += isBlocking;\n\t\taverageBlocker += blocker * isBlocking;\n\t}\n\tif (blockers > 0.0)\n\t\treturn averageBlocker / blockers;\n\treturn -1.0;\n}\nfloat PCSS(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoords, vec4 cameraParams, vec2 shadowSearchArea) {\n\tfloat receiverDepth = linearizeDepthWithParams(shadowCoords.z, cameraParams);\n\tvec2 samplePoints[PCSS_SAMPLE_COUNT];\n\tconst float PI = 3.141592653589793;\n\tfloat noise = noise( gl_FragCoord.xy ) * 2.0 * PI;\n\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {\n\t\tfloat pcssPresample = pcssDiskSamples[i];\n\t\tsamplePoints[i] = vogelDisk(i, float(PCSS_SAMPLE_COUNT), noise, pcssPresample);\n\t}\n\tfloat averageBlocker = PCSSBlockerDistance(TEXTURE_PASS(shadowMap), samplePoints, shadowCoords.xy, shadowSearchArea, receiverDepth, cameraParams);\n\tif (averageBlocker == -1.0) {\n\t\treturn 1.0;\n\t} else {\n\t\tfloat depthDifference = (receiverDepth - averageBlocker) / 3.0;\n\t\tvec2 filterRadius = depthDifference * shadowSearchArea;\n\t\tfloat shadow = 0.0;\n\t\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i ++)\n\t\t{\n\t\t\tvec2 sampleUV = samplePoints[i] * filterRadius;\n\t\t\tsampleUV = shadowCoords.xy + sampleUV;\n\t\t\tfloat depth = texture2DLod(shadowMap, sampleUV, 0.0).r;\n\t\t\tshadow += step(receiverDepth, depth);\n\t\t}\n\t\treturn shadow / float(PCSS_SAMPLE_COUNT);\n\t} \n}\n#ifndef WEBGPU\nfloat PCSSCubeBlockerDistance(samplerCube shadowMap, vec3 lightDirNorm, vec3 samplePoints[PCSS_SAMPLE_COUNT], float z, float shadowSearchArea) {\n\tfloat blockers = 0.0;\n\tfloat averageBlocker = 0.0;\n\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {\n\t\tvec3 sampleDir = lightDirNorm + samplePoints[i] * shadowSearchArea;\n\t\tsampleDir = normalize(sampleDir);\n\t\tfloat blocker = textureCubeLod(shadowMap, sampleDir, 0.0).r;\n\t\tfloat isBlocking = step(blocker, z);\n\t\tblockers += isBlocking;\n\t\taverageBlocker += blocker * isBlocking;\n\t}\n\tif (blockers > 0.0)\n\t\treturn averageBlocker / blockers;\n\treturn -1.0;\n}\nfloat PCSSCube(samplerCube shadowMap, vec4 shadowParams, vec3 shadowCoords, vec4 cameraParams, float shadowSearchArea, vec3 lightDir) {\n\t\n\tvec3 samplePoints[PCSS_SAMPLE_COUNT];\n\tconst float PI = 3.141592653589793;\n\tfloat noise = noise( gl_FragCoord.xy ) * 2.0 * PI;\n\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++) {\n\t\tfloat r = pcssSphereSamples[i];\n\t\tsamplePoints[i] = vogelSphere(i, float(PCSS_SAMPLE_COUNT), noise, r);\n\t}\n\tfloat receiverDepth = length(lightDir) * shadowParams.w + shadowParams.z;\n\tvec3 lightDirNorm = normalize(lightDir);\n\t\n\tfloat averageBlocker = PCSSCubeBlockerDistance(shadowMap, lightDirNorm, samplePoints, receiverDepth, shadowSearchArea);\n\tif (averageBlocker == -1.0) {\n\t\treturn 1.0;\n\t} else {\n\t\tfloat filterRadius = ((receiverDepth - averageBlocker) / averageBlocker) * shadowSearchArea;\n\t\tfloat shadow = 0.0;\n\t\tfor (int i = 0; i < PCSS_SAMPLE_COUNT; i++)\n\t\t{\n\t\t\tvec3 offset = samplePoints[i] * filterRadius;\n\t\t\tvec3 sampleDir = lightDirNorm + offset;\n\t\t\tsampleDir = normalize(sampleDir);\n\t\t\tfloat depth = textureCubeLod(shadowMap, sampleDir, 0.0).r;\n\t\t\tshadow += step(receiverDepth, depth);\n\t\t}\n\t\treturn shadow / float(PCSS_SAMPLE_COUNT);\n\t}\n}\nfloat getShadowOmniPCSS(samplerCube shadowMap, vec3 shadowCoord, vec4 shadowParams, vec4 cameraParams, vec2 shadowSearchArea, vec3 lightDir) {\n\treturn PCSSCube(shadowMap, shadowParams, shadowCoord, cameraParams, shadowSearchArea.x, lightDir);\n}\n#endif\nfloat getShadowSpotPCSS(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, vec4 cameraParams, vec2 shadowSearchArea, vec3 lightDir) {\n\treturn PCSS(TEXTURE_PASS(shadowMap), shadowCoord, cameraParams, shadowSearchArea);\n}\n`;var UL=`\nhighp float fractSinRand(const in vec2 uv) {\n\tconst float PI = 3.141592653589793;\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot(uv.xy, vec2(a, b)), sn = mod(dt, PI);\n\treturn fract(sin(sn) * c);\n}\nstruct VogelDiskData {\n\tfloat invNumSamples;\n\tfloat initialAngle;\n\tfloat currentPointId;\n};\nvoid prepareDiskConstants(out VogelDiskData data, int sampleCount, float randomSeed) {\n\tconst float pi2 = 6.28318530718;\n\tdata.invNumSamples = 1.0 / float(sampleCount);\n\tdata.initialAngle = randomSeed * pi2;\n\tdata.currentPointId = 0.0;\n}\nvec2 generateDiskSample(inout VogelDiskData data) {\n\tconst float GOLDEN_ANGLE = 2.399963;\n\tfloat r = sqrt((data.currentPointId + 0.5) * data.invNumSamples);\n\tfloat theta = data.currentPointId * GOLDEN_ANGLE + data.initialAngle;\n\tvec2 offset = vec2(cos(theta), sin(theta)) * pow(r, 1.33);\n\tdata.currentPointId += 1.0;\n\treturn offset;\n}\nvoid PCSSFindBlocker(TEXTURE_ACCEPT(shadowMap), out float avgBlockerDepth, out int numBlockers,\n\tvec2 shadowCoords, float z, int shadowBlockerSamples, float penumbraSize, float invShadowMapSize, float randomSeed) {\n\tVogelDiskData diskData;\n\tprepareDiskConstants(diskData, shadowBlockerSamples, randomSeed);\n\tfloat searchWidth = penumbraSize * invShadowMapSize;\n\tfloat blockerSum = 0.0;\n\tnumBlockers = 0;\n\tfor( int i = 0; i < shadowBlockerSamples; ++i ) {\n\t\tvec2 diskUV = generateDiskSample(diskData);\n\t\tvec2 sampleUV = shadowCoords + diskUV * searchWidth;\n\t\tfloat shadowMapDepth = texture2DLod(shadowMap, sampleUV, 0.0).r;\n\t\tif ( shadowMapDepth < z ) {\n\t\t\tblockerSum += shadowMapDepth;\n\t\t\tnumBlockers++;\n\t\t}\n\t}\n\tavgBlockerDepth = blockerSum / float(numBlockers);\n}\nfloat PCSSFilter(TEXTURE_ACCEPT(shadowMap), vec2 uv, float receiverDepth, int shadowSamples, float filterRadius, float randomSeed) {\n\tVogelDiskData diskData;\n\tprepareDiskConstants(diskData, shadowSamples, randomSeed);\n\tfloat sum = 0.0;\n\tfor (int i = 0; i < shadowSamples; i++) {\n\t\tvec2 offsetUV = generateDiskSample(diskData) * filterRadius;\n\t\tfloat depth = texture2DLod(shadowMap, uv + offsetUV, 0.0).r;\n\t\tsum += step(receiverDepth, depth);\n\t}\n\treturn sum / float(shadowSamples);\n}\nfloat getPenumbra(float dblocker, float dreceiver, float penumbraSize, float penumbraFalloff) {\n\tfloat dist = dreceiver - dblocker;\n\tfloat penumbra = 1.0 - pow(1.0 - dist, penumbraFalloff);\n\treturn penumbra * penumbraSize;\n}\nfloat PCSSDirectional(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoords, vec4 cameraParams, vec4 softShadowParams) {\n\tfloat receiverDepth = shadowCoords.z;\n\tfloat randomSeed = fractSinRand(gl_FragCoord.xy);\n\tint shadowSamples = int(softShadowParams.x);\n\tint shadowBlockerSamples = int(softShadowParams.y);\n\tfloat penumbraSize = softShadowParams.z;\n\tfloat penumbraFalloff = softShadowParams.w;\n\tint shadowMapSize = textureSize(shadowMap, 0).x;\n\tfloat invShadowMapSize = 1.0 / float(shadowMapSize);\n\tinvShadowMapSize *= float(shadowMapSize) / 2048.0;\n\tfloat penumbra;\n\tif (shadowBlockerSamples > 0) {\n\t\tfloat avgBlockerDepth = 0.0;\n\t\tint numBlockers = 0;\n\t\tPCSSFindBlocker(TEXTURE_PASS(shadowMap), avgBlockerDepth, numBlockers, shadowCoords.xy, receiverDepth, shadowBlockerSamples, penumbraSize, invShadowMapSize, randomSeed);\n\t\tif (numBlockers < 1)\n\t\t\treturn 1.0f;\n\t\tpenumbra = getPenumbra(avgBlockerDepth, shadowCoords.z, penumbraSize, penumbraFalloff);\n\t} else {\n\t\tpenumbra = penumbraSize;\n\t}\n\tfloat filterRadius = penumbra * invShadowMapSize;\n\treturn PCSSFilter(TEXTURE_PASS(shadowMap), shadowCoords.xy, receiverDepth, shadowSamples, filterRadius, randomSeed);\n}\nfloat getShadowPCSS(TEXTURE_ACCEPT(shadowMap), vec3 shadowCoord, vec4 shadowParams, vec4 cameraParams, vec4 softShadowParams, vec3 lightDir) {\n\treturn PCSSDirectional(TEXTURE_PASS(shadowMap), shadowCoord, cameraParams, softShadowParams);\n}\n`;var zL=`\nattribute float vertex_boneIndices;\nuniform highp sampler2D texture_poseMap;\nmat4 getBoneMatrix(const in float indexFloat) {\n\tint width = textureSize(texture_poseMap, 0).x;\n\tint index = int(indexFloat + 0.5) * 3;\n\tint iy = index / width;\n\tint ix = index % width;\n\tvec4 v1 = texelFetch(texture_poseMap, ivec2(ix + 0, iy), 0);\n\tvec4 v2 = texelFetch(texture_poseMap, ivec2(ix + 1, iy), 0);\n\tvec4 v3 = texelFetch(texture_poseMap, ivec2(ix + 2, iy), 0);\n\treturn mat4(\n\t\tv1.x, v2.x, v3.x, 0,\n\t\tv1.y, v2.y, v3.y, 0,\n\t\tv1.z, v2.z, v3.z, 0,\n\t\tv1.w, v2.w, v3.w, 1\n\t);\n}\n`;var VL=`\nattribute vec4 vertex_boneWeights;\nattribute vec4 vertex_boneIndices;\nuniform highp sampler2D texture_poseMap;\nvoid getBoneMatrix(const in int width, const in int index, out vec4 v1, out vec4 v2, out vec4 v3) {\n\tint v = index / width;\n\tint u = index % width;\n\tv1 = texelFetch(texture_poseMap, ivec2(u + 0, v), 0);\n\tv2 = texelFetch(texture_poseMap, ivec2(u + 1, v), 0);\n\tv3 = texelFetch(texture_poseMap, ivec2(u + 2, v), 0);\n}\nmat4 getSkinMatrix(const in vec4 indicesFloat, const in vec4 weights) {\n\tint width = textureSize(texture_poseMap, 0).x;\n\tivec4 indices = ivec4(indicesFloat + 0.5) * 3;\n\tvec4 a1, a2, a3;\n\tgetBoneMatrix(width, indices.x, a1, a2, a3);\n\tvec4 b1, b2, b3;\n\tgetBoneMatrix(width, indices.y, b1, b2, b3);\n\tvec4 c1, c2, c3;\n\tgetBoneMatrix(width, indices.z, c1, c2, c3);\n\tvec4 d1, d2, d3;\n\tgetBoneMatrix(width, indices.w, d1, d2, d3);\n\tvec4 v1 = a1 * weights.x + b1 * weights.y + c1 * weights.z + d1 * weights.w;\n\tvec4 v2 = a2 * weights.x + b2 * weights.y + c2 * weights.z + d2 * weights.w;\n\tvec4 v3 = a3 * weights.x + b3 * weights.y + c3 * weights.z + d3 * weights.w;\n\tfloat one = dot(weights, vec4(1.0));\n\treturn mat4(\n\t\tv1.x, v2.x, v3.x, 0,\n\t\tv1.y, v2.y, v3.y, 0,\n\t\tv1.z, v2.z, v3.z, 0,\n\t\tv1.w, v2.w, v3.w, one\n\t);\n}\n`;var GL=`\n\t#define LIT_SKYBOX_INTENSITY\n\t#include "envProcPS"\n\t#include "gammaPS"\n\t#include "tonemappingPS"\n\t#ifdef PREPASS_PASS\n\t\tvarying float vLinearDepth;\n\t\t#include "floatAsUintPS"\n\t#endif\n\tvarying vec3 vViewDir;\n\tuniform float skyboxHighlightMultiplier;\n\t#ifdef SKY_CUBEMAP\n\t\tuniform samplerCube texture_cubeMap;\n\t\t#ifdef SKYMESH\n\t\t\tvarying vec3 vWorldPos;\n\t\t\tuniform mat3 cubeMapRotationMatrix;\n\t\t\tuniform vec3 projectedSkydomeCenter;\n\t\t#endif\n\t#else\n\t\t#include "sphericalPS"\n\t\t#include "envAtlasPS"\n\t\tuniform sampler2D texture_envAtlas;\n\t\tuniform float mipLevel;\n\t#endif\n\tvoid main(void) {\n\t\t#ifdef PREPASS_PASS\n\t\t\tgl_FragColor = float2vec4(vLinearDepth);\n\t\t#else\n\t\t\t#ifdef SKY_CUBEMAP\n\t\t\t\t#ifdef SKYMESH\n\t\t\t\t\tvec3 envDir = normalize(vWorldPos - projectedSkydomeCenter);\n\t\t\t\t\tvec3 dir = envDir * cubeMapRotationMatrix;\n\t\t\t\t#else\n\t\t\t\t\tvec3 dir = vViewDir;\n\t\t\t\t#endif\n\t\t\t\tdir.x *= -1.0;\n\t\t\t\tvec3 linear = {SKYBOX_DECODE_FNC}(textureCube(texture_cubeMap, dir));\n\t\t\t#else\n\t\t\t\tvec3 dir = vViewDir * vec3(-1.0, 1.0, 1.0);\n\t\t\t\tvec2 uv = toSphericalUv(normalize(dir));\n\t\t\t\tvec3 linear = {SKYBOX_DECODE_FNC}(texture2D(texture_envAtlas, mapRoughnessUv(uv, mipLevel)));\n\t\t\t#endif\n\t\t\tif (any(greaterThanEqual(linear, vec3(64.0)))) {\n\t\t\t\tlinear *= skyboxHighlightMultiplier;\n\t\t\t}\n\t\t\tgl_FragColor = vec4(gammaCorrectOutput(toneMap(processEnvironment(linear))), 1.0);\n\t\t#endif\n\t}\n`;var HL=`\nattribute vec4 aPosition;\nuniform mat4 matrix_view;\nuniform mat4 matrix_projectionSkybox;\nuniform mat3 cubeMapRotationMatrix;\nvarying vec3 vViewDir;\n#ifdef PREPASS_PASS\n\tvarying float vLinearDepth;\n#endif\n#ifdef SKYMESH\n\tuniform mat4 matrix_model;\n\tvarying vec3 vWorldPos;\n#endif\nvoid main(void) {\n\tmat4 view = matrix_view;\n\t#ifdef SKYMESH\n\t\tvec4 worldPos = matrix_model * aPosition;\n\t\tvWorldPos = worldPos.xyz;\n\t\tgl_Position = matrix_projectionSkybox * (view * worldPos);\n\t\t#ifdef PREPASS_PASS\n\t\t\tvLinearDepth = -(matrix_view * vec4(vWorldPos, 1.0)).z;\n\t\t#endif\n\t#else\n\t\tview[3][0] = view[3][1] = view[3][2] = 0.0;\n\t\tgl_Position = matrix_projectionSkybox * (view * aPosition);\n\t\tvViewDir = aPosition.xyz * cubeMapRotationMatrix;\n\t\t#ifdef PREPASS_PASS\n\t\t\tvLinearDepth = -gl_Position.w;\n\t\t#endif\n\t#endif\n\tgl_Position.z = gl_Position.w - 1.0e-7;\n}\n`;var WL=`\n#ifdef STD_SPECULAR_CONSTANT\nuniform vec3 material_specular;\n#endif\nvoid getSpecularity() {\n\tvec3 specularColor = vec3(1,1,1);\n\t#ifdef STD_SPECULAR_CONSTANT\n\tspecularColor *= material_specular;\n\t#endif\n\t#ifdef STD_SPECULAR_TEXTURE\n\tspecularColor *= {STD_SPECULAR_TEXTURE_DECODE}(texture2DBias({STD_SPECULAR_TEXTURE_NAME}, {STD_SPECULAR_TEXTURE_UV}, textureBias)).{STD_SPECULAR_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SPECULAR_VERTEX\n\tspecularColor *= saturate(vVertexColor.{STD_SPECULAR_VERTEX_CHANNEL});\n\t#endif\n\tdSpecularity = specularColor;\n}\n`;var XL=`\nvec2 toSpherical(vec3 dir) {\n\treturn vec2(dir.xz == vec2(0.0) ? 0.0 : atan(dir.x, dir.z), asin(dir.y));\n}\nvec2 toSphericalUv(vec3 dir) {\n\tconst float PI = 3.141592653589793;\n\tvec2 uv = toSpherical(dir) / vec2(PI * 2.0, PI) + 0.5;\n\treturn vec2(uv.x, 1.0 - uv.y);\n}\n`;var qL=`\n#ifdef STD_SPECULARITYFACTOR_CONSTANT\nuniform float material_specularityFactor;\n#endif\nvoid getSpecularityFactor() {\n\tfloat specularityFactor = 1.0;\n\t#ifdef STD_SPECULARITYFACTOR_CONSTANT\n\tspecularityFactor *= material_specularityFactor;\n\t#endif\n\t#ifdef STD_SPECULARITYFACTOR_TEXTURE\n\tspecularityFactor *= texture2DBias({STD_SPECULARITYFACTOR_TEXTURE_NAME}, {STD_SPECULARITYFACTOR_TEXTURE_UV}, textureBias).{STD_SPECULARITYFACTOR_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SPECULARITYFACTOR_VERTEX\n\tspecularityFactor *= saturate(vVertexColor.{STD_SPECULARITYFACTOR_VERTEX_CHANNEL});\n\t#endif\n\tdSpecularityFactor = specularityFactor;\n}\n`;var $L=`\nfloat getSpotEffect(vec3 lightSpotDir, float lightInnerConeAngle, float lightOuterConeAngle, vec3 lightDirNorm) {\n\tfloat cosAngle = dot(lightDirNorm, lightSpotDir);\n\treturn smoothstep(lightOuterConeAngle, lightInnerConeAngle, cosAngle);\n}\n`;var jL=`\n\tnineSlicedUv = vec2(vUv0.x, 1.0 - vUv0.y);\n`;var YL=`\n\tvec2 tileMask = step(vMask, vec2(0.99999));\n\tvec2 tileSize = 0.5 * (innerOffset.xy + innerOffset.zw);\n\tvec2 tileScale = vec2(1.0) / (vec2(1.0) - tileSize);\n\tvec2 clampedUv = mix(innerOffset.xy * 0.5, vec2(1.0) - innerOffset.zw * 0.5, fract((vTiledUv - tileSize) * tileScale));\n\tclampedUv = clampedUv * atlasRect.zw + atlasRect.xy;\n\tnineSlicedUv = vUv0 * tileMask + clampedUv * (vec2(1.0) - tileMask);\n\tnineSlicedUv.y = 1.0 - nineSlicedUv.y;\n\t\n`;var KL=`\n\tfloat dAlpha = 1.0;\n\t#if LIT_BLEND_TYPE != NONE || defined(LIT_ALPHA_TEST) || defined(LIT_ALPHA_TO_COVERAGE) || STD_OPACITY_DITHER != NONE\n\t\t#ifdef STD_OPACITY_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_opacityMap;\n\t\t#endif\n\t#endif\n\t#ifdef FORWARD_PASS\n\t\tvec3 dAlbedo;\n\t\tvec3 dNormalW;\n\t\tvec3 dSpecularity = vec3(0.0);\n\t\tfloat dGlossiness = 0.0;\n\t\t#ifdef LIT_REFRACTION\n\t\t\tfloat dTransmission;\n\t\t\tfloat dThickness;\n\t\t#endif\n\t\t#ifdef LIT_SCENE_COLOR\n\t\t\tuniform sampler2D uSceneColorMap;\n\t\t#endif\n\t\t#ifdef LIT_SCREEN_SIZE\n\t\t\tuniform vec4 uScreenSize;\n\t\t#endif\n\t\t#ifdef LIT_TRANSFORMS\n\t\t\tuniform mat4 matrix_viewProjection;\n\t\t\tuniform mat4 matrix_model;\n\t\t#endif\n\t\t#ifdef STD_HEIGHT_MAP\n\t\t\tvec2 dUvOffset;\n\t\t\t#ifdef STD_DIFFUSE_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_heightMap;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef STD_DIFFUSE_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_diffuseMap;\n\t\t#endif\n\t\t#ifdef STD_DIFFUSEDETAIL_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_diffuseDetailMap;\n\t\t#endif\n\t\t#ifdef STD_NORMAL_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_normalMap;\n\t\t#endif\n\t\t#ifdef STD_NORMALDETAIL_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_normalDetailMap;\n\t\t#endif\n\t\t#ifdef STD_THICKNESS_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_thicknessMap;\n\t\t#endif\n\t\t#ifdef STD_REFRACTION_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_refractionMap;\n\t\t#endif\n\t\t#ifdef LIT_IRIDESCENCE\n\t\t\tfloat dIridescence;\n\t\t\tfloat dIridescenceThickness;\n\t\t\t#ifdef STD_IRIDESCENCE_THICKNESS_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_iridescenceThicknessMap;\n\t\t\t#endif\n\t\t\t#ifdef STD_IRIDESCENCE_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_iridescenceMap;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\tfloat ccSpecularity;\n\t\t\tfloat ccGlossiness;\n\t\t\tvec3 ccNormalW;\n\t\t#endif\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\tfloat dAnisotropy;\n\t\t\tvec2 dAnisotropyRotation;\n\t\t#endif\n\t\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\tvec3 sSpecularity;\n\t\t\t\tfloat sGlossiness;\n\t\t\t\t#ifdef STD_SHEEN_TEXTURE_ALLOCATE\n\t\t\t\t\tuniform sampler2D texture_sheenMap;\n\t\t\t\t#endif\n\t\t\t\t#ifdef STD_SHEENGLOSS_TEXTURE_ALLOCATE\n\t\t\t\t\tuniform sampler2D texture_sheenGlossMap;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_METALNESS\n\t\t\t\tfloat dMetalness;\n\t\t\t\tfloat dIor;\n\t\t\t\t#ifdef STD_METALNESS_TEXTURE_ALLOCATE\n\t\t\t\t\tuniform sampler2D texture_metalnessMap;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\tfloat dSpecularityFactor;\n\t\t\t\t#ifdef STD_SPECULARITYFACTOR_TEXTURE_ALLOCATE\n\t\t\t\t\tuniform sampler2D texture_specularityFactorMap;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef STD_SPECULAR_COLOR\n\t\t\t\t#ifdef STD_SPECULAR_TEXTURE_ALLOCATE\n\t\t\t\t\tuniform sampler2D texture_specularMap;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef STD_GLOSS_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_glossMap;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef STD_AO\n\t\t\tfloat dAo;\n\t\t\t#ifdef STD_AO_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_aoMap;\n\t\t\t#endif\n\t\t\t#ifdef STD_AODETAIL_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_aoDetailMap;\n\t\t\t#endif\n\t\t#endif\n\t\tvec3 dEmission;\n\t\t#ifdef STD_EMISSIVE_TEXTURE_ALLOCATE\n\t\t\tuniform sampler2D texture_emissiveMap;\n\t\t#endif\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\t#ifdef STD_CLEARCOAT_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_clearCoatMap;\n\t\t\t#endif\n\t\t\t#ifdef STD_CLEARCOATGLOSS_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_clearCoatGlossMap;\n\t\t\t#endif\n\t\t\t#ifdef STD_CLEARCOATNORMAL_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_clearCoatNormalMap;\n\t\t\t#endif\n\t\t#endif\n\t\t\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\t#ifdef STD_ANISOTROPY_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_anisotropyMap;\n\t\t\t#endif\n\t\t#endif\n\t\t#if defined(STD_LIGHTMAP) || defined(STD_LIGHT_VERTEX_COLOR)\n\t\t\tvec3 dLightmap;\n\t\t\t#ifdef STD_LIGHT_TEXTURE_ALLOCATE\n\t\t\t\tuniform sampler2D texture_lightMap;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\t#include "litShaderCorePS"\n`;var ZL=`\n\t#if LIT_BLEND_TYPE != NONE || defined(LIT_ALPHA_TEST) || defined(LIT_ALPHA_TO_COVERAGE) || STD_OPACITY_DITHER != NONE\n\t\t#include "opacityPS"\n\t\t#if defined(LIT_ALPHA_TEST)\n\t\t\t#include "alphaTestPS"\n\t\t#endif\n\t\t#if STD_OPACITY_DITHER != NONE\n\t\t\t#include "opacityDitherPS"\n\t\t#endif\n\t#endif\n\t#ifdef FORWARD_PASS\n\t\t#ifdef STD_HEIGHT_MAP\n\t\t\t#include "parallaxPS"\n\t\t#endif\n\t\t#include  "diffusePS"\n\t\t#ifdef LIT_NEEDS_NORMAL\n\t\t\t#include "normalMapPS"\n\t\t#endif\n\t\t#ifdef LIT_REFRACTION\n\t\t\t#include "transmissionPS"\n\t\t\t#include "thicknessPS"\n\t\t#endif\n\t\t#ifdef LIT_IRIDESCENCE\n\t\t\t#include "iridescencePS"\n\t\t\t#include "iridescenceThicknessPS"\n\t\t#endif\n\t\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t#include "sheenPS"\n\t\t\t\t#include "sheenGlossPS"\n\t\t\t#endif\n\t\t\t#ifdef LIT_METALNESS\n\t\t\t\t#include "metalnessPS"\n\t\t\t\t#include "iorPS"\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\t#include "specularityFactorPS"\n\t\t\t#endif\n\t\t\t#ifdef STD_SPECULAR_COLOR\n\t\t\t\t#include "specularPS"\n\t\t\t#else\n\t\t\t\tvoid getSpecularity() { \n\t\t\t\t\tdSpecularity = vec3(1);\n\t\t\t\t}\n\t\t\t#endif\n\t\t\t#include "glossPS"\n\t\t#endif\n\t\t#ifdef STD_AO\n\t\t\t#include "aoPS"\n\t\t#endif\n\t\t#include "emissivePS"\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\t#include "clearCoatPS"\n\t\t\t#include "clearCoatGlossPS"\n\t\t\t#include "clearCoatNormalPS"\n\t\t#endif\n\t\t#if defined(LIT_SPECULAR) && defined(LIT_LIGHTING) && defined(LIT_GGX_SPECULAR)\n\t\t\t#include "anisotropyPS"\n\t\t#endif\n\t\t#if defined(STD_LIGHTMAP) || defined(STD_LIGHT_VERTEX_COLOR)\n\t\t\t#include "lightmapPS"\n\t\t#endif\n\t#endif\n\tvoid evaluateFrontend() {\n\t\t#if LIT_BLEND_TYPE != NONE || defined(LIT_ALPHA_TEST) || defined(LIT_ALPHA_TO_COVERAGE) || STD_OPACITY_DITHER != NONE\n\t\t\tgetOpacity();\n\t\t\t#if defined(LIT_ALPHA_TEST)\n\t\t\t\talphaTest(dAlpha);\n\t\t\t#endif\n\t\t\t#if STD_OPACITY_DITHER != NONE\n\t\t\t\topacityDither(dAlpha, 0.0);\n\t\t\t#endif\n\t\t\tlitArgs_opacity = dAlpha;\n\t\t#endif\n\t\t#ifdef FORWARD_PASS\n\t\t\t#ifdef STD_HEIGHT_MAP\n\t\t\t\tgetParallax();\n\t\t\t#endif\n\t\t\tgetAlbedo();\n\t\t\tlitArgs_albedo = dAlbedo;\n\t\t\t#ifdef LIT_NEEDS_NORMAL\n\t\t\t\tgetNormal();\n\t\t\t\tlitArgs_worldNormal = dNormalW;\n\t\t\t#endif\n\t\t\t#ifdef LIT_REFRACTION\n\t\t\t\tgetRefraction();\n\t\t\t\tlitArgs_transmission = dTransmission;\n\t\t\t\tgetThickness();\n\t\t\t\tlitArgs_thickness = dThickness;\n\t\t\t\t#ifdef LIT_DISPERSION\n\t\t\t\t\tlitArgs_dispersion = material_dispersion;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_IRIDESCENCE\n\t\t\t\tgetIridescence();\n\t\t\t\tgetIridescenceThickness();\n\t\t\t\tlitArgs_iridescence_intensity = dIridescence;\n\t\t\t\tlitArgs_iridescence_thickness = dIridescenceThickness;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t\tgetSheen();\n\t\t\t\t\tlitArgs_sheen_specularity = sSpecularity;\n\t\t\t\t\tgetSheenGlossiness();\n\t\t\t\t\tlitArgs_sheen_gloss = sGlossiness;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_METALNESS\n\t\t\t\t\tgetMetalness();\n\t\t\t\t\tlitArgs_metalness = dMetalness;\n\t\t\t\t\tgetIor();\n\t\t\t\t\tlitArgs_ior = dIor;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\t\tgetSpecularityFactor();\n\t\t\t\t\tlitArgs_specularityFactor = dSpecularityFactor;\n\t\t\t\t#endif\n\t\t\t\tgetGlossiness();\n\t\t\t\tgetSpecularity();\n\t\t\t\tlitArgs_specularity = dSpecularity;\n\t\t\t\tlitArgs_gloss = dGlossiness;\n\t\t\t#endif\n\t\t\t#ifdef STD_AO\n\t\t\t\tgetAO();\n\t\t\t\tlitArgs_ao = dAo;\n\t\t\t#endif\n\t\t\tgetEmission();\n\t\t\tlitArgs_emission = dEmission;\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tgetClearCoat();\n\t\t\t\tgetClearCoatGlossiness();\n\t\t\t\tgetClearCoatNormal();\n\t\t\t\tlitArgs_clearcoat_specularity = ccSpecularity;\n\t\t\t\tlitArgs_clearcoat_gloss = ccGlossiness;\n\t\t\t\tlitArgs_clearcoat_worldNormal = ccNormalW;\n\t\t\t#endif\n\t\t\t#if defined(LIT_SPECULAR) && defined(LIT_LIGHTING) && defined(LIT_GGX_SPECULAR)\n\t\t\t\tgetAnisotropy();\n\t\t\t#endif\n\t\t\t#if defined(STD_LIGHTMAP) || defined(STD_LIGHT_VERTEX_COLOR)\n\t\t\t\tgetLightMap();\n\t\t\t\tlitArgs_lightmap = dLightmap;\n\t\t\t\t#ifdef STD_LIGHTMAP_DIR\n\t\t\t\t\tlitArgs_lightmapDir = dLightmapDir;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t#endif\n\t}\n`;var QL=`\n#ifdef LIT_TANGENTS\n\t#define TBN_TANGENTS\n#else\n\t#if defined(LIT_USE_NORMALS) || defined(LIT_USE_CLEARCOAT_NORMALS)\n\t\t#define TBN_DERIVATIVES\n\t#endif\n#endif\n#if defined(TBN_DERIVATIVES)\n\tuniform float tbnBasis;\n#endif\nvoid getTBN(vec3 tangent, vec3 binormal, vec3 normal) {\n\t#ifdef TBN_TANGENTS\n\t\tdTBN = mat3(normalize(tangent), normalize(binormal), normalize(normal));\n\t#elif defined(TBN_DERIVATIVES)\n\t\tvec2 uv = {lightingUv};\n\t\tvec3 dp1 = dFdx( vPositionW );\n\t\tvec3 dp2 = dFdy( vPositionW );\n\t\tvec2 duv1 = dFdx( uv );\n\t\tvec2 duv2 = dFdy( uv );\n\t\tvec3 dp2perp = cross( dp2, normal );\n\t\tvec3 dp1perp = cross( normal, dp1 );\n\t\tvec3 T = dp2perp * duv1.x + dp1perp * duv2.x;\n\t\tvec3 B = dp2perp * duv1.y + dp1perp * duv2.y;\n\t\tfloat denom = max( dot(T,T), dot(B,B) );\n\t\tfloat invmax = (denom == 0.0) ? 0.0 : tbnBasis / sqrt( denom );\n\t\tdTBN = mat3(T * invmax, -B * invmax, normal );\n\t#else\n\t\tvec3 B = cross(normal, vObjectSpaceUpW);\n\t\tvec3 T = cross(normal, B);\n\t\tif (dot(B,B)==0.0)\n\t\t{\n\t\t\tfloat major=max(max(normal.x, normal.y), normal.z);\n\t\t\tif (normal.x == major)\n\t\t\t{\n\t\t\t\tB = cross(normal, vec3(0,1,0));\n\t\t\t\tT = cross(normal, B);\n\t\t\t}\n\t\t\telse if (normal.y == major)\n\t\t\t{\n\t\t\t\tB = cross(normal, vec3(0,0,1));\n\t\t\t\tT = cross(normal, B);\n\t\t\t}\n\t\t\telse if (normal.z == major)\n\t\t\t{\n\t\t\t\tB = cross(normal, vec3(1,0,0));\n\t\t\t\tT = cross(normal, B);\n\t\t\t}\n\t\t}\n\t\tdTBN = mat3(normalize(T), normalize(B), normalize(normal));\n\t#endif\n}\n`;var JL=`\n#ifdef STD_THICKNESS_CONSTANT\nuniform float material_thickness;\n#endif\nvoid getThickness() {\n\tdThickness = 1.0;\n\t#ifdef STD_THICKNESS_CONSTANT\n\tdThickness *= material_thickness;\n\t#endif\n\t#ifdef STD_THICKNESS_TEXTURE\n\tdThickness *= texture2DBias({STD_THICKNESS_TEXTURE_NAME}, {STD_THICKNESS_TEXTURE_UV}, textureBias).{STD_THICKNESS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_THICKNESS_VERTEX\n\tdThickness *= saturate(vVertexColor.{STD_THICKNESS_VERTEX_CHANNEL});\n\t#endif\n}\n`;var tD=`\n#if (TONEMAP == NONE)\n\t#include "tonemappingNonePS"\n#elif TONEMAP == FILMIC\n\t#include "tonemappingFilmicPS"\n#elif TONEMAP == LINEAR\n\t#include "tonemappingLinearPS"\n#elif TONEMAP == HEJL\n\t#include "tonemappingHejlPS"\n#elif TONEMAP == ACES\n\t#include "tonemappingAcesPS"\n#elif TONEMAP == ACES2\n\t#include "tonemappingAces2PS"\n#elif TONEMAP == NEUTRAL\n\t#include "tonemappingNeutralPS"\n#endif\n`;var eD=`\nuniform float exposure;\nvec3 toneMap(vec3 color) {\n\tfloat tA = 2.51;\n\tfloat tB = 0.03;\n\tfloat tC = 2.43;\n\tfloat tD = 0.59;\n\tfloat tE = 0.14;\n\tvec3 x = color * exposure;\n\treturn (x*(tA*x+tB))/(x*(tC*x+tD)+tE);\n}\n`;var sD=`\nuniform float exposure;\nconst mat3 ACESInputMat = mat3(\n\t0.59719, 0.35458, 0.04823,\n\t0.07600, 0.90834, 0.01566,\n\t0.02840, 0.13383, 0.83777\n);\nconst mat3 ACESOutputMat = mat3(\n\t 1.60475, -0.53108, -0.07367,\n\t-0.10208,  1.10813, -0.00605,\n\t-0.00327, -0.07276,  1.07602\n);\nvec3 RRTAndODTFit(vec3 v) {\n\tvec3 a = v * (v + 0.0245786) - 0.000090537;\n\tvec3 b = v * (0.983729 * v + 0.4329510) + 0.238081;\n\treturn a / b;\n}\nvec3 toneMap(vec3 color) {\n\tcolor *= exposure / 0.6;\n\tcolor = color * ACESInputMat;\n\tcolor = RRTAndODTFit(color);\n\tcolor = color * ACESOutputMat;\n\tcolor = clamp(color, 0.0, 1.0);\n\treturn color;\n}\n`;var iD=`\nconst float A =  0.15;\nconst float B =  0.50;\nconst float C =  0.10;\nconst float D =  0.20;\nconst float E =  0.02;\nconst float F =  0.30;\nconst float W =  11.2;\nuniform float exposure;\nvec3 uncharted2Tonemap(vec3 x) {\n\t return ((x*(A*x+C*B)+D*E)/(x*(A*x+B)+D*F))-E/F;\n}\nvec3 toneMap(vec3 color) {\n\tcolor = uncharted2Tonemap(color * exposure);\n\tvec3 whiteScale = 1.0 / uncharted2Tonemap(vec3(W,W,W));\n\tcolor = color * whiteScale;\n\treturn color;\n}\n`;var nD=`\nuniform float exposure;\nvec3 toneMap(vec3 color) {\n\tcolor *= exposure;\n\tconst float  A = 0.22, B = 0.3, C = .1, D = 0.2, E = .01, F = 0.3;\n\tconst float Scl = 1.25;\n\tvec3 h = max( vec3(0.0), color - vec3(0.004) );\n\treturn (h*((Scl*A)*h+Scl*vec3(C*B,C*B,C*B))+Scl*vec3(D*E,D*E,D*E)) / (h*(A*h+vec3(B,B,B))+vec3(D*F,D*F,D*F)) - Scl*vec3(E/F,E/F,E/F);\n}\n`;var rD=`\nuniform float exposure;\nvec3 toneMap(vec3 color) {\n\treturn color * exposure;\n}\n`;var aD=`\nuniform float exposure;\nvec3 toneMap(vec3 color) {\n\tcolor *= exposure;\n\tfloat startCompression = 0.8 - 0.04;\n\tfloat desaturation = 0.15;\n\tfloat x = min(color.r, min(color.g, color.b));\n\tfloat offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n\tcolor -= offset;\n\tfloat peak = max(color.r, max(color.g, color.b));\n\tif (peak < startCompression) return color;\n\tfloat d = 1. - startCompression;\n\tfloat newPeak = 1. - d * d / (peak + d - startCompression);\n\tcolor *= newPeak / peak;\n\tfloat g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);\n\treturn mix(color, newPeak * vec3(1, 1, 1), g);\n}\n`;var oD=`\nvec3 toneMap(vec3 color) {\n\treturn color;\n}\n`;var lD=`\n#ifdef PIXELSNAP\nuniform vec4 uScreenSize;\n#endif\n#ifdef SCREENSPACE\nuniform float projectionFlipY;\n#endif\nvec4 evalWorldPosition(vec3 vertexPosition, mat4 modelMatrix) {\n\tvec3 localPos = getLocalPosition(vertexPosition);\n\t#ifdef NINESLICED\n\t\tlocalPos.xz *= outerScale;\n\t\tvec2 positiveUnitOffset = clamp(vertexPosition.xz, vec2(0.0), vec2(1.0));\n\t\tvec2 negativeUnitOffset = clamp(-vertexPosition.xz, vec2(0.0), vec2(1.0));\n\t\tlocalPos.xz += (-positiveUnitOffset * innerOffset.xy + negativeUnitOffset * innerOffset.zw) * vertex_texCoord0.xy;\n\t\tvTiledUv = (localPos.xz - outerScale + innerOffset.xy) * -0.5 + 1.0;\n\t\tlocalPos.xz *= -0.5;\n\t\tlocalPos = localPos.xzy;\n\t#endif\n\tvec4 posW = modelMatrix * vec4(localPos, 1.0);\n\t#ifdef SCREENSPACE\n\t\tposW.zw = vec2(0.0, 1.0);\n\t#endif\n\treturn posW;\n}\nvec4 getPosition() {\n\tdModelMatrix = getModelMatrix();\n\tvec4 posW = evalWorldPosition(vertex_position.xyz, dModelMatrix);\n\tdPositionW = posW.xyz;\n\tvec4 screenPos;\n\t#ifdef UV1LAYOUT\n\t\tscreenPos = vec4(vertex_texCoord1.xy * 2.0 - 1.0, 0.5, 1);\n\t\t#ifdef WEBGPU\n\t\t\tscreenPos.y *= -1.0;\n\t\t#endif\n\t#else\n\t\t#ifdef SCREENSPACE\n\t\t\tscreenPos = posW;\n\t\t\tscreenPos.y *= projectionFlipY;\n\t\t#else\n\t\t\tscreenPos = matrix_viewProjection * posW;\n\t\t#endif\n\t\t#ifdef PIXELSNAP\n\t\t\tscreenPos.xy = (screenPos.xy * 0.5) + 0.5;\n\t\t\tscreenPos.xy *= uScreenSize.xy;\n\t\t\tscreenPos.xy = floor(screenPos.xy);\n\t\t\tscreenPos.xy *= uScreenSize.zw;\n\t\t\tscreenPos.xy = (screenPos.xy * 2.0) - 1.0;\n\t\t#endif\n\t#endif\n\treturn screenPos;\n}\nvec3 getWorldPosition() {\n\treturn dPositionW;\n}\n`;var hD=`\nattribute vec4 vertex_position;\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\n#ifdef MORPHING\n\tuniform vec2 morph_tex_params;\n\tattribute uint morph_vertex_id;\n\tivec2 getTextureMorphCoords() {\n\t\tivec2 textureSize = ivec2(morph_tex_params);\n\t\tint morphGridV = int(morph_vertex_id) / textureSize.x;\n\t\tint morphGridU = int(morph_vertex_id) - (morphGridV * textureSize.x);\n\t\t#ifdef WEBGPU\n\t\t\tmorphGridV = textureSize.y - morphGridV - 1;\n\t\t#endif\n\t\treturn ivec2(morphGridU, morphGridV);\n\t}\n\t#ifdef MORPHING_POSITION\n\t\t#ifdef MORPHING_INT\n\t\t\tuniform vec3 aabbSize;\n\t\t\tuniform vec3 aabbMin;\n\t\t\tuniform usampler2D morphPositionTex;\n\t\t#else\n\t\t\tuniform highp sampler2D morphPositionTex;\n\t\t#endif\n\t#endif\n#endif\n#ifdef defined(BATCH)\n\t#include "skinBatchVS"\n\tmat4 getModelMatrix() {\n\t\treturn getBoneMatrix(vertex_boneIndices);\n\t}\n#elif defined(SKIN)\n\t#include "skinVS"\n\tmat4 getModelMatrix() {\n\t\treturn matrix_model * getSkinMatrix(vertex_boneIndices, vertex_boneWeights);\n\t}\n#elif defined(INSTANCING)\n\t#include "transformInstancingVS"\n#else\n\tmat4 getModelMatrix() {\n\t\treturn matrix_model;\n\t}\n#endif\nvec3 getLocalPosition(vec3 vertexPosition) {\n\tvec3 localPos = vertexPosition;\n\t#ifdef MORPHING_POSITION\n\t\tivec2 morphUV = getTextureMorphCoords();\n\t\t#ifdef MORPHING_INT\n\t\t\tvec3 morphPos = vec3(texelFetch(morphPositionTex, ivec2(morphUV), 0).xyz) / 65535.0 * aabbSize + aabbMin;\n\t\t#else\n\t\t\tvec3 morphPos = texelFetch(morphPositionTex, ivec2(morphUV), 0).xyz;\n\t\t#endif\n\t\tlocalPos += morphPos;\n\t#endif\n\treturn localPos;\n}\n`;var cD=`\nattribute vec4 instance_line1;\nattribute vec4 instance_line2;\nattribute vec4 instance_line3;\nattribute vec4 instance_line4;\nmat4 getModelMatrix() {\n\treturn matrix_model * mat4(instance_line1, instance_line2, instance_line3, instance_line4);\n}\n`;var dD=`\n#ifdef STD_REFRACTION_CONSTANT\nuniform float material_refraction;\n#endif\nvoid getRefraction() {\n\tfloat refraction = 1.0;\n\t#ifdef STD_REFRACTION_CONSTANT\n\trefraction = material_refraction;\n\t#endif\n\t#ifdef STD_REFRACTION_TEXTURE\n\trefraction *= texture2DBias({STD_REFRACTION_TEXTURE_NAME}, {STD_REFRACTION_TEXTURE_UV}, textureBias).{STD_REFRACTION_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_REFRACTION_VERTEX\n\trefraction *= saturate(vVertexColor.{STD_REFRACTION_VERTEX_CHANNEL});\n\t#endif\n\tdTransmission = refraction;\n}\n`;var uD=`\nuniform float twoSidedLightingNegScaleFactor;\nvoid handleTwoSidedLighting() {\n\tdTBN[2] *= gl_FrontFacing ? twoSidedLightingNegScaleFactor : -twoSidedLightingNegScaleFactor;\n}\n`;var fD=`\n#ifdef NINESLICED\n\tvec2 getUv0() {\n\t\tvec2 uv = vertex_position.xz;\n\t\tvec2 positiveUnitOffset = clamp(vertex_position.xz, vec2(0.0), vec2(1.0));\n\t\tvec2 negativeUnitOffset = clamp(-vertex_position.xz, vec2(0.0), vec2(1.0));\n\t\tuv += (-positiveUnitOffset * innerOffset.xy + negativeUnitOffset * innerOffset.zw) * vertex_texCoord0.xy;\n\t\tuv = uv * -0.5 + 0.5;\n\t\tuv = uv * atlasRect.zw + atlasRect.xy;\n\t\tvMask = vertex_texCoord0.xy;\n\t\treturn uv;\n\t}\n#else\n\tvec2 getUv0() {\n\t\treturn vertex_texCoord0;\n\t}\n#endif\n`;var pD=`\nvec2 getUv1() {\n\treturn vertex_texCoord1;\n}\n`;var mD=`\nvUV{TRANSFORM_UV_{i}}_{TRANSFORM_ID_{i}} = vec2(\n\tdot(vec3(uv{TRANSFORM_UV_{i}}, 1), {TRANSFORM_NAME_{i}}0),\n\tdot(vec3(uv{TRANSFORM_UV_{i}}, 1), {TRANSFORM_NAME_{i}}1)\n);\n`;var _D=`\n\tuniform vec3 {TRANSFORM_NAME_{i}}0;\n\tuniform vec3 {TRANSFORM_NAME_{i}}1;\n`;var gD=`\nvoid getViewDir() {\n\tdViewDirW = normalize(view_position - vPositionW);\n}\n`;const vD={alphaTestPS:_C,ambientPS:gC,anisotropyPS:vC,aoPS:yC,aoDiffuseOccPS:SC,aoSpecOccPS:xC,bakeDirLmEndPS:TC,bakeLmEndPS:wC,basePS:bC,baseNineSlicedPS:EC,baseNineSlicedTiledPS:AC,bayerPS:CC,blurVSMPS:PC,clearCoatPS:LC,clearCoatGlossPS:DC,clearCoatNormalPS:MC,clusteredLightCookiesPS:RC,clusteredLightShadowsPS:OC,clusteredLightUtilsPS:IC,clusteredLightPS:FC,combinePS:NC,cookieBlit2DPS:kC,cookieBlitCubePS:BC,cookieBlitVS:UC,cookiePS:zC,cubeMapProjectPS:VC,cubeMapRotatePS:GC,debugOutputPS:HC,debugProcessFrontendPS:WC,detailModesPS:qC,diffusePS:$C,decodePS:XC,emissivePS:jC,encodePS:YC,endPS:KC,envAtlasPS:ZC,envProcPS:QC,falloffInvSquaredPS:JC,falloffLinearPS:tP,floatAsUintPS:eP,fogPS:sP,fresnelSchlickPS:iP,frontendCodePS:"",frontendDeclPS:"",fullscreenQuadVS:nP,gammaPS:rP,gles3PS:zh,gles3VS:Vh,glossPS:aP,gsplatCenterVS:oP,gsplatCornerVS:gP,gsplatColorVS:lP,gsplatCommonVS:hP,gsplatCompressedDataVS:cP,gsplatCompressedSHVS:dP,gsplatEvalSHVS:uP,gsplatQuatToMat3VS:fP,gsplatSogsColorVS:pP,gsplatSogsDataVS:mP,gsplatSogsSHVS:_P,gsplatDataVS:vP,gsplatOutputVS:yP,gsplatPS:SP,gsplatSHVS:xP,gsplatSourceVS:TP,gsplatVS:wP,quadVS:bP,immediateLinePS:EP,immediateLineVS:AP,iridescenceDiffractionPS:CP,iridescencePS:PP,iridescenceThicknessPS:LP,iorPS:DP,lightDeclarationPS:MP,lightDiffuseLambertPS:IP,lightDirPointPS:RP,lightEvaluationPS:OP,lightFunctionLightPS:FP,lightFunctionShadowPS:NP,lightingPS:kP,lightmapAddPS:BP,lightmapPS:UP,lightSpecularAnisoGGXPS:zP,lightSpecularBlinnPS:VP,lightSheenPS:GP,linearizeDepthPS:HP,litForwardBackendPS:WP,litForwardDeclarationPS:XP,litForwardMainPS:qP,litForwardPostCodePS:$P,litForwardPreCodePS:jP,litMainPS:YP,litMainVS:KP,litOtherMainPS:ZP,litShaderArgsPS:QP,litShaderCorePS:JP,litShadowMainPS:tL,litUserDeclarationPS:"",litUserDeclarationVS:"",litUserCodePS:"",litUserCodeVS:"",litUserMainStartPS:"",litUserMainStartVS:"",litUserMainEndPS:"",litUserMainEndVS:"",ltcPS:eL,metalnessPS:sL,metalnessModulatePS:nL,morphPS:rL,morphVS:aL,msdfPS:iL,msdfVS:oL,normalVS:lL,normalCoreVS:hL,normalMapPS:cL,opacityPS:dL,opacityDitherPS:uL,outputPS:fL,outputAlphaPS:pL,outputTex2DPS:mL,sheenPS:_L,sheenGlossPS:gL,parallaxPS:vL,pickPS:yL,reflDirPS:SL,reflDirAnisoPS:xL,reflectionCCPS:TL,reflectionCubePS:wL,reflectionEnvHQPS:bL,reflectionEnvPS:EL,reflectionSpherePS:AL,reflectionSheenPS:CL,refractionCubePS:PL,refractionDynamicPS:LL,reprojectPS:DL,reprojectVS:ML,screenDepthPS:IL,shadowCascadesPS:RL,shadowEVSMPS:OL,shadowPCF1PS:FL,shadowPCF3PS:NL,shadowPCF5PS:kL,shadowPCSSPS:BL,shadowSoftPS:UL,skinBatchVS:zL,skinVS:VL,skyboxPS:GL,skyboxVS:HL,specularPS:WL,sphericalPS:XL,specularityFactorPS:qL,spotPS:$L,startNineSlicedPS:jL,startNineSlicedTiledPS:YL,stdDeclarationPS:KL,stdFrontEndPS:ZL,TBNPS:QL,thicknessPS:JL,tonemappingPS:tD,tonemappingAcesPS:eD,tonemappingAces2PS:sD,tonemappingFilmicPS:iD,tonemappingHejlPS:nD,tonemappingLinearPS:rD,tonemappingNeutralPS:aD,tonemappingNonePS:oD,transformVS:lD,transformCoreVS:hD,transformInstancingVS:cD,transmissionPS:dD,twoSidedLightingPS:uD,uv0VS:fD,uv1VS:pD,uvTransformVS:mD,uvTransformUniformsPS:_D,viewDirPS:gD,webgpuPS:Gh,webgpuVS:Hh};var yD=`\nuniform alpha_ref: f32;\nfn alphaTest(a: f32) {\n\tif (a < uniform.alpha_ref) {\n\t\tdiscard;\n\t}\n}\n`;var SD=`\n#if LIT_AMBIENT_SOURCE == AMBIENTSH\n\tuniform ambientSH: array<vec3f, 9>;\n#endif\n#if LIT_AMBIENT_SOURCE == ENVALATLAS\n\t#include "envAtlasPS"\n\t#ifndef ENV_ATLAS\n\t\t#define ENV_ATLAS\n\t\tvar texture_envAtlas: texture_2d<f32>;\n\t\tvar texture_envAtlasSampler: sampler;\n\t#endif\n#endif\nfn addAmbient(worldNormal: vec3f) {\n\t#ifdef LIT_AMBIENT_SOURCE == AMBIENTSH\n\t\tlet n: vec3f = cubeMapRotate(worldNormal);\n\t\tlet color: vec3f =\n\t\t\tuniform.ambientSH[0] +\n\t\t\tuniform.ambientSH[1] * n.x +\n\t\t\tuniform.ambientSH[2] * n.y +\n\t\t\tuniform.ambientSH[3] * n.z +\n\t\t\tuniform.ambientSH[4] * n.x * n.z +\n\t\t\tuniform.ambientSH[5] * n.z * n.y +\n\t\t\tuniform.ambientSH[6] * n.y * n.x +\n\t\t\tuniform.ambientSH[7] * (3.0 * n.z * n.z - 1.0) +\n\t\t\tuniform.ambientSH[8] * (n.x * n.x - n.y * n.y);\n\t\tdDiffuseLight += processEnvironment(max(color, vec3f(0.0)));\n\t#endif\n\t#if LIT_AMBIENT_SOURCE == ENVALATLAS\n\t\tlet dir: vec3f = normalize(cubeMapRotate(worldNormal) * vec3f(-1.0, 1.0, 1.0));\n\t\tlet uv: vec2f = mapUv(toSphericalUv(dir), vec4f(128.0, 256.0 + 128.0, 64.0, 32.0) / atlasSize);\n\t\tlet raw: vec4f = textureSample(texture_envAtlas, texture_envAtlasSampler, uv);\n\t\tlet linear: vec3f = {ambientDecode}(raw);\n\t\tdDiffuseLight += processEnvironment(linear);\n\t#endif\n\t#if LIT_AMBIENT_SOURCE == CONSTANT\n\t\tdDiffuseLight += uniform.light_globalAmbient;\n\t#endif\n}\n`;var xD=`\n#ifdef LIT_GGX_SPECULAR\n\tuniform material_anisotropyIntensity: f32;\n\tuniform material_anisotropyRotation: vec2f;\n#endif\nfn getAnisotropy() {\n\tdAnisotropy = 0.0;\n\tdAnisotropyRotation = vec2f(1.0, 0.0);\n#ifdef LIT_GGX_SPECULAR\n\tdAnisotropy = uniform.material_anisotropyIntensity;\n\tdAnisotropyRotation = uniform.material_anisotropyRotation;\n#endif\n#ifdef STD_ANISOTROPY_TEXTURE\n\tlet anisotropyTex: vec3f = textureSampleBias({STD_ANISOTROPY_TEXTURE_NAME}, {STD_ANISOTROPY_TEXTURE_NAME}Sampler, {STD_ANISOTROPY_TEXTURE_UV}, uniform.textureBias).rgb;\n\tdAnisotropy *= anisotropyTex.b;\n\tlet anisotropyRotationFromTex: vec2f = anisotropyTex.rg * 2.0 - vec2f(1.0);\n\tlet rotationMatrix: mat2x2f = mat2x2f(dAnisotropyRotation.x, dAnisotropyRotation.y, -dAnisotropyRotation.y, dAnisotropyRotation.x);\n\tdAnisotropyRotation = rotationMatrix * anisotropyRotationFromTex;\n#endif\n\tdAnisotropy = clamp(dAnisotropy, 0.0, 1.0);\n}\n`;var TD=`\n#if defined(STD_AO_TEXTURE) || defined(STD_AO_VERTEX)\n\tuniform material_aoIntensity: f32;\n#endif\n#ifdef STD_AODETAIL_TEXTURE\n\t#include "detailModesPS"\n#endif\nfn getAO() {\n\tdAo = 1.0;\n\t#ifdef STD_AO_TEXTURE\n\t\tvar aoBase: f32 = textureSampleBias({STD_AO_TEXTURE_NAME}, {STD_AO_TEXTURE_NAME}Sampler, {STD_AO_TEXTURE_UV}, uniform.textureBias).{STD_AO_TEXTURE_CHANNEL};\n\t\t#ifdef STD_AODETAIL_TEXTURE\n\t\t\tvar aoDetail: f32 = textureSampleBias({STD_AODETAIL_TEXTURE_NAME}, {STD_AODETAIL_TEXTURE_NAME}Sampler, {STD_AODETAIL_TEXTURE_UV}, uniform.textureBias).{STD_AODETAIL_TEXTURE_CHANNEL};\n\t\t\taoBase = detailMode_{STD_AODETAIL_DETAILMODE}(vec3f(aoBase), vec3f(aoDetail)).r;\n\t\t#endif\n\t\tdAo = dAo * aoBase;\n\t#endif\n\t#ifdef STD_AO_VERTEX\n\t\tdAo = dAo * saturate(vVertexColor.{STD_AO_VERTEX_CHANNEL});\n\t#endif\n\t#if defined(STD_AO_TEXTURE) || defined(STD_AO_VERTEX)\n\t\tdAo = mix(1.0, dAo, uniform.material_aoIntensity);\n\t#endif\n}\n`;var wD=`\nfn occludeDiffuse(ao: f32) {\n\tdDiffuseLight = dDiffuseLight * ao;\n}\n`;var bD=`\n#if LIT_OCCLUDE_SPECULAR != NONE\n\t#ifdef LIT_OCCLUDE_SPECULAR_FLOAT\n\t\tuniform material_occludeSpecularIntensity: f32;\n\t#endif\n#endif\nfn occludeSpecular(gloss: f32, ao: f32, worldNormal: vec3f, viewDir: vec3f) {\n\t#if LIT_OCCLUDE_SPECULAR == AO\n\t\t#ifdef LIT_OCCLUDE_SPECULAR_FLOAT\n\t\t\tvar specOcc: f32 = mix(1.0, ao, uniform.material_occludeSpecularIntensity);\n\t\t#else\n\t\t\tvar specOcc: f32 = ao;\n\t\t#endif\n\t#endif\n\t#if LIT_OCCLUDE_SPECULAR == GLOSSDEPENDENT\n\t\tvar specPow: f32 = exp2(gloss * 11.0);\n\t\tvar specOcc: f32 = saturate(pow(dot(worldNormal, viewDir) + ao, 0.01 * specPow) - 1.0 + ao);\n\t\t#ifdef LIT_OCCLUDE_SPECULAR_FLOAT\n\t\t\tspecOcc = mix(1.0, specOcc, uniform.material_occludeSpecularIntensity);\n\t\t#endif\n\t#endif\n\t#if LIT_OCCLUDE_SPECULAR != NONE\n\t\tdSpecularLight = dSpecularLight * specOcc;\n\t\tdReflection = dReflection * specOcc;\n\t\t#ifdef LIT_SHEEN\n\t\t\tsSpecularLight = sSpecularLight * specOcc;\n\t\t\tsReflection = sReflection * specOcc;\n\t\t#endif\n\t#endif\n}\n`;var ED=`\n\tlet dirLm = textureSample(texture_dirLightMap, texture_dirLightMapSampler, vUv1);\n\tif (uniform.bakeDir > 0.5) {\n\t\tif (dAtten > 0.00001) {\n\t\t\tlet unpacked_dir = dirLm.xyz * 2.0 - vec3f(1.0);\n\t\t\tdAtten = clamp(dAtten, 0.0, 1.0);\n\t\t\tlet combined_dir = dLightDirNormW.xyz * dAtten + unpacked_dir * dirLm.w;\n\t\t\tlet finalRgb = normalize(combined_dir) * 0.5 + vec3f(0.5);\n\t\t\tlet finalA = max(dirLm.w + dAtten, 1.0 / 255.0);\n\t\t\toutput.color = vec4f(finalRgb, finalA);\n\t\t} else {\n\t\t\toutput.color = dirLm;\n\t\t}\n\t} else {\n\t\tlet alpha_min = select(0.0, 1.0 / 255.0, dAtten > 0.00001);\n\t\tlet finalA = max(dirLm.w, alpha_min);\n\t\toutput.color = vec4f(dirLm.rgb, finalA);\n\t}\n`;var AD=`\n#ifdef LIT_LIGHTMAP_BAKING_ADD_AMBIENT\n\tdDiffuseLight = ((dDiffuseLight - 0.5) * max(uniform.ambientBakeOcclusionContrast + 1.0, 0.0)) + 0.5;\n\tdDiffuseLight = dDiffuseLight + vec3f(uniform.ambientBakeOcclusionBrightness);\n\tdDiffuseLight = saturate3(dDiffuseLight);\n\tdDiffuseLight = dDiffuseLight * dAmbientLight;\n#endif\n#ifdef LIGHTMAP_RGBM\n\tvar temp_color_rgbm = vec4f(dDiffuseLight, 1.0);\n\ttemp_color_rgbm = vec4f(pow(temp_color_rgbm.rgb, vec3f(0.5)), temp_color_rgbm.a);\n\ttemp_color_rgbm = vec4f(temp_color_rgbm.rgb / 8.0, temp_color_rgbm.a);\n\tlet max_g_b = max(temp_color_rgbm.g, max(temp_color_rgbm.b, 1.0 / 255.0));\n\tlet max_rgb = max(temp_color_rgbm.r, max_g_b);\n\ttemp_color_rgbm.a = clamp(max_rgb, 0.0, 1.0);\n\ttemp_color_rgbm.a = ceil(temp_color_rgbm.a * 255.0) / 255.0;\n\ttemp_color_rgbm = vec4f(temp_color_rgbm.rgb / temp_color_rgbm.a, temp_color_rgbm.a);\n\toutput.color = temp_color_rgbm;\n#else\n\toutput.color = vec4f(dDiffuseLight, 1.0);\n#endif\n`;var CD=`\nuniform view_position: vec3f;\nuniform light_globalAmbient: vec3f;\nfn square(x: f32) -> f32 {\n\treturn x*x;\n}\nfn saturate(x: f32) -> f32 {\n\treturn clamp(x, 0.0, 1.0);\n}\nfn saturate3(x: vec3f) -> vec3f {\n\treturn clamp(x, vec3f(0.0), vec3f(1.0));\n}\n`;var PD=`\n#define NINESLICED\nvarying vMask: vec2f;\nvarying vTiledUv: vec2f;\nuniform innerOffset: vec4f;\nuniform outerScale: vec2f;\nuniform atlasRect: vec4f;\nvar<private> nineSlicedUv: vec2f;\n`;var LD=`\n#define NINESLICED\n#define NINESLICETILED\nvarying vMask: vec2f;\nvarying vTiledUv: vec2f;\nuniform innerOffset: vec4f;\nuniform outerScale: vec2f;\nuniform atlasRect: vec4f;\nvar<private> nineSlicedUv: vec2f;\n`;var DD=`\nfn bayer2(p: vec2f) -> f32 {\n\treturn (2.0 * p.y + p.x + 1.0) % 4.0;\n}\nfn bayer4(p: vec2f) -> f32 {\n\tlet p1: vec2f = p % vec2f(2.0);\n\tlet p2: vec2f = floor(0.5 * (p % vec2f(4.0)));\n\treturn 4.0 * bayer2(p1) + bayer2(p2);\n}\nfn bayer8(p: vec2f) -> f32 {\n\tlet p1: vec2f = p % vec2f(2.0);\n\tlet p2: vec2f = floor(0.5 * (p % vec2f(4.0)));\n\tlet p4: vec2f = floor(0.25 * (p % vec2f(8.0)));\n\treturn 4.0 * (4.0 * bayer2(p1) + bayer2(p2)) + bayer2(p4);\n}\n`;var MD=`\nvarying vUv0: vec2f;\nvar source: texture_2d<f32>;\nvar sourceSampler: sampler;\n#ifdef GAUSS\n\tuniform weight: array<f32, {SAMPLES}>;\n#endif\nuniform pixelOffset: vec2f;\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tvar moments: vec3f = vec3f(0.0);\n\tlet uv: vec2f = input.vUv0 - uniform.pixelOffset * (f32({SAMPLES}) * 0.5);\n\tfor (var i: i32 = 0; i < {SAMPLES}; i = i + 1) {\n\t\tlet c: vec4f = textureSample(source, sourceSampler, uv + uniform.pixelOffset * f32(i));\n\t\t#ifdef GAUSS\n\t\t\tmoments = moments + c.xyz * uniform.weight[i].element;\n\t\t#else\n\t\t\tmoments = moments + c.xyz;\n\t\t#endif\n\t}\n\t#ifndef GAUSS\n\t\tmoments = moments * (1.0 / f32({SAMPLES}));\n\t#endif\n\toutput.color = vec4f(moments, 1.0);\n\treturn output;\n}\n`;var ID=`\nuniform material_clearCoat: f32;\nfn getClearCoat() {\n\tccSpecularity = uniform.material_clearCoat;\n\t#ifdef STD_CLEARCOAT_TEXTURE\n\tccSpecularity = ccSpecularity * textureSampleBias({STD_CLEARCOAT_TEXTURE_NAME}, {STD_CLEARCOAT_TEXTURE_NAME}Sampler, {STD_CLEARCOAT_TEXTURE_UV}, uniform.textureBias).{STD_CLEARCOAT_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_CLEARCOAT_VERTEX\n\tccSpecularity = ccSpecularity * saturate(vVertexColor.{STD_CLEARCOAT_VERTEX_CHANNEL});\n\t#endif\n}\n`;var RD=`\n\tuniform material_clearCoatGloss: f32;\nfn getClearCoatGlossiness() {\n\tccGlossiness = uniform.material_clearCoatGloss;\n\t#ifdef STD_CLEARCOATGLOSS_TEXTURE\n\tccGlossiness = ccGlossiness * textureSampleBias({STD_CLEARCOATGLOSS_TEXTURE_NAME}, {STD_CLEARCOATGLOSS_TEXTURE_NAME}Sampler, {STD_CLEARCOATGLOSS_TEXTURE_UV}, uniform.textureBias).{STD_CLEARCOATGLOSS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_CLEARCOATGLOSS_VERTEX\n\tccGlossiness = ccGlossiness * saturate(vVertexColor.{STD_CLEARCOATGLOSS_VERTEX_CHANNEL});\n\t#endif\n\t#ifdef STD_CLEARCOATGLOSS_INVERT\n\tccGlossiness = 1.0 - ccGlossiness;\n\t#endif\n\tccGlossiness += 0.0000001;\n}\n`;var OD=`\n#ifdef STD_CLEARCOATNORMAL_TEXTURE\n\tuniform material_clearCoatBumpiness: f32;\n#endif\nfn getClearCoatNormal() {\n#ifdef STD_CLEARCOATNORMAL_TEXTURE\n\tvar normalMap: vec3f = {STD_CLEARCOATNORMAL_TEXTURE_DECODE}(textureSampleBias({STD_CLEARCOATNORMAL_TEXTURE_NAME}, {STD_CLEARCOATNORMAL_TEXTURE_NAME}Sampler, {STD_CLEARCOATNORMAL_TEXTURE_UV}, uniform.textureBias));\n\tnormalMap = mix(vec3f(0.0, 0.0, 1.0), normalMap, uniform.material_clearCoatBumpiness);\n\tccNormalW = normalize(dTBN * normalMap);\n#else\n\tccNormalW = dVertexNormalW;\n#endif\n}\n`;var FD=`\nstruct FaceCoords {\n\tuv: vec2f,\n\tfaceIndex: f32,\n\ttileOffset: vec2f,\n}\nfn getCubemapFaceCoordinates(dir: vec3f) -> FaceCoords {\n\tvar faceIndex: f32;\n\tvar tileOffset: vec2f;\n\tvar uv: vec2f;\n\tlet vAbs: vec3f = abs(dir);\n\tvar ma: f32;\n\tif (vAbs.z >= vAbs.x && vAbs.z >= vAbs.y) {\n\t\tlet is_neg_z = dir.z < 0.0;\n\t\tfaceIndex = select(4.0, 5.0, is_neg_z);\n\t\tma = 0.5 / vAbs.z;\n\t\tuv = vec2f(select(dir.x, -dir.x, is_neg_z), -dir.y);\n\t\ttileOffset = vec2f(2.0, select(0.0, 1.0, is_neg_z));\n\t} else if (vAbs.y >= vAbs.x) {\n\t\tlet is_neg_y = dir.y < 0.0;\n\t\tfaceIndex = select(2.0, 3.0, is_neg_y);\n\t\tma = 0.5 / vAbs.y;\n\t\tuv = vec2f(dir.x, select(dir.z, -dir.z, is_neg_y));\n\t\ttileOffset = vec2f(1.0, select(0.0, 1.0, is_neg_y));\n\t} else {\n\t\tlet is_neg_x = dir.x < 0.0;\n\t\tfaceIndex = select(0.0, 1.0, is_neg_x);\n\t\tma = 0.5 / vAbs.x;\n\t\tuv = vec2f(select(-dir.z, dir.z, is_neg_x), -dir.y);\n\t\ttileOffset = vec2f(0.0, select(0.0, 1.0, is_neg_x));\n\t}\n\tuv = uv * ma + 0.5;\n\treturn FaceCoords(uv, faceIndex, tileOffset);\n}\nfn getCubemapAtlasCoordinates(omniAtlasViewport: vec3f, shadowEdgePixels: f32, shadowTextureResolution: f32, dir: vec3f) -> vec2f {\n\tlet faceData: FaceCoords = getCubemapFaceCoordinates(dir);\n\tvar uv: vec2f = faceData.uv;\n\tlet tileOffset: vec2f = faceData.tileOffset;\n\tlet atlasFaceSize: f32 = omniAtlasViewport.z;\n\tlet tileSize: f32 = shadowTextureResolution * atlasFaceSize;\n\tvar offset: f32 = shadowEdgePixels / tileSize;\n\tuv = uv * (1.0 - offset * 2.0) + offset;\n\tuv = uv * atlasFaceSize;\n\tuv = uv + tileOffset * atlasFaceSize;\n\tuv = uv + omniAtlasViewport.xy;\n\treturn uv;\n}\n`;var ND=`\nfn _getCookieClustered(tex: texture_2d<f32>, texSampler: sampler, uv: vec2f, intensity: f32, cookieChannel: vec4f) -> vec3f {\n\tlet pixel: vec4f = mix(vec4f(1.0), textureSampleLevel(tex, texSampler, uv, 0.0), intensity);\n\tlet isRgb: bool = dot(cookieChannel.rgb, vec3f(1.0)) == 3.0;\n\treturn select(vec3f(dot(pixel, cookieChannel)), pixel.rgb, isRgb);\n}\nfn getCookie2DClustered(tex: texture_2d<f32>, texSampler: sampler, transform: mat4x4f, worldPosition: vec3f, intensity: f32, cookieChannel: vec4f) -> vec3f {\n\tlet projPos: vec4f = transform * vec4f(worldPosition, 1.0);\n\treturn _getCookieClustered(tex, texSampler, projPos.xy / projPos.w, intensity, cookieChannel);\n}\nfn getCookieCubeClustered(tex: texture_2d<f32>, texSampler: sampler, dir: vec3f, intensity: f32, cookieChannel: vec4f, shadowTextureResolution: f32, shadowEdgePixels: f32, omniAtlasViewport: vec3f) -> vec3f {\n\tlet uv: vec2f = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, dir);\n\treturn _getCookieClustered(tex, texSampler, uv, intensity, cookieChannel);\n}\n`;var kD=`\nfn _getShadowCoordPerspZbuffer(shadowMatrix: mat4x4f, shadowParams: vec4f, wPos: vec3f) -> vec3f {\n\tvar projPos = shadowMatrix * vec4f(wPos, 1.0);\n\treturn projPos.xyz / projPos.w;\n}\nfn getShadowCoordPerspZbufferNormalOffset(shadowMatrix: mat4x4f, shadowParams: vec4f, normal: vec3f) -> vec3f {\n\tlet wPos: vec3f = vPositionW + normal * shadowParams.y;\n\treturn _getShadowCoordPerspZbuffer(shadowMatrix, shadowParams, wPos);\n}\nfn normalOffsetPointShadow(shadowParams: vec4f, lightPos: vec3f, lightDir: vec3f, lightDirNorm: vec3f, normal: vec3f) -> vec3f {\n\tlet distScale: f32 = length(lightDir);\n\tlet wPos: vec3f = vPositionW + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\tlet dir: vec3f = wPos - lightPos;\n\treturn dir;\n}\n#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\tfn getShadowOmniClusteredPCF1(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowParams: vec4f, omniAtlasViewport: vec3f, shadowEdgePixels: f32, lightDir: vec3f) -> f32 {\n\t\tlet shadowTextureResolution: f32 = shadowParams.x;\n\t\tlet uv: vec2f = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\t\tlet shadowZ: f32 = length(lightDir) * shadowParams.w + shadowParams.z;\n\t\treturn textureSampleCompareLevel(shadowMap, shadowMapSampler, uv, shadowZ);\n\t}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF3)\n\tfn getShadowOmniClusteredPCF3(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowParams: vec4f, omniAtlasViewport: vec3f, shadowEdgePixels: f32, lightDir: vec3f) -> f32 {\n\t\tlet shadowTextureResolution: f32 = shadowParams.x;\n\t\tlet uv: vec2f = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\t\tlet shadowZ: f32 = length(lightDir) * shadowParams.w + shadowParams.z;\n\t\tlet shadowCoord: vec3f = vec3f(uv, shadowZ);\n\t\treturn getShadowPCF3x3(shadowMap, shadowMapSampler, shadowCoord, shadowParams);\n\t}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF5)\n\tfn getShadowOmniClusteredPCF5(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowParams: vec4f, omniAtlasViewport: vec3f, shadowEdgePixels: f32, lightDir: vec3f) -> f32 {\n\t\tlet shadowTextureResolution: f32 = shadowParams.x;\n\t\tlet uv: vec2f = getCubemapAtlasCoordinates(omniAtlasViewport, shadowEdgePixels, shadowTextureResolution, lightDir);\n\t\tlet shadowZ: f32 = length(lightDir) * shadowParams.w + shadowParams.z;\n\t\tlet shadowCoord: vec3f = vec3f(uv, shadowZ);\n\t\treturn getShadowPCF5x5(shadowMap, shadowMapSampler, shadowCoord, shadowParams);\n\t}\n#endif\n#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\tfn getShadowSpotClusteredPCF1(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\t\treturn textureSampleCompareLevel(shadowMap, shadowMapSampler, shadowCoord.xy, shadowCoord.z);\n\t}\n#endif\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF3)\n\tfn getShadowSpotClusteredPCF3(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\t\treturn getShadowSpotPCF3x3(shadowMap, shadowMapSampler, shadowCoord, shadowParams);\n\t}\n#endif\n\t#if defined(CLUSTER_SHADOW_TYPE_PCF5)\n\tfn getShadowSpotClusteredPCF5(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\t\treturn getShadowPCF5x5(shadowMap, shadowMapSampler, shadowCoord, shadowParams);\n\t}\n#endif\n`;var BD=`\n#include "lightBufferDefinesPS"\n#include "clusteredLightUtilsPS"\n#ifdef CLUSTER_COOKIES\n\t#include "clusteredLightCookiesPS"\n#endif\n#ifdef CLUSTER_SHADOWS\n\t#include "clusteredLightShadowsPS"\n#endif\nvar clusterWorldTexture: texture_2d<f32>;\nvar lightsTexture: texture_2d<f32>;\n#ifdef CLUSTER_SHADOWS\n\tvar shadowAtlasTexture: texture_depth_2d;\n\tvar shadowAtlasTextureSampler: sampler_comparison;\n#endif\n#ifdef CLUSTER_COOKIES\n\tvar cookieAtlasTexture: texture_2d<f32>;\n\tvar cookieAtlasTextureSampler: sampler;\n#endif\nuniform clusterMaxCells: i32;\nuniform clusterSkip: f32;\nuniform clusterCellsCountByBoundsSize: vec3f;\nuniform clusterTextureSize: vec3f;\nuniform clusterBoundsMin: vec3f;\nuniform clusterBoundsDelta: vec3f;\nuniform clusterCellsDot: vec3f;\nuniform clusterCellsMax: vec3f;\nuniform shadowAtlasParams: vec2f;\nstruct ClusterLightData {\n\tflags: u32,\n\thalfWidth: vec3f,\n\tisSpot: bool,\n\thalfHeight: vec3f,\n\tlightIndex: i32,\n\tposition: vec3f,\n\tshape: u32,\n\tdirection: vec3f,\n\tfalloffModeLinear: bool,\n\tcolor: vec3f,\n\tshadowIntensity: f32,\n\tomniAtlasViewport: vec3f,\n\trange: f32,\n\tcookieChannelMask: vec4f,\n\tbiasesData: f32,\n\tshadowBias: f32,\n\tshadowNormalBias: f32,\n\tanglesData: f32,\n\tinnerConeAngleCos: f32,\n\touterConeAngleCos: f32,\n\tcookieIntensity: f32,\n\tisDynamic: bool,\n\tisLightmapped: bool\n}\nvar<private> lightProjectionMatrix: mat4x4f;\nfn sampleLightTextureF(lightIndex: i32, index: i32) -> vec4f {\n\treturn textureLoad(lightsTexture, vec2<i32>(index, lightIndex), 0);\n}\nfn decodeClusterLightCore(clusterLightData: ptr<function, ClusterLightData>, lightIndex: f32) {\n\tclusterLightData.lightIndex = i32(lightIndex);\n\tlet halfData: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_COLOR_ANGLES_BIAS});\n\tclusterLightData.anglesData = halfData.z;\n\tclusterLightData.biasesData = halfData.w;\n\tlet colorRG: vec2f = unpack2x16float(bitcast<u32>(halfData.x));\n\tlet colorB_: vec2f = unpack2x16float(bitcast<u32>(halfData.y));\n\tclusterLightData.color = vec3f(colorRG, colorB_.x) * {LIGHT_COLOR_DIVIDER};\n\tlet lightPosRange: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_POSITION_RANGE});\n\tclusterLightData.position = lightPosRange.xyz;\n\tclusterLightData.range = lightPosRange.w;\n\tlet lightDir_Flags: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_DIRECTION_FLAGS});\n\tclusterLightData.direction = lightDir_Flags.xyz;\n\tlet flags_uint: u32 = bitcast<u32>(lightDir_Flags.w);\n\tclusterLightData.flags = flags_uint;\n\tclusterLightData.isSpot = (flags_uint & (1u << 30u)) != 0u;\n\tclusterLightData.shape = (flags_uint >> 28u) & 0x3u;\n\tclusterLightData.falloffModeLinear = (flags_uint & (1u << 27u)) == 0u;\n\tclusterLightData.shadowIntensity = f32((flags_uint >> 0u) & 0xFFu) / 255.0;\n\tclusterLightData.cookieIntensity = f32((flags_uint >> 8u) & 0xFFu) / 255.0;\n\tclusterLightData.isDynamic = (flags_uint & (1u << 22u)) != 0u;\n\tclusterLightData.isLightmapped = (flags_uint & (1u << 21u)) != 0u;\n}\nfn decodeClusterLightSpot(clusterLightData: ptr<function, ClusterLightData>) {\n\tlet angles: vec2f = unpack2x16float(bitcast<u32>(clusterLightData.anglesData));\n\tclusterLightData.innerConeAngleCos = angles.x;\n\tclusterLightData.outerConeAngleCos = angles.y;\n}\nfn decodeClusterLightOmniAtlasViewport(clusterLightData: ptr<function, ClusterLightData>) {\n\tclusterLightData.omniAtlasViewport = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_PROJ_MAT_0}).xyz;\n}\nfn decodeClusterLightAreaData(clusterLightData: ptr<function, ClusterLightData>) {\n\tclusterLightData.halfWidth = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_AREA_DATA_WIDTH}).xyz;\n\tclusterLightData.halfHeight = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_AREA_DATA_HEIGHT}).xyz;\n}\nfn decodeClusterLightProjectionMatrixData(clusterLightData: ptr<function, ClusterLightData>) {\n\tlet m0: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_PROJ_MAT_0});\n\tlet m1: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_PROJ_MAT_1});\n\tlet m2: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_PROJ_MAT_2});\n\tlet m3: vec4f = sampleLightTextureF(clusterLightData.lightIndex, {CLUSTER_TEXTURE_PROJ_MAT_3});\n\tlightProjectionMatrix = mat4x4f(m0, m1, m2, m3);\n}\nfn decodeClusterLightShadowData(clusterLightData: ptr<function, ClusterLightData>) {\n\tlet biases: vec2f = unpack2x16float(bitcast<u32>(clusterLightData.biasesData));\n\tclusterLightData.shadowBias = biases.x;\n\tclusterLightData.shadowNormalBias = biases.y;\n}\nfn decodeClusterLightCookieData(clusterLightData: ptr<function, ClusterLightData>) {\n\tlet cookieFlags: u32 = (clusterLightData.flags >> 23u) & 0x0Fu;\n\tlet mask_uvec: vec4<u32> = vec4<u32>(cookieFlags) & vec4<u32>(1u, 2u, 4u, 8u);\n\tclusterLightData.cookieChannelMask = step(vec4f(1.0), vec4f(mask_uvec));\n}\nfn evaluateLight(\n\tlight: ptr<function, ClusterLightData>,\n\tworldNormal: vec3f,\n\tviewDir: vec3f,\n\treflectionDir: vec3f,\n#if defined(LIT_CLEARCOAT)\n\tclearcoatReflectionDir: vec3f,\n#endif\n\tgloss: f32,\n\tspecularity: vec3f,\n\tgeometricNormal: vec3f,\n\ttbn: mat3x3f,\n#if defined(LIT_IRIDESCENCE)\n\tiridescenceFresnel: vec3f,\n#endif\n\tclearcoat_worldNormal: vec3f,\n\tclearcoat_gloss: f32,\n\tsheen_gloss: f32,\n\tiridescence_intensity: f32\n) {\n\tvar cookieAttenuation: vec3f = vec3f(1.0);\n\tvar diffuseAttenuation: f32 = 1.0;\n\tvar falloffAttenuation: f32 = 1.0;\n\tlet lightDirW: vec3f = evalOmniLight(light.position);\n\tlet lightDirNormW: vec3f = normalize(lightDirW);\n\t#ifdef CLUSTER_AREALIGHTS\n\tif (light.shape != {LIGHTSHAPE_PUNCTUAL}) {\n\t\tdecodeClusterLightAreaData(light);\n\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\tcalcRectLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\tcalcDiskLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t} else {\n\t\t\tcalcSphereLightValues(light.position, light.halfWidth, light.halfHeight);\n\t\t}\n\t\tfalloffAttenuation = getFalloffWindow(light.range, lightDirW);\n\t} else\n\t#endif\n\t{\n\t\tif (light.falloffModeLinear) {\n\t\t\tfalloffAttenuation = getFalloffLinear(light.range, lightDirW);\n\t\t} else {\n\t\t\tfalloffAttenuation = getFalloffInvSquared(light.range, lightDirW);\n\t\t}\n\t}\n\tif (falloffAttenuation > 0.00001) {\n\t\t#ifdef CLUSTER_AREALIGHTS\n\t\tif (light.shape != {LIGHTSHAPE_PUNCTUAL}) {\n\t\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\t\tdiffuseAttenuation = getRectLightDiffuse(worldNormal, viewDir, lightDirW, lightDirNormW) * 16.0;\n\t\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\t\tdiffuseAttenuation = getDiskLightDiffuse(worldNormal, viewDir, lightDirW, lightDirNormW) * 16.0;\n\t\t\t} else {\n\t\t\t\tdiffuseAttenuation = getSphereLightDiffuse(worldNormal, viewDir, lightDirW, lightDirNormW) * 16.0;\n\t\t\t}\n\t\t} else\n\t\t#endif\n\t\t{\n\t\t\tfalloffAttenuation = falloffAttenuation * getLightDiffuse(worldNormal, viewDir, lightDirNormW);\n\t\t}\n\t\tif (light.isSpot) {\n\t\t\tdecodeClusterLightSpot(light);\n\t\t\tfalloffAttenuation = falloffAttenuation * getSpotEffect(light.direction, light.innerConeAngleCos, light.outerConeAngleCos, lightDirNormW);\n\t\t}\n\t\t#if defined(CLUSTER_COOKIES) || defined(CLUSTER_SHADOWS)\n\t\tif (falloffAttenuation > 0.00001) {\n\t\t\tif (light.shadowIntensity > 0.0 || light.cookieIntensity > 0.0) {\n\t\t\t\tif (light.isSpot) {\n\t\t\t\t\tdecodeClusterLightProjectionMatrixData(light);\n\t\t\t\t} else {\n\t\t\t\t\tdecodeClusterLightOmniAtlasViewport(light);\n\t\t\t\t}\n\t\t\t\tlet shadowTextureResolution: f32 = uniform.shadowAtlasParams.x;\n\t\t\t\tlet shadowEdgePixels: f32 = uniform.shadowAtlasParams.y;\n\t\t\t\t#ifdef CLUSTER_COOKIES\n\t\t\t\tif (light.cookieIntensity > 0.0) {\n\t\t\t\t\tdecodeClusterLightCookieData(light);\n\t\t\t\t\tif (light.isSpot) {\n\t\t\t\t\t\tcookieAttenuation = getCookie2DClustered(cookieAtlasTexture, cookieAtlasTextureSampler, lightProjectionMatrix, vPositionW, light.cookieIntensity, light.cookieChannelMask);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcookieAttenuation = getCookieCubeClustered(cookieAtlasTexture, cookieAtlasTextureSampler, lightDirW, light.cookieIntensity, light.cookieChannelMask, shadowTextureResolution, shadowEdgePixels, light.omniAtlasViewport);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t\t#ifdef CLUSTER_SHADOWS\n\t\t\t\tif (light.shadowIntensity > 0.0) {\n\t\t\t\t\tdecodeClusterLightShadowData(light);\n\t\t\t\t\tlet shadowParams: vec4f = vec4f(shadowTextureResolution, light.shadowNormalBias, light.shadowBias, 1.0 / light.range);\n\t\t\t\t\tif (light.isSpot) {\n\t\t\t\t\t\tlet shadowCoord: vec3f = getShadowCoordPerspZbufferNormalOffset(lightProjectionMatrix, shadowParams, geometricNormal);\n\t\t\t\t\t\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowSpotClusteredPCF1(shadowAtlasTexture, shadowAtlasTextureSampler, shadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF3)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowSpotClusteredPCF3(shadowAtlasTexture, shadowAtlasTextureSampler, shadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF5)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowSpotClusteredPCF5(shadowAtlasTexture, shadowAtlasTextureSampler, shadowCoord, shadowParams);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCSS)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowSpotClusteredPCSS(shadowAtlasTexture, shadowAtlasTextureSampler, shadowCoord, shadowParams);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tfalloffAttenuation = falloffAttenuation * mix(1.0, shadow, light.shadowIntensity);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlet dir: vec3f = normalOffsetPointShadow(shadowParams, light.position, lightDirW, lightDirNormW, geometricNormal);\n\t\t\t\t\t\t#if defined(CLUSTER_SHADOW_TYPE_PCF1)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowOmniClusteredPCF1(shadowAtlasTexture, shadowAtlasTextureSampler, shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF3)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowOmniClusteredPCF3(shadowAtlasTexture, shadowAtlasTextureSampler, shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#elif defined(CLUSTER_SHADOW_TYPE_PCF5)\n\t\t\t\t\t\t\tlet shadow: f32 = getShadowOmniClusteredPCF5(shadowAtlasTexture, shadowAtlasTextureSampler, shadowParams, light.omniAtlasViewport, shadowEdgePixels, dir);\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\tfalloffAttenuation = falloffAttenuation * mix(1.0, shadow, light.shadowIntensity);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t#endif\n\t\t\t}\n\t\t}\n\t\t#endif\n\t\t#ifdef CLUSTER_AREALIGHTS\n\t\tif (light.shape != {LIGHTSHAPE_PUNCTUAL}) {\n\t\t\t{\n\t\t\t\tvar areaDiffuse: vec3f = (diffuseAttenuation * falloffAttenuation) * light.color * cookieAttenuation;\n\t\t\t\t#if defined(LIT_SPECULAR)\n\t\t\t\t\tareaDiffuse = mix(areaDiffuse, vec3f(0.0), dLTCSpecFres);\n\t\t\t\t#endif\n\t\t\t\tdDiffuseLight = dDiffuseLight + areaDiffuse;\n\t\t\t}\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvar areaLightSpecular: f32;\n\t\t\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\t\t\tareaLightSpecular = getRectLightSpecular(worldNormal, viewDir);\n\t\t\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\t\t\tareaLightSpecular = getDiskLightSpecular(worldNormal, viewDir);\n\t\t\t\t} else {\n\t\t\t\t\tareaLightSpecular = getSphereLightSpecular(worldNormal, viewDir);\n\t\t\t\t}\n\t\t\t\tdSpecularLight = dSpecularLight + dLTCSpecFres * areaLightSpecular * falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t\tvar areaLightSpecularCC: f32;\n\t\t\t\t\tif (light.shape == {LIGHTSHAPE_RECT}) {\n\t\t\t\t\t\tareaLightSpecularCC = getRectLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t} else if (light.shape == {LIGHTSHAPE_DISK}) {\n\t\t\t\t\t\tareaLightSpecularCC = getDiskLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tareaLightSpecularCC = getSphereLightSpecular(clearcoat_worldNormal, viewDir);\n\t\t\t\t\t}\n\t\t\t\t\tccSpecularLight = ccSpecularLight + ccLTCSpecFres * areaLightSpecularCC * falloffAttenuation * light.color  * cookieAttenuation;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t} else\n\t\t#endif\n\t\t{\n\t\t\t{\n\t\t\t\tvar punctualDiffuse: vec3f = falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#if defined(CLUSTER_AREALIGHTS)\n\t\t\t\t#if defined(LIT_SPECULAR)\n\t\t\t\t\tpunctualDiffuse = mix(punctualDiffuse, vec3f(0.0), specularity);\n\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t\tdDiffuseLight = dDiffuseLight + punctualDiffuse;\n\t\t\t}\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tlet halfDir: vec3f = normalize(-lightDirNormW + viewDir);\n\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\tdSpecularLight = dSpecularLight +\n\t\t\t\t\t\tgetLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, lightDirNormW, gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation *\n\t\t\t\t\t\tgetFresnel(\n\t\t\t\t\t\t\tdot(viewDir, halfDir),\n\t\t\t\t\t\t\tgloss,\n\t\t\t\t\t\t\tspecularity\n\t\t\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\t\t\tiridescence_intensity\n\t\t\t\t\t\t#endif\n\t\t\t\t\t\t\t);\n\t\t\t\t#else\n\t\t\t\t\tdSpecularLight = dSpecularLight + getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, lightDirNormW, gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * specularity;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\t\tccSpecularLight = ccSpecularLight + getLightSpecular(halfDir, clearcoatReflectionDir, clearcoat_worldNormal, viewDir, lightDirNormW, clearcoat_gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation * getFresnelCC(dot(viewDir, halfDir));\n\t\t\t\t\t#else\n\t\t\t\t\t\tccSpecularLight = ccSpecularLight + getLightSpecular(halfDir, clearcoatReflectionDir, clearcoat_worldNormal, viewDir, lightDirNormW, clearcoat_gloss, tbn) * falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t\tsSpecularLight = sSpecularLight + getLightSpecularSheen(halfDir, worldNormal, viewDir, lightDirNormW, sheen_gloss) * falloffAttenuation * light.color * cookieAttenuation;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t}\n\t}\n\tdAtten = falloffAttenuation;\n\tdLightDirNormW = lightDirNormW;\n}\nfn evaluateClusterLight(\n\tlightIndex: f32,\n\tworldNormal: vec3f,\n\tviewDir: vec3f,\n\treflectionDir: vec3f,\n#if defined(LIT_CLEARCOAT)\n\tclearcoatReflectionDir: vec3f,\n#endif\n\tgloss: f32,\n\tspecularity: vec3f,\n\tgeometricNormal: vec3f,\n\ttbn: mat3x3f,\n#if defined(LIT_IRIDESCENCE)\n\tiridescenceFresnel: vec3f,\n#endif\n\tclearcoat_worldNormal: vec3f,\n\tclearcoat_gloss: f32,\n\tsheen_gloss: f32,\n\tiridescence_intensity: f32\n) {\n\tvar clusterLightData: ClusterLightData;\n\tdecodeClusterLightCore(&clusterLightData, lightIndex);\n\t#ifdef CLUSTER_MESH_DYNAMIC_LIGHTS\n\t\tlet acceptLightMask: bool = clusterLightData.isDynamic;\n\t#else\n\t\tlet acceptLightMask: bool = clusterLightData.isLightmapped;\n\t#endif\n\tif (acceptLightMask) {\n\t\tevaluateLight(\n\t\t\t&clusterLightData,\n\t\t\tworldNormal,\n\t\t\tviewDir,\n\t\t\treflectionDir,\n#if defined(LIT_CLEARCOAT)\n\t\t\tclearcoatReflectionDir,\n#endif\n\t\t\tgloss,\n\t\t\tspecularity,\n\t\t\tgeometricNormal,\n\t\t\ttbn,\n#if defined(LIT_IRIDESCENCE)\n\t\t\tiridescenceFresnel,\n#endif\n\t\t\tclearcoat_worldNormal,\n\t\t\tclearcoat_gloss,\n\t\t\tsheen_gloss,\n\t\t\tiridescence_intensity\n\t\t);\n\t}\n}\nfn addClusteredLights(\n\tworldNormal: vec3f,\n\tviewDir: vec3f,\n\treflectionDir: vec3f,\n#if defined(LIT_CLEARCOAT)\n\tclearcoatReflectionDir: vec3f,\n#endif\n\tgloss: f32,\n\tspecularity: vec3f,\n\tgeometricNormal: vec3f,\n\ttbn: mat3x3f,\n#if defined(LIT_IRIDESCENCE)\n\tiridescenceFresnel: vec3f,\n#endif\n\tclearcoat_worldNormal: vec3f,\n\tclearcoat_gloss: f32,\n\tsheen_gloss: f32,\n\tiridescence_intensity: f32\n) {\n\tif (uniform.clusterSkip > 0.5) {\n\t\treturn;\n\t}\n\tlet cellCoords: vec3f = floor((vPositionW - uniform.clusterBoundsMin) * uniform.clusterCellsCountByBoundsSize);\n\tif (!(any(cellCoords < vec3f(0.0)) || any(cellCoords >= uniform.clusterCellsMax))) {\n\t\tlet cellIndex: f32 = dot(uniform.clusterCellsDot, cellCoords);\n\t\tlet clusterV: f32 = floor(cellIndex * uniform.clusterTextureSize.y);\n\t\tlet clusterU: f32 = cellIndex - (clusterV * uniform.clusterTextureSize.x);\n\t\tfor (var lightCellIndex: i32 = 0; lightCellIndex < uniform.clusterMaxCells; lightCellIndex = lightCellIndex + 1) {\n\t\t\tlet lightIndexPacked: f32 = textureLoad(clusterWorldTexture, vec2<i32>(i32(clusterU) + lightCellIndex, i32(clusterV)), 0).r;\n\t\t\tif (lightIndexPacked <= 0.0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tevaluateClusterLight(\n\t\t\t\tlightIndexPacked * 255.0,\n\t\t\t\tworldNormal,\n\t\t\t\tviewDir,\n\t\t\t\treflectionDir,\n#if defined(LIT_CLEARCOAT)\n\t\t\t\tclearcoatReflectionDir,\n#endif\n\t\t\t\tgloss,\n\t\t\t\tspecularity,\n\t\t\t\tgeometricNormal,\n\t\t\t\ttbn,\n#if defined(LIT_IRIDESCENCE)\n\t\t\t\tiridescenceFresnel,\n#endif\n\t\t\t\tclearcoat_worldNormal,\n\t\t\t\tclearcoat_gloss,\n\t\t\t\tsheen_gloss,\n\t\t\t\tiridescence_intensity\n\t\t\t);\n\t\t}\n\t}\n}`;var UD=`\nfn combineColor(albedo: vec3f, sheenSpecularity: vec3f, clearcoatSpecularity: f32) -> vec3f {\n\tvar ret: vec3f = vec3f(0.0);\n\t#ifdef LIT_OLD_AMBIENT\n\t\tret = ret + ((dDiffuseLight - uniform.light_globalAmbient) * albedo + uniform.material_ambient * uniform.light_globalAmbient);\n\t#else\n\t\tret = ret + (albedo * dDiffuseLight);\n\t#endif\n\t#ifdef LIT_SPECULAR\n\t\tret = ret + dSpecularLight;\n\t#endif\n\t#ifdef LIT_REFLECTIONS\n\t\tret = ret + (dReflection.rgb * dReflection.a);\n\t#endif\n\t#ifdef LIT_SHEEN\n\t\tlet sheenScaling: f32 = 1.0 - max(max(sheenSpecularity.r, sheenSpecularity.g), sheenSpecularity.b) * 0.157;\n\t\tret = ret * sheenScaling + (sSpecularLight + sReflection.rgb) * sheenSpecularity;\n\t#endif\n\t#ifdef LIT_CLEARCOAT\n\t\tlet clearCoatScaling: f32 = 1.0 - ccFresnel * clearcoatSpecularity;\n\t\tret = ret * clearCoatScaling + (ccSpecularLight + ccReflection) * clearcoatSpecularity;\n\t#endif\n\treturn ret;\n}\n`;var zD=`\n\tvarying uv0: vec2f;\n\tvar blitTexture: texture_2d<f32>;\n\tvar blitTextureSampler : sampler;\n\t@fragment\n\tfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\toutput.color = textureSample(blitTexture, blitTextureSampler, input.uv0);\n\t\treturn output;\n\t}\n`;var VD=`\n\tvarying uv0: vec2f;\n\tuniform invViewProj: mat4x4<f32>;\n\tvar blitTexture: texture_cube<f32>;\n\tvar blitTextureSampler : sampler;\n\t@fragment\n\tfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\tvar projPos = vec4f(input.uv0 * 2.0 - 1.0, 0.5, 1.0);\n\t\tvar worldPos = uniform.invViewProj * projPos;\n\t\toutput.color = textureSample(blitTexture, blitTextureSampler, worldPos.xyz);\n\t\treturn output;\n\t}\n`;var GD=`\n\tattribute vertex_position: vec2f;\n\tvarying uv0: vec2f;\n\t@vertex\n\tfn vertexMain(input: VertexInput) -> VertexOutput {\n\t\tvar output: VertexOutput;\n\t\toutput.position = vec4f(input.vertex_position, 0.5, 1.0);\n\t\toutput.uv0 = input.vertex_position * 0.5 + vec2f(0.5, 0.5);\n\t\toutput.uv0.y = 1.0 - output.uv0.y;\n\t\treturn output;\n\t}\n`;var HD=`\n#if LIT_CUBEMAP_PROJECTION == BOX\n\tuniform envBoxMin: vec3f;\n\tuniform envBoxMax: vec3f;\n#endif\nfn cubeMapProject(nrdir: vec3f) -> vec3f {\n\t#if LIT_CUBEMAP_PROJECTION == NONE\n\t\treturn cubeMapRotate(nrdir);\n\t#endif\n\t#if LIT_CUBEMAP_PROJECTION == BOX\n\t\tlet nrdir_rotated: vec3f = cubeMapRotate(nrdir);\n\t\tlet rbmax: vec3f = (uniform.envBoxMax - vPositionW) / nrdir_rotated;\n\t\tlet rbmin: vec3f = (uniform.envBoxMin - vPositionW) / nrdir_rotated;\n\t\tlet rbminmax: vec3f = select(rbmin, rbmax, nrdir_rotated > vec3f(0.0));\n\t\tlet fa: f32 = min(min(rbminmax.x, rbminmax.y), rbminmax.z);\n\t\tlet posonbox: vec3f = vPositionW + nrdir_rotated * fa;\n\t\tlet envBoxPos: vec3f = (uniform.envBoxMin + uniform.envBoxMax) * 0.5;\n\t\treturn normalize(posonbox - envBoxPos);\n\t#endif\n}\n`;var WD=`\n#ifdef CUBEMAP_ROTATION\nuniform cubeMapRotationMatrix: mat3x3f;\n#endif\nfn cubeMapRotate(refDir: vec3f) -> vec3f {\n#ifdef CUBEMAP_ROTATION\n\treturn refDir * uniform.cubeMapRotationMatrix;\n#else\n\treturn refDir;\n#endif\n}\n`;var XD=`\n#ifdef DEBUG_ALBEDO_PASS\noutput.color = vec4(gammaCorrectOutput(dAlbedo), 1.0);\n#endif\n#ifdef DEBUG_UV0_PASS\noutput.color = vec4f(litArgs_albedo , 1.0);\n#endif\n#ifdef DEBUG_WORLD_NORMAL_PASS\noutput.color = vec4f(litArgs_worldNormal * 0.5 + 0.5, 1.0);\n#endif\n#ifdef DEBUG_OPACITY_PASS\noutput.color = vec4f(vec3f(litArgs_opacity) , 1.0);\n#endif\n#ifdef DEBUG_SPECULARITY_PASS\noutput.color = vec4f(litArgs_specularity, 1.0);\n#endif\n#ifdef DEBUG_GLOSS_PASS\noutput.color = vec4f(vec3f(litArgs_gloss) , 1.0);\n#endif\n#ifdef DEBUG_METALNESS_PASS\noutput.color = vec4f(vec3f(litArgs_metalness) , 1.0);\n#endif\n#ifdef DEBUG_AO_PASS\noutput.color = vec4f(vec3f(litArgs_ao) , 1.0);\n#endif\n#ifdef DEBUG_EMISSION_PASS\noutput.color = vec4f(gammaCorrectOutput(litArgs_emission), 1.0);\n#endif\n`;var qD=`\n#ifdef DEBUG_LIGHTING_PASS\n\tlitArgs_albedo = vec3f(0.5);\n#endif\n#ifdef DEBUG_UV0_PASS\n#ifdef VARYING_VUV0\n\tlitArgs_albedo = vec3f(vUv0, 0.0);\n#else\n\tlitArgs_albedo = vec3f(0.0);\n#endif\n#endif\n`;var $D=`\n#ifndef _DECODE_INCLUDED_\n#define _DECODE_INCLUDED_\nfn decodeLinear(raw: vec4f) -> vec3f {\n\treturn raw.rgb;\n}\nfn decodeGammaFloat(raw: f32) -> f32 {\n\treturn pow(raw, 2.2);\n}\nfn decodeGamma3(raw: vec3f) -> vec3f {\n\treturn pow(raw, vec3f(2.2));\n}\nfn decodeGamma(raw: vec4f) -> vec3f {\n\treturn pow(raw.xyz, vec3f(2.2));\n}\nfn decodeRGBM(raw: vec4f) -> vec3f {\n\tlet color = (8.0 * raw.a) * raw.rgb;\n\treturn color * color;\n}\nfn decodeRGBP(raw: vec4f) -> vec3f {\n\tlet color = raw.rgb * (-raw.a * 7.0 + 8.0);\n\treturn color * color;\n}\nfn decodeRGBE(raw: vec4f) -> vec3f {\n\treturn select(vec3f(0.0), raw.xyz * pow(2.0, raw.w * 255.0 - 128.0), raw.a != 0.0);\n}\nfn passThrough(raw: vec4f) -> vec4f {\n\treturn raw;\n}\nfn unpackNormalXYZ(nmap: vec4f) -> vec3f {\n\treturn nmap.xyz * 2.0 - 1.0;\n}\nfn unpackNormalXY(nmap: vec4f) -> vec3f {\n\tvar xy = nmap.wy * 2.0 - 1.0;\n\treturn vec3f(xy, sqrt(1.0 - clamp(dot(xy, xy), 0.0, 1.0)));\n}\n#endif\n`;var jD=`\n#ifndef _DETAILMODES_INCLUDED_\n#define _DETAILMODES_INCLUDED_\nfn detailMode_mul(c1: vec3f, c2: vec3f) -> vec3f {\n\treturn c1 * c2;\n}\nfn detailMode_add(c1: vec3f, c2: vec3f) -> vec3f {\n\treturn c1 + c2;\n}\nfn detailMode_screen(c1: vec3f, c2: vec3f) -> vec3f {\n\treturn 1.0 - (1.0 - c1)*(1.0 - c2);\n}\nfn detailMode_overlay(c1: vec3f, c2: vec3f) -> vec3f {\n\treturn mix(1.0 - 2.0 * (1.0 - c1)*(1.0 - c2), 2.0 * c1 * c2, step(c1, vec3f(0.5)));\n}\nfn detailMode_min(c1: vec3f, c2: vec3f) -> vec3f {\n\treturn min(c1, c2);\n}\nfn detailMode_max(c1: vec3f, c2: vec3f) -> vec3f {\n\treturn max(c1, c2);\n}\n#endif\n`;var YD=`\nuniform material_diffuse: vec3f;\n#ifdef STD_DIFFUSEDETAIL_TEXTURE\n\t#include "detailModesPS"\n#endif\nfn getAlbedo() {\n\tdAlbedo = uniform.material_diffuse.rgb;\n\t#ifdef STD_DIFFUSE_TEXTURE\n\t\tvar albedoTexture: vec3f = {STD_DIFFUSE_TEXTURE_DECODE}(textureSampleBias({STD_DIFFUSE_TEXTURE_NAME}, {STD_DIFFUSE_TEXTURE_NAME}Sampler, {STD_DIFFUSE_TEXTURE_UV}, uniform.textureBias)).{STD_DIFFUSE_TEXTURE_CHANNEL};\n\t\t#ifdef STD_DIFFUSEDETAIL_TEXTURE\n\t\t\tvar albedoDetail: vec3f = {STD_DIFFUSEDETAIL_TEXTURE_DECODE}(textureSampleBias({STD_DIFFUSEDETAIL_TEXTURE_NAME}, {STD_DIFFUSEDETAIL_TEXTURE_NAME}Sampler, {STD_DIFFUSEDETAIL_TEXTURE_UV}, uniform.textureBias)).{STD_DIFFUSEDETAIL_TEXTURE_CHANNEL};\n\t\t\talbedoTexture = detailMode_{STD_DIFFUSEDETAIL_DETAILMODE}(albedoTexture, albedoDetail);\n\t\t#endif\n\t\tdAlbedo = dAlbedo * albedoTexture;\n\t#endif\n\t#ifdef STD_DIFFUSE_VERTEX\n\t\tdAlbedo = dAlbedo * gammaCorrectInputVec3(saturate3(vVertexColor.{STD_DIFFUSE_VERTEX_CHANNEL}));\n\t#endif\n}\n`;var KD=`\nuniform material_emissive: vec3f;\nuniform material_emissiveIntensity: f32;\nfn getEmission() {\n\tdEmission = uniform.material_emissive * uniform.material_emissiveIntensity;\n\t#ifdef STD_EMISSIVE_TEXTURE\n\tdEmission *= {STD_EMISSIVE_TEXTURE_DECODE}(textureSampleBias({STD_EMISSIVE_TEXTURE_NAME}, {STD_EMISSIVE_TEXTURE_NAME}Sampler, {STD_EMISSIVE_TEXTURE_UV}, uniform.textureBias)).{STD_EMISSIVE_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_EMISSIVE_VERTEX\n\tdEmission = dEmission * gammaCorrectInputVec3(saturate3(vVertexColor.{STD_EMISSIVE_VERTEX_CHANNEL}));\n\t#endif\n}\n`;var ZD=`\nfn encodeLinear(source: vec3f) -> vec4f {\n\treturn vec4f(source, 1.0);\n}\nfn encodeGamma(source: vec3f) -> vec4f {\n\treturn vec4f(pow(source + vec3f(0.0000001), vec3f(1.0 / 2.2)), 1.0);\n}\nfn encodeRGBM(source: vec3f) -> vec4f {\n\tvar color: vec3f = pow(source, vec3f(0.5));\n\tcolor *= 1.0 / 8.0;\n\tvar a: f32 = saturate(max(max(color.r, color.g), max(color.b, 1.0 / 255.0)));\n\ta = ceil(a * 255.0) / 255.0;\n\tcolor /= a;\n\treturn vec4f(color, a);\n}\nfn encodeRGBP(source: vec3f) -> vec4f {\n\tvar gamma: vec3f = pow(source, vec3f(0.5));\n\tvar maxVal: f32 = min(8.0, max(1.0, max(gamma.x, max(gamma.y, gamma.z))));\n\tvar v: f32 = 1.0 - ((maxVal - 1.0) / 7.0);\n\tv = ceil(v * 255.0) / 255.0;\n\treturn vec4f(gamma / (-v * 7.0 + 8.0), v);\n}\nfn encodeRGBE(source: vec3f) -> vec4f {\n\tvar maxVal: f32 = max(source.x, max(source.y, source.z));\n\tif (maxVal < 1e-32) {\n\t\treturn vec4f(0.0, 0.0, 0.0, 0.0);\n\t} else {\n\t\tvar e: f32 = ceil(log2(maxVal));\n\t\treturn vec4f(source / pow(2.0, e), (e + 128.0) / 255.0);\n\t}\n}\n`;var QD=`\n\tvar finalRgb: vec3f = combineColor(litArgs_albedo, litArgs_sheen_specularity, litArgs_clearcoat_specularity);\n\tfinalRgb = finalRgb + litArgs_emission;\n\tfinalRgb = addFog(finalRgb);\n\tfinalRgb = toneMap(finalRgb);\n\tfinalRgb = gammaCorrectOutput(finalRgb);\n\toutput.color = vec4f(finalRgb, output.color.a);\n`;var JD=`\n#ifndef _ENVATLAS_INCLUDED_\n#define _ENVATLAS_INCLUDED_\nconst atlasSize : f32 = 512.0;\nconst seamSize : f32 = 1.0 / atlasSize;\nfn mapUv(uv : vec2f, rect : vec4f) -> vec2f {\n\treturn vec2f(mix(rect.x + seamSize, rect.x + rect.z - seamSize, uv.x),\n\t\t\t\t mix(rect.y + seamSize, rect.y + rect.w - seamSize, uv.y));\n}\nfn mapRoughnessUv(uv : vec2f, level : f32) -> vec2f {\n\tlet t : f32 = 1.0 / exp2(level);\n\treturn mapUv(uv, vec4f(0.0, 1.0 - t, t, t * 0.5));\n}\nfn mapShinyUv(uv : vec2f, level : f32) -> vec2f {\n\tlet t : f32 = 1.0 / exp2(level);\n\treturn mapUv(uv, vec4f(1.0 - t, 1.0 - t, t, t * 0.5));\n}\n#endif\n`;var tM=`\n#ifdef LIT_SKYBOX_INTENSITY\n\tuniform skyboxIntensity : f32;\n#endif\nfn processEnvironment(color : vec3f) -> vec3f {\n\t#ifdef LIT_SKYBOX_INTENSITY\n\t\treturn color * uniform.skyboxIntensity;\n\t#else\n\t\treturn color;\n\t#endif\n}\n`;var eM=`\nfn getFalloffWindow(lightRadius: f32, lightDir: vec3f) -> f32 {\n\tlet sqrDist: f32 = dot(lightDir, lightDir);\n\tlet invRadius: f32 = 1.0 / lightRadius;\n\treturn square(saturate(1.0 - square(sqrDist * square(invRadius))));\n}\nfn getFalloffInvSquared(lightRadius: f32, lightDir: vec3f) -> f32 {\n\tlet sqrDist: f32 = dot(lightDir, lightDir);\n\tvar falloff: f32 = 1.0 / (sqrDist + 1.0);\n\tlet invRadius: f32 = 1.0 / lightRadius;\n\tfalloff = falloff * 16.0;\n\tfalloff = falloff * square(saturate(1.0 - square(sqrDist * square(invRadius))));\n\treturn falloff;\n}\n`;var sM=`\nfn getFalloffLinear(lightRadius: f32, lightDir: vec3f) -> f32 {\n\tlet d: f32 = length(lightDir);\n\treturn max(((lightRadius - d) / lightRadius), 0.0);\n}\n`;var iM=`\n#ifndef FLOAT_AS_UINT\n#define FLOAT_AS_UINT\nfn float2uint(value: f32) -> vec4f {\n\tlet intBits = bitcast<u32>(value);\n\treturn vec4f(\n\t\tf32((intBits >> 24u) & 0xffu),\n\t\tf32((intBits >> 16u) & 0xffu),\n\t\tf32((intBits >> 8u) & 0xffu),\n\t\tf32(intBits & 0xffu)\n\t) / 255.0;\n}\nfn uint2float(value: vec4f) -> f32 {\n\tlet rgba_u32 = vec4<u32>(value * 255.0);\n\tlet intBits: u32 =\n\t\t(rgba_u32.r << 24u) |\n\t\t(rgba_u32.g << 16u) |\n\t\t(rgba_u32.b << 8u)  |\n\t\t rgba_u32.a;\n\treturn bitcast<f32>(intBits);\n}\nfn float2vec4(value: f32) -> vec4f {\n\t#if defined(CAPS_TEXTURE_FLOAT_RENDERABLE)\n\t\treturn vec4f(value, 1.0, 1.0, 1.0);\n\t#else\n\t\treturn float2uint(value);\n\t#endif\n}\n#endif\n`;var nM=`\nvar<private> dBlendModeFogFactor : f32 = 1.0;\n#if (FOG != NONE)\n\tuniform fog_color : vec3f;\n\t\n\t#if (FOG == LINEAR)\n\t\tuniform fog_start : f32;\n\t\tuniform fog_end : f32;\n\t#else\n\t\tuniform fog_density : f32;\n\t#endif\n#endif\nfn getFogFactor() -> f32 {\n\tlet depth = pcPosition.z / pcPosition.w;\n\tvar fogFactor : f32 = 0.0;\n\t#if (FOG == LINEAR)\n\t\tfogFactor = (uniform.fog_end - depth) / (uniform.fog_end - uniform.fog_start);\n\t#elif (FOG == EXP)\n\t\tfogFactor = exp(-depth * uniform.fog_density);\n\t#elif (FOG == EXP2)\n\t\tfogFactor = exp(-depth * depth * uniform.fog_density * uniform.fog_density);\n\t#endif\n\treturn clamp(fogFactor, 0.0, 1.0);\n}\nfn addFog(color : vec3f) -> vec3f {\n\t#if (FOG != NONE)\n\t\treturn mix(uniform.fog_color * dBlendModeFogFactor, color, getFogFactor());\n\t#else\n\t\treturn color;\n\t#endif\n}\n`;var rM=`\nfn getFresnel(\n\t\tcosTheta: f32,\n\t\tgloss: f32,\n\t\tspecularity: vec3f\n\t#if defined(LIT_IRIDESCENCE)\n\t\t, iridescenceFresnel: vec3f,\n\t\tiridescenceIntensity: f32\n\t#endif\n) -> vec3f {\n\tlet fresnel: f32 = pow(1.0 - saturate(cosTheta), 5.0);\n\tlet glossSq: f32 = gloss * gloss;\n\tlet ret: vec3f = specularity + (max(vec3f(glossSq), specularity) - specularity) * fresnel;\n\t#if defined(LIT_IRIDESCENCE)\n\t\treturn mix(ret, iridescenceFresnel, iridescenceIntensity);\n\t#else\n\t\treturn ret;\n\t#endif\n}\nfn getFresnelCC(cosTheta: f32) -> f32 {\n\tlet fresnel: f32 = pow(1.0 - saturate(cosTheta), 5.0);\n\treturn 0.04 + (1.0 - 0.04) * fresnel;\n}`;var aM=`\nattribute vertex_position: vec2f;\nvarying vUv0: vec2f;\n@vertex\nfn vertexMain(input: VertexInput) -> VertexOutput {\n\tvar output: VertexOutput;\n\toutput.position = vec4f(input.vertex_position, 0.5, 1.0);\n\toutput.vUv0 = input.vertex_position.xy * 0.5 + vec2f(0.5);\n\treturn output;\n}\n`;var oM=`\n#include "decodePS"\n#if (GAMMA == SRGB)\n\tfn gammaCorrectInput(color: f32) -> f32 {\n\t\treturn decodeGammaFloat(color);\n\t}\n\tfn gammaCorrectInputVec3(color: vec3f) -> vec3f {\n\t\treturn decodeGamma3(color);\n\t}\n\tfn gammaCorrectInputVec4(color: vec4f) -> vec4f {\n\t\treturn vec4f(decodeGamma3(color.xyz), color.w);\n\t}\n\tfn gammaCorrectOutput(color: vec3f) -> vec3f {\n\t\treturn pow(color + 0.0000001, vec3f(1.0 / 2.2));\n\t}\n#else\n\tfn gammaCorrectInput(color: f32) -> f32 {\n\t\treturn color;\n\t}\n\tfn gammaCorrectInputVec3(color: vec3f) -> vec3f {\n\t\treturn color;\n\t}\n\tfn gammaCorrectInputVec4(color: vec4f) -> vec4f {\n\t\treturn color;\n\t}\n\tfn gammaCorrectOutput(color: vec3f) -> vec3f {\n\t\treturn color;\n\t}\n#endif\n`;var lM=`\n#ifdef STD_GLOSS_CONSTANT\n\tuniform material_gloss: f32;\n#endif\nfn getGlossiness() {\n\tdGlossiness = 1.0;\n\t#ifdef STD_GLOSS_CONSTANT\n\tdGlossiness = dGlossiness * uniform.material_gloss;\n\t#endif\n\t#ifdef STD_GLOSS_TEXTURE\n\tdGlossiness = dGlossiness * textureSampleBias({STD_GLOSS_TEXTURE_NAME}, {STD_GLOSS_TEXTURE_NAME}Sampler, {STD_GLOSS_TEXTURE_UV}, uniform.textureBias).{STD_GLOSS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_GLOSS_VERTEX\n\tdGlossiness = dGlossiness * saturate(vVertexColor.{STD_GLOSS_VERTEX_CHANNEL});\n\t#endif\n\t#ifdef STD_GLOSS_INVERT\n\tdGlossiness = 1.0 - dGlossiness;\n\t#endif\n\tdGlossiness = dGlossiness + 0.0000001;\n}\n`;var hM=`\nuniform matrix_model: mat4x4f;\nuniform matrix_view: mat4x4f;\nuniform matrix_projection: mat4x4f;\nfn initCenter(modelCenter: vec3f, center: ptr<function, SplatCenter>) -> bool {\n\tlet modelView: mat4x4f = uniform.matrix_view * uniform.matrix_model;\n\tlet centerView: vec4f = modelView * vec4f(modelCenter, 1.0);\n\tif (centerView.z > 0.0) {\n\t\treturn false;\n\t}\n\tvar centerProj: vec4f = uniform.matrix_projection * centerView;\n\tcenterProj.z = clamp(centerProj.z, 0.0, abs(centerProj.w));\n\tcenter.view = centerView.xyz / centerView.w;\n\tcenter.proj = centerProj;\n\tcenter.projMat00 = uniform.matrix_projection[0][0];\n\tcenter.modelView = modelView;\n\treturn true;\n}\n`;var cM=`\nvar splatColor: texture_2d<f32>;\nfn readColor(source: ptr<function, SplatSource>) -> vec4f {\n\treturn textureLoad(splatColor, source.uv, 0);\n}\n`;var dM=`\nstruct SplatSource {\n\torder: u32,\n\tid: u32,\n\tuv: vec2<i32>,\n\tcornerUV: vec2f,\n}\nstruct SplatCenter {\n\tview: vec3f,\n\tproj: vec4f,\n\tmodelView: mat4x4f,\n\tprojMat00: f32,\n}\nstruct SplatCorner {\n\toffset: vec2f,\n\tuv: vec2f,\n\t#if GSPLAT_AA\n\t\taaFactor: f32,\n\t#endif\n}\n#include "gsplatEvalSHVS"\n#include "gsplatQuatToMat3VS"\n#if GSPLAT_COMPRESSED_DATA\n\t#include "gsplatCompressedDataVS"\n\t#if SH_BANDS > 0\n\t\t#include "gsplatCompressedSHVS"\n\t#endif\n#elif GSPLAT_SOGS_DATA\n\t#include "gsplatSogsDataVS"\n\t#include "gsplatSogsColorVS"\n\t#if SH_BANDS > 0\n\t\t#include "gsplatSogsSHVS"\n\t#endif\n#else\n\t#include "gsplatDataVS"\n\t#include "gsplatColorVS"\n\t#if SH_BANDS > 0\n\t\t#include "gsplatSHVS"\n\t#endif\n#endif\n#include "gsplatSourceVS"\n#include "gsplatCenterVS"\n#include "gsplatCornerVS"\n#include "gsplatOutputVS"\nfn clipCorner(corner: ptr<function, SplatCorner>, alpha: f32) {\n\tlet clip: f32 = min(1.0, sqrt(-log(1.0 / (255.0 * alpha))) / 2.0);\n\tcorner.offset = corner.offset * clip;\n\tcorner.uv = corner.uv * clip;\n}\n`;var uM=`\nvar packedTexture: texture_2d<u32>;\nvar chunkTexture: texture_2d<f32>;\nvar<private> chunkDataA: vec4f;\nvar<private> chunkDataB: vec4f;\nvar<private> chunkDataC: vec4f;\nvar<private> chunkDataD: vec4f;\nvar<private> chunkDataE: vec4f;\nvar<private> packedData: vec4u;\nfn unpack111011(bits: u32) -> vec3f {\n\treturn (vec3f((vec3<u32>(bits) >> vec3<u32>(21u, 11u, 0u)) & vec3<u32>(0x7ffu, 0x3ffu, 0x7ffu))) / vec3f(2047.0, 1023.0, 2047.0);\n}\nfn unpack8888(bits: u32) -> vec4f {\n\treturn vec4f(\n\t\tf32((bits >> 24u) & 0xffu),\n\t\tf32((bits >> 16u) & 0xffu),\n\t\tf32((bits >> 8u)  & 0xffu),\n\t\tf32(bits\t\t & 0xffu)\n\t) / 255.0;\n}\nconst norm_const: f32 = 1.0 / (sqrt(2.0) * 0.5);\nfn unpackRotation(bits: u32) -> vec4f {\n\tlet a = (f32((bits >> 20u) & 0x3ffu) / 1023.0 - 0.5) * norm_const;\n\tlet b = (f32((bits >> 10u) & 0x3ffu) / 1023.0 - 0.5) * norm_const;\n\tlet c = (f32(bits & 0x3ffu) / 1023.0 - 0.5) * norm_const;\n\tlet m = sqrt(1.0 - (a * a + b * b + c * c));\n\tlet mode = bits >> 30u;\n\tif (mode == 0u) { return vec4f(m, a, b, c); }\n\tif (mode == 1u) { return vec4f(a, m, b, c); }\n\tif (mode == 2u) { return vec4f(a, b, m, c); }\n\treturn vec4f(a, b, c, m);\n}\nfn readCenter(source: ptr<function, SplatSource>) -> vec3f {\n\tlet tex_size_u = textureDimensions(chunkTexture, 0);\n\tlet w: u32 = tex_size_u.x / 5u;\n\tlet chunkId: u32 = source.id / 256u;\n\tlet chunkUV: vec2<i32> = vec2<i32>(i32((chunkId % w) * 5u), i32(chunkId / w));\n\tchunkDataA = textureLoad(chunkTexture, chunkUV + vec2<i32>(0, 0), 0);\n\tchunkDataB = textureLoad(chunkTexture, chunkUV + vec2<i32>(1, 0), 0);\n\tchunkDataC = textureLoad(chunkTexture, chunkUV + vec2<i32>(2, 0), 0);\n\tchunkDataD = textureLoad(chunkTexture, chunkUV + vec2<i32>(3, 0), 0);\n\tchunkDataE = textureLoad(chunkTexture, chunkUV + vec2<i32>(4, 0), 0);\n\tpackedData = textureLoad(packedTexture, source.uv, 0);\n\treturn mix(chunkDataA.xyz, vec3f(chunkDataA.w, chunkDataB.xy), unpack111011(packedData.x));\n}\nfn readColor(source: ptr<function, SplatSource>) -> vec4f {\n\tlet r = unpack8888(packedData.w);\n\treturn vec4f(mix(chunkDataD.xyz, vec3f(chunkDataD.w, chunkDataE.xy), r.rgb), r.w);\n}\nfn getRotation() -> vec4f {\n\treturn unpackRotation(packedData.y);\n}\nfn getScale() -> vec3f {\n\treturn exp(mix(vec3f(chunkDataB.zw, chunkDataC.x), chunkDataC.yzw, unpack111011(packedData.z)));\n}\nfn readCovariance(source: ptr<function, SplatSource>, covA_ptr: ptr<function, vec3f>, covB_ptr: ptr<function, vec3f>) {\n\tlet rot = quatToMat3(getRotation());\n\tlet scale = getScale();\n\tlet M = transpose(mat3x3f(\n\t\tscale.x * rot[0],\n\t\tscale.y * rot[1],\n\t\tscale.z * rot[2]\n\t));\n\t*covA_ptr = vec3f(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));\n\t*covB_ptr = vec3f(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));\n}\n`;var fM=`\n#if SH_BANDS > 0\nvar shTexture0: texture_2d<u32>;\nvar shTexture1: texture_2d<u32>;\nvar shTexture2: texture_2d<u32>;\nfn unpack8888s(bits: u32) -> vec4f {\n\tlet unpacked_u = (vec4<u32>(bits) >> vec4<u32>(0u, 8u, 16u, 24u)) & vec4<u32>(0xffu);\n\treturn vec4f(unpacked_u) * (8.0 / 255.0) - 4.0;\n}\nfn readSHData(source: ptr<function, SplatSource>, sh: ptr<function, array<vec3f, 15>>, scale: ptr<function, f32>) {\n\tlet shData0: vec4<u32> = textureLoad(shTexture0, source.uv, 0);\n\tlet shData1: vec4<u32> = textureLoad(shTexture1, source.uv, 0);\n\tlet shData2: vec4<u32> = textureLoad(shTexture2, source.uv, 0);\n\tlet r0 = unpack8888s(shData0.x);\n\tlet r1 = unpack8888s(shData0.y);\n\tlet r2 = unpack8888s(shData0.z);\n\tlet r3 = unpack8888s(shData0.w);\n\tlet g0 = unpack8888s(shData1.x);\n\tlet g1 = unpack8888s(shData1.y);\n\tlet g2 = unpack8888s(shData1.z);\n\tlet g3 = unpack8888s(shData1.w);\n\tlet b0 = unpack8888s(shData2.x);\n\tlet b1 = unpack8888s(shData2.y);\n\tlet b2 = unpack8888s(shData2.z);\n\tlet b3 = unpack8888s(shData2.w);\n\tsh[0] =  vec3f(r0.x, g0.x, b0.x);\n\tsh[1] =  vec3f(r0.y, g0.y, b0.y);\n\tsh[2] =  vec3f(r0.z, g0.z, b0.z);\n\tsh[3] =  vec3f(r0.w, g0.w, b0.w);\n\tsh[4] =  vec3f(r1.x, g1.x, b1.x);\n\tsh[5] =  vec3f(r1.y, g1.y, b1.y);\n\tsh[6] =  vec3f(r1.z, g1.z, b1.z);\n\tsh[7] =  vec3f(r1.w, g1.w, b1.w);\n\tsh[8] =  vec3f(r2.x, g2.x, b2.x);\n\tsh[9] =  vec3f(r2.y, g2.y, b2.y);\n\tsh[10] = vec3f(r2.z, g2.z, b2.z);\n\tsh[11] = vec3f(r2.w, g2.w, b2.w);\n\tsh[12] = vec3f(r3.x, g3.x, b3.x);\n\tsh[13] = vec3f(r3.y, g3.y, b3.y);\n\tsh[14] = vec3f(r3.z, g3.z, b3.z);\n\t*scale = 1.0;\n}\n#endif\n`;var pM=`\n\t#if SH_BANDS == 1\n\t\tconst SH_COEFFS: i32 = 3;\n\t#elif SH_BANDS == 2\n\t\tconst SH_COEFFS: i32 = 8;\n\t#elif SH_BANDS == 3\n\t\tconst SH_COEFFS: i32 = 15;\n\t#else\n\t\tconst SH_COEFFS: i32 = 0;\n\t#endif\n\t#if SH_BANDS > 0\n\tconst SH_C1: f32 = 0.4886025119029199;\n\t#if SH_BANDS > 1\n\t\tconst SH_C2_0: f32 = 1.0925484305920792;\n\t\tconst SH_C2_1: f32 = -1.0925484305920792;\n\t\tconst SH_C2_2: f32 = 0.31539156525252005;\n\t\tconst SH_C2_3: f32 = -1.0925484305920792;\n\t\tconst SH_C2_4: f32 = 0.5462742152960396;\n\t#endif\n\t#if SH_BANDS > 2\n\t\tconst SH_C3_0: f32 = -0.5900435899266435;\n\t\tconst SH_C3_1: f32 = 2.890611442640554;\n\t\tconst SH_C3_2: f32 = -0.4570457994644658;\n\t\tconst SH_C3_3: f32 = 0.3731763325901154;\n\t\tconst SH_C3_4: f32 = -0.4570457994644658;\n\t\tconst SH_C3_5: f32 = 1.445305721320277;\n\t\tconst SH_C3_6: f32 = -0.5900435899266435;\n\t#endif\n\tfn evalSH(sh: ptr<function, array<vec3f, SH_COEFFS>>, dir: vec3f) -> vec3f {\n\t\tlet x = dir.x;\n\t\tlet y = dir.y;\n\t\tlet z = dir.z;\n\t\tvar result = SH_C1 * (-sh[0] * y + sh[1] * z - sh[2] * x);\n\t\t#if SH_BANDS > 1\n\t\t\tlet xx = x * x;\n\t\t\tlet yy = y * y;\n\t\t\tlet zz = z * z;\n\t\t\tlet xy = x * y;\n\t\t\tlet yz = y * z;\n\t\t\tlet xz = x * z;\n\t\t\tresult = result + (\n\t\t\t\tsh[3] * (SH_C2_0 * xy) +\n\t\t\t\tsh[4] * (SH_C2_1 * yz) +\n\t\t\t\tsh[5] * (SH_C2_2 * (2.0 * zz - xx - yy)) +\n\t\t\t\tsh[6] * (SH_C2_3 * xz) +\n\t\t\t\tsh[7] * (SH_C2_4 * (xx - yy))\n\t\t\t);\n\t\t#endif\n\t\t#if SH_BANDS > 2\n\t\t\tresult = result + (\n\t\t\t\tsh[8]  * (SH_C3_0 * y * (3.0 * xx - yy)) +\n\t\t\t\tsh[9]  * (SH_C3_1 * xy * z) +\n\t\t\t\tsh[10] * (SH_C3_2 * y * (4.0 * zz - xx - yy)) +\n\t\t\t\tsh[11] * (SH_C3_3 * z * (2.0 * zz - 3.0 * xx - 3.0 * yy)) +\n\t\t\t\tsh[12] * (SH_C3_4 * x * (4.0 * zz - xx - yy)) +\n\t\t\t\tsh[13] * (SH_C3_5 * z * (xx - yy)) +\n\t\t\t\tsh[14] * (SH_C3_6 * x * (xx - 3.0 * yy))\n\t\t\t);\n\t\t#endif\n\t\treturn result;\n\t}\n\t#endif\n`;var mM=`\nfn quatToMat3(R: vec4<f32>) -> mat3x3<f32> {\n\tlet R2: vec4<f32> = R + R;\n\tlet X: f32\t   = R2.x * R.w;\n\tlet Y: vec4<f32> = R2.y * R;\n\tlet Z: vec4<f32> = R2.z * R;\n\tlet W: f32\t   = R2.w * R.w;\n\treturn mat3x3<f32>(\n\t\t1.0 - Z.z - W,  Y.z + X,\t  Y.w - Z.x,\n\t\tY.z - X,\t\t1.0 - Y.y - W, Z.w + Y.x,\n\t\tY.w + Z.x,\t  Z.w - Y.x,\t 1.0 - Y.y - Z.z\n\t);\n}\n`;var _M=`\nvar sh0: texture_2d<f32>;\nuniform sh0_mins: vec4f;\nuniform sh0_maxs: vec4f;\nconst SH_C0: f32 = 0.28209479177387814;\nfn readColor(source: ptr<function, SplatSource>) -> vec4f {\n\tlet clr: vec4f = mix(uniform.sh0_mins, uniform.sh0_maxs, textureLoad(sh0, source.uv, 0));\n\treturn vec4f(vec3f(0.5) + clr.xyz * SH_C0, 1.0 / (1.0 + exp(-clr.w)));\n}\n`;var gM=`\nvar packedTexture: texture_2d<u32>;\nuniform means_mins: vec3f;\nuniform means_maxs: vec3f;\nuniform scales_mins: vec3f;\nuniform scales_maxs: vec3f;\nfn unpackU32(u: u32) -> vec4f {\n\treturn vec4f(\n\t\tf32((u >> 24u) & 0xFFu) / 255.0,\n\t\tf32((u >> 16u) & 0xFFu) / 255.0,\n\t\tf32((u >> 8u) & 0xFFu) / 255.0,\n\t\tf32(u & 0xFFu) / 255.0\n\t);\n}\nvar<private> packedSample: vec4<u32>;\nfn readCenter(source: ptr<function, SplatSource>) -> vec3f {\n\tpackedSample = textureLoad(packedTexture, source.uv, 0);\n\tlet l: vec3f = unpackU32(packedSample.x).xyz;\n\tlet u: vec3f = unpackU32(packedSample.y).xyz;\n\tlet n: vec3f = (l * 255.0 + u * 255.0 * 256.0) / 65535.0;\n\tlet v: vec3f = mix(uniform.means_mins, uniform.means_maxs, n);\n\treturn sign(v) * (exp(abs(v)) - 1.0);\n}\nconst norm: f32 = 2.0 / sqrt(2.0);\nfn readCovariance(source: ptr<function, SplatSource>, covA_ptr: ptr<function, vec3f>, covB_ptr: ptr<function, vec3f>) {\n\tlet qdata: vec4f = unpackU32(packedSample.z);\n\tlet sdata: vec3f = unpackU32(packedSample.w).xyz;\n\tlet abc: vec3f = (qdata.xyz - 0.5) * norm;\n\tlet d: f32 = sqrt(max(0.0, 1.0 - dot(abc, abc)));\n\tlet mode: u32 = u32(qdata.w * 255.0 + 0.5) - 252u;\n\tvar quat: vec4f;\n\tif (mode == 0u) {\n\t\tquat = vec4f(d, abc);\n\t} else if (mode == 1u) {\n\t\tquat = vec4f(abc.x, d, abc.y, abc.z);\n\t} else if (mode == 2u) {\n\t\tquat = vec4f(abc.x, abc.y, d, abc.z);\n\t} else {\n\t\tquat = vec4f(abc.x, abc.y, abc.z, d);\n\t}\n\tlet rot: mat3x3f = quatToMat3(quat);\n\tlet scale: vec3f = exp(mix(uniform.scales_mins, uniform.scales_maxs, sdata));\n\tlet M: mat3x3f = transpose(mat3x3f(\n\t\tscale.x * rot[0],\n\t\tscale.y * rot[1],\n\t\tscale.z * rot[2]\n\t));\n\t*covA_ptr = vec3f(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));\n\t*covB_ptr = vec3f(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));\n}\n`;var vM=`\nvar sh_centroids: texture_2d<f32>;\nuniform shN_mins: f32;\nuniform shN_maxs: f32;\nfn readSHData(source: ptr<function, SplatSource>, sh: ptr<function, array<vec3f, SH_COEFFS>>, scale: ptr<function, f32>) {\n\tlet t: vec2<i32> = vec2<i32>(i32(packedSample.x & 255u), i32(packedSample.y & 255u));\n\tlet n: i32 = t.x + t.y * 256;\n\tlet u: i32 = (n % 64) * SH_COEFFS;\n\tlet v: i32 = n / 64;\n\tfor (var i: i32 = 0; i < SH_COEFFS; i = i + 1) {\n\t\tsh[i] = mix(vec3f(uniform.shN_mins), vec3f(uniform.shN_maxs), textureLoad(sh_centroids, vec2<i32>(u + i, v), 0).xyz);\n\t}\n\t*scale = 1.0;\n}\n`;var yM=`\nuniform viewport: vec2f;\nuniform camera_params: vec4f;\nfn initCorner(source: ptr<function, SplatSource>, center: ptr<function, SplatCenter>, corner: ptr<function, SplatCorner>) -> bool {\n\tvar covA: vec3f;\n\tvar covB: vec3f;\n\treadCovariance(source, &covA, &covB);\n\tlet Vrk = mat3x3f(\n\t\tvec3f(covA.x, covA.y, covA.z),\n\t\tvec3f(covA.y, covB.x, covB.y),\n\t\tvec3f(covA.z, covB.y, covB.z)\n\t);\n\tlet focal = uniform.viewport.x * center.projMat00;\n\tlet v = select(center.view.xyz, vec3f(0.0, 0.0, 1.0), uniform.camera_params.w == 1.0);\n\tlet J1 = focal / v.z;\n\tlet J2 = -J1 / v.z * v.xy;\n\tlet J = mat3x3f(\n\t\tvec3f(J1, 0.0, J2.x),\n\t\tvec3f(0.0, J1, J2.y),\n\t\tvec3f(0.0, 0.0, 0.0)\n\t);\n\tlet W = transpose(mat3x3f(center.modelView[0].xyz, center.modelView[1].xyz, center.modelView[2].xyz));\n\tlet T = W * J;\n\tlet cov = transpose(T) * Vrk * T;\n\t#if GSPLAT_AA\n\t\tlet detOrig = cov[0][0] * cov[1][1] - cov[0][1] * cov[1][0];\n\t\tlet detBlur = (cov[0][0] + 0.3) * (cov[1][1] + 0.3) - cov[0][1] * cov[1][0];\n\t\tcorner.aaFactor = sqrt(detOrig / detBlur);\n\t#endif\n\tlet diagonal1 = cov[0][0] + 0.3;\n\tlet offDiagonal = cov[0][1];\n\tlet diagonal2 = cov[1][1] + 0.3;\n\tlet mid = 0.5 * (diagonal1 + diagonal2);\n\tlet radius = length(vec2f((diagonal1 - diagonal2) / 2.0, offDiagonal));\n\tlet lambda1 = mid + radius;\n\tlet lambda2 = max(mid - radius, 0.1);\n\tlet vmin = min(1024.0, min(uniform.viewport.x, uniform.viewport.y));\n\tlet l1 = 2.0 * min(sqrt(2.0 * lambda1), vmin);\n\tlet l2 = 2.0 * min(sqrt(2.0 * lambda2), vmin);\n\tif (l1 < 2.0 && l2 < 2.0) {\n\t\treturn false;\n\t}\n\tlet c = center.proj.ww / uniform.viewport;\n\tif (any((abs(center.proj.xy) - vec2f(max(l1, l2)) * c) > center.proj.ww)) {\n\t\treturn false;\n\t}\n\tlet diagonalVector = normalize(vec2f(offDiagonal, lambda1 - diagonal1));\n\tlet v1 = l1 * diagonalVector;\n\tlet v2 = l2 * vec2f(diagonalVector.y, -diagonalVector.x);\n\tcorner.offset = (source.cornerUV.x * v1 + source.cornerUV.y * v2) * c;\n\tcorner.uv = source.cornerUV;\n\treturn true;\n}\n`;var SM=`\nvar transformA: texture_2d<u32>;\nvar transformB: texture_2d<f32>;\nvar<private> tAw: u32;\nfn readCenter(source: ptr<function, SplatSource>) -> vec3f {\n\tlet tA: vec4<u32> = textureLoad(transformA, source.uv, 0);\n\ttAw = tA.w;\n\treturn bitcast<vec3f>(tA.xyz);\n}\nfn unpackRotation(packed: vec3f) -> vec4f {\n\treturn vec4f(packed.xyz, sqrt(max(0.0, 1.0 - dot(packed, packed))));\n}\nfn readCovariance(source: ptr<function, SplatSource>, covA_ptr: ptr<function, vec3f>, covB_ptr: ptr<function, vec3f>) {\n\tlet tB: vec4f = textureLoad(transformB, source.uv, 0);\n\tlet rot: mat3x3f = quatToMat3(unpackRotation(vec3f(unpack2x16float(bitcast<u32>(tAw)), tB.w)).wxyz);\n\tlet scale: vec3f = tB.xyz;\n\tlet M = transpose(mat3x3f(\n\t\tscale.x * rot[0],\n\t\tscale.y * rot[1],\n\t\tscale.z * rot[2]\n\t));\n\t*covA_ptr = vec3f(dot(M[0], M[0]), dot(M[0], M[1]), dot(M[0], M[2]));\n\t*covB_ptr = vec3f(dot(M[1], M[1]), dot(M[1], M[2]), dot(M[2], M[2]));\n}\n`;var xM=`\n#include "tonemappingPS"\n#include "decodePS"\n#include "gammaPS"\nfn prepareOutputFromGamma(gammaColor: vec3f) -> vec3f {\n\t#if TONEMAP == NONE\n\t\t#if GAMMA == NONE\n\t\t\treturn decodeGamma3(gammaColor);\n\t\t#else \n\t\t\treturn gammaColor;\n\t\t#endif\n\t#else\n\t\treturn gammaCorrectOutput(toneMap(decodeGamma3(gammaColor)));\n\t#endif\n}\n`;var TM=`\n#ifndef DITHER_NONE\n\t#include "bayerPS"\n\t#include "opacityDitherPS"\n\tvarying id: f32;\n#endif\n#ifdef PICK_PASS\n\t#include "pickPS"\n#endif\n#if defined(SHADOW_PASS) || defined(PICK_PASS) || defined(PREPASS_PASS)\n\tuniform alphaClip: f32;\n#endif\n#ifdef PREPASS_PASS\n\tvarying vLinearDepth: f32;\n\t#include "floatAsUintPS"\n#endif\nconst EXP_A: f32\t  = 12102203.0;\nconst EXP_BC_RMS: i32 = 1064866808;\nfn fastExp(x: f32) -> f32 {\n\tvar i: i32 = i32(EXP_A * x) + EXP_BC_RMS;\n\treturn bitcast<f32>(i);\n}\nvarying gaussianUV: vec2f;\nvarying gaussianColor: vec4f;\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tlet A: f32 = dot(gaussianUV, gaussianUV);\n\tif (A > 1.0) {\n\t\tdiscard;\n\t\treturn output;\n\t}\n\tvar alpha: f32 = fastExp(-A * 4.0) * gaussianColor.a;\n\t#if defined(SHADOW_PASS) || defined(PICK_PASS) || defined(PREPASS_PASS)\n\t\tif (alpha < uniform.alphaClip) {\n\t\t\tdiscard;\n\t\t\treturn output;\n\t\t}\n\t#endif\n\t#ifdef PICK_PASS\n\t\toutput.color = getPickOutput();\n\t#elif SHADOW_PASS\n\t\toutput.color = vec4f(0.0, 0.0, 0.0, 1.0);\n\t#elif PREPASS_PASS\n\t\toutput.color = float2vec4(vLinearDepth);\n\t#else\n\t\tif (alpha < (1.0 / 255.0)) {\n\t\t\tdiscard;\n\t\t\treturn output;\n\t\t}\n\t\t#ifndef DITHER_NONE\n\t\t\topacityDither(&alpha, id * 0.013);\n\t\t#endif\n\t\toutput.color = vec4f(input.gaussianColor.xyz * alpha, alpha);\n\t#endif\n\treturn output;\n}`;var wM=`\n#if SH_BANDS > 0\nfn unpack111011s(bits: u32) -> vec3f {\n\treturn (vec3f((vec3<u32>(bits) >> vec3<u32>(21u, 11u, 0u)) & vec3<u32>(0x7ffu, 0x3ffu, 0x7ffu)) / vec3f(2047.0, 1023.0, 2047.0)) * 2.0 - 1.0;\n}\nstruct ScaleAndSH {\n\tscale: f32,\n\ta: vec3f,\n\tb: vec3f,\n\tc: vec3f\n};\nfn fetchScale(t_in: vec4<u32>) -> ScaleAndSH {\n\tvar result: ScaleAndSH;\n\tresult.scale = bitcast<f32>(t_in.x);\n\tresult.a = unpack111011s(t_in.y);\n\tresult.b = unpack111011s(t_in.z);\n\tresult.c = unpack111011s(t_in.w);\n\treturn result;\n}\nstruct SH {\n\ta: vec3f,\n\tb: vec3f,\n\tc: vec3f,\n\td: vec3f\n};\nfn fetch4(t_in: vec4<u32>) -> SH {\n\tvar result: SH;\n\tresult.a = unpack111011s(t_in.x);\n\tresult.b = unpack111011s(t_in.y);\n\tresult.c = unpack111011s(t_in.z);\n\tresult.d = unpack111011s(t_in.w);\n\treturn result;\n}\nfn fetch1(t_in: u32) -> vec3f {\n\treturn unpack111011s(t_in);\n}\n#if SH_BANDS == 1\n\tvar splatSH_1to3: texture_2d<u32>;\n\tfn readSHData(source: ptr<function, SplatSource>, sh: ptr<function, array<vec3f, 3>>, scale: ptr<function, f32>) {\n\t\tlet result = fetchScale(textureLoad(splatSH_1to3, source.uv, 0));\n\t\t*scale = result.scale;\n\t\tsh[0] = result.a;\n\t\tsh[1] = result.b;\n\t\tsh[2] = result.c;\n\t}\n#elif SH_BANDS == 2\n\tvar splatSH_1to3: texture_2d<u32>;\n\tvar splatSH_4to7: texture_2d<u32>;\n\tvar splatSH_8to11: texture_2d<u32>;\n\tfn readSHData(source: ptr<function, SplatSource>, sh: ptr<function, array<vec3f, 8>>, scale: ptr<function, f32>) {\n\t\tlet first: ScaleAndSH = fetchScale(textureLoad(splatSH_1to3, source.uv, 0));\n\t\t*scale = first.scale;\n\t\tsh[0] = first.a;\n\t\tsh[1] = first.b;\n\t\tsh[2] = first.c;\n\t\tlet second: SH = fetch4(textureLoad(splatSH_4to7, source.uv, 0));\n\t\tsh[3] = second.a;\n\t\tsh[4] = second.b;\n\t\tsh[5] = second.c;\n\t\tsh[6] = second.d;\n\t\tsh[7] = fetch1(textureLoad(splatSH_8to11, source.uv, 0).x);\n\t}\n#else\n\tvar splatSH_1to3: texture_2d<u32>;\n\tvar splatSH_4to7: texture_2d<u32>;\n\tvar splatSH_8to11: texture_2d<u32>;\n\tvar splatSH_12to15: texture_2d<u32>;\n\tfn readSHData(source: ptr<function, SplatSource>, sh: ptr<function, array<vec3f, 15>>, scale: ptr<function, f32>) {\n\t\tlet first: ScaleAndSH = fetchScale(textureLoad(splatSH_1to3, source.uv, 0));\n\t\t*scale = first.scale;\n\t\tsh[0] = first.a;\n\t\tsh[1] = first.b;\n\t\tsh[2] = first.c;\n\t\tlet second: SH = fetch4(textureLoad(splatSH_4to7, source.uv, 0));\n\t\tsh[3] = second.a;\n\t\tsh[4] = second.b;\n\t\tsh[5] = second.c;\n\t\tsh[6] = second.d;\n\t\tlet third: SH = fetch4(textureLoad(splatSH_8to11, source.uv, 0));\n\t\tsh[7] = third.a;\n\t\tsh[8] = third.b;\n\t\tsh[9] = third.c;\n\t\tsh[10] = third.d;\n\t\tlet fourth: SH = fetch4(textureLoad(splatSH_12to15, source.uv, 0));\n\t\tsh[11] = fourth.a;\n\t\tsh[12] = fourth.b;\n\t\tsh[13] = fourth.c;\n\t\tsh[14] = fourth.d;\n\t}\n#endif\n#endif\n`;var bM=`\nattribute vertex_position: vec3f;\nattribute vertex_id_attrib: u32;\nuniform numSplats: u32;\nvar splatOrder: texture_2d<u32>;\nfn initSource(source: ptr<function, SplatSource>) -> bool {\n\tlet w: u32 = textureDimensions(splatOrder, 0).x;\n\tsource.order = vertex_id_attrib + u32(vertex_position.z);\n\tif (source.order >= uniform.numSplats) {\n\t\treturn false;\n\t}\n\tlet orderUV = vec2i(vec2u(source.order % w, source.order / w));\n\tsource.id = textureLoad(splatOrder, orderUV, 0).r;\n\tsource.uv = vec2i(vec2u(source.id % w, source.id / w));\n\tsource.cornerUV = vertex_position.xy;\n\treturn true;\n}\n`;var EM=`\n#include "gsplatCommonVS"\nvarying gaussianUV: vec2f;\nvarying gaussianColor: vec4f;\n#ifndef DITHER_NONE\n\tvarying id: f32;\n#endif\nconst discardVec: vec4f = vec4f(0.0, 0.0, 2.0, 1.0);\n#ifdef PREPASS_PASS\n\tvarying vLinearDepth: f32;\n#endif\n@vertex\nfn vertexMain(input: VertexInput) -> VertexOutput {\n\tvar output: VertexOutput;\n\tvar source: SplatSource;\n\tif (!initSource(&source)) {\n\t\toutput.position = discardVec;\n\t\treturn output;\n\t}\n\tlet modelCenter: vec3f = readCenter(&source);\n\tvar center: SplatCenter;\n\tif (!initCenter(modelCenter, &center)) {\n\t\toutput.position = discardVec;\n\t\treturn output;\n\t}\n\tvar corner: SplatCorner;\n\tif (!initCorner(&source, &center, &corner)) {\n\t\toutput.position = discardVec;\n\t\treturn output;\n\t}\n\tvar clr: vec4f = readColor(&source);\n\t#if GSPLAT_AA\n\t\tclr.a = clr.a * corner.aaFactor;\n\t#endif\n\t#if SH_BANDS > 0\n\t\tlet modelView3x3 = mat3x3f(center.modelView[0].xyz, center.modelView[1].xyz, center.modelView[2].xyz);\n\t\tlet dir = normalize(modelView3x3 * center.view);\n\t\tvar sh: array<vec3f, SH_COEFFS>;\n\t\tvar scale: f32;\n\t\treadSHData(&source, &sh, &scale);\n\t\tclr = vec4f(clr.xyz + evalSH(&sh, dir) * scale, clr.a);\n\t#endif\n\tclipCorner(&corner, clr.w);\n\toutput.position = center.proj + vec4f(corner.offset, 0.0, 0.0);\n\toutput.gaussianUV = corner.uv;\n\toutput.gaussianColor = vec4f(prepareOutputFromGamma(max(clr.xyz, vec3f(0.0))), clr.w);\n\t#ifndef DITHER_NONE\n\t\toutput.id = f32(source.id);\n\t#endif\n\t#ifdef PREPASS_PASS\n\t\toutput.vLinearDepth = -center.view.z;\n\t#endif\n\treturn output;\n}\n`;var AM=`\n\tattribute aPosition: vec2f;\n\tvarying uv0: vec2f;\n\t@vertex fn vertexMain(input: VertexInput) -> VertexOutput {\n\t\tvar output: VertexOutput;\n\t\toutput.position = vec4f(input.aPosition, 0.0, 1.0);\n\t\toutput.uv0 = getImageEffectUV((input.aPosition + 1.0) * 0.5);\n\t\treturn output;\n\t}\n`;var CM=`\nstruct DrawIndexedIndirectArgs {\n\tindexCount: u32,\n\tinstanceCount: u32,\n\tfirstIndex: u32,\n\tbaseVertex: i32,\n\tfirstInstance: u32\n};\nstruct DrawIndirectArgs {\n\tvertexCount: u32,\n\tinstanceCount: u32,\n\tfirstVertex: u32,\n\tfirstInstance: u32,\n\t_pad: u32\n};\n`;var PM=`\n\t#include "gammaPS"\n\tvarying color: vec4f;\n\t@fragment\n\tfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\toutput.color = vec4f(gammaCorrectOutput(decodeGamma3(input.color.rgb)), input.color.a);\n\t\treturn output;\n\t}\n`;var LM=`\n\tattribute vertex_position: vec4f;\n\tattribute vertex_color: vec4f;\n\tuniform matrix_model: mat4x4f;\n\tuniform matrix_viewProjection: mat4x4f;\n\tvarying color: vec4f;\n\t@vertex\n\tfn vertexMain(input : VertexInput) -> VertexOutput {\n\t\tvar output : VertexOutput;\n\t\toutput.color = input.vertex_color;\n\t\toutput.position = uniform.matrix_viewProjection * uniform.matrix_model * input.vertex_position;\n\t\treturn output;\n\t}\n`;var DM=`\nuniform material_iridescenceRefractionIndex: f32;\nfn iridescence_iorToFresnelScalar(transmittedIor: f32, incidentIor: f32) -> f32 {\n\treturn pow((transmittedIor - incidentIor) / (transmittedIor + incidentIor), 2.0);\n}\nfn iridescence_iorToFresnelVec3(transmittedIor: vec3f, incidentIor: f32) -> vec3f {\n\treturn pow((transmittedIor - vec3f(incidentIor)) / (transmittedIor + vec3f(incidentIor)), vec3f(2.0));\n}\nfn iridescence_fresnelToIor(f0: vec3f) -> vec3f {\n\tlet sqrtF0: vec3f = sqrt(f0);\n\treturn (vec3f(1.0) + sqrtF0) / (vec3f(1.0) - sqrtF0);\n}\nconst XYZ_TO_REC709: mat3x3f = mat3x3f(\n\tvec3f(3.2404542, -1.5371385, -0.4985314),\n\tvec3f(-0.9692660,  1.8760108,  0.0415560),\n\tvec3f(0.0556434, -0.2040259,  1.0572252)\n);\nfn iridescence_sensitivity(opd: f32, shift: vec3f) -> vec3f {\n\tlet PI: f32 = 3.141592653589793;\n\tlet phase: f32 = 2.0 * PI * opd * 1.0e-9;\n\tconst val: vec3f = vec3f(5.4856e-13, 4.4201e-13, 5.2481e-13);\n\tconst pos: vec3f = vec3f(1.6810e+06, 1.7953e+06, 2.2084e+06);\n\tconst var_: vec3f = vec3f(4.3278e+09, 9.3046e+09, 6.6121e+09);\n\tvar xyz: vec3f = val * sqrt(2.0 * PI * var_) * cos(pos * phase + shift) * exp(-pow(phase, 2.0) * var_);\n\txyz.x = xyz.x + 9.7470e-14 * sqrt(2.0 * PI * 4.5282e+09) * cos(2.2399e+06 * phase + shift[0]) * exp(-4.5282e+09 * pow(phase, 2.0));\n\txyz = xyz / vec3f(1.0685e-07);\n\treturn XYZ_TO_REC709 * xyz;\n}\nfn iridescence_fresnelScalar(cosTheta: f32, f0: f32) -> f32 {\n\tlet x: f32 = clamp(1.0 - cosTheta, 0.0, 1.0);\n\tlet x2: f32 = x * x;\n\tlet x5: f32 = x * x2 * x2;\n\treturn f0 + (1.0 - f0) * x5;\n}\nfn iridescence_fresnelVec3(cosTheta: f32, f0: vec3f) -> vec3f {\n\tlet x: f32 = clamp(1.0 - cosTheta, 0.0, 1.0);\n\tlet x2: f32 = x * x;\n\tlet x5: f32 = x * x2 * x2;\n\treturn f0 + (vec3f(1.0) - f0) * x5;\n}\nfn calcIridescence(outsideIor: f32, cosTheta: f32, base_f0: vec3f, iridescenceThickness: f32) -> vec3f {\n\tlet PI: f32 = 3.141592653589793;\n\tlet iridescenceIor: f32 = mix(outsideIor, uniform.material_iridescenceRefractionIndex, smoothstep(0.0, 0.03, iridescenceThickness));\n\tlet sinTheta2Sq: f32 = pow(outsideIor / iridescenceIor, 2.0) * (1.0 - pow(cosTheta, 2.0));\n\tlet cosTheta2Sq: f32 = 1.0 - sinTheta2Sq;\n\tif (cosTheta2Sq < 0.0) {\n\t\treturn vec3f(1.0);\n\t}\n\tlet cosTheta2: f32 = sqrt(cosTheta2Sq);\n\tlet r0: f32 = iridescence_iorToFresnelScalar(iridescenceIor, outsideIor);\n\tlet r12: f32 = iridescence_fresnelScalar(cosTheta, r0);\n\tlet r21: f32 = r12;\n\tlet t121: f32 = 1.0 - r12;\n\tlet phi12: f32 = select(0.0, PI, iridescenceIor < outsideIor);\n\tlet phi21: f32 = PI - phi12;\n\tlet baseIor: vec3f = iridescence_fresnelToIor(base_f0 + vec3f(0.0001));\n\tlet r1: vec3f = iridescence_iorToFresnelVec3(baseIor, iridescenceIor);\n\tlet r23: vec3f = iridescence_fresnelVec3(cosTheta2, r1);\n\tlet phi23: vec3f = select(vec3f(0.0), vec3f(PI), baseIor < vec3f(iridescenceIor));\n\tlet opd: f32 = 2.0 * iridescenceIor * iridescenceThickness * cosTheta2;\n\tlet phi: vec3f = vec3f(phi21) + phi23;\n\tlet r123Sq: vec3f = clamp(vec3f(r12) * r23, vec3f(1e-5), vec3f(0.9999));\n\tlet r123: vec3f = sqrt(r123Sq);\n\tlet rs: vec3f = pow(vec3f(t121), vec3f(2.0)) * r23 / (vec3f(1.0) - r123Sq);\n\tlet c0: vec3f = vec3f(r12) + rs;\n\tvar i_irid: vec3f = c0;\n\tvar cm: vec3f = rs - vec3f(t121);\n\tcm = cm * r123;\n\tlet sm1: vec3f = 2.0 * iridescence_sensitivity(1.0 * opd, 1.0 * phi);\n\ti_irid = i_irid + cm * sm1;\n\tcm = cm * r123;\n\tlet sm2: vec3f = 2.0 * iridescence_sensitivity(2.0 * opd, 2.0 * phi);\n\ti_irid = i_irid + cm * sm2;\n\treturn max(i_irid, vec3f(0.0));\n}\nfn getIridescenceDiffraction(cosTheta: f32, specularity: vec3f, iridescenceThickness: f32) -> vec3f {\n\treturn calcIridescence(1.0, cosTheta, specularity, iridescenceThickness);\n}\n`;var MM=`\n#ifdef STD_IRIDESCENCE_CONSTANT\n\tuniform material_iridescence: f32;\n#endif\nfn getIridescence() {\n\tvar iridescence = 1.0;\n\t#ifdef STD_IRIDESCENCE_CONSTANT\n\tiridescence = iridescence * uniform.material_iridescence;\n\t#endif\n\t#ifdef STD_IRIDESCENCE_TEXTURE\n\tiridescence = iridescence * textureSampleBias({STD_IRIDESCENCE_TEXTURE_NAME}, {STD_IRIDESCENCE_TEXTURE_NAME}Sampler, {STD_IRIDESCENCE_TEXTURE_UV}, uniform.textureBias).{STD_IRIDESCENCE_TEXTURE_CHANNEL};\n\t#endif\n\tdIridescence = iridescence; \n}\n`;var IM=`\nuniform material_iridescenceThicknessMax: f32;\n#ifdef STD_IRIDESCENCETHICKNESS_TEXTURE\n\tuniform material_iridescenceThicknessMin: f32;\n#endif\nfn getIridescenceThickness() {\n\t#ifdef STD_IRIDESCENCETHICKNESS_TEXTURE\n\t\tvar blend: f32 = textureSampleBias({STD_IRIDESCENCETHICKNESS_TEXTURE_NAME}, {STD_IRIDESCENCETHICKNESS_TEXTURE_NAME}Sampler, {STD_IRIDESCENCETHICKNESS_TEXTURE_UV}, uniform.textureBias).{STD_IRIDESCENCETHICKNESS_TEXTURE_CHANNEL};\n\t\tvar iridescenceThickness: f32 = mix(uniform.material_iridescenceThicknessMin, uniform.material_iridescenceThicknessMax, blend);\n\t#else\n\t\tvar iridescenceThickness: f32 = uniform.material_iridescenceThicknessMax;\n\t#endif\n\tdIridescenceThickness = iridescenceThickness; \n}\n`;var RM=`\n#ifdef STD_IOR_CONSTANT\n\tuniform material_refractionIndex: f32;\n#endif\nfn getIor() {\n#ifdef STD_IOR_CONSTANT\n\tdIor = uniform.material_refractionIndex;\n#else\n\tdIor = 1.0 / 1.5;\n#endif\n}\n`;var OM=`\n#if defined(LIGHT{i})\n\tuniform light{i}_color: vec3f;\n\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\tuniform light{i}_direction: vec3f;\n\t#else\n\t\t#define LIT_CODE_LIGHTS_POINT\n\t\tuniform light{i}_position: vec3f;\n\t\tuniform light{i}_radius: f32;\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t#define LIT_CODE_LIGHTS_SPOT\n\t\t\tuniform light{i}_direction: vec3f;\n\t\t\tuniform light{i}_innerConeAngle: f32;\n\t\t\tuniform light{i}_outerConeAngle: f32;\n\t\t#endif\n\t#endif\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#define LIT_CODE_FALLOFF_SQUARED\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tuniform light{i}_position: vec3f;\n\t\t#endif\n\t\tuniform light{i}_halfWidth: vec3f;\n\t\tuniform light{i}_halfHeight: vec3f;\n\t#else\n\t\t#if LIGHT{i}FALLOFF == LINEAR\n\t\t\t#define LIT_CODE_FALLOFF_LINEAR\n\t\t#endif\n\t\t#if LIGHT{i}FALLOFF == INVERSESQUARED\n\t\t\t#define LIT_CODE_FALLOFF_SQUARED\n\t\t#endif\n\t#endif\n\t#if defined(LIGHT{i}CASTSHADOW)\n\t\tuniform light{i}_shadowMatrix: mat4x4f;\n\t\tuniform light{i}_shadowIntensity: f32;\n\t\tuniform light{i}_shadowParams: vec4f;\n\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\tuniform light{i}_shadowSearchArea: f32;\n\t\t\tuniform light{i}_cameraParams: vec4f;\n\t\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\t\tuniform light{i}_softShadowParams: vec4f;\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tuniform light{i}_shadowMatrixPalette: array<mat4x4f, 4>;\n\t\t\tuniform light{i}_shadowCascadeDistances: vec4f;\n\t\t\tuniform light{i}_shadowCascadeCount: i32;\n\t\t\tuniform light{i}_shadowCascadeBlend: f32;\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\tNOT SUPPORTED\n\t\t\t\n\t\t#else\n\t\t\t#if defined(LIGHT{i}SHADOW_PCF)\n\t\t\t\tvar light{i}_shadowMap: texture_depth_2d;\n\t\t\t\tvar light{i}_shadowMapSampler: sampler_comparison;\n\t\t\t#else\n\t\t\t\tvar light{i}_shadowMap: texture_2d<f32>;\n\t\t\t\tvar light{i}_shadowMapSampler: sampler;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\t#if defined(LIGHT{i}COOKIE)\n\t\t#define LIT_CODE_COOKIE\n\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\tNOT SUPPORTED\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\tNOT SUPPORTED\n\t\t#endif\n\t#endif\n#endif\n`;var FM=`\nfn getLightDiffuse(worldNormal: vec3f, viewDir: vec3f, lightDirNorm: vec3f) -> f32 {\n\treturn max(dot(worldNormal, -lightDirNorm), 0.0);\n}\n`;var NM=`\nfn evalOmniLight(lightPosW: vec3f) -> vec3f {\n\treturn vPositionW - lightPosW;\n}\n`;var kM=`\n#if defined(LIGHT{i})\n\tevaluateLight{i}(\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\tiridescenceFresnel\n\t\t#endif\n\t);\n#endif\n`;var BM=`\n#if defined(LIGHT{i})\nfn evaluateLight{i}(\n\t#if defined(LIT_IRIDESCENCE)\n\t\tiridescenceFresnel: vec3f\n\t#endif\n) {\n\tvar lightColor: vec3f = uniform.light{i}_color;\n\t#if LIGHT{i}TYPE == DIRECTIONAL && !defined(LIT_SHADOW_CATCHER)\n\t\tif (all(lightColor == vec3f(0.0, 0.0, 0.0))) {\n\t\t\treturn;\n\t\t}\n\t#endif\n\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\tdLightDirNormW = uniform.light{i}_direction;\n\t\tdAtten = 1.0;\n\t#else\n\t\tvar lightDirW: vec3f = evalOmniLight(uniform.light{i}_position);\n\t\tdLightDirNormW = normalize(lightDirW);\n\t\t#if defined(LIGHT{i}COOKIE)\n\t\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t\t#ifdef LIGHT{i}COOKIE_FALLOFF\n\t\t\t\t\t#ifdef LIGHT{i}COOKIE_TRANSFORM\n\t\t\t\t\t\tvar cookieAttenuation: vec3f = getCookie2DXform(uniform.light{i}_cookie, uniform.light{i}_shadowMatrix, uniform.light{i}_cookieIntensity, uniform.light{i}_cookieMatrix, uniform.light{i}_cookieOffset).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#else\n\t\t\t\t\t\tvar cookieAttenuation: vec3f = getCookie2D(uniform.light{i}_cookie, uniform.light{i}_shadowMatrix, uniform.light{i}_cookieIntensity).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#endif\n\t\t\t\t#else\n\t\t\t\t\t#ifdef LIGHT{i}COOKIE_TRANSFORM\n\t\t\t\t\t\tvar cookieAttenuation: vec3f = getCookie2DClipXform(uniform.light{i}_cookie, uniform.light{i}_shadowMatrix, uniform.light{i}_cookieIntensity, uniform.light{i}_cookieMatrix, uniform.light{i}_cookieOffset).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#else\n\t\t\t\t\t\tvar cookieAttenuation: vec3f = getCookie2DClip(uniform.light{i}_cookie, uniform.light{i}_shadowMatrix, uniform.light{i}_cookieIntensity).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t\t\t#endif\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\t\tvar cookieAttenuation: vec3f = getCookieCube(uniform.light{i}_cookie, uniform.light{i}_shadowMatrix, uniform.light{i}_cookieIntensity).{LIGHT{i}COOKIE_CHANNEL};\n\t\t\t#endif\n\t\t\tlightColor = lightColor * cookieAttenuation;\n\t\t#endif\n\t\t#if LIGHT{i}SHAPE == PUNCTUAL\n\t\t\t#if LIGHT{i}FALLOFF == LINEAR\n\t\t\t\tdAtten = getFalloffLinear(uniform.light{i}_radius, lightDirW);\n\t\t\t#else\n\t\t\t\tdAtten = getFalloffInvSquared(uniform.light{i}_radius, lightDirW);\n\t\t\t#endif\n\t\t#else\n\t\t\tdAtten = getFalloffWindow(uniform.light{i}_radius, lightDirW);\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t#if !defined(LIGHT{i}COOKIE) || defined(LIGHT{i}COOKIE_FALLOFF)\n\t\t\t\tdAtten = dAtten * getSpotEffect(uniform.light{i}_direction, uniform.light{i}_innerConeAngle, uniform.light{i}_outerConeAngle, dLightDirNormW);\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\tif (dAtten < 0.00001) {\n\t\treturn;\n\t}\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\tcalcRectLightValues(uniform.light{i}_position, uniform.light{i}_halfWidth, uniform.light{i}_halfHeight);\n\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\tcalcDiskLightValues(uniform.light{i}_position, uniform.light{i}_halfWidth, uniform.light{i}_halfHeight);\n\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\tcalcSphereLightValues(uniform.light{i}_position, uniform.light{i}_halfWidth, uniform.light{i}_halfHeight);\n\t\t#endif\n\t#endif\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tvar attenDiffuse: f32 = getLightDiffuse(litArgs_worldNormal, dViewDirW, dLightDirNormW);\n\t\t#else\n\t\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\t\tvar attenDiffuse: f32 = getRectLightDiffuse(litArgs_worldNormal, dViewDirW, lightDirW, dLightDirNormW) * 16.0;\n\t\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\t\tvar attenDiffuse: f32 = getDiskLightDiffuse(litArgs_worldNormal, dViewDirW, lightDirW, dLightDirNormW) * 16.0;\n\t\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\t\tvar attenDiffuse: f32 = getSphereLightDiffuse(litArgs_worldNormal, dViewDirW, lightDirW, dLightDirNormW) * 16.0;\n\t\t\t#endif\n\t\t#endif\n\t#else\n\t\tdAtten = dAtten * getLightDiffuse(litArgs_worldNormal, vec3(0.0), dLightDirNormW);\n\t#endif\n\t#ifdef LIGHT{i}CASTSHADOW\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tvar shadow: f32 = getShadow{i}(vec3(0.0));\n\t\t#else\n\t\t\tvar shadow: f32 = getShadow{i}(lightDirW);\n\t\t#endif\n\t\tshadow = mix(1.0, shadow, uniform.light{i}_shadowIntensity);\n\t\tdAtten = dAtten * shadow;\n\t\t#if defined(LIT_SHADOW_CATCHER) && LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tdShadowCatcher = dShadowCatcher * shadow;\n\t\t#endif\t\t\t\n\t#endif\n\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t#ifdef LIT_SPECULAR\n\t\t\tdDiffuseLight = dDiffuseLight + (((attenDiffuse * dAtten) * lightColor) * (1.0 - dLTCSpecFres));\n\t\t#else\n\t\t\tdDiffuseLight = dDiffuseLight + ((attenDiffuse * dAtten) * lightColor);\n\t\t#endif\t\t\t\t\t\t\n\t#else\n\t\t#if defined(AREA_LIGHTS) && defined(LIT_SPECULAR)\n\t\t\tdDiffuseLight = dDiffuseLight + ((dAtten * lightColor) * (1.0 - litArgs_specularity));\n\t\t#else\n\t\t\tdDiffuseLight = dDiffuseLight + (dAtten * lightColor);\n\t\t#endif\n\t#endif\n\t#ifdef LIGHT{i}AFFECT_SPECULARITY\n\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\t\t\tccSpecularLight = ccSpecularLight + (ccLTCSpecFres * getRectLightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * lightColor);\n\t\t\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\t\t\tccSpecularLight = ccSpecularLight + (ccLTCSpecFres * getDiskLightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * lightColor);\n\t\t\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\t\t\tccSpecularLight = ccSpecularLight + (ccLTCSpecFres * getSphereLightSpecular(litArgs_clearcoat_worldNormal, dViewDirW) * dAtten * lightColor);\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\t#if LIGHT{i}SHAPE == RECT\n\t\t\t\t\tdSpecularLight = dSpecularLight + (dLTCSpecFres * getRectLightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * lightColor);\n\t\t\t\t#elif LIGHT{i}SHAPE == DISK\n\t\t\t\t\tdSpecularLight = dSpecularLight + (dLTCSpecFres * getDiskLightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * lightColor);\n\t\t\t\t#elif LIGHT{i}SHAPE == SPHERE\n\t\t\t\t\tdSpecularLight = dSpecularLight + (dLTCSpecFres * getSphereLightSpecular(litArgs_worldNormal, dViewDirW) * dAtten * lightColor);\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t#else\n\t\t\t#if LIGHT{i}TYPE == DIRECTIONAL && LIT_FRESNEL_MODEL != NONE\n\t\t\t\t#define LIGHT{i}FRESNEL\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvar halfDirW: vec3f = normalize(-dLightDirNormW + dViewDirW);\n\t\t\t#endif\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tvar lightspecularCC: vec3f = getLightSpecular(halfDirW, ccReflDirW, litArgs_clearcoat_worldNormal, dViewDirW, dLightDirNormW, litArgs_clearcoat_gloss, dTBN) * dAtten * lightColor;\n\t\t\t\t#ifdef LIGHT{i}FRESNEL\n\t\t\t\t\tlightspecularCC = lightspecularCC * getFresnelCC(dot(dViewDirW, halfDirW));\n\t\t\t\t#endif\n\t\t\t\tccSpecularLight = ccSpecularLight + lightspecularCC;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\tsSpecularLight = sSpecularLight + (getLightSpecularSheen(halfDirW, litArgs_worldNormal, dViewDirW, dLightDirNormW, litArgs_sheen_gloss) * dAtten * lightColor);\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tvar lightSpecular: vec3f = getLightSpecular(halfDirW, dReflDirW, litArgs_worldNormal, dViewDirW, dLightDirNormW, litArgs_gloss, dTBN) * dAtten * lightColor;\n\t\t\t\t#ifdef LIGHT{i}FRESNEL\n\t\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\tlightSpecular = lightSpecular * getFresnel(dot(dViewDirW, halfDirW), litArgs_gloss, litArgs_specularity, iridescenceFresnel, litArgs_iridescence_intensity);\n\t\t\t\t\t#else\n\t\t\t\t\t\tlightSpecular = lightSpecular * getFresnel(dot(dViewDirW, halfDirW), litArgs_gloss, litArgs_specularity);\n\t\t\t\t\t#endif\n\t\t\t\t#else\n\t\t\t\t\tlightSpecular = lightSpecular * litArgs_specularity;\n\t\t\t\t#endif\n\t\t\t\t\n\t\t\t\tdSpecularLight = dSpecularLight + lightSpecular;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n}\n#endif\n`;var UM=`\n#ifdef LIGHT{i}CASTSHADOW\n\tfn getShadowSampleCoord{i}(shadowTransform: mat4x4f, shadowParams: vec4f, worldPosition: vec3f, lightPos: vec3f, lightDir: ptr<function, vec3f>, lightDirNorm: vec3f, normal: vec3f) -> vec3f {\n\t\tvar surfacePosition = worldPosition;\n\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_POINT\n\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t\tlet distScale: f32 = length(*lightDir);\n\t\t\t\tsurfacePosition = surfacePosition + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\t\t\t\t*lightDir = surfacePosition - lightPos;\n\t\t\t\treturn *lightDir;\n\t\t\t#endif\n\t\t#else\n\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_SOURCE_ZBUFFER\n\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t\t\tsurfacePosition = surfacePosition + normal * shadowParams.y;\n\t\t\t\t#endif\n\t\t\t#else\n\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_NORMAL_OFFSET\n\t\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_ORTHO\n\t\t\t\t\t\tvar distScale: f32 = 1.0;\n\t\t\t\t\t#else\n\t\t\t\t\t\tvar distScale: f32 = abs(dot(vPositionW - lightPos, lightDirNorm));\n\t\t\t\t\t#endif\n\t\t\t\t\tsurfacePosition = surfacePosition + normal * shadowParams.y * clamp(1.0 - dot(normal, -lightDirNorm), 0.0, 1.0) * distScale;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\tvar positionInShadowSpace: vec4f = shadowTransform * vec4f(surfacePosition, 1.0);\n\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_ORTHO\n\t\t\t\tpositionInShadowSpace.z = saturate(positionInShadowSpace.z) - 0.0001;\n\t\t\t#else\n\t\t\t\t#ifdef LIGHT{i}_SHADOW_SAMPLE_SOURCE_ZBUFFER\n\t\t\t\t\tpositionInShadowSpace.xyz = positionInShadowSpace.xyz / positionInShadowSpace.w;\n\t\t\t\t#else\n\t\t\t\t\tpositionInShadowSpace.xy = positionInShadowSpace.xy / positionInShadowSpace.w;\n\t\t\t\t\tpositionInShadowSpace.z = length(*lightDir) * shadowParams.w;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef SHADOW_SAMPLE_Z_BIAS\n\t\t\t#endif\n\t\t\tsurfacePosition = positionInShadowSpace.xyz;\n\t\t#endif\n\t\treturn surfacePosition;\n\t}\n\tfn getShadow{i}(lightDirW_in: vec3f) -> f32 {\n\t\t#ifdef LIGHT{i}_SHADOW_CASCADES\n\t\t\tvar cascadeIndex: i32 = getShadowCascadeIndex(uniform.light{i}_shadowCascadeDistances, uniform.light{i}_shadowCascadeCount);\n\t\t\t#ifdef LIGHT{i}_SHADOW_CASCADE_BLEND\n\t\t\t\tcascadeIndex = ditherShadowCascadeIndex(cascadeIndex, uniform.light{i}_shadowCascadeDistances, uniform.light{i}_shadowCascadeCount, uniform.light{i}_shadowCascadeBlend);\n\t\t\t#endif\n\t\t\tvar shadowMatrix: mat4x4f = uniform.light{i}_shadowMatrixPalette[cascadeIndex];\n\t\t#else\n\t\t\tvar shadowMatrix: mat4x4f = uniform.light{i}_shadowMatrix;\n\t\t#endif\n\t\tvar lightDirArg = lightDirW_in;\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tvar shadowCoord: vec3f = getShadowSampleCoord{i}(shadowMatrix, uniform.light{i}_shadowParams, vPositionW, vec3f(0.0), &lightDirArg, dLightDirNormW, dVertexNormalW);\n\t\t#else\n\t\t\t var shadowCoord: vec3f = getShadowSampleCoord{i}(shadowMatrix, uniform.light{i}_shadowParams, vPositionW, uniform.light{i}_position, &lightDirArg, dLightDirNormW, dVertexNormalW);\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\tshadowCoord = fadeShadow(shadowCoord, uniform.light{i}_shadowCascadeDistances);\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == DIRECTIONAL\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_16F\n\t\t\t\treturn getShadowVSM16(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, 5.54);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_32F\n\t\t\t\treturn getShadowVSM32(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, 15.0);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t\t\tlet shadowSearchArea = vec2f(length(uniform.light{i}_halfWidth), length(uniform.light{i}_halfHeight)) * uniform.light{i}_shadowSearchArea;\n\t\t\t\t\treturn getShadowPCSS(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, uniform.light{i}_cameraParams, shadowSearchArea, lightDirW_in);\n\t\t\t\t#else\n\t\t\t\t\treturn getShadowPCSS(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, uniform.light{i}_cameraParams, uniform.light{i}_softShadowParams, lightDirW_in);\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF1_16F || LIGHT{i}SHADOWTYPE == PCF1_32F\n\t\t\t\treturn getShadowPCF1x1(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF3_16F || LIGHT{i}SHADOWTYPE == PCF3_32F\n\t\t\t\treturn getShadowPCF3x3(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF5_16F || LIGHT{i}SHADOWTYPE == PCF5_32F\n\t\t\t\treturn getShadowPCF5x5(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams);\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == SPOT\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_16F\n\t\t\t\treturn getShadowSpotVSM16(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, 5.54, lightDirW_in);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == VSM_32F\n\t\t\t\treturn getShadowSpotVSM32(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, 15.0, lightDirW_in);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\t\t#if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t\t\tvar shadowSearchArea: vec2f = vec2f(length(uniform.light{i}_halfWidth), length(uniform.light{i}_halfHeight)) * uniform.light{i}_shadowSearchArea;\n\t\t\t\t#else\n\t\t\t\t\tvar shadowSearchArea: vec2f = vec2f(uniform.light{i}_shadowSearchArea);\n\t\t\t\t#endif\n\t\t\t\treturn getShadowSpotPCSS(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, uniform.light{i}_cameraParams, shadowSearchArea, lightDirW_in);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF1_16F || LIGHT{i}SHADOWTYPE == PCF1_32F\n\t\t\t\treturn getShadowSpotPCF1x1(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF3_16F || LIGHT{i}SHADOWTYPE == PCF3_32F\n\t\t\t\treturn getShadowSpotPCF3x3(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF5_16F || LIGHT{i}SHADOWTYPE == PCF5_32F\n\t\t\t\treturn getShadowSpotPCF5x5(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams);\n\t\t\t#endif\n\t\t#endif\n\t\t#if LIGHT{i}TYPE == OMNI\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCSS_32F\n\t\t\t\t var shadowSearchArea: vec2f;\n\t\t\t\t #if LIGHT{i}SHAPE != PUNCTUAL\n\t\t\t\t\tvar shadowSearchArea: vec2f = vec2f(length(uniform.light{i}_halfWidth), length(uniform.light{i}_halfHeight)) * uniform.light{i}_shadowSearchArea;\n\t\t\t\t#else\n\t\t\t\t\tvar shadowSearchArea: vec2f = vec2f(uniform.light{i}_shadowSearchArea);\n\t\t\t\t#endif\n\t\t\t\treturn getShadowOmniPCSS(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, uniform.light{i}_cameraParams, shadowSearchArea, lightDirW_in);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF1_16F || LIGHT{i}SHADOWTYPE == PCF1_32F\n\t\t\t\treturn getShadowOmniPCF1x1(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, lightDirW_in);\n\t\t\t#endif\n\t\t\t#if LIGHT{i}SHADOWTYPE == PCF3_16F || LIGHT{i}SHADOWTYPE == PCF3_32F\n\t\t\t\treturn getShadowOmniPCF3x3(light{i}_shadowMap, light{i}_shadowMapSampler, shadowCoord, uniform.light{i}_shadowParams, lightDirW_in);\n\t\t\t#endif\n\t\t#endif\n\t}\n#endif\n`;var zM=`\n#ifdef LIT_CLUSTERED_LIGHTS\n\t#define LIT_CODE_FALLOFF_LINEAR\n\t#define LIT_CODE_FALLOFF_SQUARED\n\t#define LIT_CODE_LIGHTS_POINT\n\t#define LIT_CODE_LIGHTS_SPOT\n#endif\n#ifdef AREA_LIGHTS\n\tvar areaLightsLutTex1: texture_2d<f32>;\n\tvar areaLightsLutTex1Sampler: sampler;\n\tvar areaLightsLutTex2: texture_2d<f32>;\n\tvar areaLightsLutTex2Sampler: sampler;\n#endif\n#ifdef LIT_LIGHTING\n\t#include "lightDiffuseLambertPS"\n\t#if defined(AREA_LIGHTS) || defined(LIT_CLUSTERED_AREA_LIGHTS)\n\t\t#include "ltcPS"\n\t#endif\n#endif\n#ifdef SHADOW_DIRECTIONAL\n\t#include "shadowCascadesPS"\n#endif\n#if defined(SHADOW_KIND_PCF1)\n\t#include "shadowPCF1PS"\n#endif\n#if defined(SHADOW_KIND_PCF3)\n\t#include "shadowPCF3PS"\n#endif\n#if defined(SHADOW_KIND_PCF5)\n\t#include "shadowPCF5PS"\n#endif\n#if defined(SHADOW_KIND_PCSS)\n\t#include "linearizeDepthPS"\n\t#include "shadowSoftPS"\n#endif\n#if defined(SHADOW_KIND_VSM)\n\t#include "shadowEVSMPS"\n#endif\n#ifdef LIT_CODE_FALLOFF_LINEAR\n\t#include "falloffLinearPS"\n#endif\n#ifdef LIT_CODE_FALLOFF_SQUARED\n\t#include "falloffInvSquaredPS"\n#endif\n#ifdef LIT_CODE_LIGHTS_POINT\n\t#include "lightDirPointPS"\n#endif\n#ifdef LIT_CODE_LIGHTS_SPOT\n\t#include "spotPS"\n#endif\n#ifdef LIT_CODE_COOKIE\n\t#include "cookiePS"\n#endif\n#ifdef LIT_CLUSTERED_LIGHTS\n\t#include "clusteredLightPS"\n#endif\n#ifdef LIGHT_COUNT > 0\n\t#include "lightFunctionShadowPS, LIGHT_COUNT"\n\t#include "lightFunctionLightPS, LIGHT_COUNT"\n#endif\n`;var VM=`\nfn addLightMap(\n\tlightmap: vec3f,\n\tdir: vec3f,\n\tworldNormal: vec3f,\n\tviewDir: vec3f,\n\treflectionDir: vec3f,\n\tgloss: f32,\n\tspecularity: vec3f,\n\tvertexNormal: vec3f,\n\ttbn: mat3x3f\n#if defined(LIT_IRIDESCENCE)\n\t, iridescenceFresnel: vec3f,\n\tiridescenceIntensity: f32\n#endif\n) {\n\t#if defined(LIT_SPECULAR) && defined(LIT_DIR_LIGHTMAP)\n\t\tif (dot(dir, dir) < 0.0001) {\n\t\t\t\tdDiffuseLight = dDiffuseLight + lightmap;\n\t\t} else {\n\t\t\tlet vlight: f32 = saturate(dot(dir, -vertexNormal));\n\t\t\tlet flight: f32 = saturate(dot(dir, -worldNormal));\n\t\t\tlet nlight: f32 = (flight / max(vlight, 0.01)) * 0.5;\n\t\t\tdDiffuseLight = dDiffuseLight + lightmap * nlight * 2.0;\n\t\t\tlet halfDir: vec3f = normalize(-dir + viewDir);\n\t\t\tvar specularLight: vec3f = lightmap * getLightSpecular(halfDir, reflectionDir, worldNormal, viewDir, dir, gloss, tbn);\n\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\tspecularLight = specularLight *\n\t\t\t\t\tgetFresnel(dot(viewDir, halfDir),\n\t\t\t\t\tgloss,\n\t\t\t\t\tspecularity\n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\tiridescenceIntensity\n\t\t\t\t#endif\n\t\t\t\t\t);\n\t\t\t#endif\n\t\t\tdSpecularLight = dSpecularLight + specularLight;\n\t\t}\n\t#else\n\t\tdDiffuseLight = dDiffuseLight + lightmap;\n\t#endif\n}\n`;var GM=`\n#ifdef STD_LIGHTMAP_DIR\n\tvar<private> dLightmapDir: vec3f;\n\tvar texture_dirLightMap: texture_2d<f32>;\n\tvar texture_dirLightMapSampler: sampler;\n#endif\nfn getLightMap() {\n\tdLightmap = vec3f(1.0);\n\t#ifdef STD_LIGHT_TEXTURE\n\t\tdLightmap = dLightmap * {STD_LIGHT_TEXTURE_DECODE}(textureSampleBias({STD_LIGHT_TEXTURE_NAME}, {STD_LIGHT_TEXTURE_NAME}Sampler, {STD_LIGHT_TEXTURE_UV}, uniform.textureBias)).{STD_LIGHT_TEXTURE_CHANNEL};\n\t\t#ifdef STD_LIGHTMAP_DIR\n\t\t\tvar dir: vec3f = textureSampleBias(texture_dirLightMap, texture_dirLightMapSampler, {STD_LIGHT_TEXTURE_UV}, uniform.textureBias).xyz * 2.0 - 1.0;\n\t\t\tvar dirDot = dot(dir, dir);\n\t\t\tdLightmapDir = select(vec3(0.0), dir / sqrt(dirDot), dirDot > 0.001);\n\t\t#endif\n\t#endif\n\t#ifdef STD_LIGHT_VERTEX\n\t\tdLightmap = dLightmap * saturate(vVertexColor.{STD_LIGHT_VERTEX_CHANNEL});\n\t#endif\n}\n`;var HM=`\nfn calcLightSpecular(gloss: f32, worldNormal: vec3f, viewDir: vec3f, h: vec3f, lightDirNorm: vec3f, tbn: mat3x3f) -> f32 {\n\tlet PI: f32 = 3.141592653589793;\n\tlet roughness: f32 = max((1.0 - gloss) * (1.0 - gloss), 0.001);\n\tlet alphaRoughness: f32 = roughness * roughness;\n\tlet anisotropy: f32 = dAnisotropy;\n\tlet direction: vec2f = dAnisotropyRotation;\n\tlet at: f32 = mix(alphaRoughness, 1.0, anisotropy * anisotropy);\n\tlet ab: f32 = clamp(alphaRoughness, 0.001, 1.0);\n\tlet anisotropicT: vec3f = normalize(tbn * vec3f(direction, 0.0));\n\tlet anisotropicB: vec3f = normalize(cross(tbn[2], anisotropicT));\n\tlet NoH: f32 = dot(worldNormal, h);\n\tlet ToH: f32 = dot(anisotropicT, h);\n\tlet BoH: f32 = dot(anisotropicB, h);\n\tlet a2: f32 = at * ab;\n\tlet v: vec3f = vec3f(ab * ToH, at * BoH, a2 * NoH);\n\tlet v2: f32 = dot(v, v);\n\tlet w2: f32 = a2 / v2;\n\tlet D: f32 = a2 * w2 * w2 * (1.0 / PI);\n\tlet ToV: f32 = dot(anisotropicT, viewDir);\n\tlet BoV: f32 = dot(anisotropicB, viewDir);\n\tlet ToL: f32 = dot(anisotropicT, -lightDirNorm);\n\tlet BoL: f32 = dot(anisotropicB, -lightDirNorm);\n\tlet NoV: f32 = dot(worldNormal, viewDir);\n\tlet NoL: f32 = dot(worldNormal, -lightDirNorm);\n\tlet lambdaV: f32 = NoL * length(vec3f(at * ToV, ab * BoV, NoV));\n\tlet lambdaL: f32 = NoV * length(vec3f(at * ToL, ab * BoL, NoL));\n\tlet G: f32 = 0.5 / (lambdaV + lambdaL);\n\treturn D * G;\n}\nfn getLightSpecular(h: vec3f, reflDir: vec3f, worldNormal: vec3f, viewDir: vec3f, lightDirNorm: vec3f, gloss: f32, tbn: mat3x3f) -> f32 {\n\treturn calcLightSpecular(gloss, worldNormal, viewDir, h, lightDirNorm, tbn);\n}\n`;var WM=`\nfn calcLightSpecular(gloss: f32, worldNormal: vec3f, h: vec3f) -> f32 {\n\tlet nh: f32 = max( dot( h, worldNormal ), 0.0 );\n\tvar specPow: f32 = exp2(gloss * 11.0);\n\tspecPow = max(specPow, 0.0001);\n\treturn pow(nh, specPow) * (specPow + 2.0) / 8.0;\n}\nfn getLightSpecular(h: vec3f, reflDir: vec3f, worldNormal: vec3f, viewDir: vec3f, lightDirNorm: vec3f, gloss: f32, tbn: mat3x3f) -> f32 {\n\treturn calcLightSpecular(gloss, worldNormal, h);\n}\n`;var XM=`\nfn sheenD(normal: vec3f, h: vec3f, roughness: f32) -> f32 {\n\tlet PI: f32 = 3.141592653589793;\n\tlet invR: f32 = 1.0 / (roughness * roughness);\n\tvar cos2h: f32 = max(dot(normal, h), 0.0);\n\tcos2h = cos2h * cos2h;\n\tlet sin2h: f32 = max(1.0 - cos2h, 0.0078125);\n\treturn (2.0 + invR) * pow(sin2h, invR * 0.5) / (2.0 * PI);\n}\nfn sheenV(normal: vec3f, viewDir: vec3f, light: vec3f) -> f32 {\n\tlet NoV: f32 = max(dot(normal, viewDir), 0.000001);\n\tlet NoL: f32 = max(dot(normal, light), 0.000001);\n\treturn 1.0 / (4.0 * (NoL + NoV - NoL * NoV));\n}\nfn getLightSpecularSheen(h: vec3f, worldNormal: vec3f, viewDir: vec3f, lightDirNorm: vec3f, sheenGloss: f32) -> f32 {\n\tlet D: f32 = sheenD(worldNormal, h, sheenGloss);\n\tlet V: f32 = sheenV(worldNormal, viewDir, -lightDirNorm);\n\treturn D * V;\n}`;var qM=`\n#ifndef LINEARIZE_DEPTH\n#define LINEARIZE_DEPTH\nfn linearizeDepthWithParams(z: f32, cameraParams: vec4f) -> f32 {\n\tif (cameraParams.w == 0.0) {\n\t\treturn (cameraParams.z * cameraParams.y) / (cameraParams.y + z * (cameraParams.z - cameraParams.y));\n\t} else {\n\t\treturn cameraParams.z + z * (cameraParams.y - cameraParams.z);\n\t}\n}\n#ifndef CAMERAPLANES\n\t#define CAMERAPLANES\n\tuniform camera_params: vec4f;\n#endif\nfn linearizeDepth(z: f32) -> f32 {\n\treturn linearizeDepthWithParams(z, uniform.camera_params);\n}\n#endif\n`;var $M=`\nfn evaluateBackend() -> FragmentOutput {\n\tvar output: FragmentOutput;\n\t#ifdef LIT_SSAO\n\t\tlitArgs_ao = litArgs_ao * textureSampleLevel(ssaoTexture, ssaoTextureSampler, pcPosition.xy * uniform.ssaoTextureSizeInv, 0.0).r;\n\t#endif\n\t#ifdef LIT_NEEDS_NORMAL\n\t\t#ifdef LIT_SPECULAR\n\t\t\tgetReflDir(litArgs_worldNormal, dViewDirW, litArgs_gloss, dTBN);\n\t\t#endif\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\tccReflDirW = normalize(-reflect(dViewDirW, litArgs_clearcoat_worldNormal));\n\t\t#endif\n\t#endif\n\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t#ifdef LIT_METALNESS\n\t\t\tvar f0: f32 = 1.0 / litArgs_ior;\n\t\t\tf0 = (f0 - 1.0) / (f0 + 1.0);\n\t\t\tf0 = f0 * f0;\n\t\t\tlitArgs_specularity = getSpecularModulate(litArgs_specularity, litArgs_albedo, litArgs_metalness, f0);\n\t\t\tlitArgs_albedo = getAlbedoModulate(litArgs_albedo, litArgs_metalness);\n\t\t#endif\n\t\t#ifdef LIT_IRIDESCENCE\n\t\t\tvar iridescenceFresnel: vec3f = getIridescenceDiffraction(saturate(dot(dViewDirW, litArgs_worldNormal)), litArgs_specularity, litArgs_iridescence_thickness);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_ADD_AMBIENT\n\t\taddAmbient(litArgs_worldNormal);\n\t\t#ifdef LIT_SPECULAR\n\t\t\tdDiffuseLight = dDiffuseLight * (1.0 - litArgs_specularity);\n\t\t#endif\n\t\t#ifdef LIT_SEPARATE_AMBIENT\n\t\t\tvar dAmbientLight: vec3f = dDiffuseLight;\n\t\t\tdDiffuseLight = vec3(0.0);\n\t\t#endif\n\t#endif\n\t#ifndef LIT_OLD_AMBIENT\n\t\tdDiffuseLight = dDiffuseLight * uniform.material_ambient;\n\t#endif\n\t#ifdef LIT_AO\n\t\t#ifndef LIT_OCCLUDE_DIRECT\n\t\t\toccludeDiffuse(litArgs_ao);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_LIGHTMAP\n\t\taddLightMap(\n\t\t\tlitArgs_lightmap, \n\t\t\tlitArgs_lightmapDir, \n\t\t\tlitArgs_worldNormal, \n\t\t\tdViewDirW, \n\t\t\tdReflDirW, \n\t\t\tlitArgs_gloss, \n\t\t\tlitArgs_specularity, \n\t\t\tdVertexNormalW,\n\t\t\tdTBN\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t, iridescenceFresnel,\n\t\t\tlitArgs_iridescence_intensity\n\t\t#endif\n\t\t);\n\t#endif\n\t#ifdef LIT_LIGHTING || LIT_REFLECTIONS\n\t\t#ifdef LIT_REFLECTIONS\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\taddReflectionCC(ccReflDirW, litArgs_clearcoat_gloss);\n\t\t\t\n\t\t\t\t#ifdef LIT_SPECULAR_FRESNEL\n\t\t\t\t\tccFresnel = getFresnelCC(dot(dViewDirW, litArgs_clearcoat_worldNormal));\n\t\t\t\t\tccReflection = ccReflection * ccFresnel;\n\t\t\t\t#else\n\t\t\t\t\tccFresnel = 0.0;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\tccReflection = ccReflection * litArgs_specularityFactor;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\taddReflectionSheen(litArgs_worldNormal, dViewDirW, litArgs_sheen_gloss);\n\t\t\t#endif\n\t\t\taddReflection(dReflDirW, litArgs_gloss);\n\t\t\t#ifdef LIT_FRESNEL_MODEL\n\t\t\t\tdReflection = vec4f(\n\t\t\t\t\tdReflection.rgb * getFresnel(\n\t\t\t\t\t\tdot(dViewDirW, litArgs_worldNormal),\n\t\t\t\t\t\tlitArgs_gloss,\n\t\t\t\t\t\tlitArgs_specularity\n\t\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\t, iridescenceFresnel,\n\t\t\t\t\t\tlitArgs_iridescence_intensity\n\t\t\t\t\t#endif\n\t\t\t\t\t\t),\n\t\t\t\t\tdReflection.a\n\t\t\t\t);\n\t\t\t#else\n\t\t\t\tdReflection = vec4f(dReflection.rgb * litArgs_specularity, dReflection.a);\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\tdReflection = vec4f(dReflection.rgb * litArgs_specularityFactor, dReflection.a);\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef AREA_LIGHTS\n\t\t\tdSpecularLight = dSpecularLight * litArgs_specularity;\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tcalcLTCLightValues(litArgs_gloss, litArgs_worldNormal, dViewDirW, litArgs_specularity, litArgs_clearcoat_gloss, litArgs_clearcoat_worldNormal, litArgs_clearcoat_specularity);\n\t\t\t#endif\n\t\t#endif\n\t\t\n\t\t#ifdef LIGHT_COUNT > 0\n\t\t\t#include "lightEvaluationPS, LIGHT_COUNT"\n\t\t#endif\n\t\t#ifdef LIT_CLUSTERED_LIGHTS\n\t\t\taddClusteredLights(litArgs_worldNormal, dViewDirW, dReflDirW,\n\t\t\t\t#if defined(LIT_CLEARCOAT)\n\t\t\t\t\t\tccReflDirW,\n\t\t\t\t#endif\n\t\t\t\t\t\tlitArgs_gloss, litArgs_specularity, dVertexNormalW, dTBN, \n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t\tiridescenceFresnel,\n\t\t\t\t#endif\n\t\t\t\t\t\tlitArgs_clearcoat_worldNormal, litArgs_clearcoat_gloss, litArgs_sheen_gloss, litArgs_iridescence_intensity\n\t\t\t);\n\t\t#endif\n\t\t#ifdef AREA_LIGHTS\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tlitArgs_clearcoat_specularity = 1.0;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR\n\t\t\t\tlitArgs_specularity = vec3(1.0);\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef LIT_REFRACTION\n\t\t\taddRefraction(\n\t\t\t\tlitArgs_worldNormal, \n\t\t\t\tdViewDirW, \n\t\t\t\tlitArgs_thickness, \n\t\t\t\tlitArgs_gloss, \n\t\t\t\tlitArgs_specularity, \n\t\t\t\tlitArgs_albedo, \n\t\t\t\tlitArgs_transmission,\n\t\t\t\tlitArgs_ior,\n\t\t\t\tlitArgs_dispersion\n\t\t\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t\t\t, iridescenceFresnel, \n\t\t\t\t\tlitArgs_iridescence_intensity\n\t\t\t\t#endif\n\t\t\t);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_AO\n\t\t#ifdef LIT_OCCLUDE_DIRECT\n\t\t\toccludeDiffuse(litArgs_ao);\n\t\t#endif\n\t\t#if LIT_OCCLUDE_SPECULAR != NONE\n\t\t\toccludeSpecular(litArgs_gloss, litArgs_ao, litArgs_worldNormal, dViewDirW);\n\t\t#endif\n\t#endif\n\t#ifdef LIT_SPECULARITY_FACTOR\n\t\tdSpecularLight = dSpecularLight * litArgs_specularityFactor;\n\t#endif\n\t#if !defined(LIT_OPACITY_FADES_SPECULAR)\n\t\t#if LIT_BLEND_TYPE == NORMAL || LIT_BLEND_TYPE == PREMULTIPLIED\n\t\t\tvar specLum: f32 = dot((dSpecularLight + dReflection.rgb * dReflection.a), vec3f( 0.2126, 0.7152, 0.0722 ));\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tspecLum = specLum + dot(ccSpecularLight * litArgs_clearcoat_specularity + ccReflection * litArgs_clearcoat_specularity, vec3f( 0.2126, 0.7152, 0.0722 ));\n\t\t\t#endif\n\t\t\tlitArgs_opacity = clamp(litArgs_opacity + gammaCorrectInput(specLum), 0.0, 1.0);\n\t\t#endif\n\t\tlitArgs_opacity = litArgs_opacity * uniform.material_alphaFade;\n\t#endif\n\t#ifdef LIT_LIGHTMAP_BAKING\n\t\t#ifdef LIT_LIGHTMAP_BAKING_COLOR\n\t\t\t#include "bakeLmEndPS"\n\t\t#endif\n\t\t#ifdef LIT_LIGHTMAP_BAKING_DIR\n\t\t\t#include "bakeDirLmEndPS"\n\t\t#endif\n\t#else\n\t\t#include "endPS"\n\t\t#include "outputAlphaPS"\n\t#endif\n\t#ifdef LIT_MSDF\n\t\toutput.color = applyMsdf(output.color);\n\t#endif\n\t#include "outputPS"\n\t#include "debugOutputPS"\n\t#ifdef LIT_SHADOW_CATCHER\n\t\toutput.color = vec4f(vec3f(dShadowCatcher), output.color.a);\n\t#endif\n\treturn output;\n}\n`;var jM=`\nvar<private> sReflection: vec3f;\nvar<private> dVertexNormalW: vec3f;\nvar<private> dTangentW: vec3f;\nvar<private> dBinormalW: vec3f;\nvar<private> dViewDirW: vec3f;\nvar<private> dReflDirW: vec3f;\nvar<private> ccReflDirW: vec3f;\nvar<private> dLightDirNormW: vec3f;\nvar<private> dAtten: f32;\nvar<private> dTBN: mat3x3f;\nvar<private> dReflection: vec4f;\nvar<private> dDiffuseLight: vec3f;\nvar<private> dSpecularLight: vec3f;\nvar<private> ccFresnel: f32;\nvar<private> ccReflection: vec3f;\nvar<private> ccSpecularLight: vec3f;\nvar<private> ccSpecularityNoFres: f32;\nvar<private> sSpecularLight: vec3f;\n#ifdef LIT_DISPERSION\n\tuniform material_dispersion: f32;\n#endif\n#ifndef LIT_OPACITY_FADES_SPECULAR\n\tuniform material_alphaFade: f32;\n#endif\n#ifdef LIT_SSAO\n\tvar ssaoTexture : texture_2d<f32>;\n\tvar ssaoTextureSampler : sampler;\n\tuniform ssaoTextureSizeInv: vec2f;\n#endif\n#ifdef LIT_SHADOW_CATCHER\n\tvar<private> dShadowCatcher: f32 = 1.0;\n#endif\n#if LIGHT_COUNT > 0\n\t#include "lightDeclarationPS, LIGHT_COUNT"\n#endif\n#ifdef LIT_SPECULAR\n\t#if LIT_FRESNEL_MODEL == NONE && !defined(LIT_REFLECTIONS) && !defined(LIT_DIFFUSE_MAP) \n\t\t#define LIT_OLD_AMBIENT\n\t#endif\n#endif\n#ifdef STD_LIGHTMAP_DIR\n\tuniform bakeDir: f32;\n#endif\n#ifdef LIT_LIGHTMAP_BAKING_ADD_AMBIENT\n\tuniform ambientBakeOcclusionContrast: f32;\n\tuniform ambientBakeOcclusionBrightness: f32;\n#endif\n`;var YM=`\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t#include "litUserMainStartPS"\n\tdReflection = vec4f(0.0);\n\t#ifdef LIT_CLEARCOAT\n\t\tccSpecularLight = vec3f(0.0);\n\t\tccReflection = vec3f(0.0);\n\t#endif\n\t#if LIT_NONE_SLICE_MODE == SLICED\n\t\t#include "startNineSlicedPS"\n\t#elif LIT_NONE_SLICE_MODE == TILED\n\t\t#include "startNineSlicedTiledPS"\n\t#endif\n\t#ifdef LIT_NEEDS_NORMAL\n\t\tdVertexNormalW = normalize(vNormalW);\n\t\t#ifdef LIT_TANGENTS\n\t\t\t#if defined(LIT_HEIGHTS) || defined(LIT_USE_NORMALS) || defined(LIT_USE_CLEARCOAT_NORMALS) || defined(LIT_GGX_SPECULAR)\n\t\t\t\tdTangentW = vTangentW;\n\t\t\t\tdBinormalW = vBinormalW;\n\t\t\t#endif\n\t\t#endif\n\t\tgetViewDir();\n\t\t#ifdef LIT_TBN\n\t\t\tgetTBN(dTangentW, dBinormalW, dVertexNormalW);\n\t\t\t#ifdef LIT_TWO_SIDED_LIGHTING\n\t\t\t\thandleTwoSidedLighting();\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\tevaluateFrontend();\n\t#include "debugProcessFrontendPS"\n\tvar output: FragmentOutput = evaluateBackend();\n\t#include "litUserMainEndPS"\n\treturn output;\n}\n`;var KM=`\n#ifdef LIT_NEEDS_NORMAL\n\t#include "cubeMapRotatePS"\n\t#include "cubeMapProjectPS"\n\t#include "envProcPS"\n#endif\n#ifdef LIT_SPECULAR_OR_REFLECTION\n\t#ifdef LIT_METALNESS\n\t\t#include "metalnessModulatePS"\n\t#endif\n\t#if LIT_FRESNEL_MODEL == SCHLICK\n\t\t#include "fresnelSchlickPS"\n\t#endif\n\t#ifdef LIT_IRIDESCENCE\n\t\t#include "iridescenceDiffractionPS"\n\t#endif\n#endif\n#ifdef LIT_AO\n\t#include "aoDiffuseOccPS"\n\t#include "aoSpecOccPS"\n#endif\n#if LIT_REFLECTION_SOURCE == ENVATLASHQ\n\t#include "envAtlasPS"\n\t#include "reflectionEnvHQPS"\n#elif LIT_REFLECTION_SOURCE == ENVATLAS\n\t#include "envAtlasPS"\n\t#include "reflectionEnvPS"\n#elif LIT_REFLECTION_SOURCE == CUBEMAP\n\t#include "reflectionCubePS"\n#elif LIT_REFLECTION_SOURCE == SPHEREMAP\n\t#include "reflectionSpherePS"\n#endif\n#ifdef LIT_REFLECTIONS\n\t#ifdef LIT_CLEARCOAT\n\t\t#include "reflectionCCPS"\n\t#endif\n\t#ifdef LIT_SHEEN\n\t\t#include "reflectionSheenPS"\n\t#endif\n#endif\n#ifdef LIT_REFRACTION\n\t#if defined(LIT_DYNAMIC_REFRACTION)\n\t\t#include "refractionDynamicPS"\n\t#elif defined(LIT_REFLECTIONS)\n\t\t#include "refractionCubePS"\n\t#endif\n#endif\n#ifdef LIT_SHEEN\n\t#include "lightSheenPS"\n#endif\nuniform material_ambient: vec3f;\n#ifdef LIT_SPECULAR\n\t#ifdef LIT_LIGHTING\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\t#include "lightSpecularAnisoGGXPS"\n\t\t#else\n\t\t\t#include "lightSpecularBlinnPS"\n\t\t#endif\n\t#endif\n#endif\n#include "combinePS"\n#ifdef LIT_LIGHTMAP\n\t#include "lightmapAddPS"\n#endif\n#ifdef LIT_ADD_AMBIENT\n\t#include "ambientPS"\n#endif\n#ifdef LIT_MSDF\n\t#include "msdfPS"\n#endif\n#ifdef LIT_NEEDS_NORMAL\n\t#include "viewDirPS"\n\t#ifdef LIT_SPECULAR\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\t#include "reflDirAnisoPS"\n\t\t#else\n\t\t\t#include "reflDirPS"\n\t\t#endif\n\t#endif\n#endif\n#include "lightingPS"\n`;var ZM=`\n#include "basePS"\n#include "sphericalPS"\n#include "decodePS"\n#include "gammaPS"\n#include "tonemappingPS"\n#include "fogPS"\n#if LIT_NONE_SLICE_MODE == SLICED\n\t#include "baseNineSlicedPS"\n#elif LIT_NONE_SLICE_MODE == TILED\n\t#include "baseNineSlicedTiledPS"\n#endif\n#ifdef LIT_TBN\n\t#include "TBNPS"\n\t#ifdef LIT_TWO_SIDED_LIGHTING\n\t\t#include "twoSidedLightingPS"\n\t#endif\n#endif\n`;var QM=`\n#include "varyingsPS"\n#include "litUserDeclarationPS"\n#include "frontendDeclPS"\n#if defined(PICK_PASS) || defined(PREPASS_PASS)\n\t#include "frontendCodePS"\n\t#include "litUserCodePS"\n\t#include "litOtherMainPS"\n#elif defined(SHADOW_PASS)\n\t#include "frontendCodePS"\n\t#include "litUserCodePS"\n\t#include "litShadowMainPS"\n#else\n\t#include "litForwardDeclarationPS"\n\t#include "litForwardPreCodePS"\n\t#include "frontendCodePS"\n\t#include "litForwardPostCodePS"\n\t#include "litForwardBackendPS"\n\t#include "litUserCodePS"\n\t#include "litForwardMainPS"\n#endif\n`;var JM=`\n#include "varyingsVS"\n#include  "litUserDeclarationVS"\n#ifdef VERTEX_COLOR\n\tattribute vertex_color: vec4f;\n#endif\n#ifdef NINESLICED\n\tvarying vMask: vec2f;\n\tvarying vTiledUv: vec2f;\n\tvar<private> dMaskGlobal: vec2f;\n\tvar<private> dTiledUvGlobal: vec2f;\n\tuniform innerOffset: vec4f;\n\tuniform outerScale: vec2f;\n\tuniform atlasRect: vec4f;\n#endif\nvar<private> dPositionW: vec3f;\nvar<private> dModelMatrix: mat4x4f;\n#include "transformCoreVS"\n#ifdef UV0\n\tattribute vertex_texCoord0: vec2f;\n\t#include "uv0VS"\n#endif\n#ifdef UV1\n\tattribute vertex_texCoord1: vec2f;\n\t#include "uv1VS"\n#endif\n#ifdef LINEAR_DEPTH\n\t#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\t\tuniform matrix_view: mat4x4f;\n\t#endif\n#endif\n#include "transformVS"\n#ifdef NORMALS\n\t#include "normalCoreVS"\n\t#include "normalVS"\n#endif\n#ifdef TANGENTS\n\tattribute vertex_tangent: vec4f;\n#endif\n#include "uvTransformUniformsPS, UV_TRANSFORMS_COUNT"\n#ifdef MSDF\n\t#include "msdfVS"\n#endif\n#include  "litUserCodeVS"\n@vertex\nfn vertexMain(input : VertexInput) -> VertexOutput {\n\t#include "litUserMainStartVS"\n\tvar output : VertexOutput;\n\toutput.position = getPosition();\n\toutput.vPositionW = getWorldPosition();\n\t#ifdef NORMALS\n\t\toutput.vNormalW = getNormal();\n\t#endif\n\t#ifdef TANGENTS\n\t\toutput.vTangentW = normalize(dNormalMatrix * vertex_tangent.xyz);\n\t\toutput.vBinormalW = cross(output.vNormalW, output.vTangentW) * vertex_tangent.w;\n\t#elif defined(GGX_SPECULAR)\n\t\toutput.vObjectSpaceUpW = normalize(dNormalMatrix * vec3f(0.0, 1.0, 0.0));\n\t#endif\n\t#ifdef UV0\n\t\tvar uv0: vec2f = getUv0();\n\t\t#ifdef UV0_UNMODIFIED\n\t\t\toutput.vUv0 = uv0;\n\t\t#endif\n\t#endif\n\t#ifdef UV1\n\t\tvar uv1: vec2f = getUv1();\n\t\t#ifdef UV1_UNMODIFIED\n\t\t\toutput.vUv1 = uv1;\n\t\t#endif\n\t#endif\n\t#include "uvTransformVS, UV_TRANSFORMS_COUNT"\n\t#ifdef VERTEX_COLOR\n\t\toutput.vVertexColor = vertex_color;\n\t#endif\n\t#ifdef LINEAR_DEPTH\n\t\toutput.vLinearDepth = -(uniform.matrix_view * vec4f(output.vPositionW, 1.0)).z;\n\t#endif\n\t#ifdef MSDF\n\t\tunpackMsdfParams();\n\t\toutput.outline_color = dOutlineColor;\n\t\toutput.outline_thickness = dOutlineThickness;\n\t\toutput.shadow_color = dShadowColor;\n\t\toutput.shadow_offset = dShadowOffset;\n\t#endif\n\t#ifdef NINESLICED\n\t\toutput.vMask = dMaskGlobal;\n\t\toutput.vTiledUv = dTiledUvGlobal;\n\t#endif\n\t#include "litUserMainEndVS"\n\treturn output;\n}\n`;var tI=`\n#ifdef PICK_PASS\n\t#include "pickPS"\n#endif\n#ifdef PREPASS_PASS\n\t#include "floatAsUintPS"\n#endif\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t#include "litUserMainStartPS"\n\tvar output: FragmentOutput;\n\t\n\tevaluateFrontend();\n\t#ifdef PICK_PASS\n\t\toutput.color = getPickOutput();\n\t#endif\n\t#ifdef PREPASS_PASS\n\t\toutput.color = float2vec4(vLinearDepth);\n\t#endif\n\t#include "litUserMainEndPS"\n\treturn output;\n}\n`;var eI=`\nvar<private> litArgs_albedo: vec3f;\nvar<private> litArgs_opacity: f32;\nvar<private> litArgs_emission: vec3f;\nvar<private> litArgs_worldNormal: vec3f;\nvar<private> litArgs_ao: f32;\nvar<private> litArgs_lightmap: vec3f;\nvar<private> litArgs_lightmapDir: vec3f;\nvar<private> litArgs_metalness: f32;\nvar<private> litArgs_specularity: vec3f;\nvar<private> litArgs_specularityFactor: f32;\nvar<private> litArgs_gloss: f32;\nvar<private> litArgs_sheen_gloss: f32;\nvar<private> litArgs_sheen_specularity: vec3f;\nvar<private> litArgs_transmission: f32;\nvar<private> litArgs_thickness: f32;\nvar<private> litArgs_ior: f32;\nvar<private> litArgs_dispersion: f32;\nvar<private> litArgs_iridescence_intensity: f32;\nvar<private> litArgs_iridescence_thickness: f32;\nvar<private> litArgs_clearcoat_worldNormal: vec3f;\nvar<private> litArgs_clearcoat_specularity: f32;\nvar<private> litArgs_clearcoat_gloss: f32;\n`;var sI=`\n\t#if LIT_NONE_SLICE_MODE == TILED\n\t\tvar<private> textureBias: f32 = -1000.0;\n\t#else\n\t\tuniform textureBias: f32;\n\t#endif\n\t#include "litShaderArgsPS"\n`;var iI=`\n#if LIGHT_TYPE != DIRECTIONAL\n\tuniform view_position: vec3f;\n\tuniform light_radius: f32;\n#endif\n#if SHADOW_TYPE == PCSS_32F\n\t#include "linearizeDepthPS"\n#endif\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t#include "litUserMainStartPS"\n\tvar output: FragmentOutput;\n\tevaluateFrontend();\n\t#ifdef PERSPECTIVE_DEPTH\n\t\tvar depth: f32 = input.position.z;\n\t\t#if SHADOW_TYPE == PCSS_32F\n\t\t\t#if LIGHT_TYPE != DIRECTIONAL\n\t\t\t\tdepth = linearizeDepthWithParams(depth, camera_params);\n\t\t\t#endif\n\t\t#endif\n\t#else\n\t\tvar depth: f32 = min(distance(uniform.view_position, input.vPositionW) / uniform.light_radius, 0.99999);\n\t\t#define MODIFIED_DEPTH\n\t#endif\n\t#if SHADOW_TYPE == VSM_16F || SHADOW_TYPE == VSM_32F\n\t\t#if SHADOW_TYPE == VSM_32F\n\t\t\tvar exponent: f32 = 15.0;\n\t\t#else\n\t\t\tvar exponent: f32 = 5.54;\n\t\t#endif\n\t\tvar depth_vsm = 2.0 * depth - 1.0;\n\t\tdepth_vsm = exp(exponent * depth_vsm);\n\t\toutput.color = vec4f(depth_vsm, depth_vsm * depth_vsm, 1.0, 1.0);\n\t#else\n\t\t#if SHADOW_TYPE == PCSS_32F\n\t\t\toutput.color = vec4f(depth, 0.0, 0.0, 1.0);\n\t\t#else\n\t\t\t#ifdef MODIFIED_DEPTH\n\t\t\t\toutput.fragDepth = depth;\n\t\t\t#endif\n\t\t\toutput.color = vec4f(1.0);\n\t\t#endif\n\t#endif\n\t#include "litUserMainEndPS"\n\t\n\treturn output;\n}\n`;var nI=`\nfn LTC_Uv(N: vec3f, V: vec3f, roughness: f32) -> vec2f {\n\tconst LUT_SIZE: f32 = 64.0;\n\tconst LUT_SCALE: f32 = (LUT_SIZE - 1.0) / LUT_SIZE;\n\tconst LUT_BIAS: f32 = 0.5 / LUT_SIZE;\n\tlet dotNV: f32 = saturate(dot( N, V ));\n\tlet uv: vec2f = vec2f( roughness, sqrt( 1.0 - dotNV ) );\n\treturn uv * LUT_SCALE + LUT_BIAS;\n}\nfn LTC_ClippedSphereFormFactor( f: vec3f ) -> f32 {\n\tlet l: f32 = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nfn LTC_EdgeVectorFormFactor( v1: vec3f, v2: vec3f ) -> vec3f {\n\tlet x: f32 = dot( v1, v2 );\n\tlet y: f32 = abs( x );\n\tlet a: f32 = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tlet b: f32 = 3.4175940 + ( 4.1616724 + y ) * y;\n\tlet v: f32 = a / b;\n\tlet inv_sqrt_term = inverseSqrt( max( 1.0 - x * x, 1e-7f ) );\n\tlet theta_sintheta: f32 = select( (0.5 * inv_sqrt_term - v), v, x > 0.0 );\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nstruct Coords {\n\tcoord0: vec3f,\n\tcoord1: vec3f,\n\tcoord2: vec3f,\n\tcoord3: vec3f,\n}\nfn LTC_EvaluateRect( N: vec3f, V: vec3f, P: vec3f, mInv: mat3x3f, rectCoords: Coords) -> f32 {\n\tlet v1: vec3f = rectCoords.coord1 - rectCoords.coord0;\n\tlet v2: vec3f = rectCoords.coord3 - rectCoords.coord0;\n\tlet lightNormal: vec3f = cross( v1, v2 );\n\tlet factor: f32 = sign(-dot( lightNormal, P - rectCoords.coord0 ));\n\tlet T1: vec3f = normalize( V - N * dot( V, N ) );\n\tlet T2: vec3f = factor * cross( N, T1 );\n\tlet mat: mat3x3f = mInv * transpose( mat3x3f( T1, T2, N ) );\n\tvar coords: array<vec3f, 4>;\n\tcoords[0] = mat * ( rectCoords.coord0 - P );\n\tcoords[1] = mat * ( rectCoords.coord1 - P );\n\tcoords[2] = mat * ( rectCoords.coord2 - P );\n\tcoords[3] = mat * ( rectCoords.coord3 - P );\n\tcoords[0] = normalize( coords[0] );\n\tcoords[1] = normalize( coords[1] );\n\tcoords[2] = normalize( coords[2] );\n\tcoords[3] = normalize( coords[3] );\n\tvar vectorFormFactor: vec3f = vec3f( 0.0 );\n\tvectorFormFactor = vectorFormFactor + LTC_EdgeVectorFormFactor( coords[0], coords[1] );\n\tvectorFormFactor = vectorFormFactor + LTC_EdgeVectorFormFactor( coords[1], coords[2] );\n\tvectorFormFactor = vectorFormFactor + LTC_EdgeVectorFormFactor( coords[2], coords[3] );\n\tvectorFormFactor = vectorFormFactor + LTC_EdgeVectorFormFactor( coords[3], coords[0] );\n\tlet result: f32 = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn result;\n}\nvar<private> dLTCCoords: Coords;\nfn getLTCLightCoords(lightPos: vec3f, halfWidth: vec3f, halfHeight: vec3f) -> Coords {\n\tvar coords: Coords;\n\tcoords.coord0 = lightPos + halfWidth - halfHeight;\n\tcoords.coord1 = lightPos - halfWidth - halfHeight;\n\tcoords.coord2 = lightPos - halfWidth + halfHeight;\n\tcoords.coord3 = lightPos + halfWidth + halfHeight;\n\treturn coords;\n}\nvar<private> dSphereRadius: f32;\nfn getSphereLightCoords(lightPos: vec3f, halfWidth: vec3f, halfHeight: vec3f) -> Coords {\n\tdSphereRadius = max(length(halfWidth), length(halfHeight));\n\tlet f: vec3f = reflect(normalize(lightPos - uniform.view_position), vNormalW);\n\tlet w: vec3f = normalize(cross(f, halfHeight));\n\tlet h: vec3f = normalize(cross(f, w));\n\treturn getLTCLightCoords(lightPos, w * dSphereRadius, h * dSphereRadius);\n}\nvar<private> dLTCUV: vec2f;\n#ifdef LIT_CLEARCOAT\n\tvar<private> ccLTCUV: vec2f;\n#endif\nfn getLTCLightUV(gloss: f32, worldNormal: vec3f, viewDir: vec3f) -> vec2f {\n\tlet roughness: f32 = max((1.0 - gloss) * (1.0 - gloss), 0.001);\n\treturn LTC_Uv( worldNormal, viewDir, roughness );\n}\nvar<private> dLTCSpecFres: vec3f;\n#ifdef LIT_CLEARCOAT\n\tvar<private> ccLTCSpecFres: vec3f;\n#endif\nfn getLTCLightSpecFres(uv: vec2f, specularity: vec3f) -> vec3f {\n\tlet t2: vec4f = textureSampleLevel(areaLightsLutTex2, areaLightsLutTex2Sampler, uv, 0.0);\n\treturn specularity * t2.x + ( vec3f( 1.0 ) - specularity) * t2.y;\n}\nfn calcLTCLightValues(gloss: f32, worldNormal: vec3f, viewDir: vec3f, specularity: vec3f, clearcoatGloss: f32, clearcoatWorldNormal: vec3f, clearcoatSpecularity: f32) {\n\tdLTCUV = getLTCLightUV(gloss, worldNormal, viewDir);\n\tdLTCSpecFres = getLTCLightSpecFres(dLTCUV, specularity);\n\t#ifdef LIT_CLEARCOAT\n\t\tccLTCUV = getLTCLightUV(clearcoatGloss, clearcoatWorldNormal, viewDir);\n\t\tccLTCSpecFres = getLTCLightSpecFres(ccLTCUV, vec3f(clearcoatSpecularity));\n\t#endif\n}\nfn calcRectLightValues(lightPos: vec3f, halfWidth: vec3f, halfHeight: vec3f) {\n\tdLTCCoords = getLTCLightCoords(lightPos, halfWidth, halfHeight);\n}\nfn calcDiskLightValues(lightPos: vec3f, halfWidth: vec3f, halfHeight: vec3f) {\n\tcalcRectLightValues(lightPos, halfWidth, halfHeight);\n}\nfn calcSphereLightValues(lightPos: vec3f, halfWidth: vec3f, halfHeight: vec3f) {\n\tdLTCCoords = getSphereLightCoords(lightPos, halfWidth, halfHeight);\n}\nfn SolveCubic(Coefficient_in: vec4f) -> vec3f {\n\tlet pi: f32 = 3.14159;\n\tvar Coefficient = Coefficient_in;\n\tCoefficient = vec4f(Coefficient.xyz / Coefficient.w, Coefficient.w);\n\tlet new_yz: vec2f = Coefficient.yz / 3.0;\n\tCoefficient = vec4f(Coefficient.x, new_yz.x, new_yz.y, Coefficient.w);\n\t\n\tlet A: f32 = Coefficient.w;\n\tlet B: f32 = Coefficient.z;\n\tlet C: f32 = Coefficient.y;\n\tlet D: f32 = Coefficient.x;\n\tlet Delta: vec3f = vec3f(\n\t\t-Coefficient.z * Coefficient.z + Coefficient.y,\n\t\t-Coefficient.y * Coefficient.z + Coefficient.x,\n\t\tdot(vec2f(Coefficient.z, -Coefficient.y), Coefficient.xy)\n\t);\n\tlet Discriminant: f32 = dot(vec2f(4.0 * Delta.x, -Delta.y), Delta.zy);\n\tvar xlc: vec2f;\n\tvar xsc: vec2f;\n\t{\n\t\tlet A_a: f32 = 1.0;\n\t\tlet C_a: f32 = Delta.x;\n\t\tlet D_a: f32 = -2.0 * B * Delta.x + Delta.y;\n\t\tlet Theta: f32 = atan2(sqrt(Discriminant), -D_a) / 3.0;\n\t\tlet sqrt_neg_Ca = sqrt(-C_a);\n\t\tlet x_1a: f32 = 2.0 * sqrt_neg_Ca * cos(Theta);\n\t\tlet x_3a: f32 = 2.0 * sqrt_neg_Ca * cos(Theta + (2.0 / 3.0) * pi);\n\t\tlet xl: f32 = select(x_3a, x_1a, (x_1a + x_3a) > 2.0 * B);\n\t\txlc = vec2f(xl - B, A);\n\t}\n\t{\n\t\tlet A_d: f32 = D;\n\t\tlet C_d: f32 = Delta.z;\n\t\tlet D_d: f32 = -D * Delta.y + 2.0 * C * Delta.z;\n\t\tlet Theta: f32 = atan2(D * sqrt(Discriminant), -D_d) / 3.0;\n\t\tlet sqrt_neg_Cd = sqrt(-C_d);\n\t\tlet x_1d: f32 = 2.0 * sqrt_neg_Cd * cos(Theta);\n\t\tlet x_3d: f32 = 2.0 * sqrt_neg_Cd * cos(Theta + (2.0 / 3.0) * pi);\n\t\tlet xs: f32 = select(x_3d, x_1d, x_1d + x_3d < 2.0 * C);\n\t\txsc = vec2f(-D, xs + C);\n\t}\n\tlet E: f32 =  xlc.y * xsc.y;\n\tlet F: f32 = -xlc.x * xsc.y - xlc.y * xsc.x;\n\tlet G: f32 =  xlc.x * xsc.x;\n\tlet xmc: vec2f = vec2f(C * F - B * G, -B * F + C * E);\n\tvar Root: vec3f = vec3f(xsc.x / xsc.y, xmc.x / xmc.y, xlc.x / xlc.y);\n\tif (Root.x < Root.y && Root.x < Root.z) {\n\t\tRoot = Root.yxz;\n\t} else if (Root.z < Root.x && Root.z < Root.y) {\n\t\tRoot = Root.xzy;\n\t}\n\treturn Root;\n}\nfn LTC_EvaluateDisk(N: vec3f, V: vec3f, P: vec3f, Minv: mat3x3f, points: Coords) -> f32 {\n\tlet T1: vec3f = normalize(V - N * dot(V, N));\n\tlet T2: vec3f = cross(N, T1);\n\tlet R: mat3x3f = transpose( mat3x3f( T1, T2, N ) );\n\tvar L_: array<vec3f, 3>;\n\tL_[0] = R * ( points.coord0 - P );\n\tL_[1] = R * ( points.coord1 - P );\n\tL_[2] = R * ( points.coord2 - P );\n\tlet C: vec3f  = 0.5 * (L_[0] + L_[2]);\n\tvar V1: vec3f = 0.5 * (L_[1] - L_[2]);\n\tvar V2: vec3f = 0.5 * (L_[1] - L_[0]);\n\tlet C_Minv: vec3f  = Minv * C;\n\tlet V1_Minv: vec3f = Minv * V1;\n\tlet V2_Minv: vec3f = Minv * V2;\n\tvar a: f32;\n\tvar b: f32;\n\tlet d11: f32 = dot(V1_Minv, V1_Minv);\n\tlet d22: f32 = dot(V2_Minv, V2_Minv);\n\tlet d12: f32 = dot(V1_Minv, V2_Minv);\n\tif (abs(d12) / sqrt(d11 * d22) > 0.0001) {\n\t\tlet tr: f32 = d11 + d22;\n\t\tlet det_inner: f32 = -d12 * d12 + d11 * d22;\n\t\tlet det: f32 = sqrt(det_inner);\n\t\tlet u: f32 = 0.5 * sqrt(tr - 2.0 * det);\n\t\tlet v: f32 = 0.5 * sqrt(tr + 2.0 * det);\n\t\tlet e_max: f32 = (u + v) * (u + v);\n\t\tlet e_min: f32 = (u - v) * (u - v);\n\t\tvar V1_: vec3f;\n\t\tvar V2_: vec3f;\n\t\tif (d11 > d22) {\n\t\t\tV1_ = d12 * V1_Minv + (e_max - d11) * V2_Minv;\n\t\t\tV2_ = d12 * V1_Minv + (e_min - d11) * V2_Minv;\n\t\t} else {\n\t\t\tV1_ = d12*V2_Minv + (e_max - d22)*V1_Minv;\n\t\t\tV2_ = d12*V2_Minv + (e_min - d22)*V1_Minv;\n\t\t}\n\t\ta = 1.0 / e_max;\n\t\tb = 1.0 / e_min;\n\t\tV1 = normalize(V1_);\n\t\tV2 = normalize(V2_);\n\t} else {\n\t\ta = 1.0 / dot(V1_Minv, V1_Minv);\n\t\tb = 1.0 / dot(V2_Minv, V2_Minv);\n\t\tV1 = V1_Minv * sqrt(a);\n\t\tV2 = V2_Minv * sqrt(b);\n\t}\n\tvar V3: vec3f = normalize(cross(V1, V2));\n\tif (dot(C_Minv, V3) < 0.0) {\n\t\tV3 = V3 * -1.0;\n\t}\n\tlet L: f32  = dot(V3, C_Minv);\n\tlet x0: f32 = dot(V1, C_Minv) / L;\n\tlet y0: f32 = dot(V2, C_Minv) / L;\n\tlet E1: f32 = inverseSqrt(a);\n\tlet E2: f32 = inverseSqrt(b);\n\tlet a_scaled = a * L * L;\n\tlet b_scaled = b * L * L;\n\tlet c0: f32 = a_scaled * b_scaled;\n\tlet c1: f32 = a_scaled * b_scaled * (1.0 + x0 * x0 + y0 * y0) - a_scaled - b_scaled;\n\tlet c2: f32 = 1.0 - a_scaled * (1.0 + x0 * x0) - b_scaled * (1.0 + y0 * y0);\n\tlet c3: f32 = 1.0;\n\tlet roots: vec3f = SolveCubic(vec4f(c0, c1, c2, c3));\n\tlet e1: f32 = roots.x;\n\tlet e2: f32 = roots.y;\n\tlet e3: f32 = roots.z;\n\tvar avgDir: vec3f = vec3f(a_scaled * x0 / (a_scaled - e2), b_scaled * y0 / (b_scaled - e2), 1.0);\n\tlet rotate: mat3x3f = mat3x3f(V1, V2, V3);\n\tavgDir = rotate * avgDir;\n\tavgDir = normalize(avgDir);\n\tlet L1: f32 = sqrt(-e2 / e3);\n\tlet L2: f32 = sqrt(-e2 / e1);\n\tlet formFactor: f32 = max(0.0, L1 * L2 * inverseSqrt((1.0 + L1 * L1) * (1.0 + L2 * L2)));\n\tconst LUT_SIZE_disk: f32 = 64.0;\n\tconst LUT_SCALE_disk: f32 = ( LUT_SIZE_disk - 1.0 ) / LUT_SIZE_disk;\n\tconst LUT_BIAS_disk: f32 = 0.5 / LUT_SIZE_disk;\n\tvar uv: vec2f = vec2f(avgDir.z * 0.5 + 0.5, formFactor);\n\tuv = uv * LUT_SCALE_disk + LUT_BIAS_disk;\n\tlet scale: f32 = textureSampleLevel(areaLightsLutTex2, areaLightsLutTex2Sampler, uv, 0.0).w;\n\treturn formFactor * scale;\n}\nfn FixNan(value: f32) -> f32 {\n\treturn select(value, 0.0, value != value);\n}\nfn getRectLightDiffuse(worldNormal: vec3f, viewDir: vec3f, lightDir: vec3f, lightDirNorm: vec3f) -> f32 {\n\tlet identityMat = mat3x3f(vec3f(1.0, 0.0, 0.0), vec3f(0.0, 1.0, 0.0), vec3f(0.0, 0.0, 1.0));\n\treturn LTC_EvaluateRect( worldNormal, viewDir, vPositionW, identityMat, dLTCCoords );\n}\nfn getDiskLightDiffuse(worldNormal: vec3f, viewDir: vec3f, lightDir: vec3f, lightDirNorm: vec3f) -> f32 {\n\tlet identityMat = mat3x3f(vec3f(1.0, 0.0, 0.0), vec3f(0.0, 1.0, 0.0), vec3f(0.0, 0.0, 1.0));\n\treturn FixNan(LTC_EvaluateDisk( worldNormal, viewDir, vPositionW, identityMat, dLTCCoords ));\n}\nfn getSphereLightDiffuse(worldNormal: vec3f, viewDir: vec3f, lightDir: vec3f, lightDirNorm: vec3f) -> f32 {\n\tlet falloff: f32 = dSphereRadius / (dot(lightDir, lightDir) + dSphereRadius);\n\treturn FixNan(getLightDiffuse(worldNormal, viewDir, lightDirNorm) * falloff);\n}\nfn getLTCLightInvMat(uv: vec2f) -> mat3x3f {\n\tlet t1: vec4f = textureSampleLevel(areaLightsLutTex1, areaLightsLutTex1Sampler, uv, 0.0);\n\treturn mat3x3f(\n\t\tvec3f( t1.x, 0.0, t1.y ),\n\t\tvec3f( 0.0, 1.0, 0.0 ),\n\t\tvec3f( t1.z, 0.0, t1.w )\n\t);\n}\nfn calcRectLightSpecular(worldNormal: vec3f, viewDir: vec3f, uv: vec2f) -> f32 {\n\tlet mInv: mat3x3f = getLTCLightInvMat(uv);\n\treturn LTC_EvaluateRect( worldNormal, viewDir, vPositionW, mInv, dLTCCoords );\n}\nfn getRectLightSpecular(worldNormal: vec3f, viewDir: vec3f) -> f32 {\n\treturn calcRectLightSpecular(worldNormal, viewDir, dLTCUV);\n}\nfn calcDiskLightSpecular(worldNormal: vec3f, viewDir: vec3f, uv: vec2f) -> f32 {\n\tlet mInv: mat3x3f = getLTCLightInvMat(uv);\n\treturn LTC_EvaluateDisk( worldNormal, viewDir, vPositionW, mInv, dLTCCoords );\n}\nfn getDiskLightSpecular(worldNormal: vec3f, viewDir: vec3f) -> f32 {\n\treturn calcDiskLightSpecular(worldNormal, viewDir, dLTCUV);\n}\nfn getSphereLightSpecular(worldNormal: vec3f, viewDir: vec3f) -> f32 {\n\treturn calcDiskLightSpecular(worldNormal, viewDir, dLTCUV);\n}\n`;var rI=`\n#ifdef STD_METALNESS_CONSTANT\nuniform material_metalness: f32;\n#endif\nfn getMetalness() {\n\tvar metalness: f32 = 1.0;\n\t#ifdef STD_METALNESS_CONSTANT\n\t\tmetalness = metalness * uniform.material_metalness;\n\t#endif\n\t#ifdef STD_METALNESS_TEXTURE\n\t\tmetalness = metalness * textureSampleBias({STD_METALNESS_TEXTURE_NAME}, {STD_METALNESS_TEXTURE_NAME}Sampler, {STD_METALNESS_TEXTURE_UV}, uniform.textureBias).{STD_METALNESS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_METALNESS_VERTEX\n\tmetalness = metalness * saturate(vVertexColor.{STD_METALNESS_VERTEX_CHANNEL});\n\t#endif\n\tdMetalness = metalness;\n}\n`;var aI=`\nvar texture_msdfMap: texture_2d<f32>;\nvar texture_msdfMapSampler: sampler;\nfn median(r: f32, g: f32, b: f32) -> f32 {\n\treturn max(min(r, g), min(max(r, g), b));\n}\nfn map(min: f32, max: f32, v: f32) -> f32 {\n\treturn (v - min) / (max - min);\n}\nuniform font_sdfIntensity: f32;\nuniform font_pxrange: f32;\nuniform font_textureWidth: f32;\n#ifndef LIT_MSDF_TEXT_ATTRIBUTE\n\tuniform outline_color: vec4f;\n\tuniform outline_thickness: f32;\n\tuniform shadow_color: vec4f;\n\tuniform shadow_offset: vec2f;\n#else\n\tvarying outline_color: vec4f;\n\tvarying outline_thickness: f32;\n\tvarying shadow_color: vec4f;\n\tvarying shadow_offset: vec2f;\n#endif\nfn applyMsdf(color_in: vec4f) -> vec4f {\n\t#ifndef LIT_MSDF_TEXT_ATTRIBUTE\n\t\tvar outline_colorValue = uniform.outline_color;\n\t\tvar outline_thicknessValue = uniform.outline_thickness;\n\t\tvar shadow_colorValue = uniform.shadow_color;\n\t\tvar shadow_offsetValue = uniform.shadow_offset;\n\t#else\n\t\tvar outline_colorValue = outline_color;\n\t\tvar outline_thicknessValue = outline_thickness;\n\t\tvar shadow_colorValue = shadow_color;\n\t\tvar shadow_offsetValue = shadow_offset;\n\t#endif\n\tvar color = vec4f(gammaCorrectInputVec3(color_in.rgb), color_in.a);\n\tlet tsample: vec3f = textureSample(texture_msdfMap, texture_msdfMapSampler, vUv0).rgb;\n\tlet uvShdw: vec2f = vUv0 - shadow_offsetValue;\n\tlet ssample: vec3f = textureSample(texture_msdfMap, texture_msdfMapSampler, uvShdw).rgb;\n\tlet sigDist: f32 = median(tsample.r, tsample.g, tsample.b);\n\tvar sigDistShdw: f32 = median(ssample.r, ssample.g, ssample.b);\n\tlet smoothingMax: f32 = 0.2;\n\tlet w: vec2f = abs(dpdx(vUv0)) + abs(dpdy(vUv0));\n\tlet smoothing: f32 = clamp(w.x * uniform.font_textureWidth / uniform.font_pxrange, 0.0, smoothingMax);\n\tlet mapMin: f32 = 0.05;\n\tlet mapMax: f32 = clamp(1.0 - uniform.font_sdfIntensity, mapMin, 1.0);\n\tlet sigDistInner: f32 = map(mapMin, mapMax, sigDist);\n\tlet sigDistOutline: f32 = map(mapMin, mapMax, sigDist + outline_thicknessValue);\n\tsigDistShdw = map(mapMin, mapMax, sigDistShdw + outline_thicknessValue);\n\tlet center: f32 = 0.5;\n\tlet inside: f32 = smoothstep(center - smoothing, center + smoothing, sigDistInner);\n\tlet outline: f32 = smoothstep(center - smoothing, center + smoothing, sigDistOutline);\n\tlet shadow: f32 = smoothstep(center - smoothing, center + smoothing, sigDistShdw);\n\tlet tcolor_outline: vec4f = outline * vec4f(outline_colorValue.a * outline_colorValue.rgb, outline_colorValue.a);\n\tvar tcolor: vec4f = select(vec4f(0.0), tcolor_outline, outline > inside);\n\ttcolor = mix(tcolor, color, inside);\n\tlet scolor_shadow: vec4f = shadow * vec4f(shadow_colorValue.a * shadow_colorValue.rgb, shadow_colorValue.a);\n\tlet scolor: vec4f = select(tcolor, scolor_shadow, shadow > outline);\n\ttcolor = mix(scolor, tcolor, outline);\n\ttcolor = vec4f(gammaCorrectOutput(tcolor.rgb), tcolor.a);\n\treturn tcolor;\n}\n`;var oI=`\nfn getSpecularModulate(specularity: vec3f, albedo: vec3f, metalness: f32, f0: f32) -> vec3f {\n\tlet dielectricF0: vec3f = f0 * specularity;\n\treturn mix(dielectricF0, albedo, metalness);\n}\nfn getAlbedoModulate(albedo: vec3f, metalness: f32) -> vec3f {\n\treturn albedo * (1.0 - metalness);\n}\n`;var lI=`\n\tvarying uv0: vec2f;\n\tvar morphTexture: texture_2d_array<f32>;\n\tuniform morphFactor: array<f32, {MORPH_TEXTURE_MAX_COUNT}>;\n\tuniform morphIndex: array<u32, {MORPH_TEXTURE_MAX_COUNT}>;\n\tuniform count: u32;\n\t@fragment\n\tfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\tvar color = vec3f(0, 0, 0);\n\t\tlet textureDims = textureDimensions(morphTexture);\n\t\tlet pixelCoords = vec2i(input.uv0 * vec2f(textureDims));\n\t\t\n\t\tfor (var i: u32 = 0; i < uniform.count; i = i + 1) {\n\t\t\tvar textureIndex: u32 = uniform.morphIndex[i].element;\n\t\t\tvar delta = textureLoad(morphTexture, pixelCoords, textureIndex, 0).xyz;\n\t\t\tcolor += uniform.morphFactor[i].element * delta;\n\t\t}\n\t\tvar output: FragmentOutput;\n\t\toutput.color = vec4f(color, 1.0);\n\t\treturn output;\n\t}\n`;var hI=`\n\tattribute vertex_position: vec2f;\n\tvarying uv0: vec2f;\n\t@vertex\n\tfn vertexMain(input: VertexInput) -> VertexOutput {\n\t\tvar output: VertexOutput;\n\t\toutput.position = vec4f(input.vertex_position, 0.5, 1.0);\n\t\toutput.uv0 = input.vertex_position * 0.5 + vec2f(0.5, 0.5);\n\t\treturn output;\n\t}\n`;var cI=`\nattribute vertex_outlineParameters: vec3f;\nattribute vertex_shadowParameters: vec3f;\nvarying outline_color: vec4f;\nvarying outline_thickness: f32;\nvarying shadow_color: vec4f;\nvarying shadow_offset: vec2f;\nvar<private> dOutlineColor: vec4f;\nvar<private> dOutlineThickness: f32;\nvar<private> dShadowColor: vec4f;\nvar<private> dShadowOffset: vec2f;\nfn unpackMsdfParams() {\n\tlet little: vec3f = vertex_outlineParameters % vec3f(256.0);\n\tlet big: vec3f = (vertex_outlineParameters - little) / 256.0;\n\tdOutlineColor = vec4f(little.x, big.x, little.y, big.y) / 255.0;\n\tdOutlineThickness = little.z / 255.0 * 0.2;\n\tlet little_shadow = vertex_shadowParameters % vec3f(256.0);\n\tlet big_shadow = (vertex_shadowParameters - little_shadow) / 256.0;\n\tdShadowColor = vec4f(little_shadow.x, big_shadow.x, little_shadow.y, big_shadow.y) / 255.0;\n\tdShadowOffset = (vec2f(little_shadow.z, big_shadow.z) / 127.0 - 1.0) * 0.005;\n}\n`;var dI=`\nvar<private> dNormalMatrix: mat3x3f;\nfn getNormal() -> vec3f {\n\tdNormalMatrix = getNormalMatrix(dModelMatrix);\n\tlet localNormal: vec3f = getLocalNormal(vertex_normal);\n\treturn normalize(dNormalMatrix * localNormal);\n}`;var uI=`\nattribute vertex_normal: vec3f;\nuniform matrix_normal: mat3x3f;\n#ifdef MORPHING_NORMAL\n\t#ifdef MORPHING_INT\n\t\tvar morphNormalTex: texture_2d<u32>;\n\t\tvar morphNormalTexSampler: sampler;\n\t#else\n\t\tvar morphNormalTex: texture_2d<f32>;\n\t\tvar morphNormalTexSampler: sampler;\n\t#endif\n#endif\nfn getLocalNormal(vertexNormal: vec3f) -> vec3f {\n\tvar localNormal: vec3f = vertexNormal;\n\t#ifdef MORPHING_NORMAL\n\t\tlet morphUV: vec2i = getTextureMorphCoords();\n\t\t#ifdef MORPHING_INT\n\t\t\tlet morphNormalInt: vec4u = textureLoad(morphNormalTex, morphUV, 0);\n\t\t\tlet morphNormalF: vec3f = vec3f(morphNormalInt.xyz) / 65535.0 * 2.0 - 1.0;\n\t\t\tlocalNormal = localNormal + morphNormalF;\n\t\t#else\n\t\t\tlet morphNormal: vec3f = textureLoad(morphNormalTex, morphUV, 0).xyz;\n\t\t\tlocalNormal = localNormal + morphNormal;\n\t\t#endif\n\t#endif\n\treturn localNormal;\n}\n#if defined(SKIN) || defined(BATCH)\n\tfn getNormalMatrix(modelMatrix: mat4x4f) -> mat3x3f {\n\t\treturn mat3x3f(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz);\n\t}\n#elif defined(INSTANCING)\n\tfn getNormalMatrix(modelMatrix: mat4x4f) -> mat3x3f {\n\t\treturn mat3x3f(modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz);\n\t}\n#else\n\tfn getNormalMatrix(modelMatrix: mat4x4f) -> mat3x3f {\n\t\treturn uniform.matrix_normal;\n\t}\n#endif\n`;var fI=`\n#ifdef STD_NORMAL_TEXTURE\n\tuniform material_bumpiness: f32;\n#endif\n#ifdef STD_NORMALDETAIL_TEXTURE\n\tuniform material_normalDetailMapBumpiness: f32;\n\tfn blendNormals(inN1: vec3f, inN2: vec3f) -> vec3f {\n\t\tlet n1: vec3f = inN1 + vec3f(0.0, 0.0, 1.0);\n\t\tlet n2: vec3f = inN2 * vec3f(-1.0, -1.0, 1.0);\n\t\treturn n1 * dot(n1, n2) / n1.z - n2;\n\t}\n#endif\nfn getNormal() {\n#ifdef STD_NORMAL_TEXTURE\n\tvar normalMap: vec3f = {STD_NORMAL_TEXTURE_DECODE}(textureSampleBias({STD_NORMAL_TEXTURE_NAME}, {STD_NORMAL_TEXTURE_NAME}Sampler, {STD_NORMAL_TEXTURE_UV}, uniform.textureBias));\n\tnormalMap = mix(vec3f(0.0, 0.0, 1.0), normalMap, uniform.material_bumpiness);\n\t#ifdef STD_NORMALDETAIL_TEXTURE\n\t\tvar normalDetailMap: vec3f = {STD_NORMALDETAIL_TEXTURE_DECODE}(textureSampleBias({STD_NORMALDETAIL_TEXTURE_NAME}, {STD_NORMALDETAIL_TEXTURE_NAME}Sampler, {STD_NORMALDETAIL_TEXTURE_UV}, uniform.textureBias));\n\t\tnormalDetailMap = mix(vec3f(0.0, 0.0, 1.0), normalDetailMap, uniform.material_normalDetailMapBumpiness);\n\t\tnormalMap = blendNormals(normalMap, normalDetailMap);\n\t#endif\n\tdNormalW = normalize(dTBN * normalMap);\n#else\n\tdNormalW = dVertexNormalW;\n#endif\n}\n`;var pI=`\nuniform material_opacity: f32;\nfn getOpacity() {\n\tdAlpha = uniform.material_opacity;\n\t#ifdef STD_OPACITY_TEXTURE\n\tdAlpha = dAlpha * textureSampleBias({STD_OPACITY_TEXTURE_NAME}, {STD_OPACITY_TEXTURE_NAME}Sampler, {STD_OPACITY_TEXTURE_UV}, uniform.textureBias).{STD_OPACITY_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_OPACITY_VERTEX\n\tdAlpha = dAlpha * clamp(vVertexColor.{STD_OPACITY_VERTEX_CHANNEL}, 0.0, 1.0);\n\t#endif\n}\n`;var mI=`\n#if STD_OPACITY_DITHER == BAYER8\n\t#include "bayerPS"\n#endif\nuniform blueNoiseJitter: vec4f;\n#if STD_OPACITY_DITHER == BLUENOISE\n\tvar blueNoiseTex32 : texture_2d<f32>;\n\tvar blueNoiseTex32Sampler : sampler;\n#endif\nfn opacityDither(alpha: f32, id: f32) {\n\t#if STD_OPACITY_DITHER == BAYER8\n\t\tvar noise: f32 = bayer8(floor((pcPosition.xy + uniform.blueNoiseJitter.xy + id) % vec2f(8.0))) / 64.0;\n\t#else\n\t\t#if STD_OPACITY_DITHER == BLUENOISE\n\t\t\tvar uv = fract(pcPosition.xy / 32.0 + uniform.blueNoiseJitter.xy + id);\n\t\t\tvar noise: f32 = textureSampleLevel(blueNoiseTex32, blueNoiseTex32Sampler, uv, 0.0).y;\n\t\t#endif\n\t\t#if STD_OPACITY_DITHER == IGNNOISE\n\t\t\tvar magic = vec3f(0.06711056, 0.00583715, 52.9829189);\n\t\t\tvar noise: f32 = fract(magic.z * fract(dot(pcPosition.xy + uniform.blueNoiseJitter.xy + id, magic.xy)));\n\t\t#endif\n\t#endif\n\tnoise = pow(noise, 2.2);\n\tif (alpha < noise) {\n\t\tdiscard;\n\t}\n}\n`;var _I=`\n`;var gI=`\n#if LIT_BLEND_TYPE == NORMAL || LIT_BLEND_TYPE == ADDITIVEALPHA || defined(LIT_ALPHA_TO_COVERAGE)\n\toutput.color = vec4f(output.color.rgb, litArgs_opacity);\n#elif LIT_BLEND_TYPE == PREMULTIPLIED\n\toutput.color = vec4f(output.color.rgb * litArgs_opacity, litArgs_opacity);\n#else\n\toutput.color = vec4f(output.color.rgb, 1.0);\n#endif\n`;var vI=`\nvarying vUv0: vec2f;\nvar source: texture_2d<f32>;\nvar sourceSampler: sampler;\n@fragment fn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\toutput.color = textureSample(source, sourceSampler, input.vUv0);\n\treturn output;\n}\n`;var yI=`\nuniform material_sheen: vec3f;\nfn getSheen() {\n\tvar sheenColor = uniform.material_sheen;\n\t#ifdef STD_SHEEN_TEXTURE\n\tsheenColor = sheenColor * {STD_SHEEN_TEXTURE_DECODE}(textureSampleBias({STD_SHEEN_TEXTURE_NAME}, {STD_SHEEN_TEXTURE_NAME}Sampler, {STD_SHEEN_TEXTURE_UV}, uniform.textureBias)).{STD_SHEEN_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SHEEN_VERTEX\n\tsheenColor = sheenColor * saturate3(vVertexColor.{STD_SHEEN_VERTEX_CHANNEL});\n\t#endif\n\tsSpecularity = sheenColor;\n}\n`;var SI=`\nuniform material_sheenGloss: f32;\nfn getSheenGlossiness() {\n\tvar sheenGlossiness = uniform.material_sheenGloss;\n\t#ifdef STD_SHEENGLOSS_TEXTURE\n\tsheenGlossiness = sheenGlossiness * textureSampleBias({STD_SHEENGLOSS_TEXTURE_NAME}, {STD_SHEENGLOSS_TEXTURE_NAME}Sampler, {STD_SHEENGLOSS_TEXTURE_UV}, uniform.textureBias).{STD_SHEENGLOSS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SHEENGLOSS_VERTEX\n\tsheenGlossiness = sheenGlossiness * saturate(vVertexColor.{STD_SHEENGLOSS_VERTEX_CHANNEL});\n\t#endif\n\t#ifdef STD_SHEENGLOSS_INVERT\n\tsheenGlossiness = 1.0 - sheenGlossiness;\n\t#endif\n\tsGlossiness = sheenGlossiness + 0.0000001;\n}\n`;var xI=`\nuniform material_heightMapFactor: f32;\nfn getParallax() {\n\tvar parallaxScale = uniform.material_heightMapFactor;\n\tvar height: f32 = textureSampleBias({STD_HEIGHT_TEXTURE_NAME}, {STD_HEIGHT_TEXTURE_NAME}Sampler, {STD_HEIGHT_TEXTURE_UV}, uniform.textureBias).{STD_HEIGHT_TEXTURE_CHANNEL};\n\theight = height * parallaxScale - parallaxScale * 0.5;\n\tvar viewDirT: vec3f = dViewDirW * dTBN;\n\tviewDirT.z = viewDirT.z + 0.42;\n\tdUvOffset = height * (viewDirT.xy / viewDirT.z);\n}\n`;var TI=`\nuniform meshInstanceId: u32;\nfn getPickOutput() -> vec4f {\n\tlet inv: vec4f = vec4f(1.0 / 255.0);\n\tlet shifts: vec4u = vec4u(16u, 8u, 0u, 24u);\n\tlet col: vec4u = (vec4u(uniform.meshInstanceId) >> shifts) & vec4u(0xffu);\n\treturn vec4f(col) * inv;\n}`;var wI=`\nfn getReflDir(worldNormal: vec3f, viewDir: vec3f, gloss: f32, tbn: mat3x3f) {\n\tdReflDirW = normalize(-reflect(viewDir, worldNormal));\n}\n`;var bI=`\nfn getReflDir(worldNormal: vec3f, viewDir: vec3f, gloss: f32, tbn: mat3x3f) {\n\tlet roughness: f32 = sqrt(1.0 - min(gloss, 1.0));\n\tlet direction: vec2f = dAnisotropyRotation;\n\tlet anisotropicT: vec3f = normalize(tbn * vec3f(direction, 0.0));\n\tlet anisotropicB: vec3f = normalize(cross(tbn[2], anisotropicT));\n\tlet anisotropy: f32 = dAnisotropy;\n\tlet anisotropicDirection: vec3f = anisotropicB;\n\tlet anisotropicTangent: vec3f = cross(anisotropicDirection, viewDir);\n\tlet anisotropicNormal: vec3f = cross(anisotropicTangent, anisotropicDirection);\n\tlet bendFactor: f32 = 1.0 - anisotropy * (1.0 - roughness);\n\tlet bendFactor4: f32 = bendFactor * bendFactor * bendFactor * bendFactor;\n\tlet bentNormal: vec3f = normalize(mix(normalize(anisotropicNormal), normalize(worldNormal), bendFactor4));\n\tdReflDirW = reflect(-viewDir, bentNormal);\n}`;var EI=`\n#ifdef LIT_CLEARCOAT\nfn addReflectionCC(reflDir: vec3f, gloss: f32) {\n\tccReflection = ccReflection + calcReflection(reflDir, gloss);\n}\n#endif\n`;var AI=`\nvar texture_cubeMap: texture_cube<f32>;\nvar texture_cubeMapSampler: sampler;\nuniform material_reflectivity: f32;\nfn calcReflection(reflDir: vec3f, gloss: f32) -> vec3f {\n\tvar lookupVec: vec3f = cubeMapProject(reflDir);\n\tlookupVec.x = lookupVec.x * -1.0;\n\treturn {reflectionDecode}(textureSample(texture_cubeMap, texture_cubeMapSampler, lookupVec));\n}\nfn addReflection(reflDir: vec3f, gloss: f32) {\n\tdReflection = dReflection + vec4f(calcReflection(reflDir, gloss), uniform.material_reflectivity);\n}\n`;var CI=`\n#ifndef ENV_ATLAS\n\t#define ENV_ATLAS\n\tvar texture_envAtlas: texture_2d<f32>;\n\tvar texture_envAtlasSampler: sampler;\n#endif\nvar texture_cubeMap: texture_cube<f32>;\nvar texture_cubeMapSampler: sampler;\nuniform material_reflectivity: f32;\nfn calcReflection(reflDir: vec3f, gloss: f32) -> vec3f {\n\tlet dir: vec3f = cubeMapProject(reflDir) * vec3f(-1.0, 1.0, 1.0);\n\tlet uv: vec2f = toSphericalUv(dir);\n\tlet level: f32 = saturate(1.0 - gloss) * 5.0;\n\tlet ilevel: f32 = floor(level);\n\tlet flevel: f32 = level - ilevel;\n\tlet sharp: vec3f = {reflectionCubemapDecode}(textureSample(texture_cubeMap, texture_cubeMapSampler, dir));\n\tlet roughA: vec3f = {reflectionDecode}(textureSample(texture_envAtlas, texture_envAtlasSampler, mapRoughnessUv(uv, ilevel)));\n\tlet roughB: vec3f = {reflectionDecode}(textureSample(texture_envAtlas, texture_envAtlasSampler, mapRoughnessUv(uv, ilevel + 1.0)));\n\treturn processEnvironment(mix(sharp, mix(roughA, roughB, flevel), min(level, 1.0)));\n}\nfn addReflection(reflDir: vec3f, gloss: f32) {\n\tdReflection = dReflection + vec4f(calcReflection(reflDir, gloss), uniform.material_reflectivity);\n}\n`;var PI=`\n#ifndef ENV_ATLAS\n#define ENV_ATLAS\n\tvar texture_envAtlas: texture_2d<f32>;\n\tvar texture_envAtlasSampler: sampler;\n#endif\nuniform material_reflectivity: f32;\nfn shinyMipLevel(uv: vec2f) -> f32 {\n\tlet dx: vec2f = dpdx(uv);\n\tlet dy: vec2f = dpdy(uv);\n\tlet uv2: vec2f = vec2f(fract(uv.x + 0.5), uv.y);\n\tlet dx2: vec2f = dpdx(uv2);\n\tlet dy2: vec2f = dpdy(uv2);\n\tlet maxd: f32 = min(max(dot(dx, dx), dot(dy, dy)), max(dot(dx2, dx2), dot(dy2, dy2)));\n\treturn clamp(0.5 * log2(maxd) - 1.0 + uniform.textureBias, 0.0, 5.0);\n}\nfn calcReflection(reflDir: vec3f, gloss: f32) -> vec3f {\n\tlet dir: vec3f = cubeMapProject(reflDir) * vec3f(-1.0, 1.0, 1.0);\n\tlet uv: vec2f = toSphericalUv(dir);\n\tlet level: f32 = saturate(1.0 - gloss) * 5.0;\n\tlet ilevel: f32 = floor(level);\n\tlet level2: f32 = shinyMipLevel(uv * atlasSize);\n\tlet ilevel2: f32 = floor(level2);\n\tvar uv0: vec2f;\n\tvar uv1: vec2f;\n\tvar weight: f32;\n\tif (ilevel == 0.0) {\n\t\tuv0 = mapShinyUv(uv, ilevel2);\n\t\tuv1 = mapShinyUv(uv, ilevel2 + 1.0);\n\t\tweight = level2 - ilevel2;\n\t} else {\n\t\tuv0 = mapRoughnessUv(uv, ilevel);\n\t\tuv1 = uv0;\n\t\tweight = 0.0;\n\t}\n\tlet linearA: vec3f = {reflectionDecode}(textureSample(texture_envAtlas, texture_envAtlasSampler, uv0));\n\tlet linearB: vec3f = {reflectionDecode}(textureSample(texture_envAtlas, texture_envAtlasSampler, uv1));\n\tlet linear0: vec3f = mix(linearA, linearB, weight);\n\tlet linear1: vec3f = {reflectionDecode}(textureSample(texture_envAtlas, texture_envAtlasSampler, mapRoughnessUv(uv, ilevel + 1.0)));\n\treturn processEnvironment(mix(linear0, linear1, level - ilevel));\n}\nfn addReflection(reflDir: vec3f, gloss: f32) {\n\tdReflection = dReflection + vec4f(calcReflection(reflDir, gloss), uniform.material_reflectivity);\n}\n`;var LI=`\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform matrix_view: mat4x4f;\n#endif\nvar texture_sphereMap: texture_2d<f32>;\nvar texture_sphereMapSampler: sampler;\nuniform material_reflectivity: f32;\nfn calcReflection(reflDir: vec3f, gloss: f32) -> vec3f {\n\tlet viewRotationMatrix = mat3x3f(uniform.matrix_view[0].xyz, uniform.matrix_view[1].xyz, uniform.matrix_view[2].xyz);\n\tlet reflDirV: vec3f = viewRotationMatrix * reflDir;\n\tlet m: f32 = 2.0 * sqrt(dot(reflDirV.xy, reflDirV.xy) + (reflDirV.z + 1.0) * (reflDirV.z + 1.0));\n\tlet sphereMapUv: vec2f = reflDirV.xy / m + 0.5;\n\treturn {reflectionDecode}(textureSample(texture_sphereMap, texture_sphereMapSampler, sphereMapUv));\n}\nfn addReflection(reflDir: vec3f, gloss: f32) {\n\tdReflection = dReflection + vec4f(calcReflection(reflDir, gloss), uniform.material_reflectivity);\n}\n`;var DI=`\nfn addReflectionSheen(worldNormal: vec3f, viewDir: vec3f, gloss: f32) {\n\tlet NoV: f32 = dot(worldNormal, viewDir);\n\tlet alphaG: f32 = gloss * gloss;\n\tlet a: f32 = select(\n\t\t-8.48 * alphaG + 14.3 * gloss - 9.95,\n\t\t-339.2 * alphaG + 161.4 * gloss - 25.9,\n\t\tgloss < 0.25\n\t);\n\tlet b: f32 = select(\n\t\t1.97 * alphaG - 3.27 * gloss + 0.72,\n\t\t44.0 * alphaG - 23.7 * gloss + 3.26,\n\t\tgloss < 0.25\n\t);\n\tlet dg_add: f32 = select(\n\t\t0.1 * ( gloss - 0.25 ),\n\t\t0.0,\n\t\tgloss < 0.25\n\t);\n\tlet dg: f32 = exp( a * NoV + b ) + dg_add;\n\tsReflection = sReflection + (calcReflection(worldNormal, 0.0) * saturate(dg));\n}`;var MI=`\nfn refract2(viewVec: vec3f, normal: vec3f, IOR: f32) -> vec3f {\n\tlet vn: f32 = dot(viewVec, normal);\n\tlet k: f32 = 1.0 - IOR * IOR * (1.0 - vn * vn);\n\tlet refrVec: vec3f = IOR * viewVec - (IOR * vn + sqrt(k)) * normal;\n\treturn refrVec;\n}\nfn addRefraction(\n\tworldNormal: vec3f,\n\tviewDir: vec3f,\n\tthickness: f32,\n\tgloss: f32,\n\tspecularity: vec3f,\n\talbedo: vec3f,\n\ttransmission: f32,\n\trefractionIndex: f32,\n\tdispersion: f32\n#if defined(LIT_IRIDESCENCE)\n\t, iridescenceFresnel: vec3f,\n\tiridescenceIntensity: f32\n#endif\n) {\n\tlet tmpRefl: vec4f = dReflection;\n\tlet reflectionDir: vec3f = refract2(-viewDir, worldNormal, refractionIndex);\n\tdReflection = vec4f(0.0);\n\taddReflection(reflectionDir, gloss);\n\tdDiffuseLight = mix(dDiffuseLight, dReflection.rgb * albedo, transmission);\n\tdReflection = tmpRefl;\n}\n`;var II=`\nuniform material_invAttenuationDistance: f32;\nuniform material_attenuation: vec3f;\nfn evalRefractionColor(refractionVector: vec3f, gloss: f32, refractionIndex: f32) -> vec3f {\n\tlet pointOfRefraction: vec4f = vec4f(vPositionW + refractionVector, 1.0);\n\tlet projectionPoint: vec4f = uniform.matrix_viewProjection * pointOfRefraction;\n\tlet uv: vec2f = getGrabScreenPos(projectionPoint);\n\tlet iorToRoughness: f32 = (1.0 - gloss) * clamp((1.0 / refractionIndex) * 2.0 - 2.0, 0.0, 1.0);\n\tlet refractionLod: f32 = log2(uniform.uScreenSize.x) * iorToRoughness;\n\tlet refraction: vec3f = textureSampleLevel(uSceneColorMap, uSceneColorMapSampler, uv, refractionLod).rgb;\n\treturn refraction;\n}\nfn addRefraction(\n\tworldNormal: vec3f,\n\tviewDir: vec3f,\n\tthickness: f32,\n\tgloss: f32,\n\tspecularity: vec3f,\n\talbedo: vec3f,\n\ttransmission: f32,\n\trefractionIndex: f32,\n\tdispersion: f32,\n#if defined(LIT_IRIDESCENCE)\n\tiridescenceFresnel: vec3f,\n\tiridescenceIntensity: f32\n#endif\n) {\n\tvar modelScale: vec3f;\n\tmodelScale.x = length(uniform.matrix_model[0].xyz);\n\tmodelScale.y = length(uniform.matrix_model[1].xyz);\n\tmodelScale.z = length(uniform.matrix_model[2].xyz);\n\tlet scale: vec3f = thickness * modelScale;\n\tvar refractionVector = normalize(refract(-viewDir, worldNormal, refractionIndex)) * scale;\n\tvar refraction = evalRefractionColor(refractionVector, gloss, refractionIndex);\n\t#ifdef LIT_DISPERSION\n\t\tlet halfSpread: f32 = (1.0 / refractionIndex - 1.0) * 0.025 * dispersion;\n\t\tlet refractionIndexR: f32 = refractionIndex - halfSpread;\n\t\trefractionVector = normalize(refract(-viewDir, worldNormal, refractionIndexR)) * scale;\n\t\trefraction.r = evalRefractionColor(refractionVector, gloss, refractionIndexR).r;\n\t\tlet refractionIndexB: f32 = refractionIndex + halfSpread;\n\t\trefractionVector = normalize(refract(-viewDir, worldNormal, refractionIndexB)) * scale;\n\t\trefraction.b = evalRefractionColor(refractionVector, gloss, refractionIndexB).b;\n\t#endif\n\tvar transmittance: vec3f;\n\tif (uniform.material_invAttenuationDistance != 0.0)\n\t{\n\t\tlet attenuation: vec3f = -log(uniform.material_attenuation) * uniform.material_invAttenuationDistance;\n\t\ttransmittance = exp(-attenuation * length(refractionVector));\n\t}\n\telse\n\t{\n\t\ttransmittance = refraction;\n\t}\n\tlet fresnel: vec3f = vec3f(1.0) -\n\t\tgetFresnel(\n\t\t\tdot(viewDir, worldNormal),\n\t\t\tgloss,\n\t\t\tspecularity\n\t\t#if defined(LIT_IRIDESCENCE)\n\t\t\t, iridescenceFresnel,\n\t\t\tiridescenceIntensity\n\t\t#endif\n\t\t);\n\tdDiffuseLight = mix(dDiffuseLight, refraction * transmittance * fresnel, transmission);\n}\n`;var RI=`\nvarying vUv0: vec2f;\n#ifdef CUBEMAP_SOURCE\n\tvar sourceCube: texture_cube<f32>;\n\tvar sourceCubeSampler : sampler;\n#else\n\tvar sourceTex: texture_2d<f32>;\n\tvar sourceTexSampler : sampler;\n#endif\n#ifdef USE_SAMPLES_TEX\n\tvar samplesTex: texture_2d<f32>;\n\tvar samplesTexSampler : sampler;\n\tuniform samplesTexInverseSize: vec2f;\n#endif\nuniform params: vec3f;\nfn targetFace() -> f32 { return uniform.params.x; }\nfn targetTotalPixels() -> f32 { return uniform.params.y; }\nfn sourceTotalPixels() -> f32 { return uniform.params.z; }\nconst PI: f32 = 3.141592653589793;\nfn saturate(x: f32) -> f32 {\n\treturn clamp(x, 0.0, 1.0);\n}\n#include "decodePS"\n#include "encodePS"\nfn modifySeams(dir: vec3f, scale: f32) -> vec3f {\n\tlet adir = abs(dir);\n\tlet M = max(max(adir.x, adir.y), adir.z);\n\treturn dir / M * vec3f(\n\t\tselect(scale, 1.0, adir.x == M),\n\t\tselect(scale, 1.0, adir.y == M),\n\t\tselect(scale, 1.0, adir.z == M)\n\t);\n}\nfn toSpherical(dir: vec3f) -> vec2f {\n\tlet nonZeroXZ = any(dir.xz != vec2f(0.0, 0.0));\n\treturn vec2f(select(0.0, atan2(dir.x, dir.z), nonZeroXZ), asin(dir.y));\n}\nfn fromSpherical(uv: vec2f) -> vec3f {\n\treturn vec3f(cos(uv.y) * sin(uv.x),\n\t\t\t\tsin(uv.y),\n\t\t\t\tcos(uv.y) * cos(uv.x));\n}\nfn getDirectionEquirect(uv: vec2f) -> vec3f {\n\treturn fromSpherical((vec2f(uv.x, 1.0 - uv.y) * 2.0 - 1.0) * vec2f(PI, PI * 0.5));\n}\nfn signNotZero(k: f32) -> f32 {\n\treturn select(-1.0, 1.0, k >= 0.0);\n}\nfn signNotZeroVec2(v: vec2f) -> vec2f {\n\treturn vec2f(signNotZero(v.x), signNotZero(v.y));\n}\nfn octDecode(o: vec2f) -> vec3f {\n\tvar v = vec3f(o.x, 1.0 - abs(o.x) - abs(o.y), o.y);\n\tif (v.y < 0.0) {\n\t\tvar temp: vec2f = (1.0 - abs(v.zx)) * signNotZeroVec2(v.xz);\n\t\tv = vec3f(temp.x, v.y, temp.y);\n\t}\n\treturn normalize(v);\n}\nfn getDirectionOctahedral(uv: vec2f) -> vec3f {\n\treturn octDecode(vec2f(uv.x, 1.0 - uv.y) * 2.0 - 1.0);\n}\nfn octEncode(v: vec3f) -> vec2f {\n\tlet l1norm = abs(v.x) + abs(v.y) + abs(v.z);\n\tvar result = v.xz * (1.0 / l1norm);\n\tif (v.y < 0.0) {\n\t\tresult = (1.0 - abs(result.yx)) * signNotZeroVec2(result.xy);\n\t}\n\treturn result;\n}\n#ifdef CUBEMAP_SOURCE\n\tfn sampleCubemapDir(dir: vec3f) -> vec4f {\n\t\treturn textureSample(sourceCube, sourceCubeSampler, modifySeams(dir, 1.0));\n\t}\n\tfn sampleCubemapSph(sph: vec2f) -> vec4f {\n\t\treturn sampleCubemapDir(fromSpherical(sph));\n\t}\n\tfn sampleCubemapDirLod(dir: vec3f, mipLevel: f32) -> vec4f {\n\t\treturn textureSampleLevel(sourceCube, sourceCubeSampler, modifySeams(dir, 1.0), mipLevel);\n\t}\n\tfn sampleCubemapSphLod(sph: vec2f, mipLevel: f32) -> vec4f {\n\t\treturn sampleCubemapDirLod(fromSpherical(sph), mipLevel);\n\t}\n#else\n\tfn sampleEquirectSph(sph: vec2f) -> vec4f {\n\t\tlet uv = sph / vec2f(PI * 2.0, PI) + 0.5;\n\t\treturn textureSample(sourceTex, sourceTexSampler, vec2f(uv.x, 1.0 - uv.y));\n\t}\n\tfn sampleEquirectDir(dir: vec3f) -> vec4f {\n\t\treturn sampleEquirectSph(toSpherical(dir));\n\t}\n\tfn sampleEquirectSphLod(sph: vec2f, mipLevel: f32) -> vec4f {\n\t\tlet uv = sph / vec2f(PI * 2.0, PI) + 0.5;\n\t\treturn textureSampleLevel(sourceTex, sourceTexSampler, vec2f(uv.x, 1.0 - uv.y), mipLevel);\n\t}\n\tfn sampleEquirectDirLod(dir: vec3f, mipLevel: f32) -> vec4f {\n\t\treturn sampleEquirectSphLod(toSpherical(dir), mipLevel);\n\t}\n\tfn sampleOctahedralDir(dir: vec3f) -> vec4f {\n\t\tlet uv = octEncode(dir) * 0.5 + 0.5;\n\t\treturn textureSample(sourceTex, sourceTexSampler, vec2f(uv.x, 1.0 - uv.y));\n\t}\n\tfn sampleOctahedralSph(sph: vec2f) -> vec4f {\n\t\treturn sampleOctahedralDir(fromSpherical(sph));\n\t}\n\tfn sampleOctahedralDirLod(dir: vec3f, mipLevel: f32) -> vec4f {\n\t\tlet uv = octEncode(dir) * 0.5 + 0.5;\n\t\treturn textureSampleLevel(sourceTex, sourceTexSampler, vec2f(uv.x, 1.0 - uv.y), mipLevel);\n\t}\n\tfn sampleOctahedralSphLod(sph: vec2f, mipLevel: f32) -> vec4f {\n\t\treturn sampleOctahedralDirLod(fromSpherical(sph), mipLevel);\n\t}\n#endif\nfn getDirectionCubemap(uv: vec2f) -> vec3f {\n\tlet st = uv * 2.0 - 1.0;\n\tlet face = targetFace();\n\tvar vec: vec3f;\n\tif (face == 0.0) {\n\t\tvec = vec3f(1, -st.y, -st.x);\n\t} else if (face == 1.0) {\n\t\tvec = vec3f(-1, -st.y, st.x);\n\t} else if (face == 2.0) {\n\t\tvec = vec3f(st.x, 1, st.y);\n\t} else if (face == 3.0) {\n\t\tvec = vec3f(st.x, -1, -st.y);\n\t} else if (face == 4.0) {\n\t\tvec = vec3f(st.x, -st.y, 1);\n\t} else {\n\t\tvec = vec3f(-st.x, -st.y, -1);\n\t}\n\treturn normalize(modifySeams(vec, 1.0));\n}\nfn matrixFromVector(n: vec3f) -> mat3x3f {\n\tlet a = 1.0 / (1.0 + n.z);\n\tlet b = -n.x * n.y * a;\n\tlet b1 = vec3f(1.0 - n.x * n.x * a, b, -n.x);\n\tlet b2 = vec3f(b, 1.0 - n.y * n.y * a, -n.y);\n\treturn mat3x3f(b1, b2, n);\n}\nfn matrixFromVectorSlow(n: vec3f) -> mat3x3f {\n\tlet up = select(vec3f(0.0, 0.0, select(-1.0, 1.0, n.y > 0.0)), vec3f(0.0, 1.0, 0.0), abs(n.y) > 0.0000001);\n\tlet x = normalize(cross(up, n));\n\tlet y = cross(n, x);\n\treturn mat3x3f(x, y, n);\n}\nfn reproject(uv: vec2f) -> vec4f {\n\tif ({NUM_SAMPLES} <= 1) {\n\t\treturn {ENCODE_FUNC}({DECODE_FUNC}({SOURCE_FUNC}Dir({TARGET_FUNC}(uv))));\n\t} else {\n\t\tlet t = {TARGET_FUNC}(uv);\n\t\tlet tu = dpdx(t);\n\t\tlet tv = dpdy(t);\n\t\tvar result = vec3f(0.0);\n\t\tfor (var u = 0.0; u < {NUM_SAMPLES_SQRT}; u += 1.0) {\n\t\t\tfor (var v = 0.0; v < {NUM_SAMPLES_SQRT}; v += 1.0) {\n\t\t\t\tresult += {DECODE_FUNC}({SOURCE_FUNC}Dir(normalize(t +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttu * (u / {NUM_SAMPLES_SQRT} - 0.5) +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttv * (v / {NUM_SAMPLES_SQRT} - 0.5))));\n\t\t\t}\n\t\t}\n\t\treturn {ENCODE_FUNC}(result / ({NUM_SAMPLES_SQRT} * {NUM_SAMPLES_SQRT}));\n\t}\n}\nconst unpackFloat: vec4f = vec4f(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 16581375.0);\n#ifdef USE_SAMPLES_TEX\n\tfn unpackSample(i: i32, L: ptr<function, vec3f>, mipLevel: ptr<function, f32>) {\n\t\tvar u = (f32(i * 4) + 0.5) * uniform.samplesTexInverseSize.x;\n\t\tvar v = (floor(u) + 0.5) * uniform.samplesTexInverseSize.y;\n\t\tvar raw: vec4f;\n\t\traw.x = dot(textureSample(samplesTex, samplesTexSampler, vec2f(u, v)), unpackFloat); u += uniform.samplesTexInverseSize.x;\n\t\traw.y = dot(textureSample(samplesTex, samplesTexSampler, vec2f(u, v)), unpackFloat); u += uniform.samplesTexInverseSize.x;\n\t\traw.z = dot(textureSample(samplesTex, samplesTexSampler, vec2f(u, v)), unpackFloat); u += uniform.samplesTexInverseSize.x;\n\t\traw.w = dot(textureSample(samplesTex, samplesTexSampler, vec2f(u, v)), unpackFloat);\n\t\t*L = raw.xyz * 2.0 - 1.0;\n\t\t*mipLevel = raw.w * 8.0;\n\t}\n\tfn prefilterSamples(uv: vec2f) -> vec4f {\n\t\tlet vecSpace = matrixFromVectorSlow({TARGET_FUNC}(uv));\n\t\tvar L: vec3f;\n\t\tvar mipLevel: f32;\n\t\tvar result = vec3f(0.0);\n\t\tvar totalWeight = 0.0;\n\t\tfor (var i = 0; i < {NUM_SAMPLES}; i += 1) {\n\t\t\tunpackSample(i, &L, &mipLevel);\n\t\t\tresult += {DECODE_FUNC}({SOURCE_FUNC}DirLod(vecSpace * L, mipLevel)) * L.z;\n\t\t\ttotalWeight += L.z;\n\t\t}\n\t\treturn {ENCODE_FUNC}(result / totalWeight);\n\t}\n\tfn prefilterSamplesUnweighted(uv: vec2f) -> vec4f {\n\t\tlet vecSpace = matrixFromVectorSlow({TARGET_FUNC}(uv));\n\t\tvar L: vec3f;\n\t\tvar mipLevel: f32;\n\t\tvar result = vec3f(0.0);\n\t\tfor (var i = 0; i < {NUM_SAMPLES}; i += 1) {\n\t\t\tunpackSample(i, &L, &mipLevel);\n\t\t\tresult += {DECODE_FUNC}({SOURCE_FUNC}DirLod(vecSpace * L, mipLevel));\n\t\t}\n\t\treturn {ENCODE_FUNC}(result / f32({NUM_SAMPLES}));\n\t}\n#endif\n@fragment\nfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\toutput.color = {PROCESS_FUNC}(input.vUv0);\n\treturn output;\n}\n`;var OI=`\nattribute vertex_position: vec2f;\nuniform uvMod: vec4f;\nvarying vUv0: vec2f;\n@vertex\nfn vertexMain(input: VertexInput) -> VertexOutput {\n\tvar output: VertexOutput;\n\toutput.position = vec4f(input.vertex_position, 0.5, 1.0);\n\toutput.vUv0 = getImageEffectUV((input.vertex_position * 0.5 + vec2f(0.5, 0.5)) * uniform.uvMod.xy + uniform.uvMod.zw);\n\treturn output;\n}\n`;var FI=`\nvar uSceneDepthMap: texture_2d<f32>;\nvar uSceneDepthMapSampler: sampler;\n#ifndef SCREENSIZE\n\t#define SCREENSIZE\n\tuniform uScreenSize: vec4f;\n#endif\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform matrix_view: mat4x4f;\n#endif\n#ifndef LINEARIZE_DEPTH\n\t#define LINEARIZE_DEPTH\n\t#ifndef CAMERAPLANES\n\t\t#define CAMERAPLANES\n\t\tuniform camera_params: vec4f;\n\t#endif\n\tfn linearizeDepth(z: f32) -> f32 {\n\t\tif (uniform.camera_params.w == 0.0) {\n\t\t\treturn (uniform.camera_params.z * uniform.camera_params.y) / (uniform.camera_params.y + z * (uniform.camera_params.z - uniform.camera_params.y));\n\t\t} else {\n\t\t\treturn uniform.camera_params.z + z * (uniform.camera_params.y - uniform.camera_params.z);\n\t\t}\n\t}\n#endif\nfn delinearizeDepth(linearDepth: f32) -> f32 {\n\tif (uniform.camera_params.w == 0.0) {\n\t\treturn (uniform.camera_params.y * (uniform.camera_params.z - linearDepth)) / (linearDepth * (uniform.camera_params.z - uniform.camera_params.y));\n\t} else {\n\t\treturn (linearDepth - uniform.camera_params.z) / (uniform.camera_params.y - uniform.camera_params.z);\n\t}\n}\nfn getLinearScreenDepth(uv: vec2f) -> f32 {\n\t#ifdef SCENE_DEPTHMAP_LINEAR\n\t\t#ifdef SCENE_DEPTHMAP_FLOAT\n\t\t\treturn textureSample(uSceneDepthMap, uSceneDepthMapSampler, uv).r;\n\t\t#else\n\t\t\tlet textureSize = textureDimensions(uSceneDepthMap, 0);\n\t\t\tlet texel: vec2i = vec2i(uv * vec2f(textureSize));\n\t\t\tlet data: vec4f = textureLoad(uSceneDepthMap, texel, 0);\n\t\t\tlet data_u32: vec4u = vec4u(data * 255.0);\n\t\t\tlet intBits: u32 = (data_u32.r << 24u) | (data_u32.g << 16u) | (data_u32.b << 8u) | data_u32.a;\n\t\t\treturn bitcast<f32>(intBits);\n\t\t#endif\n\t#else\n\t\treturn linearizeDepth(textureSample(uSceneDepthMap, uSceneDepthMapSampler, uv).r);\n\t#endif\n}\n#ifndef VERTEXSHADER\n\tfn getLinearScreenDepthFrag() -> f32 {\n\t\tlet uv: vec2f = pcPosition.xy * uniform.uScreenSize.zw;\n\t\treturn getLinearScreenDepth(uv);\n\t}\n#endif\nfn getLinearDepth(pos: vec3f) -> f32 {\n\treturn -(uniform.matrix_view * vec4f(pos, 1.0)).z;\n}\n`;var NI=`\nfn getShadowCascadeIndex(shadowCascadeDistances: vec4f, shadowCascadeCount: i32) -> i32 {\n\tlet depth: f32 = 1.0 / pcPosition.w;\n\tlet comparisons: vec4f = step(shadowCascadeDistances, vec4f(depth));\n\tlet cascadeIndex: i32 = i32(dot(comparisons, vec4f(1.0)));\n\treturn min(cascadeIndex, shadowCascadeCount - 1);\n}\nfn ditherShadowCascadeIndex(cascadeIndex_in: i32, shadowCascadeDistances: vec4f, shadowCascadeCount: i32, blendFactor: f32) -> i32 {\n\tvar cascadeIndex: i32 = cascadeIndex_in;\n\tif (cascadeIndex < shadowCascadeCount - 1) {\n\t\tlet currentRangeEnd: f32 = shadowCascadeDistances[cascadeIndex];\n\t\tlet transitionStart: f32 = blendFactor * currentRangeEnd;\n\t\tlet depth: f32 = 1.0 / pcPosition.w;\n\t\tif (depth > transitionStart) {\n\t\t\tlet transitionFactor: f32 = smoothstep(transitionStart, currentRangeEnd, depth);\n\t\t\tlet dither: f32 = fract(sin(dot(pcPosition.xy, vec2f(12.9898, 78.233))) * 43758.5453);\n\t\t\tif (dither < transitionFactor) {\n\t\t\t\tcascadeIndex = cascadeIndex + 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn cascadeIndex;\n}\nfn fadeShadow(shadowCoord_in: vec3f, shadowCascadeDistances: vec4f) -> vec3f {\n\tvar shadowCoord: vec3f = shadowCoord_in;\n\tlet depth: f32 = 1.0 / pcPosition.w;\n\tif (depth > shadowCascadeDistances.w) {\n\t\tshadowCoord.z = -9999999.0;\n\t}\n\treturn shadowCoord;\n}\n`;var kI=`\nfn linstep(a: f32, b: f32, v: f32) -> f32 {\n\treturn clamp((v - a) / (b - a), 0.0, 1.0);\n}\nfn reduceLightBleeding(pMax: f32, amount: f32) -> f32 {\n\t return linstep(amount, 1.0, pMax);\n}\nfn chebyshevUpperBound(moments: vec2f, mean: f32, minVariance: f32, lightBleedingReduction: f32) -> f32 {\n\tvar variance: f32 = moments.y - (moments.x * moments.x);\n\tvariance = max(variance, minVariance);\n\tlet d: f32 = mean - moments.x;\n\tvar pMax: f32 = variance / (variance + (d * d));\n\tpMax = reduceLightBleeding(pMax, lightBleedingReduction);\n\treturn select(pMax, 1.0, mean <= moments.x);\n}\nfn calculateEVSM(moments_in: vec3f, Z_in: f32, vsmBias: f32, exponent: f32) -> f32 {\n\tlet Z: f32 = 2.0 * Z_in - 1.0;\n\tlet warpedDepth: f32 = exp(exponent * Z);\n\tlet moments: vec2f = moments_in.xy + vec2f(warpedDepth, warpedDepth*warpedDepth) * (1.0 - moments_in.z);\n\tlet VSMBias: f32 = vsmBias;\n\tlet depthScale: f32 = VSMBias * exponent * warpedDepth;\n\tlet minVariance1: f32 = depthScale * depthScale;\n\treturn chebyshevUpperBound(moments, warpedDepth, minVariance1, 0.1);\n}\nfn VSM16(tex: texture_2d<f32>, texSampler: sampler, texCoords: vec2f, resolution: f32, Z: f32, vsmBias: f32, exponent: f32) -> f32 {\n\tlet moments: vec3f = textureSampleLevel(tex, texSampler, texCoords, 0.0).xyz;\n\treturn calculateEVSM(moments, Z, vsmBias, exponent);\n}\nfn getShadowVSM16(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, shadowCoord: vec3f, shadowParams: vec4f, exponent: f32) -> f32 {\n\treturn VSM16(shadowMap, shadowMapSampler, shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, exponent);\n}\nfn getShadowSpotVSM16(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, shadowCoord: vec3f, shadowParams: vec4f, exponent: f32, lightDir: vec3f) -> f32 {\n\tlet Z: f32 = length(lightDir) * shadowParams.w + shadowParams.z;\n\treturn VSM16(shadowMap, shadowMapSampler, shadowCoord.xy, shadowParams.x, Z, shadowParams.y, exponent);\n}\nfn VSM32(tex: texture_2d<f32>, texSampler: sampler, texCoords_in: vec2f, resolution: f32, Z: f32, vsmBias: f32, exponent: f32) -> f32 {\n\t#ifdef CAPS_TEXTURE_FLOAT_FILTERABLE\n\t\tvar moments: vec3f = textureSampleLevel(tex, texSampler, texCoords_in, 0.0).xyz;\n\t#else\n\t\tvar pixelSize : f32 = 1.0 / resolution;\n\t\tlet texCoords: vec2f = texCoords_in - vec2f(pixelSize);\n\t\tlet s00: vec3f = textureSampleLevel(tex, texSampler, texCoords, 0.0).xyz;\n\t\tlet s10: vec3f = textureSampleLevel(tex, texSampler, texCoords + vec2f(pixelSize, 0.0), 0.0).xyz;\n\t\tlet s01: vec3f = textureSampleLevel(tex, texSampler, texCoords + vec2f(0.0, pixelSize), 0.0).xyz;\n\t\tlet s11: vec3f = textureSampleLevel(tex, texSampler, texCoords + vec2f(pixelSize), 0.0).xyz;\n\t\tlet fr: vec2f = fract(texCoords * resolution);\n\t\tlet h0: vec3f = mix(s00, s10, fr.x);\n\t\tlet h1: vec3f = mix(s01, s11, fr.x);\n\t\tvar moments: vec3f = mix(h0, h1, fr.y);\n\t#endif\n\treturn calculateEVSM(moments, Z, vsmBias, exponent);\n}\nfn getShadowVSM32(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, shadowCoord: vec3f, shadowParams: vec4f, exponent: f32) -> f32 {\n\treturn VSM32(shadowMap, shadowMapSampler, shadowCoord.xy, shadowParams.x, shadowCoord.z, shadowParams.y, exponent);\n}\nfn getShadowSpotVSM32(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, shadowCoord: vec3f, shadowParams: vec4f, exponent: f32, lightDir: vec3f) -> f32 {\n\tlet Z: f32 = length(lightDir) * shadowParams.w + shadowParams.z;\n\treturn VSM32(shadowMap, shadowMapSampler, shadowCoord.xy, shadowParams.x, Z, shadowParams.y, exponent);\n}\n`;var BI=`\nfn getShadowPCF1x1(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\treturn textureSampleCompareLevel(shadowMap, shadowMapSampler, shadowCoord.xy, shadowCoord.z);\n}\nfn getShadowSpotPCF1x1(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\treturn textureSampleCompareLevel(shadowMap, shadowMapSampler, shadowCoord.xy, shadowCoord.z);\n}\n`;var UI=`\nfn _getShadowPCF3x3(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec3f) -> f32 {\n\tlet z: f32 = shadowCoord.z;\n\tlet uv: vec2f = shadowCoord.xy * shadowParams.x;\n\tlet shadowMapSizeInv: f32 = 1.0 / shadowParams.x;\n\tlet base_uv_temp: vec2f = floor(uv + 0.5);\n\tlet s: f32 = (uv.x + 0.5 - base_uv_temp.x);\n\tlet t: f32 = (uv.y + 0.5 - base_uv_temp.y);\n\tlet base_uv: vec2f = (base_uv_temp - vec2f(0.5)) * shadowMapSizeInv;\n\tvar sum: f32 = 0.0;\n\tlet uw0: f32 = (3.0 - 2.0 * s);\n\tlet uw1: f32 = (1.0 + 2.0 * s);\n\tlet u0_offset: f32 = (2.0 - s) / uw0 - 1.0;\n\tlet u1_offset: f32 = s / uw1 + 1.0;\n\tlet vw0: f32 = (3.0 - 2.0 * t);\n\tlet vw1: f32 = (1.0 + 2.0 * t);\n\tlet v0_offset: f32 = (2.0 - t) / vw0 - 1.0;\n\tlet v1_offset: f32 = t / vw1 + 1.0;\n\tlet u0: f32 = u0_offset * shadowMapSizeInv + base_uv.x;\n\tlet v0: f32 = v0_offset * shadowMapSizeInv + base_uv.y;\n\tlet u1: f32 = u1_offset * shadowMapSizeInv + base_uv.x;\n\tlet v1: f32 = v1_offset * shadowMapSizeInv + base_uv.y;\n\tsum = sum + uw0 * vw0 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u0, v0), z);\n\tsum = sum + uw1 * vw0 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u1, v0), z);\n\tsum = sum + uw0 * vw1 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u0, v1), z);\n\tsum = sum + uw1 * vw1 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u1, v1), z);\n\tsum = sum * (1.0 / 16.0);\n\treturn sum;\n}\nfn getShadowPCF3x3(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\treturn _getShadowPCF3x3(shadowMap, shadowMapSampler, shadowCoord, shadowParams.xyz);\n}\nfn getShadowSpotPCF3x3(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\treturn _getShadowPCF3x3(shadowMap, shadowMapSampler, shadowCoord, shadowParams.xyz);\n}\n`;var zI=`\nfn _getShadowPCF5x5(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec3f) -> f32 {\n\tlet z: f32 = shadowCoord.z;\n\tlet uv: vec2f = shadowCoord.xy * shadowParams.x;\n\tlet shadowMapSizeInv: f32 = 1.0 / shadowParams.x;\n\tlet base_uv_temp: vec2f = floor(uv + 0.5);\n\tlet s: f32 = (uv.x + 0.5 - base_uv_temp.x);\n\tlet t: f32 = (uv.y + 0.5 - base_uv_temp.y);\n\tlet base_uv: vec2f = (base_uv_temp - vec2f(0.5)) * shadowMapSizeInv;\n\tlet uw0: f32 = (4.0 - 3.0 * s);\n\tlet uw1: f32 = 7.0;\n\tlet uw2: f32 = (1.0 + 3.0 * s);\n\tlet u0_offset: f32 = (3.0 - 2.0 * s) / uw0 - 2.0;\n\tlet u1_offset: f32 = (3.0 + s) / uw1;\n\tlet u2_offset: f32 = s / uw2 + 2.0;\n\tlet vw0: f32 = (4.0 - 3.0 * t);\n\tlet vw1: f32 = 7.0;\n\tlet vw2: f32 = (1.0 + 3.0 * t);\n\tlet v0_offset: f32 = (3.0 - 2.0 * t) / vw0 - 2.0;\n\tlet v1_offset: f32 = (3.0 + t) / vw1;\n\tlet v2_offset: f32 = t / vw2 + 2.0;\n\tvar sum: f32 = 0.0;\n\tlet u0: f32 = u0_offset * shadowMapSizeInv + base_uv.x;\n\tlet v0: f32 = v0_offset * shadowMapSizeInv + base_uv.y;\n\tlet u1: f32 = u1_offset * shadowMapSizeInv + base_uv.x;\n\tlet v1: f32 = v1_offset * shadowMapSizeInv + base_uv.y;\n\tlet u2: f32 = u2_offset * shadowMapSizeInv + base_uv.x;\n\tlet v2: f32 = v2_offset * shadowMapSizeInv + base_uv.y;\n\tsum = sum + uw0 * vw0 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u0, v0), z);\n\tsum = sum + uw1 * vw0 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u1, v0), z);\n\tsum = sum + uw2 * vw0 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u2, v0), z);\n\tsum = sum + uw0 * vw1 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u0, v1), z);\n\tsum = sum + uw1 * vw1 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u1, v1), z);\n\tsum = sum + uw2 * vw1 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u2, v1), z);\n\tsum = sum + uw0 * vw2 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u0, v2), z);\n\tsum = sum + uw1 * vw2 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u1, v2), z);\n\tsum = sum + uw2 * vw2 * textureSampleCompareLevel(shadowMap, shadowMapSampler, vec2f(u2, v2), z);\n\tsum = sum * (1.0 / 144.0);\n\tsum = saturate(sum);\n\treturn sum;\n}\nfn getShadowPCF5x5(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\treturn _getShadowPCF5x5(shadowMap, shadowMapSampler, shadowCoord, shadowParams.xyz);\n}\nfn getShadowSpotPCF5x5(shadowMap: texture_depth_2d, shadowMapSampler: sampler_comparison, shadowCoord: vec3f, shadowParams: vec4f) -> f32 {\n\treturn _getShadowPCF5x5(shadowMap, shadowMapSampler, shadowCoord, shadowParams.xyz);\n}\n`;var VI=`\nfn fractSinRand(uv: vec2f) -> f32 {\n\tlet PI: f32 = 3.141592653589793;\n\tlet a: f32 = 12.9898; let b: f32 = 78.233; let c: f32 = 43758.5453;\n\tlet dt: f32 = dot(uv.xy, vec2f(a, b));\n\tlet sn: f32 = dt % PI;\n\treturn fract(sin(sn) * c);\n}\nstruct VogelDiskData {\n\tinvNumSamples: f32,\n\tinitialAngle: f32,\n\tcurrentPointId: f32,\n}\nfn prepareDiskConstants(data: ptr<function, VogelDiskData>, sampleCount: i32, randomSeed: f32) {\n\tlet pi2: f32 = 6.28318530718;\n\tdata.invNumSamples = 1.0 / f32(sampleCount);\n\tdata.initialAngle = randomSeed * pi2;\n\tdata.currentPointId = 0.0;\n}\nfn generateDiskSample(data: ptr<function, VogelDiskData>) -> vec2f {\n\tlet GOLDEN_ANGLE: f32 = 2.399963;\n\tlet r: f32 = sqrt((data.currentPointId + 0.5) * data.invNumSamples);\n\tlet theta: f32 = data.currentPointId * GOLDEN_ANGLE + data.initialAngle;\n\tlet offset: vec2f = vec2f(cos(theta), sin(theta)) * pow(r, 1.33);\n\tdata.currentPointId = data.currentPointId + 1.0;\n\treturn offset;\n}\nfn PCSSFindBlocker(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, avgBlockerDepth: ptr<function, f32>, numBlockers: ptr<function, i32>,\n\tshadowCoords: vec2f, z: f32, shadowBlockerSamples: i32, penumbraSize: f32, invShadowMapSize: f32, randomSeed: f32) {\n\tvar diskData: VogelDiskData;\n\tprepareDiskConstants(&diskData, shadowBlockerSamples, randomSeed);\n\tlet searchWidth: f32 = penumbraSize * invShadowMapSize;\n\tvar blockerSum: f32 = 0.0;\n\tvar numBlockers_local: i32 = 0;\n\tfor( var i: i32 = 0; i < shadowBlockerSamples; i = i + 1 ) {\n\t\tlet diskUV: vec2f = generateDiskSample(&diskData);\n\t\tlet sampleUV: vec2f = shadowCoords + diskUV * searchWidth;\n\t\tlet shadowMapDepth: f32 = textureSampleLevel(shadowMap, shadowMapSampler, sampleUV, 0.0).r;\n\t\tif ( shadowMapDepth < z ) {\n\t\t\tblockerSum = blockerSum + shadowMapDepth;\n\t\t\tnumBlockers_local = numBlockers_local + 1;\n\t\t}\n\t}\n\t*avgBlockerDepth = blockerSum / f32(numBlockers_local);\n\t*numBlockers = numBlockers_local;\n}\nfn PCSSFilter(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, uv: vec2f, receiverDepth: f32, shadowSamples: i32, filterRadius: f32, randomSeed: f32) -> f32 {\n\tvar diskData: VogelDiskData;\n\tprepareDiskConstants(&diskData, shadowSamples, randomSeed);\n\tvar sum: f32 = 0.0;\n\tfor (var i: i32 = 0; i < shadowSamples; i = i + 1) {\n\t\tlet offsetUV: vec2f = generateDiskSample(&diskData) * filterRadius;\n\t\tlet depth: f32 = textureSampleLevel(shadowMap, shadowMapSampler, uv + offsetUV, 0.0).r;\n\t\tsum = sum + step(receiverDepth, depth);\n\t}\n\treturn sum / f32(shadowSamples);\n}\nfn getPenumbra(dblocker: f32, dreceiver: f32, penumbraSize: f32, penumbraFalloff: f32) -> f32 {\n\tlet dist: f32 = dreceiver - dblocker;\n\tlet penumbra: f32 = 1.0 - pow(1.0 - dist, penumbraFalloff);\n\treturn penumbra * penumbraSize;\n}\nfn PCSSDirectional(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, shadowCoords: vec3f, cameraParams: vec4f, softShadowParams: vec4f) -> f32 {\n\tlet receiverDepth: f32 = shadowCoords.z;\n\tlet randomSeed: f32 = fractSinRand(pcPosition.xy);\n\tlet shadowSamples: i32 = i32(softShadowParams.x);\n\tlet shadowBlockerSamples: i32 = i32(softShadowParams.y);\n\tlet penumbraSize: f32 = softShadowParams.z;\n\tlet penumbraFalloff: f32 = softShadowParams.w;\n\tlet shadowMapSize: i32 = i32(textureDimensions(shadowMap, 0).x);\n\tvar invShadowMapSize: f32 = 1.0 / f32(shadowMapSize);\n\tinvShadowMapSize = invShadowMapSize * (f32(shadowMapSize) / 2048.0);\n\tvar penumbra: f32;\n\tif (shadowBlockerSamples > 0) {\n\t\tvar avgBlockerDepth: f32 = 0.0;\n\t\tvar numBlockers: i32 = 0;\n\t\tPCSSFindBlocker(shadowMap, shadowMapSampler, &avgBlockerDepth, &numBlockers, shadowCoords.xy, receiverDepth, shadowBlockerSamples, penumbraSize, invShadowMapSize, randomSeed);\n\t\tif (numBlockers < 1) {\n\t\t\treturn 1.0;\n\t\t}\n\t\tpenumbra = getPenumbra(avgBlockerDepth, shadowCoords.z, penumbraSize, penumbraFalloff);\n\t} else {\n\t\tpenumbra = penumbraSize;\n\t}\n\tlet filterRadius: f32 = penumbra * invShadowMapSize;\n\treturn PCSSFilter(shadowMap, shadowMapSampler, shadowCoords.xy, receiverDepth, shadowSamples, filterRadius, randomSeed);\n}\nfn getShadowPCSS(shadowMap: texture_2d<f32>, shadowMapSampler: sampler, shadowCoord: vec3f, shadowParams: vec4f, cameraParams: vec4f, softShadowParams: vec4f, lightDir: vec3f) -> f32 {\n\treturn PCSSDirectional(shadowMap, shadowMapSampler, shadowCoord, cameraParams, softShadowParams);\n}\n`;var GI=`\nattribute vertex_boneIndices: f32;\nvar texture_poseMap: texture_2d<f32>;\nfn getBoneMatrix(indexFloat: f32) -> mat4x4f {\n\tlet width = i32(textureDimensions(texture_poseMap).x);\n\tlet index: i32 = i32(indexFloat + 0.5) * 3;\n\tlet iy: i32 = index / width;\n\tlet ix: i32 = index % width;\n\tlet v1: vec4f = textureLoad(texture_poseMap, vec2i(ix + 0, iy), 0);\n\tlet v2: vec4f = textureLoad(texture_poseMap, vec2i(ix + 1, iy), 0);\n\tlet v3: vec4f = textureLoad(texture_poseMap, vec2i(ix + 2, iy), 0);\n\treturn mat4x4f(\n\t\tv1.x, v2.x, v3.x, 0,\n\t\tv1.y, v2.y, v3.y, 0,\n\t\tv1.z, v2.z, v3.z, 0,\n\t\tv1.w, v2.w, v3.w, 1.0\n\t);\n}\n`;var HI=`\nattribute vertex_boneWeights: vec4f;\nattribute vertex_boneIndices: vec4f;\nvar texture_poseMap: texture_2d<f32>;\nstruct BoneMatrix {\n\tv1: vec4f,\n\tv2: vec4f,\n\tv3: vec4f,\n}\nfn getBoneMatrix(width: i32, index: i32) -> BoneMatrix {\n\tlet v = index / width;\n\tlet u = index % width;\n\tvar result: BoneMatrix;\n\tresult.v1 = textureLoad(texture_poseMap, vec2i(u + 0, v), 0);\n\tresult.v2 = textureLoad(texture_poseMap, vec2i(u + 1, v), 0);\n\tresult.v3 = textureLoad(texture_poseMap, vec2i(u + 2, v), 0);\n\treturn result;\n}\nfn getSkinMatrix(indicesFloat: vec4f, weights: vec4f) -> mat4x4f {\n\tlet width = i32(textureDimensions(texture_poseMap).x);\n\tvar indices = vec4i(indicesFloat + 0.5) * 3;\n\tlet boneA = getBoneMatrix(width, indices.x);\n\tlet boneB = getBoneMatrix(width, indices.y);\n\tlet boneC = getBoneMatrix(width, indices.z);\n\tlet boneD = getBoneMatrix(width, indices.w);\n\tlet v1 = boneA.v1 * weights.x + boneB.v1 * weights.y + boneC.v1 * weights.z + boneD.v1 * weights.w;\n\tlet v2 = boneA.v2 * weights.x + boneB.v2 * weights.y + boneC.v2 * weights.z + boneD.v2 * weights.w;\n\tlet v3 = boneA.v3 * weights.x + boneB.v3 * weights.y + boneC.v3 * weights.z + boneD.v3 * weights.w;\n\tlet one = dot(weights, vec4f(1.0, 1.0, 1.0, 1.0));\n\treturn mat4x4f(\n\t\tv1.x, v2.x, v3.x, 0,\n\t\tv1.y, v2.y, v3.y, 0,\n\t\tv1.z, v2.z, v3.z, 0,\n\t\tv1.w, v2.w, v3.w, one\n\t);\n}\n`;var WI=`\n\t#define LIT_SKYBOX_INTENSITY\n\t#include "envProcPS"\n\t#include "gammaPS"\n\t#include "tonemappingPS"\n\t#ifdef PREPASS_PASS\n\t\tvarying vLinearDepth: f32;\n\t\t#include "floatAsUintPS"\n\t#endif\n\tvarying vViewDir : vec3f;\n\tuniform skyboxHighlightMultiplier : f32;\n\t#ifdef SKY_CUBEMAP\n\t\tvar texture_cubeMap : texture_cube<f32>;\n\t\tvar texture_cubeMap_sampler : sampler;\n\t\t#ifdef SKYMESH\n\t\t\tvarying vWorldPos : vec3f;\n\t\t\tuniform cubeMapRotationMatrix : mat3x3f;\n\t\t\tuniform projectedSkydomeCenter : vec3f;\n\t\t#endif\n\t#else\n\t\t#include "sphericalPS"\n\t\t#include "envAtlasPS"\n\t\tvar texture_envAtlas : texture_2d<f32>;\n\t\tvar texture_envAtlas_sampler : sampler;\n\t\tuniform mipLevel : f32;\n\t#endif\n\t@fragment\n\tfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\t#ifdef PREPASS_PASS\n\t\t\toutput.color = float2vec4(vLinearDepth);\n\t\t#else\n\t\t\tvar linear : vec3f;\n\t\t\tvar dir : vec3f;\n\t\t\t#ifdef SKY_CUBEMAP\n\t\t\t\t#ifdef SKYMESH\n\t\t\t\t\tvar envDir : vec3f = normalize(input.vWorldPos - uniform.projectedSkydomeCenter);\n\t\t\t\t\tdir = envDir * uniform.cubeMapRotationMatrix;\n\t\t\t\t#else\n\t\t\t\t\tdir = input.vViewDir;\n\t\t\t\t#endif\n\t\t\t\tdir.x *= -1.0;\n\t\t\t\tlinear = {SKYBOX_DECODE_FNC}(textureSample(texture_cubeMap, texture_cubeMap_sampler, dir));\n\t\t\t#else\n\t\t\t\tdir = input.vViewDir * vec3f(-1.0, 1.0, 1.0);\n\t\t\t\tlet uv : vec2f = toSphericalUv(normalize(dir));\n\t\t\t\tlinear = {SKYBOX_DECODE_FNC}(textureSample(texture_envAtlas, texture_envAtlas_sampler, mapRoughnessUv(uv, uniform.mipLevel)));\n\t\t\t#endif\n\t\t\tif (any(linear >= vec3f(64.0))) {\n\t\t\t\tlinear *= uniform.skyboxHighlightMultiplier;\n\t\t\t}\n\t\t\t\n\t\t\toutput.color = vec4f(gammaCorrectOutput(toneMap(processEnvironment(linear))), 1.0);\n\t\t#endif\n\t\treturn output;\n\t}\n`;var XI=`\n\tattribute aPosition : vec4f;\n\tuniform matrix_view : mat4x4f;\n\tuniform matrix_projectionSkybox : mat4x4f;\n\tuniform cubeMapRotationMatrix : mat3x3f;\n\tvarying vViewDir : vec3f;\n\t#ifdef PREPASS_PASS\n\t\tvarying vLinearDepth: f32;\n\t#endif\n\t#ifdef SKYMESH\n\t\tuniform matrix_model : mat4x4f;\n\t\tvarying vWorldPos : vec3f;\n\t#endif\n\t@vertex\n\tfn vertexMain(input : VertexInput) -> VertexOutput {\n\t\tvar output : VertexOutput;\n\t\tvar view : mat4x4f = uniform.matrix_view;\n\t\t#ifdef SKYMESH\n\t\t\tvar worldPos : vec4f = uniform.matrix_model * input.aPosition;\n\t\t\toutput.vWorldPos = worldPos.xyz;\n\t\t\toutput.position = uniform.matrix_projectionSkybox * (view * worldPos);\n\t\t\t#ifdef PREPASS_PASS\n\t\t\t\toutput.vLinearDepth = -(uniform.matrix_view * vec4f(worldPos.xyz, 1.0)).z;\n\t\t\t#endif\n\t\t#else\n\t\t\tview[3][0] = 0.0;\n\t\t\tview[3][1] = 0.0;\n\t\t\tview[3][2] = 0.0;\n\t\t\toutput.position = uniform.matrix_projectionSkybox * (view * input.aPosition);\n\t\t\toutput.vViewDir = input.aPosition.xyz * uniform.cubeMapRotationMatrix;\n\t\t\t#ifdef PREPASS_PASS\n\t\t\t\toutput.vLinearDepth = -pcPosition.w;\n\t\t\t#endif\n\t\t#endif\n\t\toutput.position.z = output.position.w - 1.0e-7;\n\t\treturn output;\n\t}\n`;var qI=`\n#ifdef STD_SPECULAR_CONSTANT\n\tuniform material_specular: vec3f;\n#endif\nfn getSpecularity() {\n\tvar specularColor = vec3f(1.0, 1.0, 1.0);\n\t#ifdef STD_SPECULAR_CONSTANT\n\tspecularColor = specularColor * uniform.material_specular;\n\t#endif\n\t#ifdef STD_SPECULAR_TEXTURE\n\tspecularColor = specularColor * {STD_SPECULAR_TEXTURE_DECODE}(textureSampleBias({STD_SPECULAR_TEXTURE_NAME}, {STD_SPECULAR_TEXTURE_NAME}Sampler, {STD_SPECULAR_TEXTURE_UV}, uniform.textureBias)).{STD_SPECULAR_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SPECULAR_VERTEX\n\tspecularColor = specularColor * saturate3(vVertexColor.{STD_SPECULAR_VERTEX_CHANNEL});\n\t#endif\n\tdSpecularity = specularColor;\n}\n`;var $I=`\nfn toSpherical(dir: vec3f) -> vec2f {\n\tlet angle_xz = select(0.0, atan2(dir.x, dir.z), any(dir.xz != vec2f(0.0)));\n\treturn vec2f(angle_xz, asin(dir.y));\n}\nfn toSphericalUv(dir : vec3f) -> vec2f {\n\tconst PI : f32 = 3.141592653589793;\n\tlet uv : vec2f = toSpherical(dir) / vec2f(PI * 2.0, PI) + vec2f(0.5, 0.5);\n\treturn vec2f(uv.x, 1.0 - uv.y);\n}\n`;var jI=`\n#ifdef STD_SPECULARITYFACTOR_CONSTANT\n\tuniform material_specularityFactor: f32;\n#endif\nfn getSpecularityFactor() {\n\tvar specularityFactor = 1.0;\n\t#ifdef STD_SPECULARITYFACTOR_CONSTANT\n\tspecularityFactor = specularityFactor * uniform.material_specularityFactor;\n\t#endif\n\t#ifdef STD_SPECULARITYFACTOR_TEXTURE\n\tspecularityFactor = specularityFactor * textureSampleBias({STD_SPECULARITYFACTOR_TEXTURE_NAME}, {STD_SPECULARITYFACTOR_TEXTURE_NAME}Sampler, {STD_SPECULARITYFACTOR_TEXTURE_UV}, uniform.textureBias).{STD_SPECULARITYFACTOR_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_SPECULARITYFACTOR_VERTEX\n\tspecularityFactor = specularityFactor * saturate(vVertexColor.{STD_SPECULARITYFACTOR_VERTEX_CHANNEL});\n\t#endif\n\tdSpecularityFactor = specularityFactor;\n}\n`;var YI=`\nfn getSpotEffect(lightSpotDir: vec3f, lightInnerConeAngle: f32, lightOuterConeAngle: f32, lightDirNorm: vec3f) -> f32 {\n\tlet cosAngle: f32 = dot(lightDirNorm, lightSpotDir);\n\treturn smoothstep(lightOuterConeAngle, lightInnerConeAngle, cosAngle);\n}`;var KI=`\n\tnineSlicedUv = vec2f(vUv0.x, 1.0 - vUv0.y);\n`;var ZI=`\n\tlet tileMask: vec2f = step(vMask, vec2f(0.99999));\n\tlet tileSize: vec2f = 0.5 * (innerOffset.xy + innerOffset.zw);\n\tlet tileScale: vec2f = vec2f(1.0) / (vec2f(1.0) - tileSize);\n\tvar clampedUv: vec2f = mix(innerOffset.xy * 0.5, vec2f(1.0) - innerOffset.zw * 0.5, fract((vTiledUv - tileSize) * tileScale));\n\tclampedUv = clampedUv * atlasRect.zw + atlasRect.xy;\n\tvar nineSlicedUv: vec2f = vUv0 * tileMask + clampedUv * (vec2f(1.0) - tileMask);\n\tnineSlicedUv.y = 1.0 - nineSlicedUv.y;\n`;var QI=`\n\tvar<private> dAlpha: f32 = 1.0;\n\t#if LIT_BLEND_TYPE != NONE || defined(LIT_ALPHA_TEST) || defined(LIT_ALPHA_TO_COVERAGE) || STD_OPACITY_DITHER != NONE\n\t\t#ifdef STD_OPACITY_TEXTURE_ALLOCATE\n\t\t\tvar texture_opacityMap : texture_2d<f32>;\n\t\t\tvar texture_opacityMapSampler : sampler;\n\t\t#endif\n\t#endif\n\t#ifdef FORWARD_PASS\n\t\tvar<private> dAlbedo: vec3f;\n\t\tvar<private> dNormalW: vec3f;\n\t\tvar<private> dSpecularity: vec3f = vec3f(0.0, 0.0, 0.0);\n\t\tvar<private> dGlossiness: f32 = 0.0;\n\t\t#ifdef LIT_REFRACTION\n\t\t\tvar<private> dTransmission: f32;\n\t\t\tvar<private> dThickness: f32;\n\t\t#endif\n\t\t#ifdef LIT_SCENE_COLOR\n\t\t\tvar uSceneColorMap : texture_2d<f32>;\n\t\t\tvar uSceneColorMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef LIT_SCREEN_SIZE\n\t\t\tuniform uScreenSize: vec4f;\n\t\t#endif\n\t\t#ifdef LIT_TRANSFORMS\n\t\t\tvar<private> matrix_viewProjection: mat4x4f;\n\t\t\tvar<private> matrix_model: mat4x4f;\n\t\t#endif\n\t\t#ifdef STD_HEIGHT_MAP\n\t\t\tvar<private> dUvOffset: vec2f;\n\t\t\t#ifdef STD_DIFFUSE_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_heightMap : texture_2d<f32>;\n\t\t\t\tvar texture_heightMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef STD_DIFFUSE_TEXTURE_ALLOCATE\n\t\t\tvar texture_diffuseMap : texture_2d<f32>;\n\t\t\tvar texture_diffuseMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef STD_DIFFUSEDETAIL_TEXTURE_ALLOCATE\n\t\t\tvar texture_diffuseDetailMap : texture_2d<f32>;\n\t\t\tvar texture_diffuseDetailMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef STD_NORMAL_TEXTURE_ALLOCATE\n\t\t\tvar texture_normalMap : texture_2d<f32>;\n\t\t\tvar texture_normalMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef STD_NORMALDETAIL_TEXTURE_ALLOCATE\n\t\t\tvar texture_normalDetailMap : texture_2d<f32>;\n\t\t\tvar texture_normalDetailMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef STD_THICKNESS_TEXTURE_ALLOCATE\n\t\t\tvar texture_thicknessMap : texture_2d<f32>;\n\t\t\tvar texture_thicknessMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef STD_REFRACTION_TEXTURE_ALLOCATE\n\t\t\tvar texture_refractionMap : texture_2d<f32>;\n\t\t\tvar texture_refractionMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef LIT_IRIDESCENCE\n\t\t\tvar<private> dIridescence: f32;\n\t\t\tvar<private> dIridescenceThickness: f32;\n\t\t\t#ifdef STD_IRIDESCENCE_THICKNESS_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_iridescenceThicknessMap : texture_2d<f32>;\n\t\t\t\tvar texture_iridescenceThicknessMapSampler : sampler;\n\t\t\t#endif\n\t\t\t#ifdef STD_IRIDESCENCE_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_iridescenceMap : texture_2d<f32>;\n\t\t\t\tvar texture_iridescenceMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\tvar<private> ccSpecularity: f32;\n\t\t\tvar<private> ccGlossiness: f32;\n\t\t\tvar<private> ccNormalW: vec3f;\n\t\t#endif\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\tvar<private> dAnisotropy: f32;\n\t\t\tvar<private> dAnisotropyRotation: vec2f;\n\t\t#endif\n\t\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\tvar<private> sSpecularity: vec3f;\n\t\t\t\tvar<private> sGlossiness: f32;\n\t\t\t\t#ifdef STD_SHEEN_TEXTURE_ALLOCATE\n\t\t\t\t\tvar texture_sheenMap : texture_2d<f32>;\n\t\t\t\t\tvar texture_sheenMapSampler : sampler;\n\t\t\t\t#endif\n\t\t\t\t#ifdef STD_SHEENGLOSS_TEXTURE_ALLOCATE\n\t\t\t\t\tvar texture_sheenGlossMap : texture_2d<f32>;\n\t\t\t\t\tvar texture_sheenGlossMapSampler : sampler;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_METALNESS\n\t\t\t\tvar<private> dMetalness: f32;\n\t\t\t\tvar<private> dIor: f32;\n\t\t\t\t#ifdef STD_METALNESS_TEXTURE_ALLOCATE\n\t\t\t\t\tvar texture_metalnessMap : texture_2d<f32>;\n\t\t\t\t\tvar texture_metalnessMapSampler : sampler;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\tvar<private> dSpecularityFactor: f32;\n\t\t\t\t#ifdef STD_SPECULARITYFACTOR_TEXTURE_ALLOCATE\n\t\t\t\t\tvar texture_specularityFactorMap : texture_2d<f32>;\n\t\t\t\t\tvar texture_specularityFactorMapSampler : sampler;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef STD_SPECULAR_COLOR\n\t\t\t\t#ifdef STD_SPECULAR_TEXTURE_ALLOCATE\n\t\t\t\t\tvar texture_specularMap : texture_2d<f32>;\n\t\t\t\t\tvar texture_specularMapSampler : sampler;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef STD_GLOSS_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_glossMap : texture_2d<f32>;\n\t\t\t\tvar texture_glossMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef STD_AO\n\t\t\tvar <private> dAo: f32;\n\t\t\t#ifdef STD_AO_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_aoMap : texture_2d<f32>;\n\t\t\t\tvar texture_aoMapSampler : sampler;\n\t\t\t#endif\n\t\t\t#ifdef STD_AODETAIL_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_aoDetailMap : texture_2d<f32>;\n\t\t\t\tvar texture_aoDetailMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t\tvar <private> dEmission: vec3f;\n\t\t#ifdef STD_EMISSIVE_TEXTURE_ALLOCATE\n\t\t\tvar texture_emissiveMap : texture_2d<f32>;\n\t\t\tvar texture_emissiveMapSampler : sampler;\n\t\t#endif\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\t#ifdef STD_CLEARCOAT_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_clearCoatMap : texture_2d<f32>;\n\t\t\t\tvar texture_clearCoatMapSampler : sampler;\n\t\t\t#endif\n\t\t\t#ifdef STD_CLEARCOATGLOSS_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_clearCoatGlossMap : texture_2d<f32>;\n\t\t\t\tvar texture_clearCoatGlossMapSampler : sampler;\n\t\t\t#endif\n\t\t\t#ifdef STD_CLEARCOATNORMAL_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_clearCoatNormalMap : texture_2d<f32>;\n\t\t\t\tvar texture_clearCoatNormalMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t\t#ifdef LIT_GGX_SPECULAR\n\t\t\t#ifdef STD_ANISOTROPY_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_anisotropyMap : texture_2d<f32>;\n\t\t\t\tvar texture_anisotropyMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t\t#if defined(STD_LIGHTMAP) || defined(STD_LIGHT_VERTEX_COLOR)\n\t\t\tvar<private> dLightmap: vec3f;\n\t\t\t#ifdef STD_LIGHT_TEXTURE_ALLOCATE\n\t\t\t\tvar texture_lightMap : texture_2d<f32>;\n\t\t\t\tvar texture_lightMapSampler : sampler;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\t#include "litShaderCorePS"\n`;var JI=`\n\t#if LIT_BLEND_TYPE != NONE || defined(LIT_ALPHA_TEST) || defined(LIT_ALPHA_TO_COVERAGE) || STD_OPACITY_DITHER != NONE\n\t\t#include "opacityPS"\n\t\t#if defined(LIT_ALPHA_TEST)\n\t\t\t#include "alphaTestPS"\n\t\t#endif\n\t\t#if STD_OPACITY_DITHER != NONE\n\t\t\t#include "opacityDitherPS"\n\t\t#endif\n\t#endif\n\t#ifdef FORWARD_PASS\n\t\t#ifdef STD_HEIGHT_MAP\n\t\t\t#include "parallaxPS"\n\t\t#endif\n\t\t#include  "diffusePS"\n\t\t#ifdef LIT_NEEDS_NORMAL\n\t\t\t#include "normalMapPS"\n\t\t#endif\n\t\t#ifdef LIT_REFRACTION\n\t\t\t#include "transmissionPS"\n\t\t\t#include "thicknessPS"\n\t\t#endif\n\t\t#ifdef LIT_IRIDESCENCE\n\t\t\t#include "iridescencePS"\n\t\t\t#include "iridescenceThicknessPS"\n\t\t#endif\n\t\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t#include "sheenPS"\n\t\t\t\t#include "sheenGlossPS"\n\t\t\t#endif\n\t\t\t#ifdef LIT_METALNESS\n\t\t\t\t#include "metalnessPS"\n\t\t\t\t#include "iorPS"\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\t#include "specularityFactorPS"\n\t\t\t#endif\n\t\t\t#ifdef STD_SPECULAR_COLOR\n\t\t\t\t#include "specularPS"\n\t\t\t#else\n\t\t\t\tfn getSpecularity() { \n\t\t\t\t\tdSpecularity = vec3f(1.0, 1.0, 1.0);\n\t\t\t\t}\n\t\t\t#endif\n\t\t\t#include "glossPS"\n\t\t#endif\n\t\t#ifdef STD_AO\n\t\t\t#include "aoPS"\n\t\t#endif\n\t\t#include "emissivePS"\n\t\t#ifdef LIT_CLEARCOAT\n\t\t\t#include "clearCoatPS"\n\t\t\t#include "clearCoatGlossPS"\n\t\t\t#include "clearCoatNormalPS"\n\t\t#endif\n\t\t#if defined(LIT_SPECULAR) && defined(LIT_LIGHTING) && defined(LIT_GGX_SPECULAR)\n\t\t\t#include "anisotropyPS"\n\t\t#endif\n\t\t#if defined(STD_LIGHTMAP) || defined(STD_LIGHT_VERTEX_COLOR)\n\t\t\t#include "lightmapPS"\n\t\t#endif\n\t#endif\n\tfn evaluateFrontend() {\n\t\t#if LIT_BLEND_TYPE != NONE || defined(LIT_ALPHA_TEST) || defined(LIT_ALPHA_TO_COVERAGE) || STD_OPACITY_DITHER != NONE\n\t\t\tgetOpacity();\n\t\t\t#if defined(LIT_ALPHA_TEST)\n\t\t\t\talphaTest(dAlpha);\n\t\t\t#endif\n\t\t\t#if STD_OPACITY_DITHER != NONE\n\t\t\t\topacityDither(dAlpha, 0.0);\n\t\t\t#endif\n\t\t\tlitArgs_opacity = dAlpha;\n\t\t#endif\n\t\t#ifdef FORWARD_PASS\n\t\t\t#ifdef STD_HEIGHT_MAP\n\t\t\t\tgetParallax();\n\t\t\t#endif\n\t\t\tgetAlbedo();\n\t\t\tlitArgs_albedo = dAlbedo;\n\t\t\t#ifdef LIT_NEEDS_NORMAL\n\t\t\t\tgetNormal();\n\t\t\t\tlitArgs_worldNormal = dNormalW;\n\t\t\t#endif\n\t\t\t#ifdef LIT_REFRACTION\n\t\t\t\tgetRefraction();\n\t\t\t\tlitArgs_transmission = dTransmission;\n\t\t\t\tgetThickness();\n\t\t\t\tlitArgs_thickness = dThickness;\n\t\t\t\t#ifdef LIT_DISPERSION\n\t\t\t\t\tlitArgs_dispersion = uniform.material_dispersion;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t\t#ifdef LIT_IRIDESCENCE\n\t\t\t\tgetIridescence();\n\t\t\t\tgetIridescenceThickness();\n\t\t\t\tlitArgs_iridescence_intensity = dIridescence;\n\t\t\t\tlitArgs_iridescence_thickness = dIridescenceThickness;\n\t\t\t#endif\n\t\t\t#ifdef LIT_SPECULAR_OR_REFLECTION\n\t\t\t\t#ifdef LIT_SHEEN\n\t\t\t\t\tgetSheen();\n\t\t\t\t\tlitArgs_sheen_specularity = sSpecularity;\n\t\t\t\t\tgetSheenGlossiness();\n\t\t\t\t\tlitArgs_sheen_gloss = sGlossiness;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_METALNESS\n\t\t\t\t\tgetMetalness();\n\t\t\t\t\tlitArgs_metalness = dMetalness;\n\t\t\t\t\tgetIor();\n\t\t\t\t\tlitArgs_ior = dIor;\n\t\t\t\t#endif\n\t\t\t\t#ifdef LIT_SPECULARITY_FACTOR\n\t\t\t\t\tgetSpecularityFactor();\n\t\t\t\t\tlitArgs_specularityFactor = dSpecularityFactor;\n\t\t\t\t#endif\n\t\t\t\tgetGlossiness();\n\t\t\t\tgetSpecularity();\n\t\t\t\tlitArgs_specularity = dSpecularity;\n\t\t\t\tlitArgs_gloss = dGlossiness;\n\t\t\t#endif\n\t\t\t#ifdef STD_AO\n\t\t\t\tgetAO();\n\t\t\t\tlitArgs_ao = dAo;\n\t\t\t#endif\n\t\t\tgetEmission();\n\t\t\tlitArgs_emission = dEmission;\n\t\t\t#ifdef LIT_CLEARCOAT\n\t\t\t\tgetClearCoat();\n\t\t\t\tgetClearCoatGlossiness();\n\t\t\t\tgetClearCoatNormal();\n\t\t\t\tlitArgs_clearcoat_specularity = ccSpecularity;\n\t\t\t\tlitArgs_clearcoat_gloss = ccGlossiness;\n\t\t\t\tlitArgs_clearcoat_worldNormal = ccNormalW;\n\t\t\t#endif\n\t\t\t#if defined(LIT_SPECULAR) && defined(LIT_LIGHTING) && defined(LIT_GGX_SPECULAR)\n\t\t\t\tgetAnisotropy();\n\t\t\t#endif\n\t\t\t#if defined(STD_LIGHTMAP) || defined(STD_LIGHT_VERTEX_COLOR)\n\t\t\t\tgetLightMap();\n\t\t\t\tlitArgs_lightmap = dLightmap;\n\t\t\t\t#ifdef STD_LIGHTMAP_DIR\n\t\t\t\t\tlitArgs_lightmapDir = dLightmapDir;\n\t\t\t\t#endif\n\t\t\t#endif\n\t\t#endif\n\t}\n`;var tR=`\n#ifdef LIT_TANGENTS\n\t#define TBN_TANGENTS\n#else\n\t#if defined(LIT_USE_NORMALS) || defined(LIT_USE_CLEARCOAT_NORMALS)\n\t\t#define TBN_DERIVATIVES\n\t#endif\n#endif\n#if defined(TBN_DERIVATIVES)\n\tuniform tbnBasis: f32;\n#endif\nfn getTBN(tangent: vec3f, binormal: vec3f, normal: vec3f) {\n\t#ifdef TBN_TANGENTS\n\t\tdTBN = mat3x3f(normalize(tangent), normalize(binormal), normalize(normal));\n\t#elif defined(TBN_DERIVATIVES)\n\t\tlet uv: vec2f = {lightingUv};\n\t\tlet dp1: vec3f = dpdx( vPositionW );\n\t\tlet dp2: vec3f = dpdy( vPositionW );\n\t\tlet duv1: vec2f = dpdx( uv );\n\t\tlet duv2: vec2f = dpdy( uv );\n\t\tlet dp2perp: vec3f = cross( dp2, normal );\n\t\tlet dp1perp: vec3f = cross( normal, dp1 );\n\t\tlet T: vec3f = dp2perp * duv1.x + dp1perp * duv2.x;\n\t\tlet B: vec3f = dp2perp * duv1.y + dp1perp * duv2.y;\n\t\tlet denom: f32 = max( dot(T, T), dot(B, B) );\n\t\tlet invmax: f32 = select(uniform.tbnBasis / sqrt( denom ), 0.0, denom == 0.0);\n\t\tdTBN = mat3x3f(T * invmax, -B * invmax, normal );\n\t#else\n\t\tvar B: vec3f = cross(normal, vObjectSpaceUpW);\n\t\tvar T: vec3f = cross(normal, B);\n\t\tif (dot(B,B) == 0.0)\n\t\t{\n\t\t\tlet major: f32 = max(max(normal.x, normal.y), normal.z);\n\t\t\tif (normal.x == major)\n\t\t\t{\n\t\t\t\tB = cross(normal, vec3f(0.0, 1.0, 0.0));\n\t\t\t\tT = cross(normal, B);\n\t\t\t}\n\t\t\telse if (normal.y == major)\n\t\t\t{\n\t\t\t\tB = cross(normal, vec3f(0.0, 0.0, 1.0));\n\t\t\t\tT = cross(normal, B);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tB = cross(normal, vec3f(1.0, 0.0, 0.0));\n\t\t\t\tT = cross(normal, B);\n\t\t\t}\n\t\t}\n\t\tdTBN = mat3x3f(normalize(T), normalize(B), normalize(normal));\n\t#endif\n}`;var eR=`\n#ifdef STD_THICKNESS_CONSTANT\nuniform material_thickness: f32;\n#endif\nfn getThickness() {\n\tdThickness = 1.0;\n\t#ifdef STD_THICKNESS_CONSTANT\n\tdThickness = dThickness * uniform.material_thickness;\n\t#endif\n\t#ifdef STD_THICKNESS_TEXTURE\n\tdThickness = dThickness * textureSampleBias({STD_THICKNESS_TEXTURE_NAME}, {STD_THICKNESS_TEXTURE_NAME}Sampler, {STD_THICKNESS_TEXTURE_UV}, uniform.textureBias).{STD_THICKNESS_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_THICKNESS_VERTEX\n\tdThickness = dThickness * saturate(vVertexColor.{STD_THICKNESS_VERTEX_CHANNEL});\n\t#endif\n}\n`;var sR=`\n#if (TONEMAP == NONE)\n\t#include "tonemappingNonePS"\n#elif TONEMAP == FILMIC\n\t#include "tonemappingFilmicPS"\n#elif TONEMAP == LINEAR\n\t#include "tonemappingLinearPS"\n#elif TONEMAP == HEJL\n\t#include "tonemappingHejlPS"\n#elif TONEMAP == ACES\n\t#include "tonemappingAcesPS"\n#elif TONEMAP == ACES2\n\t#include "tonemappingAces2PS"\n#elif TONEMAP == NEUTRAL\n\t#include "tonemappingNeutralPS"\n#endif\n`;var iR=`\nuniform exposure: f32;\nfn toneMap(color: vec3f) -> vec3f {\n\tlet tA: f32 = 2.51;\n\tlet tB: f32 = 0.03;\n\tlet tC: f32 = 2.43;\n\tlet tD: f32 = 0.59;\n\tlet tE: f32 = 0.14;\n\tlet x: vec3f = color * uniform.exposure;\n\treturn (x * (tA * x + tB)) / (x * (tC * x + tD) + tE);\n}\n`;var nR=`\nuniform exposure: f32;\nconst ACESInputMat: mat3x3f = mat3x3f(\n\tvec3f(0.59719, 0.35458, 0.04823),\n\tvec3f(0.07600, 0.90834, 0.01566),\n\tvec3f(0.02840, 0.13383, 0.83777)\n);\nconst ACESOutputMat: mat3x3f = mat3x3f(\n\tvec3f( 1.60475, -0.53108, -0.07367),\n\tvec3f(-0.10208,  1.10813, -0.00605),\n\tvec3f(-0.00327, -0.07276,  1.07602)\n);\nfn RRTAndODTFit(v: vec3f) -> vec3f {\n\tlet a: vec3f = v * (v + vec3f(0.0245786)) - vec3f(0.000090537);\n\tlet b: vec3f = v * (vec3f(0.983729) * v + vec3f(0.4329510)) + vec3f(0.238081);\n\treturn a / b;\n}\nfn toneMap(color: vec3f) -> vec3f {\n\tvar c: vec3f = color * (uniform.exposure / 0.6);\n\tc = c * ACESInputMat;\n\tc = RRTAndODTFit(c);\n\tc = c * ACESOutputMat;\n\treturn clamp(c, vec3f(0.0), vec3f(1.0));\n}\n`;var rR=`\nconst A: f32 = 0.15;\nconst B: f32 = 0.50;\nconst C: f32 = 0.10;\nconst D: f32 = 0.20;\nconst E: f32 = 0.02;\nconst F: f32 = 0.30;\nconst W: f32 = 11.2;\nuniform exposure: f32;\nfn uncharted2Tonemap(x: vec3f) -> vec3f {\n\treturn ((x * (A * x + C * B) + D * E) / (x * (A * x + B) + D * F)) - vec3f(E / F);\n}\nfn toneMap(color: vec3f) -> vec3f {\n\tvar c: vec3f = uncharted2Tonemap(color * uniform.exposure);\n\tlet whiteScale: vec3f = vec3f(1.0) / uncharted2Tonemap(vec3f(W, W, W));\n\tc *= whiteScale;\n\treturn c;\n}\n`;var aR=`\nuniform exposure: f32;\nfn toneMap(color: vec3f) -> vec3f {\n\tlet A: f32 = 0.22;\n\tlet B: f32 = 0.3;\n\tlet C: f32 = 0.1;\n\tlet D: f32 = 0.2;\n\tlet E: f32 = 0.01;\n\tlet F: f32 = 0.3;\n\tlet Scl: f32 = 1.25;\n\tlet adjusted_color = color * uniform.exposure;\n\tlet h = max(vec3f(0.0), adjusted_color - vec3f(0.004));\n\treturn (h * ((Scl * A) * h + Scl * vec3f(C * B)) + Scl * vec3f(D * E)) /\n\t\t   (h * (A * h + vec3f(B)) + vec3f(D * F)) -\n\t\t   Scl * vec3f(E / F);\n}\n`;var oR=`\nuniform exposure: f32;\nfn toneMap(color: vec3f) -> vec3f {\n\treturn color * uniform.exposure;\n}\n`;var lR=`\nuniform exposure: f32;\nfn toneMap(col: vec3f) -> vec3f {\n\tvar color = col * uniform.exposure;\n\tlet startCompression = 0.8 - 0.04;\n\tlet desaturation = 0.15;\n\tlet x = min(color.r, min(color.g, color.b));\n\tlet offset = select(0.04, x - 6.25 * x * x, x < 0.08);\n\tcolor -= vec3f(offset);\n\tlet peak = max(color.r, max(color.g, color.b));\n\tif (peak < startCompression) {\n\t\treturn color;\n\t}\n\tlet d = 1.0 - startCompression;\n\tlet newPeak = 1.0 - d * d / (peak + d - startCompression);\n\tcolor *= newPeak / peak;\n\tlet g = 1.0 - 1.0 / (desaturation * (peak - newPeak) + 1.0);\n\treturn mix(color, vec3f(newPeak), vec3f(g));\n}\n`;var hR=`\nfn toneMap(color: vec3f) -> vec3f {\n\treturn color;\n}\n`;var cR=`\n#ifdef PIXELSNAP\n\tuniform uScreenSize: vec4f;\n#endif\n#ifdef SCREENSPACE\n\tuniform projectionFlipY: f32;\n#endif\nfn evalWorldPosition(vertexPosition: vec3f, modelMatrix: mat4x4f) -> vec4f {\n\tvar localPos: vec3f = getLocalPosition(vertexPosition);\n\t#ifdef NINESLICED\n\t\tvar localPosXZ: vec2f = localPos.xz;\n\t\tlocalPosXZ = localPosXZ * uniform.outerScale;\n\t\tlet positiveUnitOffset: vec2f = clamp(vertexPosition.xz, vec2f(0.0), vec2f(1.0));\n\t\tlet negativeUnitOffset: vec2f = clamp(-vertexPosition.xz, vec2f(0.0), vec2f(1.0));\n\t\tlocalPosXZ = localPosXZ + (-positiveUnitOffset * uniform.innerOffset.xy + negativeUnitOffset * uniform.innerOffset.zw) * vertex_texCoord0.xy;\n\t\tdTiledUvGlobal = (localPosXZ - uniform.outerScale + uniform.innerOffset.xy) * -0.5 + 1.0;\n\t\tlocalPosXZ = localPosXZ * -0.5;\n\t\tlocalPos = vec3f(localPosXZ.x, localPosXZ.y, localPos.y);\n\t#endif\n\tvar posW: vec4f = modelMatrix * vec4f(localPos, 1.0);\n\t#ifdef SCREENSPACE\n\t\tposW = vec4f(posW.xy, 0.0, 1.0);\n\t#endif\n\treturn posW;\n}\nfn getPosition() -> vec4f {\n\tdModelMatrix = getModelMatrix();\n\tlet posW: vec4f = evalWorldPosition(vertex_position.xyz, dModelMatrix);\n\tdPositionW = posW.xyz;\n\tvar screenPos: vec4f;\n\t#ifdef UV1LAYOUT\n\t\tscreenPos = vec4f(vertex_texCoord1.xy * 2.0 - 1.0, 0.5, 1.0);\n\t\tscreenPos.y *= -1.0;\n\t#else\n\t\t#ifdef SCREENSPACE\n\t\t\tscreenPos = posW;\n\t\t\tscreenPos.y *= uniform.projectionFlipY;\n\t\t#else\n\t\t\tscreenPos = uniform.matrix_viewProjection * posW;\n\t\t#endif\n\t\t#ifdef PIXELSNAP\n\t\t\tscreenPos.xy = (screenPos.xy * 0.5) + 0.5;\n\t\t\tscreenPos.xy *= uniforms.uScreenSize.xy;\n\t\t\tscreenPos.xy = floor(screenPos.xy);\n\t\t\tscreenPos.xy *= uniforms.uScreenSize.zw;\n\t\t\tscreenPos.xy = (screenPos.xy * 2.0) - 1.0;\n\t\t#endif\n\t#endif\n\treturn screenPos;\n}\nfn getWorldPosition() -> vec3f {\n\treturn dPositionW;\n}\n`;var dR=`\n\tattribute vertex_position: vec4f;\n\tuniform matrix_viewProjection: mat4x4f;\n\tuniform matrix_model: mat4x4f;\n\t\n\t#ifdef MORPHING\n\t\tuniform morph_tex_params: vec2f;\n\t\tattribute morph_vertex_id: u32;\n\t\tfn getTextureMorphCoords() -> vec2i {\n\t\t\tvar textureSize: vec2i = vec2i(uniform.morph_tex_params);\n\t\t\tvar morphGridV: i32 = i32(morph_vertex_id) / textureSize.x;\n\t\t\tvar morphGridU: i32 = i32(morph_vertex_id) - (morphGridV * textureSize.x);\n\t\t\tmorphGridV = textureSize.y - morphGridV - 1;\n\t\t\treturn vec2i(morphGridU, morphGridV);\n\t\t}\n\t\t#ifdef MORPHING_POSITION\n\t\t\t#ifdef MORPHING_INT\n\t\t\t\tuniform aabbSize: vec3f;\n\t\t\t\tuniform aabbMin: vec3f;\n\t\t\t\tvar morphPositionTex: texture_2d<u32>;\n\t\t\t#else\n\t\t\t\tvar morphPositionTex: texture_2d<f32>;\n\t\t\t#endif\n\t\t#endif\n\t#endif\n\t#ifdef defined(BATCH)\n\t\t#include "skinBatchVS"\n\t\tfn getModelMatrix() -> mat4x4f {\n\t\t\treturn getBoneMatrix(vertex_boneIndices);\n\t\t}\n\t#elif defined(SKIN)\n\t\t#include "skinVS"\n\t\tfn getModelMatrix() -> mat4x4f {\n\t\t\treturn uniform.matrix_model * getSkinMatrix(vertex_boneIndices, vertex_boneWeights);\n\t\t}\n\t#elif defined(INSTANCING)\n\t\t#include "transformInstancingVS"\n\t#else\n\t\tfn getModelMatrix() -> mat4x4f {\n\t\t\treturn uniform.matrix_model;\n\t\t}\n\t#endif\n\tfn getLocalPosition(vertexPosition: vec3f) -> vec3f {\n\t\tvar localPos: vec3f = vertexPosition;\n\t\t#ifdef MORPHING_POSITION\n\t\t\tvar morphUV: vec2i = getTextureMorphCoords();\n\t\t\t#ifdef MORPHING_INT\n\t\t\t\tvar morphPos: vec3f = vec3f(textureLoad(morphPositionTex, morphUV, 0).xyz) / 65535.0 * uniform.aabbSize + uniform.aabbMin;\n\t\t\t#else\n\t\t\t\tvar morphPos: vec3f = textureLoad(morphPositionTex, morphUV, 0).xyz;\n\t\t\t#endif\n\t\t\tlocalPos += morphPos;\n\t\t#endif\n\t\treturn localPos;\n\t}\n`;var uR=`\nattribute instance_line1: vec4f;\nattribute instance_line2: vec4f;\nattribute instance_line3: vec4f;\nattribute instance_line4: vec4f;\nfn getModelMatrix() -> mat4x4f {\n\treturn uniform.matrix_model * mat4x4f(instance_line1, instance_line2, instance_line3, instance_line4);\n}\n`;var fR=`\n#ifdef STD_REFRACTION_CONSTANT\n\tuniform material_refraction: f32;\n#endif\nfn getRefraction() {\n\tvar refraction: f32 = 1.0;\n\t#ifdef STD_REFRACTION_CONSTANT\n\trefraction = uniform.material_refraction;\n\t#endif\n\t#ifdef STD_REFRACTION_TEXTURE\n\trefraction = refraction * textureSampleBias({STD_REFRACTION_TEXTURE_NAME}, {STD_REFRACTION_TEXTURE_NAME}Sampler, {STD_REFRACTION_TEXTURE_UV}, uniform.textureBias).{STD_REFRACTION_TEXTURE_CHANNEL};\n\t#endif\n\t#ifdef STD_REFRACTION_VERTEX\n\trefraction = refraction * saturate(vVertexColor.{STD_REFRACTION_VERTEX_CHANNEL});\n\t#endif\n\tdTransmission = refraction;\n}\n`;var pR=`\nuniform twoSidedLightingNegScaleFactor: f32;\nfn handleTwoSidedLighting() {\n\tdTBN[2] = dTBN[2] * select(-uniform.twoSidedLightingNegScaleFactor, uniform.twoSidedLightingNegScaleFactor, pcFrontFacing);\n}\n`;var mR=`\n#ifdef NINESLICED\n\tfn getUv0() -> vec2f {\n\t\tvar uv = vertex_position.xz;\n\t\tlet positiveUnitOffset = clamp(vertex_position.xz, vec2f(0.0, 0.0), vec2f(1.0, 1.0));\n\t\tlet negativeUnitOffset = clamp(-vertex_position.xz, vec2f(0.0, 0.0), vec2f(1.0, 1.0));\n\t\tuv = uv + ((-positiveUnitOffset * uniform.innerOffset.xy) + (negativeUnitOffset * uniform.innerOffset.zw)) * vertex_texCoord0.xy;\n\t\tuv = uv * -0.5 + vec2f(0.5, 0.5);\n\t\tuv = uv * uniform.atlasRect.zw + uniform.atlasRect.xy;\n\t\tdMaskGlobal = vertex_texCoord0.xy;\n\t\treturn uv;\n\t}\n#else\n\tfn getUv0() -> vec2f {\n\t\treturn vertex_texCoord0;\n\t}\n#endif\n`;var _R=`\nfn getUv1() -> vec2f {\n\treturn vertex_texCoord1;\n}\n`;var gR=`\noutput.vUV{TRANSFORM_UV_{i}}_{TRANSFORM_ID_{i}} = vec2f(\n\tdot(vec3f(uv{TRANSFORM_UV_{i}}, 1), uniform.{TRANSFORM_NAME_{i}}0),\n\tdot(vec3f(uv{TRANSFORM_UV_{i}}, 1), uniform.{TRANSFORM_NAME_{i}}1)\n);\n`;var vR=`\n\tuniform {TRANSFORM_NAME_{i}}0: vec3f;\n\tuniform {TRANSFORM_NAME_{i}}1: vec3f;\n`;var yR=`\nfn getViewDir() {\n\tdViewDirW = normalize(uniform.view_position - vPositionW);\n}\n`;const SR={alphaTestPS:yD,ambientPS:SD,anisotropyPS:xD,aoPS:TD,aoDiffuseOccPS:wD,aoSpecOccPS:bD,bakeDirLmEndPS:ED,bakeLmEndPS:AD,basePS:CD,baseNineSlicedPS:PD,baseNineSlicedTiledPS:LD,bayerPS:DD,blurVSMPS:MD,clearCoatPS:ID,clearCoatGlossPS:RD,clearCoatNormalPS:OD,clusteredLightCookiesPS:ND,clusteredLightShadowsPS:kD,clusteredLightUtilsPS:FD,clusteredLightPS:BD,combinePS:UD,cookieBlit2DPS:zD,cookieBlitCubePS:VD,cookieBlitVS:GD,cubeMapProjectPS:HD,cubeMapRotatePS:WD,debugOutputPS:XD,debugProcessFrontendPS:qD,detailModesPS:jD,diffusePS:YD,decodePS:$D,emissivePS:KD,encodePS:ZD,endPS:QD,envAtlasPS:JD,envProcPS:tM,falloffInvSquaredPS:eM,falloffLinearPS:sM,floatAsUintPS:iM,fogPS:nM,fresnelSchlickPS:rM,frontendCodePS:"",frontendDeclPS:"",fullscreenQuadVS:aM,gammaPS:oM,glossPS:lM,gsplatCenterVS:hM,gsplatCornerVS:yM,gsplatColorVS:cM,gsplatCommonVS:dM,gsplatCompressedDataVS:uM,gsplatCompressedSHVS:fM,gsplatEvalSHVS:pM,gsplatQuatToMat3VS:mM,gsplatSogsColorVS:_M,gsplatSogsDataVS:gM,gsplatSogsSHVS:vM,gsplatDataVS:SM,gsplatOutputVS:xM,gsplatPS:TM,gsplatSHVS:wM,gsplatSourceVS:bM,gsplatVS:EM,quadVS:AM,indirectCoreCS:CM,immediateLinePS:PM,immediateLineVS:LM,iridescenceDiffractionPS:DM,iridescencePS:MM,iridescenceThicknessPS:IM,iorPS:RM,lightDeclarationPS:OM,lightDiffuseLambertPS:FM,lightDirPointPS:NM,lightEvaluationPS:kM,lightFunctionLightPS:BM,lightFunctionShadowPS:UM,lightingPS:zM,lightmapAddPS:VM,lightmapPS:GM,lightSpecularAnisoGGXPS:HM,lightSpecularBlinnPS:WM,lightSheenPS:XM,linearizeDepthPS:qM,litForwardBackendPS:$M,litForwardDeclarationPS:jM,litForwardMainPS:YM,litForwardPostCodePS:KM,litForwardPreCodePS:ZM,litMainPS:QM,litMainVS:JM,litOtherMainPS:tI,litShaderArgsPS:eI,litShaderCorePS:sI,litShadowMainPS:iI,litUserDeclarationPS:"",litUserDeclarationVS:"",litUserCodePS:"",litUserCodeVS:"",litUserMainStartPS:"",litUserMainStartVS:"",litUserMainEndPS:"",litUserMainEndVS:"",ltcPS:nI,metalnessPS:rI,metalnessModulatePS:oI,morphPS:lI,morphVS:hI,msdfPS:aI,msdfVS:cI,normalVS:dI,normalCoreVS:uI,normalMapPS:fI,opacityPS:pI,opacityDitherPS:mI,outputPS:_I,outputAlphaPS:gI,outputTex2DPS:vI,sheenPS:yI,sheenGlossPS:SI,parallaxPS:xI,pickPS:TI,reflDirPS:wI,reflDirAnisoPS:bI,reflectionCCPS:EI,reflectionCubePS:AI,reflectionEnvHQPS:CI,reflectionEnvPS:PI,reflectionSpherePS:LI,reflectionSheenPS:DI,refractionCubePS:MI,refractionDynamicPS:II,reprojectPS:RI,reprojectVS:OI,screenDepthPS:FI,shadowCascadesPS:NI,shadowEVSMPS:kI,shadowPCF1PS:BI,shadowPCF3PS:UI,shadowPCF5PS:zI,shadowSoftPS:VI,skinBatchVS:GI,skinVS:HI,skyboxPS:WI,skyboxVS:XI,specularPS:qI,sphericalPS:$I,specularityFactorPS:jI,spotPS:YI,startNineSlicedPS:KI,startNineSlicedTiledPS:ZI,stdDeclarationPS:QI,stdFrontEndPS:JI,TBNPS:tR,thicknessPS:eR,tonemappingPS:sR,tonemappingAcesPS:iR,tonemappingAces2PS:nR,tonemappingFilmicPS:rR,tonemappingHejlPS:aR,tonemappingLinearPS:oR,tonemappingNeutralPS:lR,tonemappingNonePS:hR,transformVS:cR,transformCoreVS:dR,transformInstancingVS:uR,transmissionPS:fR,twoSidedLightingPS:pR,uv0VS:mR,uv1VS:_R,uvTransformVS:gR,uvTransformUniformsPS:vR,viewDirPS:yR,webgpuPS:Wh,webgpuVS:Xh};let xR=null;class TR extends at{constructor(t){super(),this._batcher=null,this._destroyRequested=false,this._inFrameUpdate=false,this._librariesLoaded=false,this._fillMode=rA,this._resolutionMode=oA,this._allowResize=true,this._skyboxAsset=null,this._entityIndex={},this._inTools=false,this._scriptPrefix="",this._time=0,this.enableBundles=typeof TextDecoder!=="undefined",this.timeScale=1,this.maxDeltaTime=.1,this.frame=0,this.frameGraph=new fA,this.scriptsOrder=[],this.autoRender=true,this.renderNextFrame=false,this.lightmapper=null,this.loader=new eC(this),this.scenes=new pC(this),this.scripts=new nC(this),this.systems=new KA,this.i18n=new iC(this),this.keyboard=null,this.mouse=null,this.touch=null,this.gamepads=null,this.elementInput=null,this.xr=null;TR._applications[t.id]=this;cA(this);xR=this;this.root=new dC;this.root._enabledInHierarchy=true}init(t){const{assetPrefix:e,batchManager:s,componentSystems:i,elementInput:n,gamepads:r,graphicsDevice:a,keyboard:o,lightmapper:l,mouse:h,resourceHandlers:c,scriptsOrder:d,scriptPrefix:u,soundManager:f,touch:p,xr:m}=t;this.graphicsDevice=a;yv.get(a,cr).add(vD);yv.get(a,dr).add(SR);this._initDefaultMaterial();this._initProgramLibrary();this.stats=new mC(a);this._soundManager=f;this.scene=new hb(a);this._registerSceneImmediate(this.scene);this.assets=new jA(this.loader);if(e)this.assets.prefix=e;this.bundles=new YA(this.assets);this.scriptsOrder=d||[];this.defaultLayerWorld=new kx({name:"World",id:hm});this.defaultLayerDepth=new kx({name:"Depth",id:cm,enabled:false,opaqueSortMode:Bg});this.defaultLayerSkybox=new kx({name:"Skybox",id:dm,opaqueSortMode:Bg});this.defaultLayerUi=new kx({name:"UI",id:fm,transparentSortMode:Ug});this.defaultLayerImmediate=new kx({name:"Immediate",id:um,opaqueSortMode:Bg});const _=new zx("default");_.pushOpaque(this.defaultLayerWorld);_.pushOpaque(this.defaultLayerDepth);_.pushOpaque(this.defaultLayerSkybox);_.pushTransparent(this.defaultLayerWorld);_.pushOpaque(this.defaultLayerImmediate);_.pushTransparent(this.defaultLayerImmediate);_.pushTransparent(this.defaultLayerUi);this.scene.layers=_;_A.createPlaceholder(a);this.renderer=new Cx(a);this.renderer.scene=this.scene;if(l){this.lightmapper=new l(a,this.root,this.scene,this.renderer,this.assets);this.once("prerender",this._firstBake,this)}if(s){this._batcher=new s(a,this.root,this.scene);this.once("prerender",this._firstBatch,this)}this.keyboard=o||null;this.mouse=h||null;this.touch=p||null;this.gamepads=r||null;if(n){this.elementInput=n;this.elementInput.app=this}this.xr=m?new m(this):null;if(this.elementInput)this.elementInput.attachSelectEvents();this._scriptPrefix=u||"";if(this.enableBundles){this.loader.addHandler("bundle",new tC(this))}c.forEach((t=>{const e=new t(this);this.loader.addHandler(e.handlerType,e)}));i.forEach((t=>{this.systems.add(new t(this))}));this._visibilityChangeHandler=this.onVisibilityChange.bind(this);if(typeof document!=="undefined"){if(document.hidden!==undefined){this._hiddenAttr="hidden";document.addEventListener("visibilitychange",this._visibilityChangeHandler,false)}else if(document.mozHidden!==undefined){this._hiddenAttr="mozHidden";document.addEventListener("mozvisibilitychange",this._visibilityChangeHandler,false)}else if(document.msHidden!==undefined){this._hiddenAttr="msHidden";document.addEventListener("msvisibilitychange",this._visibilityChangeHandler,false)}else if(document.webkitHidden!==undefined){this._hiddenAttr="webkitHidden";document.addEventListener("webkitvisibilitychange",this._visibilityChangeHandler,false)}}this.tick=wR(this)}static{this._applications={}}static getApplication(t){return t?TR._applications[t]:hA()}_initDefaultMaterial(){const t=new Qb;t.name="Default Material";Wv(this.graphicsDevice,t)}_initProgramLibrary(){const t=new vE(this.graphicsDevice,new Qb);uv(this.graphicsDevice,t)}get soundManager(){return this._soundManager}get batcher(){return this._batcher}get fillMode(){return this._fillMode}get resolutionMode(){return this._resolutionMode}configure(t,e){bp.get(t,((t,s)=>{if(t){e(t);return}const i=s.application_properties;const n=s.scenes;const r=s.assets;this._parseApplicationProperties(i,(t=>{this._parseScenes(n);this._parseAssets(r);if(!t){e(null)}else{e(t)}}))}))}preload(t){this.fire("preload:start");const e=this.assets.list({preload:true});if(e.length===0){this.fire("preload:end");t();return}let s=0;const i=()=>{s++;this.fire("preload:progress",s/e.length);if(s===e.length){this.fire("preload:end");t()}};e.forEach((t=>{if(!t.loaded){t.once("load",i);t.once("error",i);this.assets.load(t)}else{i()}}))}_preloadScripts(t,e){e()}_parseApplicationProperties(t,e){if(typeof t.maxAssetRetries==="number"&&t.maxAssetRetries>0){this.loader.enableRetry(t.maxAssetRetries)}if(!t.useDevicePixelRatio){t.useDevicePixelRatio=t.use_device_pixel_ratio}if(!t.resolutionMode){t.resolutionMode=t.resolution_mode}if(!t.fillMode){t.fillMode=t.fill_mode}this._width=t.width;this._height=t.height;if(t.useDevicePixelRatio){this.graphicsDevice.maxPixelRatio=window.devicePixelRatio}this.setCanvasResolution(t.resolutionMode,this._width,this._height);this.setCanvasFillMode(t.fillMode,this._width,this._height);if(t.layers&&t.layerOrder){const e=new zx("application");const s={};for(const e in t.layers){const i=t.layers[e];i.id=parseInt(e,10);i.enabled=i.id!==cm;s[e]=new kx(i)}for(let i=0,n=t.layerOrder.length;i<n;i++){const n=t.layerOrder[i];const r=s[n.layer];if(!r)continue;if(n.transparent){e.pushTransparent(r)}else{e.pushOpaque(r)}e.subLayerEnabled[i]=n.enabled}this.scene.layers=e}if(t.batchGroups){const e=this.batcher;if(e){for(let s=0,i=t.batchGroups.length;s<i;s++){const i=t.batchGroups[s];e.addGroup(i.name,i.dynamic,i.maxAabbSize,i.id,i.layers)}}}if(t.i18nAssets){this.i18n.assets=t.i18nAssets}this._loadLibraries(t.libraries,e)}_loadLibraries(t,e){const s=t.length;let i=s;const n=/^https?:\/\//;if(s){const r=(t,s)=>{i--;if(t){e(t)}else if(i===0){this.onLibrariesLoaded();e(null)}};for(let e=0;e<s;++e){let s=t[e];if(!n.test(s.toLowerCase())&&this._scriptPrefix){s=A.join(this._scriptPrefix,s)}this.loader.load(s,"script",r)}}else{this.onLibrariesLoaded();e(null)}}_parseScenes(t){if(!t)return;for(let e=0;e<t.length;e++){this.scenes.add(t[e].name,t[e].url)}}_parseAssets(t){const e=[];const s={};const i={};for(let i=0;i<this.scriptsOrder.length;i++){const n=this.scriptsOrder[i];if(!t[n]){continue}s[n]=true;e.push(t[n])}if(this.enableBundles){for(const s in t){if(t[s].type==="bundle"){i[s]=true;e.push(t[s])}}}for(const n in t){if(s[n]||i[n]){continue}e.push(t[n])}for(let t=0;t<e.length;t++){const s=e[t];const i=new qA(s.name,s.type,s.file,s.data);i.id=parseInt(s.id,10);i.preload=s.preload?s.preload:false;i.loaded=s.type==="script"&&s.data&&s.data.loadingType>0;i.tags.add(s.tags);if(s.i18n){for(const t in s.i18n){i.addLocalizedAssetId(t,s.i18n[t])}}this.assets.add(i)}}start(){this.frame=0;this.fire("start",{timestamp:pt(),target:this});if(!this._librariesLoaded){this.onLibrariesLoaded()}this.systems.fire("initialize",this.root);this.fire("initialize");this.systems.fire("postInitialize",this.root);this.systems.fire("postPostInitialize",this.root);this.fire("postinitialize");this.tick()}inputUpdate(t){if(this.controller){this.controller.update(t)}if(this.mouse){this.mouse.update()}if(this.keyboard){this.keyboard.update()}if(this.gamepads){this.gamepads.update()}}update(t){this.frame++;this.graphicsDevice.update();this.systems.fire(this._inTools?"toolsUpdate":"update",t);this.systems.fire("animationUpdate",t);this.systems.fire("postUpdate",t);this.fire("update",t);this.inputUpdate(t)}render(){this.updateCanvasSize();this.graphicsDevice.frameStart();this.fire("prerender");this.root.syncHierarchy();if(this._batcher){this._batcher.updateAll()}this.renderComposition(this.scene.layers);this.fire("postrender");this.graphicsDevice.frameEnd()}renderComposition(t){this.renderer.update(t);this.renderer.buildFrameGraph(this.frameGraph,t);this.frameGraph.render(this.graphicsDevice)}_fillFrameStatsBasic(t,e,s){const i=this.stats.frame;i.dt=e;i.ms=s;if(t>i._timeToCountFrames){i.fps=i._fpsAccum;i._fpsAccum=0;i._timeToCountFrames=t+1e3}else{i._fpsAccum++}this.stats.drawCalls.total=this.graphicsDevice._drawCallsPerFrame;this.graphicsDevice._drawCallsPerFrame=0}_fillFrameStats(){let t=this.stats.frame;t.cameras=this.renderer._camerasRendered;t.materials=this.renderer._materialSwitches;t.shaders=this.graphicsDevice._shaderSwitchesPerFrame;t.shadowMapUpdates=this.renderer._shadowMapUpdates;t.shadowMapTime=this.renderer._shadowMapTime;t.depthMapTime=this.renderer._depthMapTime;t.forwardTime=this.renderer._forwardTime;const e=this.graphicsDevice._primsPerFrame;t.triangles=e[$i]/3+Math.max(e[ji]-2,0)+Math.max(e[Yi]-2,0);t.cullTime=this.renderer._cullTime;t.sortTime=this.renderer._sortTime;t.skinTime=this.renderer._skinTime;t.morphTime=this.renderer._morphTime;t.lightClusters=this.renderer._lightClusters;t.lightClustersTime=this.renderer._lightClustersTime;t.otherPrimitives=0;for(let s=0;s<e.length;s++){if(s<$i){t.otherPrimitives+=e[s]}e[s]=0}this.renderer._camerasRendered=0;this.renderer._materialSwitches=0;this.renderer._shadowMapUpdates=0;this.graphicsDevice._shaderSwitchesPerFrame=0;this.renderer._cullTime=0;this.renderer._layerCompositionUpdateTime=0;this.renderer._lightClustersTime=0;this.renderer._sortTime=0;this.renderer._skinTime=0;this.renderer._morphTime=0;this.renderer._shadowMapTime=0;this.renderer._depthMapTime=0;this.renderer._forwardTime=0;t=this.stats.drawCalls;t.forward=this.renderer._forwardDrawCalls;t.culled=this.renderer._numDrawCallsCulled;t.depth=0;t.shadow=this.renderer._shadowDrawCalls;t.skinned=this.renderer._skinDrawCalls;t.immediate=0;t.instanced=0;t.removedByInstancing=0;t.misc=t.total-(t.forward+t.shadow);this.renderer._depthDrawCalls=0;this.renderer._shadowDrawCalls=0;this.renderer._forwardDrawCalls=0;this.renderer._numDrawCallsCulled=0;this.renderer._skinDrawCalls=0;this.renderer._immediateRendered=0;this.renderer._instancedDrawCalls=0;this.stats.misc.renderTargetCreationTime=this.graphicsDevice.renderTargetCreationTime;t=this.stats.particles;t.updatesPerFrame=t._updatesPerFrame;t.frameTime=t._frameTime;t._updatesPerFrame=0;t._frameTime=0}setCanvasFillMode(t,e,s){this._fillMode=t;this.resizeCanvas(e,s)}setCanvasResolution(t,e,s){this._resolutionMode=t;if(t===aA&&e===undefined){e=this.graphicsDevice.canvas.clientWidth;s=this.graphicsDevice.canvas.clientHeight}this.graphicsDevice.resizeCanvas(e,s)}isHidden(){return document[this._hiddenAttr]}onVisibilityChange(){if(this.isHidden()){if(this._soundManager){this._soundManager.suspend()}}else{if(this._soundManager){this._soundManager.resume()}}}resizeCanvas(t,e){if(!this._allowResize)return undefined;if(this.xr&&this.xr.session){return undefined}const s=window.innerWidth;const i=window.innerHeight;if(this._fillMode===rA){const n=this.graphicsDevice.canvas.width/this.graphicsDevice.canvas.height;const r=s/i;if(n>r){t=s;e=t/n}else{e=i;t=e*n}}else if(this._fillMode===nA){t=s;e=i}this.graphicsDevice.canvas.style.width=`${t}px`;this.graphicsDevice.canvas.style.height=`${e}px`;this.updateCanvasSize();return{width:t,height:e}}updateCanvasSize(){if(!this._allowResize||this.xr?.active){return}if(this._resolutionMode===aA){const t=this.graphicsDevice.canvas;this.graphicsDevice.resizeCanvas(t.clientWidth,t.clientHeight)}}onLibrariesLoaded(){this._librariesLoaded=true;if(this.systems.rigidbody){this.systems.rigidbody.onLibraryLoaded()}}applySceneSettings(t){let e;if(this.systems.rigidbody&&typeof Ammo!=="undefined"){const[e,s,i]=t.physics.gravity;this.systems.rigidbody.gravity.set(e,s,i)}this.scene.applySettings(t);if(t.render.hasOwnProperty("skybox")){if(t.render.skybox){e=this.assets.get(t.render.skybox);if(e){this.setSkybox(e)}else{this.assets.once(`add:${t.render.skybox}`,this.setSkybox,this)}}else{this.setSkybox(null)}}}setAreaLightLuts(t,e){if(t&&e){_A.set(this.graphicsDevice,t,e)}}setSkybox(t){if(t!==this._skyboxAsset){const e=()=>{this.setSkybox(null)};const s=()=>{this.scene.setSkybox(this._skyboxAsset?this._skyboxAsset.resources:null)};if(this._skyboxAsset){this.assets.off(`load:${this._skyboxAsset.id}`,s,this);this.assets.off(`remove:${this._skyboxAsset.id}`,e,this);this._skyboxAsset.off("change",s,this)}this._skyboxAsset=t;if(this._skyboxAsset){this.assets.on(`load:${this._skyboxAsset.id}`,s,this);this.assets.once(`remove:${this._skyboxAsset.id}`,e,this);this._skyboxAsset.on("change",s,this);if(this.scene.skyboxMip===0&&!this._skyboxAsset.loadFaces){this._skyboxAsset.loadFaces=true}this.assets.load(this._skyboxAsset)}s()}}_firstBake(){this.lightmapper?.bake(null,this.scene.lightmapMode)}_firstBatch(){this.batcher?.generate()}_processTimestamp(t){return t}drawLine(t,e,s,i,n){this.scene.drawLine(t,e,s,i,n)}drawLines(t,e,s=true,i=this.scene.defaultDrawLayer){this.scene.drawLines(t,e,s,i)}drawLineArrays(t,e,s=true,i=this.scene.defaultDrawLayer){this.scene.drawLineArrays(t,e,s,i)}drawWireSphere(t,e,s=bt.WHITE,i=20,n=true,r=this.scene.defaultDrawLayer){this.scene.immediate.drawWireSphere(t,e,s,i,n,r)}drawWireAlignedBox(t,e,s=bt.WHITE,i=true,n=this.scene.defaultDrawLayer,r){this.scene.immediate.drawWireAlignedBox(t,e,s,i,n,r)}drawMeshInstance(t,e=this.scene.defaultDrawLayer){this.scene.immediate.drawMesh(null,null,null,t,e)}drawMesh(t,e,s,i=this.scene.defaultDrawLayer){this.scene.immediate.drawMesh(e,s,t,null,i)}drawQuad(t,e,s=this.scene.defaultDrawLayer){this.scene.immediate.drawMesh(e,t,this.scene.immediate.getQuadMesh(),null,s)}drawTexture(t,e,s,i,n,r,a=this.scene.defaultDrawLayer,o=true){if(o===false&&!this.graphicsDevice.isWebGPU){return}const l=new Vt;l.setTRS(new It(t,e,0),Gt.IDENTITY,new It(s,-i,0));if(!r){r=new dw;r.cull=ss;r.setParameter("colorMap",n);r.shaderDesc=o?this.scene.immediate.getTextureShaderDesc(n.encoding):this.scene.immediate.getUnfilterableTextureShaderDesc();r.update()}this.drawQuad(l,r,a)}drawDepthTexture(t,e,s,i,n=this.scene.defaultDrawLayer){const r=new dw;r.cull=ss;r.shaderDesc=this.scene.immediate.getDepthTextureShaderDesc();r.update();this.drawTexture(t,e,s,i,null,r,n)}destroy(){if(this._inFrameUpdate){this._destroyRequested=true;return}const t=this.graphicsDevice.canvas.id;this.fire("destroy",this);this.off("librariesloaded");if(typeof document!=="undefined"){document.removeEventListener("visibilitychange",this._visibilityChangeHandler,false);document.removeEventListener("mozvisibilitychange",this._visibilityChangeHandler,false);document.removeEventListener("msvisibilitychange",this._visibilityChangeHandler,false);document.removeEventListener("webkitvisibilitychange",this._visibilityChangeHandler,false)}this._visibilityChangeHandler=null;this.root.destroy();this.root=null;if(this.mouse){this.mouse.off();this.mouse.detach();this.mouse=null}if(this.keyboard){this.keyboard.off();this.keyboard.detach();this.keyboard=null}if(this.touch){this.touch.off();this.touch.detach();this.touch=null}if(this.elementInput){this.elementInput.detach();this.elementInput=null}if(this.gamepads){this.gamepads.destroy();this.gamepads=null}if(this.controller){this.controller=null}this.systems.destroy();if(this.scene.layers){this.scene.layers.destroy()}const e=this.assets.list();for(let t=0;t<e.length;t++){e[t].unload();e[t].off()}this.assets.off();this.bundles.destroy();this.bundles=null;this.i18n.destroy();this.i18n=null;const s=this.loader.getHandler("script");s?.clearCache();this.loader.destroy();this.loader=null;this.scene.destroy();this.scene=null;this.systems=null;this.context=null;this.scripts.destroy();this.scripts=null;this.scenes.destroy();this.scenes=null;this.lightmapper?.destroy();this.lightmapper=null;if(this._batcher){this._batcher.destroy();this._batcher=null}this._entityIndex={};this.defaultLayerDepth.onDisable=null;this.defaultLayerDepth.onEnable=null;this.defaultLayerDepth=null;this.defaultLayerWorld=null;this.xr?.end();this.xr?.destroy();this.renderer.destroy();this.renderer=null;this.graphicsDevice.destroy();this.graphicsDevice=null;this.tick=null;this.off();this._soundManager?.destroy();this._soundManager=null;uA.app=null;TR._applications[t]=null;if(hA()===this){cA(null)}TR.cancelTick(this)}static cancelTick(t){if(t.frameRequestId){window.cancelAnimationFrame(t.frameRequestId);t.frameRequestId=undefined}}getEntityFromIndex(t){return this._entityIndex[t]}_registerSceneImmediate(t){this.on("postrender",t.immediate.onPostRender,t.immediate)}}const wR=function(t){const e=t;return function(t,s){if(!e.graphicsDevice){return}if(e.frameRequestId){e.xr?.session?.cancelAnimationFrame(e.frameRequestId);cancelAnimationFrame(e.frameRequestId);e.frameRequestId=null}e._inFrameUpdate=true;cA(e);xR=e;const i=e._processTimestamp(t)||pt();const n=i-(e._time||i);let r=n/1e3;r=wt.clamp(r,0,e.maxDeltaTime);r*=e.timeScale;e._time=i;if(e.xr?.session){e.frameRequestId=e.xr.session.requestAnimationFrame(e.tick)}else{e.frameRequestId=B.browser||B.worker?requestAnimationFrame(e.tick):null}if(e.graphicsDevice.contextLost){return}e._fillFrameStatsBasic(i,r,n);e.fire("frameupdate",n);let a=false;if(s){a=!e.xr?.update(s);e.graphicsDevice.defaultFramebuffer=s.session.renderState.baseLayer.framebuffer}else{e.graphicsDevice.defaultFramebuffer=null}if(!a){e.update(r);e.fire("framerender");if(e.autoRender||e.renderNextFrame){e.render();e.renderNextFrame=false}e.fire("frameend")}e._inFrameUpdate=false;if(e._destroyRequested){e.destroy()}}};class bR{constructor(){this.componentSystems=[];this.resourceHandlers=[]}}const ER=new Zt;class AR{constructor(t,e,s){this.scene=t;this.light=e;this.store();e.numCascades=1;if(this.scene.clusteredLightingEnabled&&!s.shadowsEnabled){e.castShadows=false}if(e.type!==pm){e._node.getWorldTransform();e.getBoundingSphere(ER);this.lightBounds=new jt;this.lightBounds.center.copy(ER.center);this.lightBounds.halfExtents.set(ER.radius,ER.radius,ER.radius)}}store(){this.mask=this.light.mask;this.shadowUpdateMode=this.light.shadowUpdateMode;this.enabled=this.light.enabled;this.intensity=this.light.intensity;this.rotation=this.light._node.getLocalRotation().clone();this.numCascades=this.light.numCascades;this.castShadows=this.light._castShadows}restore(){const t=this.light;t.mask=this.mask;t.shadowUpdateMode=this.shadowUpdateMode;t.enabled=this.enabled;t.intensity=this.intensity;t._node.setLocalRotation(this.rotation);t.numCascades=this.numCascades;t._castShadows=this.castShadows}startBake(){this.light.enabled=true;this.light._destroyShadowMap();this.light.beginFrame()}endBake(t){const e=this.light;e.enabled=false;if(e.shadowMap){if(e.shadowMap.cached){t.add(e,e.shadowMap)}e.shadowMap=null}}}const CR=new Ot;class PR extends AR{constructor(t,e){super(t.scene,e,t.lightingParams)}get numVirtualLights(){if(this.light.type===pm){return this.light.bakeNumSamples}return 1}prepareVirtualLight(t,e){const s=this.light;s._node.setLocalRotation(this.rotation);if(t>0){const i=s.bakeArea;Rw.circlePointDeterministic(CR,t,e);CR.mulScalar(i*.5);s._node.rotateLocal(CR.x,0,CR.y)}s._node.getWorldTransform();const i=2.2;const n=Math.pow(this.intensity,i);s.intensity=Math.pow(n/e,1/i)}}const LR=new It;class DR extends AR{constructor(t){const e=t.scene;const s=new dC("AmbientLight");s.addComponent("light",{type:"directional",affectDynamic:true,affectLightmapped:false,bake:true,bakeNumSamples:e.ambientBakeNumSamples,castShadows:true,normalOffsetBias:.05,shadowBias:.2,shadowDistance:1,shadowResolution:2048,shadowType:Lm,color:bt.WHITE,intensity:1,bakeDir:false});super(e,s.light.light,t.lightingParams)}get numVirtualLights(){return this.light.bakeNumSamples}prepareVirtualLight(t,e){Rw.spherePointDeterministic(LR,t,e,0,this.scene.ambientBakeSpherePart);this.light._node.lookAt(LR.mulScalar(-1));this.light._node.rotateLocal(90,0,0);const s=2.2;const i=2*Math.PI*this.scene.ambientBakeSpherePart;const n=Math.pow(i,s);this.light.intensity=Math.pow(n/e,1/s)}}class MR{constructor(t,e=null){this.node=t;this.component=t.render||t.model;e=e||this.component.meshInstances;this.store();this.meshInstances=e;this.bounds=null;this.renderTargets=[]}store(){this.castShadows=this.component.castShadows}restore(){this.component.castShadows=this.castShadows}}var IR=`\nfloat normpdf3(in vec3 v, in float sigma) {\n\treturn 0.39894 * exp(-0.5 * dot(v, v) / (sigma * sigma)) / sigma;\n}\nvec3 decodeRGBM(vec4 rgbm) {\n\tvec3 color = (8.0 * rgbm.a) * rgbm.rgb;\n\treturn color * color;\n}\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvec4 encodeRGBM(vec3 color) {\n\tvec4 encoded;\n\tencoded.rgb = pow(color.rgb, vec3(0.5));\n\tencoded.rgb *= 1.0 / 8.0;\n\tencoded.a = saturate( max( max( encoded.r, encoded.g ), max( encoded.b, 1.0 / 255.0 ) ) );\n\tencoded.a = ceil(encoded.a * 255.0) / 255.0;\n\tencoded.rgb /= encoded.a;\n\treturn encoded;\n}\nvec3 decode(vec4 pixel) {\n\t#if HDR\n\t\treturn pixel.rgb;\n\t#else\n\t\treturn decodeRGBM(pixel);\n\t#endif\n}\nbool isUsed(vec4 pixel) {\n\t#if HDR\n\t\treturn any(greaterThan(pixel.rgb, vec3(0.0)));\n\t#else\n\t\treturn pixel.a > 0.0;\n\t#endif\n}\nvarying vec2 vUv0;\nuniform sampler2D source;\nuniform vec2 pixelOffset;\nuniform vec2 sigmas;\nuniform float bZnorm;\nuniform float kernel[{MSIZE}];\nvoid main(void) {\n\t\n\tvec4 pixel = texture2DLod(source, vUv0, 0.0);\n\tif (!isUsed(pixel)) {\n\t\tgl_FragColor = pixel;\n\t\treturn ;\n\t}\n\tfloat sigma = sigmas.x;\n\tfloat bSigma = sigmas.y;\n\tvec3 pixelHdr = decode(pixel);\n\tvec3 accumulatedHdr = vec3(0.0);\n\tfloat accumulatedFactor = 0.000001;\n\tconst int kSize = ({MSIZE} - 1) / 2;\n\tfor (int i = -kSize; i <= kSize; ++i) {\n\t\tfor (int j = -kSize; j <= kSize; ++j) {\n\t\t\t\n\t\t\tvec2 coord = vUv0 + vec2(float(i), float(j)) * pixelOffset;\n\t\t\tvec4 pix = texture2DLod(source, coord, 0.0);\n\t\t\tif (isUsed(pix)) {\n\t\t\t\tvec3 hdr = decode(pix);\n\t\t\t\tfloat factor = kernel[kSize + j] * kernel[kSize + i];\n\t\t\t\tfactor *= normpdf3(hdr - pixelHdr, bSigma) * bZnorm;\n\t\t\t\taccumulatedHdr += factor * hdr;\n\t\t\t\taccumulatedFactor += factor;\n\t\t\t}\n\t\t}\n\t}\n\tvec3 finalHDR = accumulatedHdr / accumulatedFactor;\n\t#if HDR\n\t\tgl_FragColor = vec4(finalHDR, 1.0);\n\t#else\n\t\tgl_FragColor = encodeRGBM(finalHDR);\n\t#endif\n}\n`;var RR=`\nvarying vec2 vUv0;\nuniform sampler2D source;\nuniform vec2 pixelOffset;\nbool isUsed(vec4 pixel) {\n\t#if HDR\n\t\treturn any(greaterThan(pixel.rgb, vec3(0.0)));\n\t#else\n\t\treturn pixel.a > 0.0;\n\t#endif\n}\nvoid main(void) {\n\tvec4 c = texture2DLod(source, vUv0, 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 - pixelOffset, 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(0, -pixelOffset.y), 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(pixelOffset.x, -pixelOffset.y), 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(-pixelOffset.x, 0), 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(pixelOffset.x, 0), 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(-pixelOffset.x, pixelOffset.y), 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + vec2(0, pixelOffset.y), 0.0);\n\tc = isUsed(c) ? c : texture2DLod(source, vUv0 + pixelOffset, 0.0);\n\tgl_FragColor = c;\n}\n`;var OR=`\nfn normpdf3(v: vec3f, sigma: f32) -> f32 {\n\treturn 0.39894 * exp(-0.5 * dot(v, v) / (sigma * sigma)) / sigma;\n}\nfn decodeRGBM(rgbm: vec4f) -> vec3f {\n\tlet color = (8.0 * rgbm.a) * rgbm.rgb;\n\treturn color * color;\n}\nfn saturate(x: f32) -> f32 {\n\treturn clamp(x, 0.0, 1.0);\n}\nfn encodeRGBM(color: vec3f) -> vec4f {\n\tvar encoded: vec4f;\n\tlet rgb_processed = pow(color.rgb, vec3f(0.5)) * (1.0 / 8.0);\n\tencoded = vec4f(rgb_processed, 0.0);\n\tlet max_g_b = max( encoded.g, max( encoded.b, 1.0 / 255.0 ) );\n\tlet max_rgb = max( encoded.r, max_g_b );\n\tencoded.a = clamp(max_rgb, 0.0, 1.0);\n\tencoded.a = ceil(encoded.a * 255.0) / 255.0;\n\tencoded = vec4f(encoded.rgb / encoded.a, encoded.a);\n\treturn encoded;\n}\nfn decode(pixel: vec4f) -> vec3f {\n\t#if HDR\n\t\treturn pixel.rgb;\n\t#else\n\t\treturn decodeRGBM(pixel);\n\t#endif\n}\nfn isUsed(pixel: vec4f) -> bool {\n\t#if HDR\n\t\treturn any(pixel.rgb > vec3f(0.0));\n\t#else\n\t\treturn pixel.a > 0.0;\n\t#endif\n}\nvarying vUv0: vec2f;\nvar source: texture_2d<f32>;\nvar sourceSampler: sampler;\nuniform kernel: array<f32, {MSIZE}>;\nuniform pixelOffset: vec2f;\nuniform sigmas: vec2f;\nuniform bZnorm: f32;\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tlet pixel = textureSampleLevel(source, sourceSampler, input.vUv0, 0.0);\n\tif (!isUsed(pixel)) {\n\t\toutput.color = pixel;\n\t\treturn output;\n\t}\n\tlet sigma = uniform.sigmas.x;\n\tlet bSigma = uniform.sigmas.y;\n\tlet pixelHdr = decode(pixel);\n\tvar accumulatedHdr = vec3f(0.0);\n\tvar accumulatedFactor = 0.000001;\n\tconst kSize = ({MSIZE} - 1) / 2;\n\tfor (var i: i32 = -kSize; i <= kSize; i = i + 1) {\n\t\tfor (var j: i32 = -kSize; j <= kSize; j = j + 1) {\n\t\t\tlet coord = input.vUv0 + vec2f(f32(i), f32(j)) * uniform.pixelOffset;\n\t\t\tlet pix = textureSampleLevel(source, sourceSampler, coord, 0.0);\n\t\t\tif (isUsed(pix)) {\n\t\t\t\tlet hdr = decode(pix);\n\t\t\t\tvar factor = uniform.kernel[u32(kSize + j)].element * uniform.kernel[u32(kSize + i)].element;\n\t\t\t\tfactor = factor * normpdf3(hdr - pixelHdr, bSigma) * uniform.bZnorm;\n\t\t\t\taccumulatedHdr = accumulatedHdr + factor * hdr;\n\t\t\t\taccumulatedFactor = accumulatedFactor + factor;\n\t\t\t}\n\t\t}\n\t}\n\tlet finalHDR = accumulatedHdr / accumulatedFactor;\n\t#if HDR\n\t\toutput.color = vec4f(finalHDR, 1.0);\n\t#else\n\t\toutput.color = encodeRGBM(finalHDR);\n\t#endif\n\treturn output;\n}\n`;var FR=`\nvarying vUv0: vec2f;\nvar source: texture_2d<f32>;\nvar sourceSampler: sampler;\nuniform pixelOffset: vec2f;\nfn isUsed(pixel: vec4f) -> bool {\n\t#ifdef HDR\n\t\treturn any(pixel.rgb > vec3f(0.0));\n\t#else\n\t\treturn pixel.a > 0.0;\n\t#endif\n}\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar c: vec4f = textureSampleLevel(source, sourceSampler, input.vUv0, 0.0);\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 - uniform.pixelOffset, 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + vec2f(0.0, -uniform.pixelOffset.y), 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + vec2f(uniform.pixelOffset.x, -uniform.pixelOffset.y), 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + vec2f(-uniform.pixelOffset.x, 0.0), 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + vec2f(uniform.pixelOffset.x, 0.0), 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + vec2f(-uniform.pixelOffset.x, uniform.pixelOffset.y), 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + vec2f(0.0, uniform.pixelOffset.y), 0.0), c, isUsed(c));\n\tc = select(textureSampleLevel(source, sourceSampler, input.vUv0 + uniform.pixelOffset, 0.0), c, isUsed(c));\n\tvar output: FragmentOutput;\n\toutput.color = c;\n\treturn output;\n}\n`;const NR=15;const kR={glslBilateralDeNoisePS:IR,glslDilatePS:RR};const BR={wgslBilateralDeNoisePS:OR,wgslDilatePS:FR};class UR{constructor(t){this.shaderDilate=[];this.shaderDenoise=[];this.device=t;yv.get(this.device,cr).add(kR);yv.get(this.device,dr).add(BR);this.constantTexSource=t.scope.resolve("source");this.constantPixelOffset=t.scope.resolve("pixelOffset");this.pixelOffset=new Float32Array(2);this.sigmas=null;this.constantSigmas=null;this.kernel=null}setSourceTexture(t){this.constantTexSource.setValue(t)}prepare(t,e){this.pixelOffset[0]=1/t;this.pixelOffset[1]=1/e;this.constantPixelOffset.setValue(this.pixelOffset)}prepareDenoise(t,e,s){const i=s?0:1;if(!this.shaderDenoise[i]){const t=new Map;t.set("{MSIZE}",15);if(s)t.set("HDR","");this.shaderDenoise[i]=Tv.createShader(this.device,{uniqueName:`lmBilateralDeNoise-${s?"hdr":"rgbm"}`,attributes:{vertex_position:Ki},vertexGLSL:yv.get(this.device,cr).get("fullscreenQuadVS"),vertexWGSL:yv.get(this.device,dr).get("fullscreenQuadVS"),fragmentGLSL:yv.get(this.device,cr).get("glslBilateralDeNoisePS"),fragmentWGSL:yv.get(this.device,dr).get("wgslBilateralDeNoisePS"),fragmentDefines:t});this.sigmas=new Float32Array(2);this.constantSigmas=this.device.scope.resolve("sigmas");this.constantKernel=this.device.scope.resolve("kernel[0]");this.bZnorm=this.device.scope.resolve("bZnorm")}this.sigmas[0]=t;this.sigmas[1]=e;this.constantSigmas.setValue(this.sigmas);this.evaluateDenoiseUniforms(t,e)}getDenoise(t){const e=t?0:1;return this.shaderDenoise[e]}getDilate(t,e){const s=e?0:1;if(!this.shaderDilate[s]){const i=e?"#define HDR\n":"";this.shaderDilate[s]=Tv.createShader(t,{uniqueName:`lmDilate-${e?"hdr":"rgbm"}`,attributes:{vertex_position:Ki},vertexGLSL:yv.get(this.device,cr).get("fullscreenQuadVS"),vertexWGSL:yv.get(this.device,dr).get("fullscreenQuadVS"),fragmentGLSL:i+yv.get(this.device,cr).get("glslDilatePS"),fragmentWGSL:i+yv.get(this.device,dr).get("wgslDilatePS")})}return this.shaderDilate[s]}evaluateDenoiseUniforms(t,e){function s(t,e){return.39894*Math.exp(-.5*t*t/(e*e))/e}this.kernel=this.kernel||new Float32Array(NR);const i=this.kernel;const n=Math.floor((NR-1)/2);for(let e=0;e<=n;++e){const r=s(e,t);i[n+e]=r;i[n-e]=r}this.constantKernel.setValue(this.kernel);const r=1/s(0,e);this.bZnorm.setValue(r)}}class zR extends Yc{constructor(t,e,s,i,n,r){super(t),this.viewBindGroups=[];this.renderer=e;this.camera=s;this.worldClusters=i;this.receivers=n;this.lightArray=r}destroy(){this.viewBindGroups.forEach((t=>{t.defaultUniformBuffer.destroy();t.destroy()}));this.viewBindGroups.length=0}execute(){this.device;const{renderer:t,camera:e,receivers:s,renderTarget:i,worldClusters:n,lightArray:r}=this;t.renderForwardLayer(e,i,null,undefined,pg,this.viewBindGroups,{meshInstances:s,splitLights:r,lightClusters:n})}}const VR=2048;const GR=0;const HR=1;const WR=new It;class XR{constructor(t,e,s,i,n){this.device=t;this.root=e;this.scene=s;this.renderer=i;this.assets=n;this.shadowMapCache=i.shadowMapCache;this._tempSet=new Set;this._initCalled=false;this.passMaterials=[];this.ambientAOMaterial=null;this.fog="";this.ambientLight=new bt;this.renderTargets=new Map;this.stats={renderPasses:0,lightmapCount:0,totalRenderTime:0,forwardTime:0,fboTime:0,shadowMapTime:0,compileTime:0,shadersLinked:0}}destroy(){qv.decRef(this.blackTex);this.blackTex=null;qv.destroy();this.device=null;this.root=null;this.scene=null;this.renderer=null;this.assets=null;this.camera?.destroy();this.camera=null}initBake(t){this.bakeHDR=this.scene.lightmapPixelFormat!==Ds;if(!this._initCalled){this._initCalled=true;this.lightmapFilters=new UR(t);this.constantBakeDir=t.scope.resolve("bakeDir");this.materials=[];this.blackTex=new lo(this.device,{width:4,height:4,format:Ds,type:Vn,name:"lightmapBlack"});qv.incRef(this.blackTex);const e=new Sy;e.clearColor.set(0,0,0,0);e.clearColorBuffer=true;e.clearDepthBuffer=false;e.clearStencilBuffer=false;e.frustumCulling=false;e.projection=h_;e.aspectRatio=1;e.node=new By;this.camera=e;this.camera.shaderParams.gammaCorrection=T_;this.camera.shaderParams.toneMapping=E_}if(this.scene.clusteredLightingEnabled){const e=new Zx(t.supportsAreaLights,t.maxTextureSize,(()=>{}));this.lightingParams=e;const s=this.scene.lighting;e.shadowsEnabled=s.shadowsEnabled;e.shadowAtlasResolution=s.shadowAtlasResolution;e.cookiesEnabled=s.cookiesEnabled;e.cookieAtlasResolution=s.cookieAtlasResolution;e.areaLightsEnabled=s.areaLightsEnabled;e.cells=new It(3,3,3);e.maxLightsPerCell=4;this.worldClusters=new iS(t);this.worldClusters.name="ClusterLightmapper"}}finishBake(t){this.materials=[];function e(t){qv.decRef(t.colorBuffer);t.destroy()}this.renderTargets.forEach((t=>{e(t)}));this.renderTargets.clear();t.forEach((t=>{t.renderTargets.forEach((t=>{e(t)}));t.renderTargets.length=0}));this.ambientAOMaterial=null;if(this.worldClusters){this.worldClusters.destroy();this.worldClusters=null}}createMaterialForPass(t,e,s){const i=new Qb;i.name=`lmMaterial-pass:${e}-ambient:${s}`;i.setDefine("UV1LAYOUT","");i.setDefine("LIT_LIGHTMAP_BAKING","");if(e===GR){i.setDefine("LIT_LIGHTMAP_BAKING_COLOR","");if(s){i.setDefine("LIT_LIGHTMAP_BAKING_ADD_AMBIENT","")}else{i.ambient=new bt(0,0,0)}if(!this.bakeHDR)i.setDefine("LIGHTMAP_RGBM","");i.lightMap=this.blackTex}else{i.setDefine("LIT_LIGHTMAP_BAKING_DIR","");i.setDefine("STD_LIGHTMAP_DIR","")}i.cull=ss;i.forceUv1=true;i.update();return i}createMaterials(t,e,s){for(let t=0;t<s;t++){if(!this.passMaterials[t]){this.passMaterials[t]=this.createMaterialForPass(e,t,false)}}if(!this.ambientAOMaterial){this.ambientAOMaterial=this.createMaterialForPass(e,0,true);this.ambientAOMaterial.onUpdateShader=function(t){t.litOptions.lightMapWithoutAmbient=true;t.litOptions.separateAmbient=true;return t}}}createTexture(t,e){return new lo(this.device,{width:t,height:t,format:this.scene.lightmapPixelFormat,mipmaps:false,type:this.bakeHDR?zn:Vn,minFilter:as,magFilter:as,addressU:pe,addressV:pe,name:e})}collectModels(t,e,s){if(!t.enabled)return;let i;if(t.model?.model&&t.model?.enabled){if(s)s.push(new MR(t));if(t.model.lightmapped){if(e){i=t.model.model.meshInstances}}}if(t.render?.enabled){if(s)s.push(new MR(t));if(t.render.lightmapped){if(e){i=t.render.meshInstances}}}if(i){let s=true;for(let t=0;t<i.length;t++){if(!i[t].mesh.vertexBuffer.format.hasUv1){s=false;break}}if(s){const s=[];for(let n=0;n<i.length;n++){const r=i[n].mesh;if(this._tempSet.has(r)){e.push(new MR(t,[i[n]]))}else{s.push(i[n])}this._tempSet.add(r)}this._tempSet.clear();if(s.length>0){e.push(new MR(t,s))}}}for(let i=0;i<t._children.length;i++){this.collectModels(t._children[i],e,s)}}prepareShadowCasters(t){const e=[];for(let s=0;s<t.length;s++){const i=t[s].component;i.castShadows=i.castShadowsLightmap;if(i.castShadowsLightmap){const i=t[s].meshInstances;for(let t=0;t<i.length;t++){i[t].visibleThisFrame=true;e.push(i[t])}}}return e}updateTransforms(t){for(let e=0;e<t.length;e++){const s=t[e].meshInstances;for(let t=0;t<s.length;t++){s[t].node.getWorldTransform()}}}calculateLightmapSize(t){let e;const s=this.scene.lightmapSizeMultiplier||16;const i=WR;let n,r;if(t.model){r=t.model.lightmapSizeMultiplier;if(t.model.asset){e=this.assets.get(t.model.asset).data;if(e.area){n=e.area}}else if(t.model._area){e=t.model;if(e._area){n=e._area}}}else if(t.render){r=t.render.lightmapSizeMultiplier;if(t.render.type!=="asset"){if(t.render._area){e=t.render;if(e._area){n=e._area}}}}const a={x:1,y:1,z:1,uv:1};if(n){a.x=n.x;a.y=n.y;a.z=n.z;a.uv=n.uv}const o=r||1;a.x*=o;a.y*=o;a.z*=o;const l=t.render||t.model;const h=this.computeNodeBounds(l.meshInstances);i.copy(h.halfExtents);let c=a.x*i.y*i.z+a.y*i.x*i.z+a.z*i.x*i.y;c/=a.uv;c=Math.sqrt(c);const d=Math.min(wt.nextPowerOfTwo(c*s),this.scene.lightmapMaxResolution||VR);return d}setLightmapping(t,e,s,i){for(let n=0;n<t.length;n++){const r=t[n];const a=r.meshInstances;for(let t=0;t<a.length;t++){const n=a[t];n.setLightmapped(e);if(e){if(i){n._shaderDefs|=i}n.mask=ug;for(let t=0;t<s;t++){const e=r.renderTargets[t].colorBuffer;e.minFilter=os;e.magFilter=os;n.setRealtimeLightmap(sy.lightmapParamNames[t],e)}}}}}bake(t,e=Og){const s=this.device;const i=pt();this.scene._updateSkyMesh();this.stats.renderPasses=0;this.stats.shadowMapTime=0;this.stats.forwardTime=0;const n=s._shaderStats.linked;const r=s._renderTargetCreationTime;const a=s._shaderStats.compileTime;const o=[];const l=[];if(t){for(let e=0;e<t.length;e++){this.collectModels(t[e],o,null)}this.collectModels(this.root,null,l)}else{this.collectModels(this.root,o,l)}if(o.length>0){this.renderer.shadowRenderer.frameUpdate();const t=e===Og?2:1;this.setLightmapping(o,false,t);this.initBake(s);this.bakeInternal(t,o,l);let i=J_;if(e===Og){i|=tg}if(this.scene.ambientBake){i|=rg}this.setLightmapping(o,true,t,i);this.finishBake(o)}const h=pt();this.stats.totalRenderTime=h-i;this.stats.shadersLinked=s._shaderStats.linked-n;this.stats.compileTime=s._shaderStats.compileTime-a;this.stats.fboTime=s._renderTargetCreationTime-r;this.stats.lightmapCount=o.length}allocateTextures(t,e){for(let s=0;s<t.length;s++){const i=t[s];const n=this.calculateLightmapSize(i.node);for(let t=0;t<e;t++){const e=this.createTexture(n,`lightmapper_lightmap_${s}`);qv.incRef(e);i.renderTargets[t]=new il({colorBuffer:e,depth:false})}if(!this.renderTargets.has(n)){const t=this.createTexture(n,`lightmapper_temp_lightmap_${n}`);qv.incRef(t);this.renderTargets.set(n,new il({colorBuffer:t,depth:false}))}}}prepareLightsToBake(t,e){if(this.scene.ambientBake){const t=new DR(this);e.push(t)}const s=this.renderer.lights;for(let i=0;i<s.length;i++){const n=s[i];const r=new PR(this,n);t.push(r);if(n.enabled&&(n.mask&fg)!==0){n.mask=fg|ug|dg;n.shadowUpdateMode=n.type===pm?cg:hg;e.push(r)}}e.sort()}restoreLights(t){for(let e=0;e<t.length;e++){t[e].restore()}}setupScene(){this.ambientLight.copy(this.scene.ambientLight);if(!this.scene.ambientBake){this.scene.ambientLight.set(0,0,0)}this.renderer.setSceneConstants();this.device.scope.resolve("ambientBakeOcclusionContrast").setValue(this.scene.ambientBakeOcclusionContrast);this.device.scope.resolve("ambientBakeOcclusionBrightness").setValue(this.scene.ambientBakeOcclusionBrightness)}restoreScene(){this.scene.ambientLight.copy(this.ambientLight)}computeNodeBounds(t){const e=new jt;if(t.length>0){e.copy(t[0].aabb);for(let s=1;s<t.length;s++){e.add(t[s].aabb)}}return e}computeNodesBounds(t){for(let e=0;e<t.length;e++){const s=t[e].meshInstances;t[e].bounds=this.computeNodeBounds(s)}}computeBounds(t){const e=new jt;for(let s=0;s<t.length;s++){e.copy(t[0].aabb);for(let s=1;s<t.length;s++){e.add(t[s].aabb)}}return e}backupMaterials(t){for(let e=0;e<t.length;e++){this.materials[e]=t[e].material}}restoreMaterials(t){for(let e=0;e<t.length;e++){t[e].material=this.materials[e]}}lightCameraPrepare(t,e){const s=e.light;let i;if(s.type===gm){const t=s.getRenderData(null,0);i=t.shadowCamera;i._node.setPosition(s._node.getPosition());i._node.setRotation(s._node.getRotation());i._node.rotateLocal(-90,0,0);i.projection=l_;i.nearClip=s.attenuationEnd/1e3;i.farClip=s.attenuationEnd;i.aspectRatio=1;i.fov=s._outerConeAngle*2;this.renderer.updateCameraFrustum(i)}return i}lightCameraPrepareAndCull(t,e,s,i){const n=t.light;let r=true;if(n.type===pm){WR.copy(i.center);WR.y+=i.halfExtents.y;this.camera.node.setPosition(WR);this.camera.node.setEulerAngles(-90,0,0);this.camera.nearClip=0;this.camera.farClip=i.halfExtents.y*2;const t=Math.max(i.halfExtents.x,i.halfExtents.z);this.camera.orthoHeight=t}else{if(!t.lightBounds.intersects(e.bounds)){r=false}}if(n.type===gm){let t=false;const i=e.meshInstances;for(let e=0;e<i.length;e++){if(i[e]._isVisible(s)){t=true;break}}if(!t){r=false}}return r}setupLightArray(t,e){t[pm].length=0;t[mm].length=0;t[gm].length=0;t[e.type][0]=e;e.visibleThisFrame=true}renderShadowMap(t,e,s,i){const n=i.light;const r=this.scene.clusteredLightingEnabled;const a=n.castShadows&&(!r||this.scene.lighting.shadowsEnabled);if(!e&&a){if(!n.shadowMap&&!r){n.shadowMap=this.shadowMapCache.get(this.device,n)}if(n.type===pm){this.renderer._shadowRendererDirectional.cull(n,t,this.camera,s);const e=this.renderer._shadowRendererDirectional.getLightRenderPass(n,this.camera);e?.render()}else{if(this.device.isWebGPU){return true}this.renderer._shadowRendererLocal.cull(n,t,s);const e=false;this.renderer.shadowRenderer.render(n,this.camera,e)}}return true}postprocessTextures(t,e,s){const i=1;const n=this.lightmapFilters.getDilate(t,this.bakeHDR);let r;const a=this.scene.lightmapFilterEnabled;if(a){this.lightmapFilters.prepareDenoise(this.scene.lightmapFilterRange,this.scene.lightmapFilterSmoothness,this.bakeHDR);r=this.lightmapFilters.getDenoise(this.bakeHDR)}t.setBlendState(Ro.NOBLEND);t.setDepthState(Uo.NODEPTH);t.setStencilState(null,null);for(let o=0;o<e.length;o++){const l=e[o];for(let e=0;e<s;e++){const s=l.renderTargets[e];const o=s.colorBuffer;const h=this.renderTargets.get(o.width);const c=h.colorBuffer;this.lightmapFilters.prepare(o.width,o.height);for(let l=0;l<i;l++){this.lightmapFilters.setSourceTexture(o);const i=a&&e===0&&l===0;Iv(t,h,i?r:n);this.lightmapFilters.setSourceTexture(c);Iv(t,s,n)}}}}bakeInternal(t,e,s){const i=this.scene;const n=i.layers;const r=this.device;const a=i.clusteredLightingEnabled;this.createMaterials(r,i,t);this.setupScene();n._update();this.computeNodesBounds(e);this.allocateTextures(e,t);this.renderer.collectLights(n);const o=[],l=[];this.prepareLightsToBake(o,l);this.updateTransforms(s);const h=this.prepareShadowCasters(s);this.renderer.updateCpuSkinMatrices(h);this.renderer.gpuUpdate(h);const c=this.computeBounds(h);let d,u,f,p;for(d=0;d<e.length;d++){const t=e[d];f=t.meshInstances;for(u=0;u<f.length;u++){p=f[u];p.setLightmapped(false);p.mask=fg;p.setRealtimeLightmap(sy.lightmapParamNames[0],this.blackTex);p.setRealtimeLightmap(sy.lightmapParamNames[1],this.blackTex)}}for(u=0;u<l.length;u++){l[u].light.enabled=false}const m=[[],[],[]];let _,g;let v=false;for(d=0;d<l.length;d++){const s=l[d];const o=s instanceof DR;const y=s.light.type===pm;let S=s.numVirtualLights;if(t>1&&S>1&&s.light.bakeDir){S=1}for(let l=0;l<S;l++){if(S>1){s.prepareVirtualLight(l,S)}s.startBake();let d=false;const x=this.lightCameraPrepare(r,s);for(g=0;g<e.length;g++){const T=e[g];f=T.meshInstances;const w=this.lightCameraPrepareAndCull(s,T,x,c);if(!w){continue}this.setupLightArray(m,s.light);const b=y?[]:[s.light];if(a){this.renderer.lightTextureAtlas.update(b,this.lightingParams)}d=this.renderShadowMap(n,d,h,s);if(a){this.worldClusters.update(b,this.lightingParams)}this.backupMaterials(f);for(_=0;_<t;_++){if(_>0&&l>0){break}if(o&&_>0){break}const t=T.renderTargets[_];const e=T.renderTargets[_].colorBuffer.width;const n=this.renderTargets.get(e);const h=n.colorBuffer;if(_===0){v=i.updateShaders}else if(v){i.updateShaders=true}let c=this.passMaterials[_];if(o){const t=l+1===S;if(t&&_===0){c=this.ambientAOMaterial}}for(u=0;u<f.length;u++){f[u].material=c}this.renderer.updateShaders(f);if(_===HR){this.constantBakeDir.setValue(s.light.bakeDir?1:0)}if(r.isWebGPU){const t=new zR(r,this.renderer,this.camera,a?this.worldClusters:null,f,m);t.init(n);t.render();t.destroy()}else{this.renderer.setCamera(this.camera,n,true);if(a){this.worldClusters.activate()}this.renderer._forwardTime=0;this.renderer._shadowMapTime=0;this.renderer.renderForward(this.camera,n,f,m,pg);r.updateEnd()}T.renderTargets[_]=n;this.renderTargets.set(e,t);for(u=0;u<f.length;u++){p=f[u];p.setRealtimeLightmap(sy.lightmapParamNames[_],h);p._shaderDefs|=J_}}this.restoreMaterials(f)}s.endBake(this.shadowMapCache)}}this.postprocessTextures(r,e,t);for(g=0;g<s.length;g++){s[g].restore()}this.restoreLights(o);this.restoreScene();if(!a){this.shadowMapCache.clear()}}}class qR extends at{static{this.order=0}constructor(t,e){super();this.system=t;this.entity=e;if(this.system.schema&&!this._accessorsBuilt){this.buildAccessors(this.system.schema)}this.on("set",(function(t,e,s){this.fire(`set_${t}`,t,e,s)}));this.on("set_enabled",this.onSetEnabled,this)}static _buildAccessors(t,e){e.forEach((e=>{const s=typeof e==="object"?e.name:e;Object.defineProperty(t,s,{get:function(){return this.data[s]},set:function(t){const e=this.data;const i=e[s];e[s]=t;this.fire("set",s,i,t)},configurable:true})}));t._accessorsBuilt=true}buildAccessors(t){qR._buildAccessors(this,t)}onSetEnabled(t,e,s){if(e!==s){if(this.entity.enabled){if(s){this.onEnable()}else{this.onDisable()}}}}onEnable(){}onDisable(){}onPostStateChange(){}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){}get enabled(){return true}}class $R extends at{constructor(t){super();this.app=t;this.store={};this.schema=[]}addComponent(t,e={}){const s=new this.ComponentType(this,t);const i=new this.DataType;this.store[t.getGuid()]={entity:t,data:i};t[this.id]=s;t.c[this.id]=s;this.initializeComponentData(s,e,[]);this.fire("add",t,s);return s}removeComponent(t){const e=this.id;const s=this.store[t.getGuid()];const i=t.c[e];i.fire("beforeremove");this.fire("beforeremove",t,i);delete this.store[t.getGuid()];t[e]=undefined;delete t.c[e];this.fire("remove",t,s.data)}cloneComponent(t,e){const s=this.store[t.getGuid()];return this.addComponent(e,s.data)}initializeComponentData(t,e={},s){for(let i=0,n=s.length;i<n;i++){const n=s[i];let r,a;if(typeof n==="object"){r=n.name;a=n.type}else{r=n;a=undefined}let o=e[r];if(o!==undefined){if(a!==undefined){o=jR(o,a)}t[r]=o}else{t[r]=t.data[r]}}if(t.enabled&&t.entity.enabled){t.onEnable()}}getPropertiesOfType(t){const e=[];const s=this.schema||[];s.forEach((s=>{if(s&&typeof s==="object"&&s.type===t){e.push(s)}}));return e}destroy(){this.off()}}function jR(t,e){if(!t){return t}switch(e){case"rgb":if(t instanceof bt){return t.clone()}return new bt(t[0],t[1],t[2]);case"rgba":if(t instanceof bt){return t.clone()}return new bt(t[0],t[1],t[2],t[3]);case"vec2":if(t instanceof Ot){return t.clone()}return new Ot(t[0],t[1]);case"vec3":if(t instanceof It){return t.clone()}return new It(t[0],t[1],t[2]);case"vec4":if(t instanceof Ft){return t.clone()}return new Ft(t[0],t[1],t[2],t[3]);case"boolean":case"number":case"string":return t;case"entity":return t;default:throw new Error(`Could not convert unhandled type: ${e}`)}}const YR=0;const KR=1;const ZR=2;class QR{constructor(){this._left=Infinity;this._right=-Infinity;this._len=0;this._recip=0;this._p0=0;this._p1=0;this._t=0;this._hermite={valid:false,p0:0,m0:0,p1:0,m1:0}}update(t,e){if(t<this._left||t>=this._right){const s=e.length;if(!s){this._left=-Infinity;this._right=Infinity;this._len=0;this._recip=0;this._p0=this._p1=0}else{if(t<e[0]){this._left=-Infinity;this._right=e[0];this._len=0;this._recip=0;this._p0=this._p1=0}else if(t>=e[s-1]){this._left=e[s-1];this._right=Infinity;this._len=0;this._recip=0;this._p0=this._p1=s-1}else{const s=this._findKey(t,e);this._left=e[s];this._right=e[s+1];this._len=this._right-this._left;const i=1/this._len;this._recip=isFinite(i)?i:0;this._p0=s;this._p1=s+1}}}this._t=this._recip===0?0:(t-this._left)*this._recip;this._hermite.valid=false}_findKey(t,e){let s=0;while(t>=e[s+1]){s++}return s}eval(t,e,s){const i=s._data;const n=s._components;const r=this._p0*n;if(e===YR){for(let e=0;e<n;++e){t[e]=i[r+e]}}else{const s=this._t;const a=this._p1*n;switch(e){case KR:for(let e=0;e<n;++e){t[e]=wt.lerp(i[r+e],i[a+e],s)}break;case ZR:{const e=this._hermite;if(!e.valid){const t=s*s;const i=s+s;const n=1-s;const r=n*n;e.valid=true;e.p0=(1+i)*r;e.m0=s*r;e.p1=t*(3-i);e.m1=t*(s-1)}const r=(this._p0*3+1)*n;const a=(this._p0*3+2)*n;const o=(this._p1*3+1)*n;const l=(this._p1*3+0)*n;for(let s=0;s<n;++s){t[s]=e.p0*i[r+s]+e.m0*i[a+s]*this._len+e.p1*i[o+s]+e.m1*i[l+s]*this._len}break}}}}}class JR{constructor(t){this._name=`${t.name}Snapshot`;this._time=-1;this._cache=[];this._results=[];for(let e=0;e<t._inputs.length;++e){this._cache[e]=new QR}const e=t._curves;const s=t._outputs;for(let t=0;t<e.length;++t){const i=e[t];const n=s[i._output];const r=[];for(let t=0;t<n._components;++t){r[t]=0}this._results[t]=r}}}class tO{static{this.eventFrame={start:0,end:0,residual:0}}constructor(t,e,s,i,n,r){this._name=t.name;this._track=t;this._snapshot=new JR(t);this._playing=i;this._time=e;this._speed=s;this._loop=n;this._blendWeight=1;this._blendOrder=0;this._eventHandler=r;this.alignCursorToCurrentTime()}set name(t){this._name=t}get name(){return this._name}set track(t){this._track=t;this._snapshot=new JR(t)}get track(){return this._track}get snapshot(){return this._snapshot}set time(t){this._time=t;this.alignCursorToCurrentTime()}get time(){return this._time}set speed(t){const e=Math.sign(t)!==Math.sign(this._speed);this._speed=t;if(e){this.alignCursorToCurrentTime()}}get speed(){return this._speed}set loop(t){this._loop=t}get loop(){return this._loop}set blendWeight(t){this._blendWeight=t}get blendWeight(){return this._blendWeight}set blendOrder(t){this._blendOrder=t}get blendOrder(){return this._blendOrder}set eventCursor(t){this._eventCursor=t}get eventCursor(){return this._eventCursor}get eventCursorEnd(){return this.isReverse?0:this._track.events.length-1}get nextEvent(){return this._track.events[this._eventCursor]}get isReverse(){return this._speed<0}nextEventAheadOfTime(t){if(!this.nextEvent)return false;return this.isReverse?this.nextEvent.time<=t:this.nextEvent.time>=t}nextEventBehindTime(t){if(!this.nextEvent)return false;if(t===this.track.duration){return this.isReverse?this.nextEvent.time>=t:this.nextEvent.time<=t}return this.isReverse?this.nextEvent.time>t:this.nextEvent.time<t}resetEventCursor(){this._eventCursor=this.isReverse?this._track.events.length-1:0}moveEventCursor(){this._eventCursor+=this.isReverse?-1:1;if(this._eventCursor>=this.track.events.length){this._eventCursor=0}else if(this._eventCursor<0){this._eventCursor=this.track.events.length-1}}clipFrameTime(t){const e=tO.eventFrame;e.start=0;e.end=t;e.residual=0;if(this.isReverse){if(t<0){e.start=this.track.duration;e.end=0;e.residual=t+this.track.duration}}else{if(t>this.track.duration){e.start=0;e.end=this.track.duration;e.residual=t-this.track.duration}}}alignCursorToCurrentTime(){this.resetEventCursor();while(this.nextEventBehindTime(this._time)&&this._eventCursor!==this.eventCursorEnd){this.moveEventCursor()}}fireNextEvent(){this._eventHandler.fire(this.nextEvent.name,{track:this.track,...this.nextEvent});this.moveEventCursor()}fireNextEventInFrame(t,e){if(this.nextEventAheadOfTime(t)&&this.nextEventBehindTime(e)){this.fireNextEvent();return true}return false}activeEventsForFrame(t,e){const s=tO.eventFrame;this.clipFrameTime(e);const i=this.eventCursor;while(this.fireNextEventInFrame(t,s.end)){if(i===this.eventCursor){break}}if(this.loop&&Math.abs(s.residual)>0){this.activeEventsForFrame(s.start,s.residual)}}progressForTime(t){return t*this._speed/this._track.duration}_update(t){if(this._playing){let e=this._time;const s=this._track.duration;const i=this._speed;const n=this._loop;if(this._track.events.length>0&&s>0){this.activeEventsForFrame(e,e+i*t)}e+=i*t;if(i>=0){if(e>s){if(n){e=e%s||0}else{e=this._track.duration;this.pause()}}}else{if(e<0){if(n){e=s+(e%s||0)}else{e=0;this.pause()}}}this._time=e}if(this._time!==this._snapshot._time){this._track.eval(this._time,this._snapshot)}}play(){this._playing=true;this._time=0}stop(){this._playing=false;this._time=0}pause(){this._playing=false}resume(){this._playing=true}reset(){this._time=0}}const eO="NONE";const sO="PREV_STATE";const iO="NEXT_STATE";const nO="PREV_STATE_NEXT_STATE";const rO="NEXT_STATE_PREV_STATE";const aO="GREATER_THAN";const oO="LESS_THAN";const lO="GREATER_THAN_EQUAL_TO";const hO="LESS_THAN_EQUAL_TO";const cO="EQUAL_TO";const dO="NOT_EQUAL_TO";const uO="INTEGER";const fO="FLOAT";const pO="BOOLEAN";const mO="TRIGGER";const _O="1D";const gO="2D_DIRECTIONAL";const vO="2D_CARTESIAN";const yO="DIRECT";const SO="START";const xO="END";const TO="ANY";const wO=[SO,xO,TO];const bO="OVERWRITE";const EO="ADDITIVE";class AO{static dot(t,e){const s=t.length;let i=0;for(let n=0;n<s;++n){i+=t[n]*e[n]}return i}static normalize(t){let e=AO.dot(t,t);if(e>0){e=1/Math.sqrt(e);const s=t.length;for(let i=0;i<s;++i){t[i]*=e}}}static set(t,e,s){const i=t.length;if(s==="quaternion"){let s=AO.dot(e,e);if(s>0){s=1/Math.sqrt(s)}for(let n=0;n<i;++n){t[n]=e[n]*s}}else{for(let s=0;s<i;++s){t[s]=e[s]}}}static blendVec(t,e,s,i){const n=i?1:1-s;const r=t.length;for(let i=0;i<r;++i){t[i]=t[i]*n+e[i]*s}}static blendQuat(t,e,s,i){const n=t.length;const r=i?1:1-s;if(AO.dot(t,e)<0){s=-s}for(let i=0;i<n;++i){t[i]=t[i]*r+e[i]*s}if(!i){AO.normalize(t)}}static blend(t,e,s,i,n){if(i==="quaternion"){AO.blendQuat(t,e,s,n)}else{AO.blendVec(t,e,s,n)}}static stableSort(t,e){const s=t.length;for(let i=0;i<s-1;++i){for(let n=i+1;n<s;++n){if(e(t[n],t[i])){const e=t[i];t[i]=t[n];t[n]=e}}}}}class CO{static{this.TYPE_QUAT="quaternion"}static{this.TYPE_VEC3="vector3"}static{this.q1=new Gt}static{this.q2=new Gt}static{this.q3=new Gt}static{this.quatArr=[0,0,0,1]}static{this.vecArr=[0,0,0]}static{this.IDENTITY_QUAT_ARR=[0,0,0,1]}constructor(t,e){this._component=t;this.mask=new Int8Array(t.layers.length);this.weights=new Float32Array(t.layers.length);this.totalWeight=0;this.counter=0;this.layerCounter=0;this.valueType=e;this.dirty=true;this.value=e===CO.TYPE_QUAT?[0,0,0,1]:[0,0,0];this.baseValue=null;this.setter=null}get _normalizeWeights(){return this._component.normalizeWeights}getWeight(t){if(this.dirty)this.updateWeights();if(this._normalizeWeights&&this.totalWeight===0||!this.mask[t]){return 0}else if(this._normalizeWeights){return this.weights[t]/this.totalWeight}return wt.clamp(this.weights[t],0,1)}_layerBlendType(t){return this._component.layers[t].blendType}setMask(t,e){this.mask[t]=e;if(this._normalizeWeights){if(this._component.layers[t].blendType===bO){this.mask=this.mask.fill(0,0,t)}this.dirty=true}}updateWeights(){this.totalWeight=0;for(let t=0;t<this.weights.length;t++){this.weights[t]=this._component.layers[t].weight;this.totalWeight+=this.mask[t]*this.weights[t]}this.dirty=false}updateValue(t,e){if(this.counter===0){AO.set(this.value,CO.IDENTITY_QUAT_ARR,this.valueType);if(!this._normalizeWeights){AO.blend(this.value,this.baseValue,1,this.valueType)}}if(!this.mask[t]||this.getWeight(t)===0)return;if(this._layerBlendType(t)===EO&&!this._normalizeWeights){if(this.valueType===CO.TYPE_QUAT){const s=CO.q1.set(this.value[0],this.value[1],this.value[2],this.value[3]);const i=CO.q2.set(this.baseValue[0],this.baseValue[1],this.baseValue[2],this.baseValue[3]);const n=CO.q3.set(e[0],e[1],e[2],e[3]);const r=i.invert().mul(n);r.slerp(Gt.IDENTITY,r,this.getWeight(t));s.mul(r);CO.quatArr[0]=s.x;CO.quatArr[1]=s.y;CO.quatArr[2]=s.z;CO.quatArr[3]=s.w;AO.set(this.value,CO.quatArr,this.valueType)}else{CO.vecArr[0]=e[0]-this.baseValue[0];CO.vecArr[1]=e[1]-this.baseValue[1];CO.vecArr[2]=e[2]-this.baseValue[2];AO.blend(this.value,CO.vecArr,this.getWeight(t),this.valueType,true)}}else{AO.blend(this.value,e,this.getWeight(t),this.valueType)}if(this.setter)this.setter(this.value)}unbind(){if(this.setter){this.setter(this.baseValue)}}}class PO{constructor(t){this._binder=t;this._clips=[];this._inputs=[];this._outputs=[];this._targets={}}get clips(){return this._clips}addClip(t){const e=this._targets;const s=this._binder;const i=t.track.curves;const n=t.snapshot;const r=[];const a=[];for(let t=0;t<i.length;++t){const o=i[t];const l=o.paths;for(let i=0;i<l.length;++i){const o=l[i];const h=s.resolve(o);let c=e[h&&h.targetPath||null];if(!c&&h){c={target:h,value:[],curves:0,blendCounter:0};for(let t=0;t<c.target.components;++t){c.value.push(0)}e[h.targetPath]=c;if(s.animComponent){if(!s.animComponent.targets[h.targetPath]){let t;if(h.targetPath.substring(h.targetPath.length-13)==="localRotation"){t=CO.TYPE_QUAT}else{t=CO.TYPE_VEC3}s.animComponent.targets[h.targetPath]=new CO(s.animComponent,t)}s.animComponent.targets[h.targetPath].layerCounter++;s.animComponent.targets[h.targetPath].setMask(s.layerIndex,1)}}if(c){c.curves++;r.push(n._results[t]);a.push(c)}}}this._clips.push(t);this._inputs.push(r);this._outputs.push(a)}removeClip(t){const e=this._targets;const s=this._binder;const i=this._clips;const n=i[t];const r=n.track.curves;for(let t=0;t<r.length;++t){const i=r[t];const n=i.paths;for(let t=0;t<n.length;++t){const i=n[t];const r=this._binder.resolve(i);if(r){r.curves--;if(r.curves===0){s.unresolve(i);delete e[r.targetPath];if(s.animComponent){s.animComponent.targets[r.targetPath].layerCounter--}}}}}i.splice(t,1);this._inputs.splice(t,1);this._outputs.splice(t,1)}removeClips(){while(this._clips.length>0){this.removeClip(0)}}updateClipTrack(t,e){this._clips.forEach((s=>{if(s.name.includes(t)){s.track=e}}));this.rebind()}findClip(t){const e=this._clips;for(let s=0;s<e.length;++s){const i=e[s];if(i.name===t){return i}}return null}rebind(){this._binder.rebind();this._targets={};const t=[...this.clips];this.removeClips();t.forEach((t=>{this.addClip(t)}))}assignMask(t){return this._binder.assignMask(t)}update(t,e=true){const s=this._clips;const i=s.map(((t,e)=>e));AO.stableSort(i,((t,e)=>s[t].blendOrder<s[e].blendOrder));for(let n=0;n<i.length;++n){const r=i[n];const a=s[r];const o=this._inputs[r];const l=this._outputs[r];const h=a.blendWeight;if(h>0){a._update(t)}if(!e)break;let c;let d;let u;if(h>=1){for(let t=0;t<o.length;++t){c=o[t];d=l[t];u=d.value;AO.set(u,c,d.target.type);d.blendCounter++}}else if(h>0){for(let t=0;t<o.length;++t){c=o[t];d=l[t];u=d.value;if(d.blendCounter===0){AO.set(u,c,d.target.type)}else{AO.blend(u,c,h,d.target.type)}d.blendCounter++}}}const n=this._targets;const r=this._binder;for(const t in n){if(n.hasOwnProperty(t)){const e=n[t];if(r.animComponent&&e.target.isTransform){const s=r.animComponent.targets[t];if(s.counter===s.layerCounter){s.counter=0}if(!s.path){s.path=t;s.baseValue=e.target.get();s.setter=e.target.set}s.updateValue(r.layerIndex,e.value);s.counter++}else{e.target.set(e.value)}e.blendCounter=0}}this._binder.update(t)}}class LO{constructor(t){this._events=[...t];this._events.sort(((t,e)=>t.time-e.time))}get events(){return this._events}}class DO{static{this.EMPTY=Object.freeze(new DO("empty",Number.MAX_VALUE,[],[],[]))}constructor(t,e,s,i,n,r=new LO([])){this._name=t;this._duration=e;this._inputs=s;this._outputs=i;this._curves=n;this._animEvents=r}get name(){return this._name}get duration(){return this._duration}get inputs(){return this._inputs}get outputs(){return this._outputs}get curves(){return this._curves}set events(t){this._animEvents=t}get events(){return this._animEvents.events}eval(t,e){e._time=t;const s=this._inputs;const i=this._outputs;const n=this._curves;const r=e._cache;const a=e._results;for(let e=0;e<s.length;++e){r[e].update(t,s[e]._data)}for(let t=0;t<n.length;++t){const e=n[t];const s=i[e._output];const o=a[t];r[e._input].eval(o,e._interpolation,s)}}}class MO{static joinPath(t,e){e=e||".";const s=function(t){return t.replace(/\\/g,"\\\\").replace(new RegExp(`\\${e}`,"g"),`\\${e}`)};return t.map(s).join(e)}static splitPath(t,e){e=e||".";const s=[];let i="";let n=0;while(n<t.length){let r=t[n++];if(r==="\\"&&n<t.length){r=t[n++];if(r==="\\"||r===e){i+=r}else{i+=`\\${r}`}}else if(r===e){s.push(i);i=""}else{i+=r}}if(i.length>0){s.push(i)}return s}static encode(t,e,s){return`${Array.isArray(t)?t.join("/"):t}/${e}/${Array.isArray(s)?s.join("/"):s}`}resolve(t){return null}unresolve(t){}update(t){}}class IO{constructor(t,e,s,i){if(t.set){this._set=t.set;this._get=t.get}else{this._set=t}this._type=e;this._components=s;this._targetPath=i;this._isTransform=this._targetPath.substring(this._targetPath.length-13)==="localRotation"||this._targetPath.substring(this._targetPath.length-13)==="localPosition"||this._targetPath.substring(this._targetPath.length-10)==="localScale"}get set(){return this._set}get get(){return this._get}get type(){return this._type}get components(){return this._components}get targetPath(){return this._targetPath}get isTransform(){return this._isTransform}}class RO{constructor(t){this._isPathInMask=(t,e)=>{const s=this._mask[t];if(!s)return false;else if(s.children||e&&s.value!==false)return true;return false};this.graph=t;if(!t)return;this._mask=null;const e={};const s=function(t){e[t.name]=t;for(let e=0;e<t.children.length;++e){s(t.children[e])}};s(t);this.nodes=e;this.targetCache={};const i=function(t){let e=t;while(e&&!(e instanceof dC)){e=e.parent}let s;if(e){if(e.render){s=e.render.meshInstances}else if(e.model){s=e.model.meshInstances}}return s};this.nodeCounts={};this.activeNodes=[];this.handlers={localPosition:function(t){const e=t.localPosition;const s=function(t){e.set(...t)};return RO.createAnimTarget(s,"vector",3,t,"localPosition")},localRotation:function(t){const e=t.localRotation;const s=function(t){e.set(...t)};return RO.createAnimTarget(s,"quaternion",4,t,"localRotation")},localScale:function(t){const e=t.localScale;const s=function(t){e.set(...t)};return RO.createAnimTarget(s,"vector",3,t,"localScale")},weight:function(t,e){if(e.indexOf("name.")===0){e=e.replace("name.","")}else{e=Number(e)}const s=i(t);let n;if(s){for(let i=0;i<s.length;++i){if(s[i].node.name===t.name&&s[i].morphInstance){const t=s[i].morphInstance;const r=s=>{t.setWeight(e,s[0])};if(!n)n=[];n.push(r)}}}if(n){const s=t=>{for(let e=0;e<n.length;++e){n[e](t)}};return RO.createAnimTarget(s,"number",1,t,`weight.${e}`)}return null},materialTexture:(t,e)=>{const s=i(t);if(s){let i;for(let e=0;e<s.length;++e){if(s[e].node.name===t.name){i=s[e];break}}if(i){const s=t=>{const s=this.animComponent.system.app.assets.get(t[0]);if(s&&s.resource&&s.type==="texture"){i.material[e]=s.resource;i.material.update()}};return RO.createAnimTarget(s,"vector",1,t,"materialTexture","material")}}return null}}}_isPathActive(t){if(!this._mask)return true;const e=[t.entityPath[0],this.graph.name];for(let s=0;s<e.length;++s){let i=e[s];if(this._isPathInMask(i,t.entityPath.length===1))return true;for(let e=1;e<t.entityPath.length;e++){i+=`/${t.entityPath[e]}`;if(this._isPathInMask(i,e===t.entityPath.length-1))return true}}return false}findNode(t){if(!this._isPathActive(t)){return null}let e;if(this.graph){e=this.graph.findByPath(t.entityPath);if(!e){e=this.graph.findByPath(t.entityPath.slice(1))}}if(!e){e=this.nodes[t.entityPath[t.entityPath.length-1]||""]}return e}static createAnimTarget(t,e,s,i,n,r){const a=MO.encode(i.path,r?r:"entity",n);return new IO(t,e,s,a)}resolve(t){const e=MO.encode(t.entityPath,t.component,t.propertyPath);let s=this.targetCache[e];if(s)return s;const i=this.findNode(t);if(!i){return null}const n=this.handlers[t.propertyPath];if(!n){return null}s=n(i);if(!s){return null}this.targetCache[e]=s;if(!this.nodeCounts[i.path]){this.activeNodes.push(i);this.nodeCounts[i.path]=1}else{this.nodeCounts[i.path]++}return s}unresolve(t){if(t.component!=="graph"){return}const e=this.nodes[t.entityPath[t.entityPath.length-1]||""];this.nodeCounts[e.path]--;if(this.nodeCounts[e.path]===0){const t=this.activeNodes;const s=t.indexOf(e.node);const i=t.length;if(s<i-1){t[s]=t[i-1]}t.pop()}}update(t){const e=this.activeNodes;for(let t=0;t<e.length;++t){e[t]._dirtifyLocal()}}assignMask(t){if(t!==this._mask){this._mask=t;return true}return false}}class OO extends qR{set animations(t){this._animations=t;this.onSetAnimations()}get animations(){return this._animations}set assets(t){const e=this._assets;if(e&&e.length){for(let t=0;t<e.length;t++){if(e[t]){const s=this.system.app.assets.get(e[t]);if(s){s.off("change",this.onAssetChanged,this);s.off("remove",this.onAssetRemoved,this);const t=this.animationsIndex[s.id];if(this.currAnim===t){this._stopCurrentAnimation()}delete this.animations[t];delete this.animationsIndex[s.id]}}}}this._assets=t;const s=t.map((t=>t instanceof qA?t.id:t));this.loadAnimationAssets(s)}get assets(){return this._assets}set currentTime(t){if(this.skeleton){this.skeleton.currentTime=t;this.skeleton.addTime(0);this.skeleton.updateGraph()}if(this.animEvaluator){const e=this.animEvaluator.clips;for(let s=0;s<e.length;++s){e[s].time=t}}}get currentTime(){if(this.skeleton){return this.skeleton._time}if(this.animEvaluator){const t=this.animEvaluator.clips;if(t.length>0){return t[t.length-1].time}}return 0}get duration(){if(this.currAnim){return this.animations[this.currAnim].duration}return 0}set loop(t){this._loop=t;if(this.skeleton){this.skeleton.looping=t}if(this.animEvaluator){for(let e=0;e<this.animEvaluator.clips.length;++e){this.animEvaluator.clips[e].loop=t}}}get loop(){return this._loop}play(t,e=0){if(!this.enabled||!this.entity.enabled){return}if(!this.animations[t]){return}this.prevAnim=this.currAnim;this.currAnim=t;if(this.model){if(!this.skeleton&&!this.animEvaluator){this._createAnimationController()}const t=this.animations[this.prevAnim];const s=this.animations[this.currAnim];this.blending=e>0&&!!this.prevAnim;if(this.blending){this.blend=0;this.blendSpeed=1/e}if(this.skeleton){if(this.blending){this.fromSkel.animation=t;this.fromSkel.addTime(this.skeleton._time);this.toSkel.animation=s}else{this.skeleton.animation=s}}if(this.animEvaluator){const t=this.animEvaluator;if(this.blending){while(t.clips.length>1){t.removeClip(0)}}else{this.animEvaluator.removeClips()}const e=new tO(this.animations[this.currAnim],0,1,true,this.loop);e.name=this.currAnim;e.blendWeight=this.blending?0:1;e.reset();this.animEvaluator.addClip(e)}}this.playing=true}getAnimation(t){return this.animations[t]}setModel(t){if(t!==this.model){this._resetAnimationController();this.model=t;if(this.animations&&this.currAnim&&this.animations[this.currAnim]){this.play(this.currAnim)}}}onSetAnimations(){const t=this.entity.model;if(t){const e=t.model;if(e&&e!==this.model){this.setModel(e)}}if(!this.currAnim&&this.activate&&this.enabled&&this.entity.enabled){const t=Object.keys(this._animations);if(t.length>0){this.play(t[0])}}}_resetAnimationController(){this.skeleton=null;this.fromSkel=null;this.toSkel=null;this.animEvaluator=null}_createAnimationController(){const t=this.model;const e=this.animations;let s=false;let i=false;for(const t in e){if(e.hasOwnProperty(t)){const n=e[t];if(n.constructor===DO){i=true}else{s=true}}}const n=t.getGraph();if(s){this.fromSkel=new yb(n);this.toSkel=new yb(n);this.skeleton=new yb(n);this.skeleton.looping=this.loop;this.skeleton.setGraph(n)}else if(i){this.animEvaluator=new PO(new RO(this.entity))}}loadAnimationAssets(t){if(!t||!t.length){return}const e=this.system.app.assets;const s=t=>{if(t.resources.length>1){for(let e=0;e<t.resources.length;e++){this.animations[t.resources[e].name]=t.resources[e];this.animationsIndex[t.id]=t.resources[e].name}}else{this.animations[t.name]=t.resource;this.animationsIndex[t.id]=t.name}this.animations=this.animations};const i=t=>{t.off("change",this.onAssetChanged,this);t.on("change",this.onAssetChanged,this);t.off("remove",this.onAssetRemoved,this);t.on("remove",this.onAssetRemoved,this);if(t.resource){s(t)}else{t.once("load",s,this);if(this.enabled&&this.entity.enabled){e.load(t)}}};for(let s=0,n=t.length;s<n;s++){const n=e.get(t[s]);if(n){i(n)}else{e.on(`add:${t[s]}`,i)}}}onAssetChanged(t,e,s,i){if(e==="resource"||e==="resources"){if(e==="resources"&&s&&s.length===0){s=null}if(s){let e=false;if(s.length>1){if(i&&i.length>1){for(let t=0;t<i.length;t++){delete this.animations[i[t].name]}}else{delete this.animations[t.name]}e=false;for(let t=0;t<s.length;t++){this.animations[s[t].name]=s[t];if(!e&&this.currAnim===s[t].name){if(this.playing&&this.enabled&&this.entity.enabled){e=true;this.play(s[t].name)}}}if(!e){this._stopCurrentAnimation();this.onSetAnimations()}}else{if(i&&i.length>1){for(let t=0;t<i.length;t++){delete this.animations[i[t].name]}}this.animations[t.name]=s[0]||s;e=false;if(this.currAnim===t.name){if(this.playing&&this.enabled&&this.entity.enabled){e=true;this.play(t.name)}}if(!e){this._stopCurrentAnimation();this.onSetAnimations()}}this.animationsIndex[t.id]=t.name}else{if(i.length>1){for(let t=0;t<i.length;t++){delete this.animations[i[t].name];if(this.currAnim===i[t].name){this._stopCurrentAnimation()}}}else{delete this.animations[t.name];if(this.currAnim===t.name){this._stopCurrentAnimation()}}delete this.animationsIndex[t.id]}}}onAssetRemoved(t){t.off("remove",this.onAssetRemoved,this);if(this.animations){if(t.resources.length>1){for(let e=0;e<t.resources.length;e++){delete this.animations[t.resources[e].name];if(this.currAnim===t.resources[e].name){this._stopCurrentAnimation()}}}else{delete this.animations[t.name];if(this.currAnim===t.name){this._stopCurrentAnimation()}}delete this.animationsIndex[t.id]}}_stopCurrentAnimation(){this.currAnim=null;this.playing=false;if(this.skeleton){this.skeleton.currentTime=0;this.skeleton.animation=null}if(this.animEvaluator){for(let t=0;t<this.animEvaluator.clips.length;++t){this.animEvaluator.clips[t].stop()}this.animEvaluator.update(0);this.animEvaluator.removeClips()}}onEnable(){super.onEnable();const t=this.assets;const e=this.system.app.assets;if(t){for(let s=0,i=t.length;s<i;s++){let i=t[s];if(!(i instanceof qA)){i=e.get(i)}if(i&&!i.resource){e.load(i)}}}if(this.activate&&!this.currAnim){const t=Object.keys(this.animations);if(t.length>0){this.play(t[0])}}}onBeforeRemove(){for(let t=0;t<this.assets.length;t++){let e=this.assets[t];if(typeof e==="number"){e=this.system.app.assets.get(e)}if(!e)continue;e.off("change",this.onAssetChanged,this);e.off("remove",this.onAssetRemoved,this)}this.skeleton=null;this.fromSkel=null;this.toSkel=null;this.animEvaluator=null}update(t){if(this.blending){this.blend+=t*this.blendSpeed;if(this.blend>=1){this.blend=1}}if(this.playing){const e=this.skeleton;if(e!==null&&this.model!==null){if(this.blending){e.blend(this.fromSkel,this.toSkel,this.blend)}else{const s=t*this.speed;e.addTime(s);if(this.speed>0&&e._time===e.animation.duration&&!this.loop){this.playing=false}else if(this.speed<0&&e._time===0&&!this.loop){this.playing=false}}if(this.blending&&this.blend===1){e.animation=this.toSkel.animation}e.updateGraph()}}const e=this.animEvaluator;if(e){for(let t=0;t<e.clips.length;++t){const s=e.clips[t];s.speed=this.speed;if(!this.playing){s.pause()}else{s.resume()}}if(this.blending&&e.clips.length>1){e.clips[1].blendWeight=this.blend}e.update(t)}if(this.blending&&this.blend===1){this.blending=false}}constructor(...t){super(...t),this._animations={},this._assets=[],this._loop=true,this.animEvaluator=null,this.model=null,this.skeleton=null,this.fromSkel=null,this.toSkel=null,this.animationsIndex={},this.prevAnim=null,this.currAnim=null,this.blend=0,this.blending=false,this.blendSpeed=0,this.activate=true,this.speed=1}}class FO{constructor(){this.enabled=true}}const NO=["enabled"];class kO extends $R{constructor(t){super(t);this.id="animation";this.ComponentType=OO;this.DataType=FO;this.schema=NO;this.on("beforeremove",this.onBeforeRemove,this);this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){s=["activate","enabled","loop","speed","assets"];for(const i of s){if(e.hasOwnProperty(i)){t[i]=e[i]}}super.initializeComponentData(t,e,NO)}cloneComponent(t,e){this.addComponent(e,{});e.animation.assets=t.animation.assets.slice();e.animation.speed=t.animation.speed;e.animation.loop=t.animation.loop;e.animation.activate=t.animation.activate;e.animation.enabled=t.animation.enabled;const s={};const i=t.animation.animations;for(const t in i){if(i.hasOwnProperty(t)){s[t]=i[t]}}e.animation.animations=s;const n={};const r=t.animation.animationsIndex;for(const t in r){if(r.hasOwnProperty(t)){n[t]=r[t]}}e.animation.animationsIndex=n;return e.animation}onBeforeRemove(t,e){e.onBeforeRemove()}onUpdate(t){const e=this.store;for(const s in e){if(e.hasOwnProperty(s)){const i=e[s];if(i.data.enabled&&i.entity.enabled){i.entity.animation.update(t)}}}}destroy(){super.destroy();this.app.systems.off("update",this.onUpdate,this)}}qR._buildAccessors(OO.prototype,NO);class BO{constructor(t,e,s,i,n=1){this._state=t;this._parent=e;this._name=s;if(Array.isArray(i)){this._point=new Ot(i[0],i[1]);this._pointLength=this._point.length()}else{this._point=i;this._pointLength=i}this._speed=n;this._weightedSpeed=1;this._weight=1;this._animTrack=null}get parent(){return this._parent}get name(){return this._name}get path(){return this._parent?`${this._parent.path}.${this._name}`:this._name}get point(){return this._point}get pointLength(){return this._pointLength}set weight(t){this._weight=t}get weight(){return this._parent?this._parent.weight*this._weight:this._weight}get normalizedWeight(){const t=this._state.totalWeight;if(t===0)return 0;return this.weight/t}get speed(){return this._weightedSpeed*this._speed}get absoluteSpeed(){return Math.abs(this._speed)}set weightedSpeed(t){this._weightedSpeed=t}get weightedSpeed(){return this._weightedSpeed}set animTrack(t){this._animTrack=t}get animTrack(){return this._animTrack}}class UO extends BO{constructor(t,e,s,i,n,r,a,o,l){super(t,e,s,i);this._parameters=n;this._parameterValues=new Array(n.length);this._children=[];this._findParameter=l;this._syncAnimations=a!==false;this._pointCache={};for(let e=0;e<r.length;e++){const s=r[e];if(s.children){this._children.push(o(s.type,t,this,s.name,1,s.parameter?[s.parameter]:s.parameters,s.children,s.syncAnimations,o,l))}else{this._children.push(new BO(t,this,s.name,s.point,s.speed))}}}get weight(){this.calculateWeights();return this._parent?this._parent.weight*this._weight:this._weight}get syncAnimations(){return this._syncAnimations}getChild(t){for(let e=0;e<this._children.length;e++){if(this._children[e].name===t)return this._children[e]}return null}updateParameterValues(){let t=true;for(let e=0;e<this._parameterValues.length;e++){const s=this._findParameter(this._parameters[e]).value;if(this._parameterValues[e]!==s){this._parameterValues[e]=s;t=false}}return t}getNodeWeightedDuration(t){return this._children[t].animTrack.duration/this._children[t].speedMultiplier*this._children[t].weight}getNodeCount(){let t=0;for(let e=0;e<this._children.length;e++){const s=this._children[e];if(s.constructor===UO){t+=this._children[e].getNodeCount()}else{t++}}return t}}class zO extends UO{constructor(t,e,s,i,n,r,a,o,l){r.sort(((t,e)=>t.point-e.point));super(t,e,s,i,n,r,a,o,l)}calculateWeights(){if(this.updateParameterValues())return;let t=0;this._children[0].weight=0;for(let e=0;e<this._children.length;e++){const s=this._children[e];if(e!==this._children.length-1){const t=this._children[e+1];if(s.point===t.point){s.weight=.5;t.weight=.5}else if(wt.between(this._parameterValues[0],s.point,t.point,true)){const e=Math.abs(s.point-t.point);const i=Math.abs(s.point-this._parameterValues[0]);const n=(e-i)/e;s.weight=n;t.weight=1-n}else{t.weight=0}}if(this._syncAnimations){t+=s.animTrack.duration/s.absoluteSpeed*s.weight}}if(this._syncAnimations){for(let e=0;e<this._children.length;e++){const s=this._children[e];s.weightedSpeed=s.animTrack.duration/s.absoluteSpeed/t}}}}class VO extends UO{static{this._p=new Ot}static{this._pip=new Ot}pointDistanceCache(t,e){const s=`${t}${e}`;if(!this._pointCache[s]){this._pointCache[s]=this._children[e].point.clone().sub(this._children[t].point)}return this._pointCache[s]}calculateWeights(){if(this.updateParameterValues())return;let t,e;VO._p.set(...this._parameterValues);t=0;e=0;for(let s=0;s<this._children.length;s++){const i=this._children[s];const n=i.point;VO._pip.set(VO._p.x,VO._p.y).sub(n);let r=Number.MAX_VALUE;for(let t=0;t<this._children.length;t++){if(s===t)continue;const e=this.pointDistanceCache(s,t);const i=wt.clamp(1-VO._pip.dot(e)/e.lengthSq(),0,1);if(i<r)r=i}i.weight=r;t+=r;if(this._syncAnimations){e+=i.animTrack.duration/i.absoluteSpeed*i.weight}}for(let s=0;s<this._children.length;s++){const i=this._children[s];i.weight=i._weight/t;if(this._syncAnimations){i.weightedSpeed=i.animTrack.duration/i.absoluteSpeed/e}}}}class GO extends UO{static{this._p=new Ot}static{this._pip=new Ot}pointCache(t,e){const s=`${t}${e}`;if(!this._pointCache[s]){this._pointCache[s]=new Ot((this._children[e].pointLength-this._children[t].pointLength)/((this._children[e].pointLength+this._children[t].pointLength)/2),Ot.angleRad(this._children[t].point,this._children[e].point)*2)}return this._pointCache[s]}calculateWeights(){if(this.updateParameterValues())return;let t,e;GO._p.set(...this._parameterValues);const s=GO._p.length();t=0;e=0;for(let i=0;i<this._children.length;i++){const n=this._children[i];const r=n.point;const a=n.pointLength;let o=Number.MAX_VALUE;for(let t=0;t<this._children.length;t++){if(i===t)continue;const e=this.pointCache(i,t);const n=this._children[t].pointLength;GO._pip.set((s-a)/((n+a)/2),Ot.angleRad(r,GO._p)*2);const l=wt.clamp(1-Math.abs(GO._pip.dot(e)/e.lengthSq()),0,1);if(l<o)o=l}n.weight=o;t+=o;if(this._syncAnimations){e+=n.animTrack.duration/n.absoluteSpeed*n.weight}}for(let s=0;s<this._children.length;s++){const i=this._children[s];i.weight=i._weight/t;if(this._syncAnimations){const s=i.animTrack.duration/e*t;i.weightedSpeed=i.absoluteSpeed*s}}}}class HO extends UO{calculateWeights(){if(this.updateParameterValues())return;let t=0;let e=0;for(let s=0;s<this._children.length;s++){t+=Math.max(this._parameterValues[s],0);if(this._syncAnimations){const t=this._children[s];e+=t.animTrack.duration/t.absoluteSpeed*t.weight}}for(let s=0;s<this._children.length;s++){const i=this._children[s];const n=Math.max(this._parameterValues[s],0);if(t){i.weight=n/t;if(this._syncAnimations){i.weightedSpeed=i.animTrack.duration/i.absoluteSpeed/e}}else{i.weight=0;if(this._syncAnimations){i.weightedSpeed=0}}}}}class WO{constructor(t,e,s=1,i=true,n){this._animations={};this._animationList=[];this._controller=t;this._name=e;this._speed=s;this._loop=i;this._hasAnimations=false;if(n){this._blendTree=this._createTree(n.type,this,null,e,1,n.parameter?[n.parameter]:n.parameters,n.children,n.syncAnimations,this._createTree,this._controller.findParameter)}else{this._blendTree=new BO(this,null,e,1,s)}}_createTree(t,e,s,i,n,r,a,o,l,h){switch(t){case _O:return new zO(e,s,i,n,r,a,o,l,h);case vO:return new VO(e,s,i,n,r,a,o,l,h);case gO:return new GO(e,s,i,n,r,a,o,l,h);case yO:return new HO(e,s,i,n,r,a,o,l,h)}return undefined}_getNodeFromPath(t){let e=this._blendTree;for(let s=1;s<t.length;s++){e=e.getChild(t[s])}return e}addAnimation(t,e){const s=t.join(".");const i=this._animationList.findIndex((t=>t.path===s));if(i>=0){this._animationList[i].animTrack=e}else{const s=this._getNodeFromPath(t);s.animTrack=e;this._animationList.push(s)}this._updateHasAnimations()}_updateHasAnimations(){this._hasAnimations=this._animationList.length>0&&this._animationList.every((t=>t.animTrack&&t.animTrack!==DO.EMPTY))}get name(){return this._name}set animations(t){this._animationList=t;this._updateHasAnimations()}get animations(){return this._animationList}get hasAnimations(){return this._hasAnimations}set speed(t){this._speed=t}get speed(){return this._speed}set loop(t){this._loop=t}get loop(){return this._loop}get nodeCount(){if(!this._blendTree||this._blendTree.constructor===BO)return 1;return this._blendTree.getNodeCount()}get playable(){return wO.indexOf(this.name)!==-1||this.animations.length===this.nodeCount}get looping(){if(this.animations.length>0){const t=`${this.name}.${this.animations[0].animTrack.name}`;const e=this._controller.animEvaluator.findClip(t);if(e){return e.loop}}return false}get totalWeight(){let t=0;for(let e=0;e<this.animations.length;e++){t+=this.animations[e].weight}return t}get timelineDuration(){let t=0;for(let e=0;e<this.animations.length;e++){const s=this.animations[e];if(s.animTrack.duration>t){t=s.animTrack.duration}}return t}}class XO{constructor({from:t,to:e,time:s=0,priority:i=0,conditions:n=[],exitTime:r=null,transitionOffset:a=null,interruptionSource:o=eO}){this._from=t;this._to=e;this._time=s;this._priority=i;this._conditions=n;this._exitTime=r;this._transitionOffset=a;this._interruptionSource=o}get from(){return this._from}set to(t){this._to=t}get to(){return this._to}get time(){return this._time}get priority(){return this._priority}get conditions(){return this._conditions}get exitTime(){return this._exitTime}get transitionOffset(){return this._transitionOffset}get interruptionSource(){return this._interruptionSource}get hasExitTime(){return!!this.exitTime}}class qO{constructor(t,e,s,i,n,r,a){this._states={};this._stateNames=[];this._findTransitionsFromStateCache={};this._findTransitionsBetweenStatesCache={};this._previousStateName=null;this._activeStateName=SO;this._activeStateDuration=0;this._activeStateDurationDirty=true;this._playing=false;this._currTransitionTime=1;this._totalTransitionTime=1;this._isTransitioning=false;this._transitionInterruptionSource=eO;this._transitionPreviousStates=[];this._timeInState=0;this._timeInStateBefore=0;this.findParameter=t=>this._findParameter(t);this._animEvaluator=t;this._eventHandler=n;this._findParameter=r;this._consumeTrigger=a;for(let t=0;t<e.length;t++){this._states[e[t].name]=new WO(this,e[t].name,e[t].speed,e[t].loop,e[t].blendTree);this._stateNames.push(e[t].name)}this._transitions=s.map((t=>new XO({...t})));this._activate=i}get animEvaluator(){return this._animEvaluator}set activeState(t){this._activeStateName=t}get activeState(){return this._findState(this._activeStateName)}get activeStateName(){return this._activeStateName}get activeStateAnimations(){return this.activeState.animations}set previousState(t){this._previousStateName=t}get previousState(){return this._findState(this._previousStateName)}get previousStateName(){return this._previousStateName}get playable(){let t=true;for(let e=0;e<this._stateNames.length;e++){if(!this._states[this._stateNames[e]].playable){t=false}}return t}set playing(t){this._playing=t}get playing(){return this._playing}get activeStateProgress(){return this._getActiveStateProgressForTime(this._timeInState)}get activeStateDuration(){if(this._activeStateDurationDirty){let t=0;for(let e=0;e<this.activeStateAnimations.length;e++){const s=this._animEvaluator.findClip(this.activeStateAnimations[e].name);if(s){t=Math.max(t,s.track.duration)}}this._activeStateDuration=t;this._activeStateDurationDirty=false}return this._activeStateDuration}set activeStateCurrentTime(t){this._timeInStateBefore=t;this._timeInState=t;for(let e=0;e<this.activeStateAnimations.length;e++){const s=this.animEvaluator.findClip(this.activeStateAnimations[e].name);if(s){s.time=t}}}get activeStateCurrentTime(){return this._timeInState}get transitioning(){return this._isTransitioning}get transitionProgress(){return this._currTransitionTime/this._totalTransitionTime}get states(){return this._stateNames}assignMask(t){return this._animEvaluator.assignMask(t)}_findState(t){return this._states[t]}_getActiveStateProgressForTime(t){if(this.activeStateName===SO||this.activeStateName===xO||this.activeStateName===TO){return 1}const e=this._animEvaluator.findClip(this.activeStateAnimations[0].name);if(e){return e.progressForTime(t)}return null}_findTransitionsFromState(t){let e=this._findTransitionsFromStateCache[t];if(!e){e=this._transitions.filter((e=>e.from===t));Ux(e);this._findTransitionsFromStateCache[t]=e}return e}_findTransitionsBetweenStates(t,e){let s=this._findTransitionsBetweenStatesCache[`${t}->${e}`];if(!s){s=this._transitions.filter((s=>s.from===t&&s.to===e));Ux(s);this._findTransitionsBetweenStatesCache[`${t}->${e}`]=s}return s}_transitionHasConditionsMet(t){const e=t.conditions;for(let t=0;t<e.length;t++){const s=e[t];const i=this._findParameter(s.parameterName);switch(s.predicate){case aO:if(!(i.value>s.value))return false;break;case oO:if(!(i.value<s.value))return false;break;case lO:if(!(i.value>=s.value))return false;break;case hO:if(!(i.value<=s.value))return false;break;case cO:if(!(i.value===s.value))return false;break;case dO:if(!(i.value!==s.value))return false;break}}return true}_findTransition(t,e){let s=[];if(t&&e){s=s.concat(this._findTransitionsBetweenStates(t,e))}else{if(!this._isTransitioning){s=s.concat(this._findTransitionsFromState(this._activeStateName));s=s.concat(this._findTransitionsFromState(TO))}else{switch(this._transitionInterruptionSource){case sO:s=s.concat(this._findTransitionsFromState(this._previousStateName));s=s.concat(this._findTransitionsFromState(TO));break;case iO:s=s.concat(this._findTransitionsFromState(this._activeStateName));s=s.concat(this._findTransitionsFromState(TO));break;case nO:s=s.concat(this._findTransitionsFromState(this._previousStateName));s=s.concat(this._findTransitionsFromState(this._activeStateName));s=s.concat(this._findTransitionsFromState(TO));break;case rO:s=s.concat(this._findTransitionsFromState(this._activeStateName));s=s.concat(this._findTransitionsFromState(this._previousStateName));s=s.concat(this._findTransitionsFromState(TO));break}}}s=s.filter((t=>{if(t.to===this.activeStateName){return false}if(t.hasExitTime){let e=this._getActiveStateProgressForTime(this._timeInStateBefore);let s=this._getActiveStateProgressForTime(this._timeInState);if(t.exitTime<1&&this.activeState.loop){e-=Math.floor(e);s-=Math.floor(s)}if(s===e){if(s!==t.exitTime){return null}}else if(!(t.exitTime>e&&t.exitTime<=s)){return null}}return this._transitionHasConditionsMet(t)}));if(s.length>0){const t=s[0];if(t.to===xO){const e=this._findTransitionsFromState(SO)[0];t.to=e.to}return t}return null}updateStateFromTransition(t){let e;let s;let i;this.previousState=t.from?this.activeStateName:null;this.activeState=t.to;this._activeStateDurationDirty=true;for(let e=0;e<t.conditions.length;e++){const s=t.conditions[e];const i=this._findParameter(s.parameterName);if(i.type===mO){this._consumeTrigger(s.parameterName)}}if(this.previousState){if(!this._isTransitioning){this._transitionPreviousStates=[]}this._transitionPreviousStates.push({name:this._previousStateName,weight:1});const t=Math.min(this._totalTransitionTime!==0?this._currTransitionTime/this._totalTransitionTime:1,1);for(let n=0;n<this._transitionPreviousStates.length;n++){if(!this._isTransitioning){this._transitionPreviousStates[n].weight=1}else if(n!==this._transitionPreviousStates.length-1){this._transitionPreviousStates[n].weight*=1-t}else{this._transitionPreviousStates[n].weight=t}e=this._findState(this._transitionPreviousStates[n].name);for(let t=0;t<e.animations.length;t++){s=e.animations[t];i=this._animEvaluator.findClip(`${s.name}.previous.${n}`);if(!i){i=this._animEvaluator.findClip(s.name);i.name=`${s.name}.previous.${n}`}if(n!==this._transitionPreviousStates.length-1){i.pause()}}}}this._isTransitioning=true;this._totalTransitionTime=t.time;this._currTransitionTime=0;this._transitionInterruptionSource=t.interruptionSource;const n=this.activeState;const r=t.transitionOffset&&t.transitionOffset>0&&t.transitionOffset<1;let a=0;let o=0;if(r){const e=n.timelineDuration*t.transitionOffset;a=e;o=e}this._timeInState=a;this._timeInStateBefore=o;for(let e=0;e<n.animations.length;e++){i=this._animEvaluator.findClip(n.animations[e].name);if(!i){const t=Number.isFinite(n.animations[e].speed)?n.animations[e].speed:n.speed;i=new tO(n.animations[e].animTrack,this._timeInState,t,true,n.loop,this._eventHandler);i.name=n.animations[e].name;this._animEvaluator.addClip(i)}else{i.reset()}if(t.time>0){i.blendWeight=0}else{i.blendWeight=n.animations[e].normalizedWeight}i.play();if(r){i.time=n.timelineDuration*t.transitionOffset}else{const t=n.speed>=0?0:this.activeStateDuration;i.time=t}}}_transitionToState(t){if(!this._findState(t)){return}let e=this._findTransition(this._activeStateName,t);if(!e){this._animEvaluator.removeClips();e=new XO({from:null,to:t})}this.updateStateFromTransition(e)}assignAnimation(t,e,s,i){const n=t.split(".");let r=this._findState(n[0]);if(!r){r=new WO(this,n[0],s);this._states[n[0]]=r;this._stateNames.push(n[0])}r.addAnimation(n,e);this._animEvaluator.updateClipTrack(r.name,e);if(s!==undefined){r.speed=s}if(i!==undefined){r.loop=i}if(!this._playing&&this._activate&&this.playable){this.play()}this._activeStateDurationDirty=true}removeNodeAnimations(t){if(wO.indexOf(t)!==-1){return false}const e=this._findState(t);if(!e){return false}e.animations=[];return true}play(t){if(t){this._transitionToState(t)}this._playing=true}pause(){this._playing=false}reset(){this._previousStateName=null;this._activeStateName=SO;this._playing=false;this._currTransitionTime=1;this._totalTransitionTime=1;this._isTransitioning=false;this._timeInState=0;this._timeInStateBefore=0;this._animEvaluator.removeClips()}rebind(){this._animEvaluator.rebind()}update(t){if(!this._playing){return}let e;let s;let i;if(this.activeState.loop||this._timeInState<this.activeStateDuration){this._timeInStateBefore=this._timeInState;this._timeInState+=t*this.activeState.speed;if(!this.activeState.loop&&this._timeInState>this.activeStateDuration){this._timeInState=this.activeStateDuration;t=this.activeStateDuration-this._timeInStateBefore}}const n=this._findTransition(this._activeStateName);if(n){this.updateStateFromTransition(n)}if(this._isTransitioning){this._currTransitionTime+=t;if(this._currTransitionTime<=this._totalTransitionTime){const t=this._totalTransitionTime!==0?this._currTransitionTime/this._totalTransitionTime:1;for(let n=0;n<this._transitionPreviousStates.length;n++){e=this._findState(this._transitionPreviousStates[n].name);const r=this._transitionPreviousStates[n].weight;for(let a=0;a<e.animations.length;a++){s=e.animations[a];i=this._animEvaluator.findClip(`${s.name}.previous.${n}`);if(i){i.blendWeight=(1-t)*s.normalizedWeight*r}}}e=this.activeState;for(let i=0;i<e.animations.length;i++){s=e.animations[i];this._animEvaluator.findClip(s.name).blendWeight=t*s.normalizedWeight}}else{this._isTransitioning=false;const t=this.activeStateAnimations.length;const n=this._animEvaluator.clips.length;for(let e=0;e<n-t;e++){this._animEvaluator.removeClip(0)}this._transitionPreviousStates=[];e=this.activeState;for(let t=0;t<e.animations.length;t++){s=e.animations[t];i=this._animEvaluator.findClip(s.name);if(i){i.blendWeight=s.normalizedWeight}}}}else{if(this.activeState._blendTree.constructor!==BO){e=this.activeState;for(let t=0;t<e.animations.length;t++){s=e.animations[t];i=this._animEvaluator.findClip(s.name);if(i){i.blendWeight=s.normalizedWeight;if(s.parent.syncAnimations){i.speed=s.speed}}}}}this._animEvaluator.update(t,this.activeState.hasAnimations)}}const $O=new Ot;const jO=new It;const YO=new Ft;const KO=new bt;const ZO=new Gt;class QO extends RO{constructor(t,e,s,i,n){super(e);this.animComponent=t;this._mask=i;this.layerName=s;this.layerIndex=n}static _packFloat(t){return t[0]}static _packBoolean(t){return!!t[0]}static _packVec2(t){$O.x=t[0];$O.y=t[1];return $O}static _packVec3(t){jO.x=t[0];jO.y=t[1];jO.z=t[2];return jO}static _packVec4(t){YO.x=t[0];YO.y=t[1];YO.z=t[2];YO.w=t[3];return YO}static _packColor(t){KO.r=t[0];KO.g=t[1];KO.b=t[2];KO.a=t[3];return KO}static _packQuat(t){ZO.x=t[0];ZO.y=t[1];ZO.z=t[2];ZO.w=t[3];return ZO}resolve(t){const e=MO.encode(t.entityPath,t.component,t.propertyPath);let s=this.targetCache[e];if(s)return s;let i;let n;let r;switch(t.component){case"entity":i=this._getEntityFromHierarchy(t.entityPath);r=MO.encode(i.path,"entity",t.propertyPath);n=i;break;case"graph":n=this.findNode(t);if(!n)return null;r=MO.encode(n.path,"graph",t.propertyPath);break;default:i=this._getEntityFromHierarchy(t.entityPath);n=i.findComponent(t.component);if(!n){return null}r=MO.encode(i.path,t.component,t.propertyPath);break}s=this._createAnimTargetForProperty(n,t.propertyPath,r);this.targetCache[e]=s;return s}update(t){const e=this.activeNodes;if(e){for(let t=0;t<e.length;t++){e[t]._dirtifyLocal()}}}_getEntityFromHierarchy(t){if(!this.animComponent.entity.name===t[0]){return null}const e=this.animComponent.entity;if(t.length===1){return e}return e._parent.findByPath(t)}_resolvePath(t,e,s){const i=e.length-(s?0:1);for(let s=0;s<i;s++){t=t[e[s]]}return t}_setter(t,e,s){const i=this._resolvePath(t,e);const n=e[e.length-1];const r=`set${n.substring(0,1).toUpperCase()}${n.substring(1)}`;if(i[r]){const t=i[`get${n.substring(0,1).toUpperCase()}${n.substring(1)}`].bind(i);let e=t();e=[e.x,e.y,e.z,e.w];const a=i[r].bind(i);return{set:t=>{a(s(t))},get:()=>e}}const a=i[n];if(typeof a==="object"&&a.hasOwnProperty("copy")){return function(t){a.copy(s(t))}}if([Ot,It,Ft,bt,Gt].indexOf(i.constructor)!==-1&&e.length>1){const r=e.length>2?this._resolvePath(t,e.slice(0,-1)):t;const a=e[e.length-2];return function(t){i[n]=s(t);r[a]=i}}return function(t){i[n]=s(t)}}_createAnimTargetForProperty(t,e,s){if(this.handlers&&e[0].startsWith("weight.")){return this.handlers.weight(t,e[0].replace("weight.",""))}else if(this.handlers&&e[0]==="material"&&e.length===2){const s=e[1];if(s.endsWith("Map")){return this.handlers.materialTexture(t,s)}}const i=this._resolvePath(t,e,true);if(typeof i==="undefined"){return null}let n;let r;let a;if(typeof i==="number"){n=this._setter(t,e,QO._packFloat);r="vector";a=1}else if(typeof i==="boolean"){n=this._setter(t,e,QO._packBoolean);r="vector";a=1}else if(typeof i==="object"){switch(i.constructor){case Ot:n=this._setter(t,e,QO._packVec2);r="vector";a=2;break;case It:n=this._setter(t,e,QO._packVec3);r="vector";a=3;break;case Ft:n=this._setter(t,e,QO._packVec4);r="vector";a=4;break;case bt:n=this._setter(t,e,QO._packColor);r="vector";a=4;break;case Gt:n=this._setter(t,e,QO._packQuat);r="quaternion";a=4;break;default:return null}}if(e.indexOf("material")!==-1){return new IO((e=>{n(e);t.material.update()}),r,a,s)}return new IO(n,r,a,s)}rebind(){this.targetCache={};if(this.animComponent.rootBone){this.graph=this.animComponent.rootBone}else{this.graph=this.animComponent.entity}const t={};const e=function(s){t[s.name]=s;for(let t=0;t<s.children.length;++t){e(s.children[t])}};e(this.graph);this.nodes=t}}class JO{constructor(t,e,s,i=1,n=bO){this._mask=null;this._blendTime=0;this._blendTimeElapsed=0;this._startingWeight=0;this._targetWeight=0;this._name=t;this._controller=e;this._component=s;this._weight=i;this._blendType=n}get name(){return this._name}set playing(t){this._controller.playing=t}get playing(){return this._controller.playing}get playable(){return this._controller.playable}get activeState(){return this._controller.activeStateName}get previousState(){return this._controller.previousStateName}get activeStateProgress(){return this._controller.activeStateProgress}get activeStateDuration(){return this._controller.activeStateDuration}set activeStateCurrentTime(t){const e=this._controller;const s=e.playing;e.playing=true;e.activeStateCurrentTime=t;if(!s){e.update(0)}e.playing=s}get activeStateCurrentTime(){return this._controller.activeStateCurrentTime}get transitioning(){return this._controller.transitioning}get transitionProgress(){if(this.transitioning){return this._controller.transitionProgress}return null}get states(){return this._controller.states}set weight(t){this._weight=t;this._component.dirtifyTargets()}get weight(){return this._weight}set blendType(t){if(t!==this._blendType){this._blendType=t;if(this._controller.normalizeWeights){this._component.rebind()}}}get blendType(){return this._blendType}set mask(t){if(this._controller.assignMask(t)){this._component.rebind()}this._mask=t}get mask(){return this._mask}play(t){this._controller.play(t)}pause(){this._controller.pause()}reset(){this._controller.reset()}rebind(){this._controller.rebind()}update(t){if(this._blendTime){if(this._blendTimeElapsed<this._blendTime){this.weight=wt.lerp(this._startingWeight,this._targetWeight,this._blendTimeElapsed/this._blendTime);this._blendTimeElapsed+=t}else{this.weight=this._targetWeight;this._blendTime=0;this._blendTimeElapsed=0;this._startingWeight=0;this._targetWeight=0}}this._controller.update(t)}blendToWeight(t,e){this._startingWeight=this.weight;this._targetWeight=t;this._blendTime=Math.max(0,e);this._blendTimeElapsed=0}assignAnimation(t,e,s,i){if(!(e instanceof DO)){return}this._controller.assignAnimation(t,e,s,i);if(this._controller._transitions.length===0){this._controller._transitions.push(new XO({from:"START",to:t}))}if(this._component.activate&&this._component.playable){this._component.playing=true}}removeNodeAnimations(t){if(this._controller.removeNodeAnimations(t)){this._component.playing=false}}getAnimationAsset(t){return this._component.animationAssets[`${this.name}:${t}`]}transition(t,e=0,s=null){this._controller.updateStateFromTransition(new XO({from:this._controller.activeStateName,to:t,time:e,transitionOffset:s}))}}class tF{constructor(t){this._layers=[];this._parameters={};if(!Array.isArray(t.layers)){for(const e in t.layers){const s=t.layers[e];const i={name:s.name,blendType:s.blendType,weight:s.weight,states:[],transitions:[]};for(let e=0;e<s.states.length;e++){i.states.push(t.states[s.states[e]])}for(let e=0;e<s.transitions.length;e++){const n=t.transitions[s.transitions[e]];if(n.conditions&&!Array.isArray(n.conditions)){const t=Object.keys(n.conditions);const e=[];for(let s=0;s<t.length;s++){const i=n.conditions[t[s]];if(i.parameterName){e.push(i)}}n.conditions=e}if(Number.isInteger(n.from)){n.from=t.states[n.from].name}if(Number.isInteger(n.to)){n.to=t.states[n.to].name}i.transitions.push(n)}this._layers.push(i)}}else{this._layers=t.layers}for(const e in t.parameters){const s=t.parameters[e];this._parameters[s.name]={type:s.type,value:s.value}}}get parameters(){return Object.assign({},this._parameters)}get layers(){return this._layers}}class eF extends qR{set stateGraphAsset(t){if(t===null){this.removeStateGraph();return}if(this._stateGraphAsset){const t=this.system.app.assets.get(this._stateGraphAsset);t.off("change",this._onStateGraphAssetChangeEvent,this)}let e;let s;if(t instanceof qA){e=t.id;s=this.system.app.assets.get(e);if(!s){this.system.app.assets.add(t);s=this.system.app.assets.get(e)}}else{e=t;s=this.system.app.assets.get(e)}if(!s||this._stateGraphAsset===e){return}if(s.resource){this._stateGraph=s.resource;this.loadStateGraph(this._stateGraph);s.on("change",this._onStateGraphAssetChangeEvent,this)}else{s.once("load",(t=>{this._stateGraph=t.resource;this.loadStateGraph(this._stateGraph)}));s.on("change",this._onStateGraphAssetChangeEvent,this);this.system.app.assets.load(s)}this._stateGraphAsset=e}get stateGraphAsset(){return this._stateGraphAsset}set normalizeWeights(t){this._normalizeWeights=t;this.unbind()}get normalizeWeights(){return this._normalizeWeights}set animationAssets(t){this._animationAssets=t;this.loadAnimationAssets()}get animationAssets(){return this._animationAssets}set speed(t){this._speed=t}get speed(){return this._speed}set activate(t){this._activate=t}get activate(){return this._activate}set playing(t){this._playing=t}get playing(){return this._playing}set rootBone(t){if(typeof t==="string"){const e=this.entity.root.findByGuid(t);this._rootBone=e}else if(t instanceof dC){this._rootBone=t}else{this._rootBone=null}this.rebind()}get rootBone(){return this._rootBone}set stateGraph(t){this._stateGraph=t}get stateGraph(){return this._stateGraph}get layers(){return this._layers}set layerIndices(t){this._layerIndices=t}get layerIndices(){return this._layerIndices}set parameters(t){this._parameters=t}get parameters(){return this._parameters}set targets(t){this._targets=t}get targets(){return this._targets}get playable(){for(let t=0;t<this._layers.length;t++){if(!this._layers[t].playable){return false}}return true}get baseLayer(){if(this._layers.length>0){return this._layers[0]}return null}_onStateGraphAssetChangeEvent(t){const e=this.animationAssets;const s=this.layers.map((t=>t.mask));this.removeStateGraph();this._stateGraph=new tF(t._data);this.loadStateGraph(this._stateGraph);this.animationAssets=e;this.loadAnimationAssets();this.layers.forEach(((t,e)=>{t.mask=s[e]}));this.rebind()}dirtifyTargets(){const t=Object.values(this._targets);for(let e=0;e<t.length;e++){t[e].dirty=true}}_addLayer({name:t,states:e,transitions:s,weight:i,mask:n,blendType:r}){let a;if(this.rootBone){a=this.rootBone}else{a=this.entity}const o=this._layers.length;const l=new QO(this,a,t,n,o);const h=new PO(l);const c=new qO(h,e,s,this._activate,this,this.findParameter,this.consumeTrigger);this._layers.push(new JO(t,c,this,i,r));this._layerIndices[t]=o;return this._layers[o]}addLayer(t,e,s,i){const n=this.findAnimationLayer(t);if(n)return n;const r=[{name:"START",speed:1}];const a=[];return this._addLayer({name:t,states:r,transitions:a,weight:e,mask:s,blendType:i})}_assignParameters(t){this._parameters={};const e=Object.keys(t.parameters);for(let s=0;s<e.length;s++){const i=e[s];this._parameters[i]={type:t.parameters[i].type,value:t.parameters[i].value}}}loadStateGraph(t){this._stateGraph=t;this._assignParameters(t);this._layers=[];let e=false;for(let s=0;s<t.layers.length;s++){const i=t.layers[s];this._addLayer({...i});if(i.states.some((t=>t.blendTree))){e=true}}if(!e){this.setupAnimationAssets()}}setupAnimationAssets(){for(let t=0;t<this._layers.length;t++){const e=this._layers[t];const s=e.name;for(let t=0;t<e.states.length;t++){const i=e.states[t];if(wO.indexOf(i)===-1){const t=`${s}:${i}`;if(!this._animationAssets[t]){this._animationAssets[t]={asset:null}}}}}this.loadAnimationAssets()}loadAnimationAssets(){for(let t=0;t<this._layers.length;t++){const e=this._layers[t];for(let t=0;t<e.states.length;t++){const s=e.states[t];if(wO.indexOf(s)!==-1)continue;const i=this._animationAssets[`${e.name}:${s}`];if(!i||!i.asset){this.findAnimationLayer(e.name).assignAnimation(s,DO.EMPTY);continue}const n=i.asset;const r=this.system.app.assets.get(n);if(r){if(r.resource){this.onAnimationAssetLoaded(e.name,s,r)}else{r.once("load",function(t,e){return function(s){this.onAnimationAssetLoaded(t,e,s)}.bind(this)}.bind(this)(e.name,s));this.system.app.assets.load(r)}}}}}onAnimationAssetLoaded(t,e,s){this.findAnimationLayer(t).assignAnimation(e,s.resource)}removeStateGraph(){this._stateGraph=null;this._stateGraphAsset=null;this._animationAssets={};this._layers=[];this._layerIndices={};this._parameters={};this._playing=false;this.unbind();this._targets={}}reset(){this._assignParameters(this._stateGraph);for(let t=0;t<this._layers.length;t++){const e=this._layers[t].playing;this._layers[t].reset();this._layers[t].playing=e}}unbind(){if(!this._normalizeWeights){Object.keys(this._targets).forEach((t=>{this._targets[t].unbind()}))}}rebind(){this._targets={};for(let t=0;t<this._layers.length;t++){this._layers[t].rebind()}}findAnimationLayer(t){const e=this._layerIndices[t];return this._layers[e]||null}addAnimationState(t,e,s=1,i=true,n="Base"){if(!this._stateGraph){this.loadStateGraph(new tF({layers:[{name:n,states:[{name:"START",speed:1},{name:t,speed:s,loop:i,defaultState:true}],transitions:[{from:"START",to:t}]}],parameters:{}}))}const r=this.findAnimationLayer(n);if(r){r.assignAnimation(t,e,s,i)}else{this.addLayer(n)?.assignAnimation(t,e,s,i)}}assignAnimation(t,e,s,i=1,n=true){if(!this._stateGraph&&t.indexOf(".")===-1){this.loadStateGraph(new tF({layers:[{name:"Base",states:[{name:"START",speed:1},{name:t,speed:i,loop:n,defaultState:true}],transitions:[{from:"START",to:t}]}],parameters:{}}));this.baseLayer.assignAnimation(t,e);return}const r=s?this.findAnimationLayer(s):this.baseLayer;if(!r){return}r.assignAnimation(t,e,i,n)}removeNodeAnimations(t,e){const s=e?this.findAnimationLayer(e):this.baseLayer;if(!s){return}s.removeNodeAnimations(t)}getParameterValue(t,e){const s=this._parameters[t];if(s&&s.type===e){return s.value}return undefined}setParameterValue(t,e,s){const i=this._parameters[t];if(i&&i.type===e){i.value=s;return}}getFloat(t){return this.getParameterValue(t,fO)}setFloat(t,e){this.setParameterValue(t,fO,e)}getInteger(t){return this.getParameterValue(t,uO)}setInteger(t,e){if(typeof e==="number"&&e%1===0){this.setParameterValue(t,uO,e)}}getBoolean(t){return this.getParameterValue(t,pO)}setBoolean(t,e){this.setParameterValue(t,pO,!!e)}getTrigger(t){return this.getParameterValue(t,mO)}setTrigger(t,e=false){this.setParameterValue(t,mO,true);if(e){this._consumedTriggers.add(t)}}resetTrigger(t){this.setParameterValue(t,mO,false)}onBeforeRemove(){if(Number.isFinite(this._stateGraphAsset)){const t=this.system.app.assets.get(this._stateGraphAsset);t.off("change",this._onStateGraphAssetChangeEvent,this)}}update(t){for(let e=0;e<this.layers.length;e++){this.layers[e].update(t*this.speed)}this._consumedTriggers.forEach((t=>{this.parameters[t].value=false}));this._consumedTriggers.clear()}resolveDuplicatedEntityReferenceProperties(t,e){if(t.rootBone&&e[t.rootBone.getGuid()]){this.rootBone=e[t.rootBone.getGuid()]}else{this.rebind()}}constructor(...t){super(...t),this._stateGraphAsset=null,this._animationAssets={},this._speed=1,this._activate=true,this._playing=false,this._rootBone=null,this._stateGraph=null,this._layers=[],this._layerIndices={},this._parameters={},this._targets={},this._consumedTriggers=new Set,this._normalizeWeights=false,this.findParameter=t=>this._parameters[t],this.consumeTrigger=t=>{this._consumedTriggers.add(t)}}}class sF{constructor(){this.enabled=true}}const iF=["enabled"];class nF extends $R{constructor(t){super(t);this.id="anim";this.ComponentType=eF;this.DataType=sF;this.schema=iF;this.on("beforeremove",this.onBeforeRemove,this);this.app.systems.on("animationUpdate",this.onAnimationUpdate,this)}initializeComponentData(t,e,s){super.initializeComponentData(t,e,iF);const i=["animationAssets","stateGraph","layers","masks"];Object.keys(e).forEach((s=>{if(i.includes(s))return;t[s]=e[s]}));if(e.stateGraph){t.stateGraph=e.stateGraph;t.loadStateGraph(t.stateGraph)}if(e.layers){e.layers.forEach(((e,s)=>{e._controller.states.forEach((i=>{e._controller._states[i]._animationList.forEach((i=>{if(!i.animTrack||i.animTrack===DO.EMPTY){const n=this.app.assets.get(e._component._animationAssets[`${e.name}:${i.name}`].asset);if(n&&!n.loaded){n.once("load",(()=>{t.layers[s].assignAnimation(i.name,n.resource)}))}}else{t.layers[s].assignAnimation(i.name,i.animTrack)}}))}))}))}if(e.animationAssets){t.animationAssets=Object.assign(t.animationAssets,e.animationAssets)}if(e.masks){Object.keys(e.masks).forEach((s=>{if(t.layers[s]){const i=e.masks[s].mask;const n={};Object.keys(i).forEach((t=>{n[decodeURI(t)]=i[t]}));t.layers[s].mask=n}}))}}onAnimationUpdate(t){const e=this.store;for(const s in e){if(e.hasOwnProperty(s)){const i=e[s].entity.anim;const n=i.data;if(n.enabled&&i.entity.enabled&&i.playing){i.update(t)}}}}cloneComponent(t,e){let s;if(!t.anim.rootBone||t.anim.rootBone===t){s={};t.anim.layers.forEach(((t,i)=>{if(t.mask){const n={};Object.keys(t.mask).forEach((s=>{const i=s.split("/");i.shift();const r=[e.name,...i].join("/");n[r]=t.mask[s]}));s[i]={mask:n}}}))}const i={enabled:t.anim.enabled,stateGraphAsset:t.anim.stateGraphAsset,animationAssets:t.anim.animationAssets,speed:t.anim.speed,activate:t.anim.activate,playing:t.anim.playing,rootBone:t.anim.rootBone,stateGraph:t.anim.stateGraph,layers:t.anim.layers,layerIndices:t.anim.layerIndices,parameters:t.anim.parameters,normalizeWeights:t.anim.normalizeWeights,masks:s};return this.addComponent(e,i)}onBeforeRemove(t,e){e.onBeforeRemove()}destroy(){super.destroy();this.app.systems.off("animationUpdate",this.onAnimationUpdate,this)}}qR._buildAccessors(eF.prototype,iF);class rF extends qR{setCurrentListener(){if(this.enabled&&this.entity.audiolistener&&this.entity.enabled){this.system.current=this.entity;const t=this.system.current.getPosition();this.system.manager.listener.setPosition(t)}}onEnable(){this.setCurrentListener()}onDisable(){if(this.system.current===this.entity){this.system.current=null}}}class aF{constructor(){this.enabled=true}}const oF=["enabled"];class lF extends $R{constructor(t){super(t);this.id="audiolistener";this.ComponentType=rF;this.DataType=aF;this.schema=oF;this.manager=t.soundManager;this.current=null;this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){s=["enabled"];super.initializeComponentData(t,e,s)}onUpdate(t){if(this.current){const t=this.current.getPosition();this.manager.listener.setPosition(t);const e=this.current.getWorldTransform();this.manager.listener.setOrientation(e)}}destroy(){super.destroy();this.app.systems.off("update",this.onUpdate,this)}}qR._buildAccessors(rF.prototype,oF);const hF=0;const cF=1;const dF="group";const uF="image";const fF="text";const pF="stretch";const mF="contain";const _F="cover";const gF={DEFAULT:"DEFAULT",HOVER:"HOVER",PRESSED:"PRESSED",INACTIVE:"INACTIVE"};const vF={};vF[gF.DEFAULT]="_defaultTint";vF[gF.HOVER]="hoverTint";vF[gF.PRESSED]="pressedTint";vF[gF.INACTIVE]="inactiveTint";const yF={};yF[gF.DEFAULT]="_defaultSpriteAsset";yF[gF.HOVER]="hoverSpriteAsset";yF[gF.PRESSED]="pressedSpriteAsset";yF[gF.INACTIVE]="inactiveSpriteAsset";const SF={};SF[gF.DEFAULT]="_defaultSpriteFrame";SF[gF.HOVER]="hoverSpriteFrame";SF[gF.PRESSED]="pressedSpriteFrame";SF[gF.INACTIVE]="inactiveSpriteFrame";class xF extends qR{static{this.EVENT_MOUSEDOWN="mousedown"}static{this.EVENT_MOUSEUP="mouseup"}static{this.EVENT_MOUSEENTER="mouseenter"}static{this.EVENT_MOUSELEAVE="mouseleave"}static{this.EVENT_CLICK="click"}static{this.EVENT_TOUCHSTART="touchstart"}static{this.EVENT_TOUCHEND="touchend"}static{this.EVENT_TOUCHCANCEL="touchcancel"}static{this.EVENT_TOUCHLEAVE="touchleave"}static{this.EVENT_SELECTSTART="selectstart"}static{this.EVENT_SELECTEND="selectend"}static{this.EVENT_SELECTENTER="selectenter"}static{this.EVENT_SELECTLEAVE="selectleave"}static{this.EVENT_HOVERSTART="hoverstart"}static{this.EVENT_HOVEREND="hoverend"}static{this.EVENT_PRESSEDSTART="pressedstart"}static{this.EVENT_PRESSEDEND="pressedend"}constructor(t,e){super(t,e),this._visualState=gF.DEFAULT,this._isHovering=false,this._hoveringCounter=0,this._isPressed=false,this._defaultTint=new bt(1,1,1,1),this._defaultSpriteAsset=null,this._defaultSpriteFrame=0,this._imageEntity=null,this._evtElementAdd=null,this._evtImageEntityElementAdd=null,this._evtImageEntityElementRemove=null,this._evtImageEntityElementColor=null,this._evtImageEntityElementOpacity=null,this._evtImageEntityElementSpriteAsset=null,this._evtImageEntityElementSpriteFrame=null;this._visualState=gF.DEFAULT;this._isHovering=false;this._hoveringCounter=0;this._isPressed=false;this._defaultTint=new bt(1,1,1,1);this._defaultSpriteAsset=null;this._defaultSpriteFrame=0;this._toggleLifecycleListeners("on",t)}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){this._setValue("enabled",t)}get enabled(){return this.data.enabled}set active(t){this._setValue("active",t)}get active(){return this.data.active}set imageEntity(t){if(this._imageEntity!==t){const e=typeof t==="string";if(this._imageEntity&&e&&this._imageEntity.getGuid()===t){return}if(this._imageEntity){this._imageEntityUnsubscribe()}if(t instanceof By){this._imageEntity=t}else if(e){this._imageEntity=this.system.app.getEntityFromIndex(t)||null}else{this._imageEntity=null}if(this._imageEntity){this._imageEntitySubscribe()}if(this._imageEntity){this.data.imageEntity=this._imageEntity.getGuid()}else if(e&&t){this.data.imageEntity=t}}}get imageEntity(){return this._imageEntity}set hitPadding(t){this._setValue("hitPadding",t)}get hitPadding(){return this.data.hitPadding}set transitionMode(t){this._setValue("transitionMode",t)}get transitionMode(){return this.data.transitionMode}set hoverTint(t){this._setValue("hoverTint",t)}get hoverTint(){return this.data.hoverTint}set pressedTint(t){this._setValue("pressedTint",t)}get pressedTint(){return this.data.pressedTint}set inactiveTint(t){this._setValue("inactiveTint",t)}get inactiveTint(){return this.data.inactiveTint}set fadeDuration(t){this._setValue("fadeDuration",t)}get fadeDuration(){return this.data.fadeDuration}set hoverSpriteAsset(t){this._setValue("hoverSpriteAsset",t)}get hoverSpriteAsset(){return this.data.hoverSpriteAsset}set hoverSpriteFrame(t){this._setValue("hoverSpriteFrame",t)}get hoverSpriteFrame(){return this.data.hoverSpriteFrame}set pressedSpriteAsset(t){this._setValue("pressedSpriteAsset",t)}get pressedSpriteAsset(){return this.data.pressedSpriteAsset}set pressedSpriteFrame(t){this._setValue("pressedSpriteFrame",t)}get pressedSpriteFrame(){return this.data.pressedSpriteFrame}set inactiveSpriteAsset(t){this._setValue("inactiveSpriteAsset",t)}get inactiveSpriteAsset(){return this.data.inactiveSpriteAsset}set inactiveSpriteFrame(t){this._setValue("inactiveSpriteFrame",t)}get inactiveSpriteFrame(){return this.data.inactiveSpriteFrame}_setValue(t,e){const s=this.data;const i=s[t];s[t]=e;this.fire("set",t,i,e)}_toggleLifecycleListeners(t,e){this[t]("set_active",this._onSetActive,this);this[t]("set_transitionMode",this._onSetTransitionMode,this);this[t]("set_hoverTint",this._onSetTransitionValue,this);this[t]("set_pressedTint",this._onSetTransitionValue,this);this[t]("set_inactiveTint",this._onSetTransitionValue,this);this[t]("set_hoverSpriteAsset",this._onSetTransitionValue,this);this[t]("set_hoverSpriteFrame",this._onSetTransitionValue,this);this[t]("set_pressedSpriteAsset",this._onSetTransitionValue,this);this[t]("set_pressedSpriteFrame",this._onSetTransitionValue,this);this[t]("set_inactiveSpriteAsset",this._onSetTransitionValue,this);this[t]("set_inactiveSpriteFrame",this._onSetTransitionValue,this);if(t==="on"){this._evtElementAdd=this.entity.on("element:add",this._onElementComponentAdd,this)}else{this._evtElementAdd?.off();this._evtElementAdd=null}}_onSetActive(t,e,s){if(e!==s){this._updateVisualState()}}_onSetTransitionMode(t,e,s){if(e!==s){this._cancelTween();this._resetToDefaultVisualState(e);this._forceReapplyVisualState()}}_onSetTransitionValue(t,e,s){if(e!==s){this._forceReapplyVisualState()}}_imageEntitySubscribe(){this._evtImageEntityElementAdd=this._imageEntity.on("element:add",this._onImageElementGain,this);if(this._imageEntity.element){this._onImageElementGain()}}_imageEntityUnsubscribe(){this._evtImageEntityElementAdd?.off();this._evtImageEntityElementAdd=null;if(this._imageEntity?.element){this._onImageElementLose()}}_imageEntityElementSubscribe(){const t=this._imageEntity.element;this._evtImageEntityElementRemove=t.once("beforeremove",this._onImageElementLose,this);this._evtImageEntityElementColor=t.on("set:color",this._onSetColor,this);this._evtImageEntityElementOpacity=t.on("set:opacity",this._onSetOpacity,this);this._evtImageEntityElementSpriteAsset=t.on("set:spriteAsset",this._onSetSpriteAsset,this);this._evtImageEntityElementSpriteFrame=t.on("set:spriteFrame",this._onSetSpriteFrame,this)}_imageEntityElementUnsubscribe(){this._evtImageEntityElementRemove?.off();this._evtImageEntityElementRemove=null;this._evtImageEntityElementColor?.off();this._evtImageEntityElementColor=null;this._evtImageEntityElementOpacity?.off();this._evtImageEntityElementOpacity=null;this._evtImageEntityElementSpriteAsset?.off();this._evtImageEntityElementSpriteAsset=null;this._evtImageEntityElementSpriteFrame?.off();this._evtImageEntityElementSpriteFrame=null}_onElementComponentRemove(){this._toggleHitElementListeners("off")}_onElementComponentAdd(){this._toggleHitElementListeners("on")}_onImageElementLose(){this._imageEntityElementUnsubscribe();this._cancelTween();this._resetToDefaultVisualState(this.transitionMode)}_onImageElementGain(){this._imageEntityElementSubscribe();this._storeDefaultVisualState();this._forceReapplyVisualState()}_toggleHitElementListeners(t){if(this.entity.element){const e=t==="on";if(e&&this._hasHitElementListeners){return}this.entity.element[t]("beforeremove",this._onElementComponentRemove,this);this.entity.element[t]("mouseenter",this._onMouseEnter,this);this.entity.element[t]("mouseleave",this._onMouseLeave,this);this.entity.element[t]("mousedown",this._onMouseDown,this);this.entity.element[t]("mouseup",this._onMouseUp,this);this.entity.element[t]("touchstart",this._onTouchStart,this);this.entity.element[t]("touchend",this._onTouchEnd,this);this.entity.element[t]("touchleave",this._onTouchLeave,this);this.entity.element[t]("touchcancel",this._onTouchCancel,this);this.entity.element[t]("selectstart",this._onSelectStart,this);this.entity.element[t]("selectend",this._onSelectEnd,this);this.entity.element[t]("selectenter",this._onSelectEnter,this);this.entity.element[t]("selectleave",this._onSelectLeave,this);this.entity.element[t]("click",this._onClick,this);this._hasHitElementListeners=e}}_storeDefaultVisualState(){const t=this._imageEntity?.element;if(!t||t.type===dF){return}this._storeDefaultColor(t.color);this._storeDefaultOpacity(t.opacity);this._storeDefaultSpriteAsset(t.spriteAsset);this._storeDefaultSpriteFrame(t.spriteFrame)}_storeDefaultColor(t){this._defaultTint.r=t.r;this._defaultTint.g=t.g;this._defaultTint.b=t.b}_storeDefaultOpacity(t){this._defaultTint.a=t}_storeDefaultSpriteAsset(t){this._defaultSpriteAsset=t}_storeDefaultSpriteFrame(t){this._defaultSpriteFrame=t}_onSetColor(t){if(!this._isApplyingTint){this._storeDefaultColor(t);this._forceReapplyVisualState()}}_onSetOpacity(t){if(!this._isApplyingTint){this._storeDefaultOpacity(t);this._forceReapplyVisualState()}}_onSetSpriteAsset(t){if(!this._isApplyingSprite){this._storeDefaultSpriteAsset(t);this._forceReapplyVisualState()}}_onSetSpriteFrame(t){if(!this._isApplyingSprite){this._storeDefaultSpriteFrame(t);this._forceReapplyVisualState()}}_onMouseEnter(t){this._isHovering=true;this._updateVisualState();this._fireIfActive("mouseenter",t)}_onMouseLeave(t){this._isHovering=false;this._isPressed=false;this._updateVisualState();this._fireIfActive("mouseleave",t)}_onMouseDown(t){this._isPressed=true;this._updateVisualState();this._fireIfActive("mousedown",t)}_onMouseUp(t){this._isPressed=false;this._updateVisualState();this._fireIfActive("mouseup",t)}_onTouchStart(t){this._isPressed=true;this._updateVisualState();this._fireIfActive("touchstart",t)}_onTouchEnd(t){t.event.preventDefault();this._isPressed=false;this._updateVisualState();this._fireIfActive("touchend",t)}_onTouchLeave(t){this._isPressed=false;this._updateVisualState();this._fireIfActive("touchleave",t)}_onTouchCancel(t){this._isPressed=false;this._updateVisualState();this._fireIfActive("touchcancel",t)}_onSelectStart(t){this._isPressed=true;this._updateVisualState();this._fireIfActive("selectstart",t)}_onSelectEnd(t){this._isPressed=false;this._updateVisualState();this._fireIfActive("selectend",t)}_onSelectEnter(t){this._hoveringCounter++;if(this._hoveringCounter===1){this._isHovering=true;this._updateVisualState()}this._fireIfActive("selectenter",t)}_onSelectLeave(t){this._hoveringCounter--;if(this._hoveringCounter===0){this._isHovering=false;this._isPressed=false;this._updateVisualState()}this._fireIfActive("selectleave",t)}_onClick(t){this._fireIfActive("click",t)}_fireIfActive(t,e){if(this.data.active){this.fire(t,e)}}_updateVisualState(t){const e=this._visualState;const s=this._determineVisualState();if((e!==s||t)&&this.enabled){this._visualState=s;if(e===gF.HOVER){this._fireIfActive("hoverend")}if(e===gF.PRESSED){this._fireIfActive("pressedend")}if(s===gF.HOVER){this._fireIfActive("hoverstart")}if(s===gF.PRESSED){this._fireIfActive("pressedstart")}switch(this.transitionMode){case hF:{const t=vF[this._visualState];const e=this[t];this._applyTint(e);break}case cF:{const t=yF[this._visualState];const e=SF[this._visualState];const s=this[t];const i=this[e];this._applySprite(s,i);break}}}}_forceReapplyVisualState(){this._updateVisualState(true)}_resetToDefaultVisualState(t){if(!this._imageEntity?.element){return}switch(t){case hF:this._cancelTween();this._applyTintImmediately(this._defaultTint);break;case cF:this._applySprite(this._defaultSpriteAsset,this._defaultSpriteFrame);break}}_determineVisualState(){if(!this.active){return gF.INACTIVE}else if(this._isPressed){return gF.PRESSED}else if(this._isHovering){return gF.HOVER}return gF.DEFAULT}_applySprite(t,e){const s=this._imageEntity?.element;if(!s){return}e=e||0;this._isApplyingSprite=true;if(s.spriteAsset!==t){s.spriteAsset=t}if(s.spriteFrame!==e){s.spriteFrame=e}this._isApplyingSprite=false}_applyTint(t){this._cancelTween();if(this.fadeDuration===0){this._applyTintImmediately(t)}else{this._applyTintWithTween(t)}}_applyTintImmediately(t){const e=this._imageEntity?.element;if(!t||!e||e.type===dF){return}const s=TF(t);this._isApplyingTint=true;if(!s.equals(e.color)){e.color=s}if(e.opacity!==t.a){e.opacity=t.a}this._isApplyingTint=false}_applyTintWithTween(t){const e=this._imageEntity?.element;if(!t||!e||e.type===dF){return}const s=TF(t);const i=e.color;const n=e.opacity;if(s.equals(i)&&t.a===n)return;this._tweenInfo={startTime:pt(),from:new bt(i.r,i.g,i.b,n),to:t.clone(),lerpColor:new bt}}_updateTintTween(){const t=pt()-this._tweenInfo.startTime;let e=this.fadeDuration===0?1:t/this.fadeDuration;e=wt.clamp(e,0,1);if(Math.abs(e-1)>1e-5){const t=this._tweenInfo.lerpColor;t.lerp(this._tweenInfo.from,this._tweenInfo.to,e);this._applyTintImmediately(new bt(t.r,t.g,t.b,t.a))}else{this._applyTintImmediately(this._tweenInfo.to);this._cancelTween()}}_cancelTween(){delete this._tweenInfo}onUpdate(){if(this._tweenInfo){this._updateTintTween()}}onEnable(){this._isHovering=false;this._hoveringCounter=0;this._isPressed=false;this._toggleHitElementListeners("on");this._forceReapplyVisualState()}onDisable(){this._toggleHitElementListeners("off");this._resetToDefaultVisualState(this.transitionMode)}onRemove(){this._imageEntityUnsubscribe();this._toggleLifecycleListeners("off",this.system);this.onDisable()}resolveDuplicatedEntityReferenceProperties(t,e){if(t.imageEntity){this.imageEntity=e[t.imageEntity.getGuid()]}}}function TF(t){return new bt(t.r,t.g,t.b)}class wF{constructor(){this.enabled=true;this.active=true;this.imageEntity=null;this.hitPadding=new Ft;this.transitionMode=hF;this.hoverTint=new bt(.75,.75,.75);this.pressedTint=new bt(.5,.5,.5);this.inactiveTint=new bt(.25,.25,.25);this.fadeDuration=0;this.hoverSpriteAsset=null;this.hoverSpriteFrame=0;this.pressedSpriteAsset=null;this.pressedSpriteFrame=0;this.inactiveSpriteAsset=null;this.inactiveSpriteFrame=0}}const bF=["enabled","active",{name:"hitPadding",type:"vec4"},"transitionMode",{name:"hoverTint",type:"rgba"},{name:"pressedTint",type:"rgba"},{name:"inactiveTint",type:"rgba"},"fadeDuration","hoverSpriteAsset","hoverSpriteFrame","pressedSpriteAsset","pressedSpriteFrame","inactiveSpriteAsset","inactiveSpriteFrame"];class EF extends $R{constructor(t){super(t);this.id="button";this.ComponentType=xF;this.DataType=wF;this.schema=bF;this.on("beforeremove",this._onRemoveComponent,this);this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){t.imageEntity=e.imageEntity;super.initializeComponentData(t,e,bF)}onUpdate(t){const e=this.store;for(const t in e){const s=e[t].entity;const i=s.button;if(i.enabled&&s.enabled){i.onUpdate()}}}_onRemoveComponent(t,e){e.onRemove()}destroy(){super.destroy();this.app.systems.off("update",this.onUpdate,this)}}const AF=new It;const CF=new Gt;class PF extends qR{static{this.EVENT_CONTACT="contact"}static{this.EVENT_COLLISIONSTART="collisionstart"}static{this.EVENT_COLLISIONEND="collisionend"}static{this.EVENT_TRIGGERENTER="triggerenter"}static{this.EVENT_TRIGGERLEAVE="triggerleave"}constructor(t,e){super(t,e),this._compoundParent=null,this._hasOffset=false;this.entity.on("insert",this._onInsert,this);this.on("set_type",this.onSetType,this);this.on("set_convexHull",this.onSetModel,this);this.on("set_halfExtents",this.onSetHalfExtents,this);this.on("set_linearOffset",this.onSetOffset,this);this.on("set_angularOffset",this.onSetOffset,this);this.on("set_radius",this.onSetRadius,this);this.on("set_height",this.onSetHeight,this);this.on("set_axis",this.onSetAxis,this);this.on("set_asset",this.onSetAsset,this);this.on("set_renderAsset",this.onSetRenderAsset,this);this.on("set_model",this.onSetModel,this);this.on("set_render",this.onSetRender,this)}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){this._setValue("enabled",t)}get enabled(){return this.data.enabled}set type(t){this._setValue("type",t)}get type(){return this.data.type}set halfExtents(t){this._setValue("halfExtents",t)}get halfExtents(){return this.data.halfExtents}set linearOffset(t){this._setValue("linearOffset",t)}get linearOffset(){return this.data.linearOffset}set angularOffset(t){this._setValue("angularOffset",t)}get angularOffset(){return this.data.angularOffset}set radius(t){this._setValue("radius",t)}get radius(){return this.data.radius}set axis(t){this._setValue("axis",t)}get axis(){return this.data.axis}set height(t){this._setValue("height",t)}get height(){return this.data.height}set asset(t){this._setValue("asset",t)}get asset(){return this.data.asset}set renderAsset(t){this._setValue("renderAsset",t)}get renderAsset(){return this.data.renderAsset}set convexHull(t){this._setValue("convexHull",t)}get convexHull(){return this.data.convexHull}set shape(t){this._setValue("shape",t)}get shape(){return this.data.shape}set model(t){this._setValue("model",t)}get model(){return this.data.model}set render(t){this._setValue("render",t)}get render(){return this.data.render}set checkVertexDuplicates(t){this._setValue("checkVertexDuplicates",t)}get checkVertexDuplicates(){return this.data.checkVertexDuplicates}_setValue(t,e){const s=this.data;const i=s[t];s[t]=e;this.fire("set",t,i,e)}onSetType(t,e,s){if(e!==s){this.system.changeType(this,e,s)}}onSetHalfExtents(t,e,s){const i=this.data.type;if(this.data.initialized&&i==="box"){this.system.recreatePhysicalShapes(this)}}onSetOffset(t,e,s){this._hasOffset=!this.data.linearOffset.equals(It.ZERO)||!this.data.angularOffset.equals(Gt.IDENTITY);if(this.data.initialized){this.system.recreatePhysicalShapes(this)}}onSetRadius(t,e,s){const i=this.data.type;if(this.data.initialized&&(i==="sphere"||i==="capsule"||i==="cylinder"||i==="cone")){this.system.recreatePhysicalShapes(this)}}onSetHeight(t,e,s){const i=this.data.type;if(this.data.initialized&&(i==="capsule"||i==="cylinder"||i==="cone")){this.system.recreatePhysicalShapes(this)}}onSetAxis(t,e,s){const i=this.data.type;if(this.data.initialized&&(i==="capsule"||i==="cylinder"||i==="cone")){this.system.recreatePhysicalShapes(this)}}onSetAsset(t,e,s){const i=this.system.app.assets;if(e){const t=i.get(e);if(t){t.off("remove",this.onAssetRemoved,this)}}if(s){if(s instanceof qA){this.data.asset=s.id}const t=i.get(this.data.asset);if(t){t.off("remove",this.onAssetRemoved,this);t.on("remove",this.onAssetRemoved,this)}}if(this.data.initialized&&this.data.type==="mesh"){if(!s){this.data.model=null}this.system.recreatePhysicalShapes(this)}}onSetRenderAsset(t,e,s){const i=this.system.app.assets;if(e){const t=i.get(e);if(t){t.off("remove",this.onRenderAssetRemoved,this)}}if(s){if(s instanceof qA){this.data.renderAsset=s.id}const t=i.get(this.data.renderAsset);if(t){t.off("remove",this.onRenderAssetRemoved,this);t.on("remove",this.onRenderAssetRemoved,this)}}if(this.data.initialized&&this.data.type==="mesh"){if(!s){this.data.render=null}this.system.recreatePhysicalShapes(this)}}onSetModel(t,e,s){if(this.data.initialized&&this.data.type==="mesh"){this.system.implementations.mesh.doRecreatePhysicalShape(this)}}onSetRender(t,e,s){this.onSetModel(t,e,s)}onAssetRemoved(t){t.off("remove",this.onAssetRemoved,this);if(this.data.asset===t.id){this.asset=null}}onRenderAssetRemoved(t){t.off("remove",this.onRenderAssetRemoved,this);if(this.data.renderAsset===t.id){this.renderAsset=null}}getCompoundChildShapeIndex(t){const e=this.data.shape;const s=e.getNumChildShapes();for(let i=0;i<s;i++){const s=e.getChildShape(i);if(Ammo.getPointer(s)===Ammo.getPointer(t)){return i}}return null}_onInsert(t){if(typeof Ammo==="undefined"){return}if(this._compoundParent){this.system.recreatePhysicalShapes(this)}else if(!this.entity.rigidbody){let t=this.entity.parent;while(t){if(t.collision&&t.collision.type==="compound"){if(t.collision.shape.getNumChildShapes()===0){this.system.recreatePhysicalShapes(t.collision)}else{this.system.recreatePhysicalShapes(this)}break}t=t.parent}}}_updateCompound(){const t=this.entity;if(t._dirtyWorld){let e=t._dirtyLocal;let s=t;while(s&&!e){if(s.collision&&s.collision===this._compoundParent){break}if(s._dirtyLocal){e=true}s=s.parent}if(e){t.forEach(this.system.implementations.compound._updateEachDescendantTransform,t);const e=this._compoundParent.entity.rigidbody;if(e){e.activate()}}}}getShapePosition(){const t=this.entity.getPosition();if(this._hasOffset){const e=this.entity.getRotation();const s=this.data.linearOffset;CF.copy(e).transformVector(s,AF);return AF.add(t)}return t}getShapeRotation(){const t=this.entity.getRotation();if(this._hasOffset){return CF.copy(t).mul(this.data.angularOffset)}return t}onEnable(){if(this.data.type==="mesh"&&(this.data.asset||this.data.renderAsset)&&this.data.initialized){const t=this.system.app.assets.get(this.data.asset||this.data.renderAsset);if(t&&(!t.resource||!this.data.shape)){this.system.recreatePhysicalShapes(this);return}}if(this.entity.rigidbody){if(this.entity.rigidbody.enabled){this.entity.rigidbody.enableSimulation()}}else if(this._compoundParent&&this!==this._compoundParent){if(this._compoundParent.shape.getNumChildShapes()===0){this.system.recreatePhysicalShapes(this._compoundParent)}else{const t=this.system._getNodeTransform(this.entity,this._compoundParent.entity);this._compoundParent.shape.addChildShape(t,this.data.shape);Ammo.destroy(t);if(this._compoundParent.entity.rigidbody){this._compoundParent.entity.rigidbody.activate()}}}else if(this.entity.trigger){this.entity.trigger.enable()}}onDisable(){if(this.entity.rigidbody){this.entity.rigidbody.disableSimulation()}else if(this._compoundParent&&this!==this._compoundParent){if(!this._compoundParent.entity._destroying){this.system._removeCompoundChild(this._compoundParent,this.data.shape);if(this._compoundParent.entity.rigidbody){this._compoundParent.entity.rigidbody.activate()}}}else if(this.entity.trigger){this.entity.trigger.disable()}}onBeforeRemove(){if(this.asset){this.asset=null}if(this.renderAsset){this.renderAsset=null}this.entity.off("insert",this._onInsert,this);this.off()}}class LF{constructor(){this.enabled=true;this.type="box";this.halfExtents=new It(.5,.5,.5);this.linearOffset=new It;this.angularOffset=new Gt;this.radius=.5;this.axis=1;this.height=2;this.convexHull=false;this.asset=null;this.renderAsset=null;this.checkVertexDuplicates=true;this.shape=null;this.model=null;this.render=null;this.initialized=false}}const DF="static";const MF="dynamic";const IF="kinematic";const RF=1;const OF=2;const FF=4;const NF=1;const kF=2;const BF=3;const UF=4;const zF=5;const VF=0;const GF=1;const HF=1;const WF=2;const XF=4;const qF=8;const $F=16;const jF=32;const YF=64;const KF=128;const ZF=256;const QF=512;const JF=1024;const tN=2048;const eN=4096;const sN=8192;const iN=16384;const nN=0;const rN=65535;const aN=2;const oN=65535^2;const lN=65535^(2|4);let hN,cN,dN;class uN{constructor(t,e,s){this.entity=e.entity;this.component=e;this.app=t;if(typeof Ammo!=="undefined"&&!hN){hN=new Ammo.btVector3;cN=new Ammo.btQuaternion;dN=new Ammo.btTransform}this.initialize(s)}initialize(t){const e=this.entity;const s=t.shape;if(s&&typeof Ammo!=="undefined"){if(e.trigger){e.trigger.destroy()}const t=1;const i=this.component;if(i){const t=i.getShapePosition();const e=i.getShapeRotation();hN.setValue(t.x,t.y,t.z);cN.setValue(e.x,e.y,e.z,e.w)}else{const t=e.getPosition();const s=e.getRotation();hN.setValue(t.x,t.y,t.z);cN.setValue(s.x,s.y,s.z,s.w)}dN.setOrigin(hN);dN.setRotation(cN);const n=this.app.systems.rigidbody.createBody(t,s,dN);n.setRestitution(0);n.setFriction(0);n.setDamping(0,0);hN.setValue(0,0,0);n.setLinearFactor(hN);n.setAngularFactor(hN);n.setCollisionFlags(n.getCollisionFlags()|FF);n.entity=e;this.body=n;if(this.component.enabled&&e.enabled){this.enable()}}}destroy(){if(!this.body)return;this.disable();this.app.systems.rigidbody.destroyBody(this.body);this.body=null}_getEntityTransform(t){const e=this.component;if(e){const t=e.getShapePosition();const s=e.getShapeRotation();hN.setValue(t.x,t.y,t.z);cN.setValue(s.x,s.y,s.z,s.w)}else{const t=this.entity.getPosition();const e=this.entity.getRotation();hN.setValue(t.x,t.y,t.z);cN.setValue(e.x,e.y,e.z,e.w)}t.setOrigin(hN);t.setRotation(cN)}updateTransform(){this._getEntityTransform(dN);const t=this.body;t.setWorldTransform(dN);t.activate()}enable(){const t=this.body;if(!t)return;const e=this.app.systems.rigidbody;const s=e._triggers.indexOf(this);if(s<0){e.addBody(t,$F,oN^$F);e._triggers.push(this)}t.forceActivationState(NF);this.updateTransform()}disable(){const t=this.body;if(!t)return;const e=this.app.systems.rigidbody;const s=e._triggers.indexOf(this);if(s>-1){e.removeBody(t);e._triggers.splice(s,1)}t.forceActivationState(zF)}}const fN=new Vt;const pN=new It;const mN=new It;const _N=new Gt;const gN=new By;const vN=["enabled","type","halfExtents","linearOffset","angularOffset","radius","axis","height","convexHull","asset","renderAsset","shape","model","render","checkVertexDuplicates"];class yN{constructor(t){this.system=t}beforeInitialize(t,e){e.shape=null;e.model=new Jx;e.model.graph=new By}afterInitialize(t,e){this.recreatePhysicalShapes(t);t.data.initialized=true}reset(t,e){this.beforeInitialize(t,e);this.afterInitialize(t,e)}recreatePhysicalShapes(t){const e=t.entity;const s=t.data;if(typeof Ammo!=="undefined"){if(e.trigger){e.trigger.destroy();delete e.trigger}if(s.shape){if(t._compoundParent){if(t!==t._compoundParent){this.system._removeCompoundChild(t._compoundParent,s.shape)}if(t._compoundParent.entity.rigidbody){t._compoundParent.entity.rigidbody.activate()}}this.destroyShape(s)}s.shape=this.createPhysicalShape(t.entity,s);const i=!t._compoundParent;if(s.type==="compound"&&(!t._compoundParent||t===t._compoundParent)){t._compoundParent=t;e.forEach(this._addEachDescendant,t)}else if(s.type!=="compound"){if(!t.rigidbody){t._compoundParent=null;let s=e.parent;while(s){if(s.collision&&s.collision.type==="compound"){t._compoundParent=s.collision;break}s=s.parent}}}if(t._compoundParent){if(t!==t._compoundParent){if(i&&t._compoundParent.shape.getNumChildShapes()===0){this.system.recreatePhysicalShapes(t._compoundParent)}else{this.system.updateCompoundChildTransform(e,true);if(t._compoundParent.entity.rigidbody){t._compoundParent.entity.rigidbody.activate()}}}}if(e.rigidbody){e.rigidbody.disableSimulation();e.rigidbody.createBody();if(e.enabled&&e.rigidbody.enabled){e.rigidbody.enableSimulation()}}else if(!t._compoundParent){if(!e.trigger){e.trigger=new uN(this.system.app,t,s)}else{e.trigger.initialize(s)}}}}createPhysicalShape(t,e){return undefined}updateTransform(t,e,s,i){if(t.entity.trigger){t.entity.trigger.updateTransform()}}destroyShape(t){if(t.shape){Ammo.destroy(t.shape);t.shape=null}}beforeRemove(t,e){if(e.data.shape){if(e._compoundParent&&!e._compoundParent.entity._destroying){this.system._removeCompoundChild(e._compoundParent,e.data.shape);if(e._compoundParent.entity.rigidbody){e._compoundParent.entity.rigidbody.activate()}}e._compoundParent=null;this.destroyShape(e.data)}}remove(t,e){if(t.rigidbody&&t.rigidbody.body){t.rigidbody.disableSimulation()}if(t.trigger){t.trigger.destroy();delete t.trigger}}clone(t,e){const s=this.system.store[t.getGuid()];const i={enabled:s.data.enabled,type:s.data.type,halfExtents:[s.data.halfExtents.x,s.data.halfExtents.y,s.data.halfExtents.z],linearOffset:[s.data.linearOffset.x,s.data.linearOffset.y,s.data.linearOffset.z],angularOffset:[s.data.angularOffset.x,s.data.angularOffset.y,s.data.angularOffset.z,s.data.angularOffset.w],radius:s.data.radius,axis:s.data.axis,height:s.data.height,convexHull:s.data.convexHull,asset:s.data.asset,renderAsset:s.data.renderAsset,model:s.data.model,render:s.data.render,checkVertexDuplicates:s.data.checkVertexDuplicates};return this.system.addComponent(e,i)}}class SN extends yN{createPhysicalShape(t,e){if(typeof Ammo!=="undefined"){const t=e.halfExtents;const s=new Ammo.btVector3(t?t.x:.5,t?t.y:.5,t?t.z:.5);const i=new Ammo.btBoxShape(s);Ammo.destroy(s);return i}return undefined}}class xN extends yN{createPhysicalShape(t,e){if(typeof Ammo!=="undefined"){return new Ammo.btSphereShape(e.radius)}return undefined}}class TN extends yN{createPhysicalShape(t,e){const s=e.axis??1;const i=e.radius??.5;const n=Math.max((e.height??2)-2*i,0);let r=null;if(typeof Ammo!=="undefined"){switch(s){case 0:r=new Ammo.btCapsuleShapeX(i,n);break;case 1:r=new Ammo.btCapsuleShape(i,n);break;case 2:r=new Ammo.btCapsuleShapeZ(i,n);break}}return r}}class wN extends yN{createPhysicalShape(t,e){const s=e.axis??1;const i=e.radius??.5;const n=e.height??1;let r=null;let a=null;if(typeof Ammo!=="undefined"){switch(s){case 0:r=new Ammo.btVector3(n*.5,i,i);a=new Ammo.btCylinderShapeX(r);break;case 1:r=new Ammo.btVector3(i,n*.5,i);a=new Ammo.btCylinderShape(r);break;case 2:r=new Ammo.btVector3(i,i,n*.5);a=new Ammo.btCylinderShapeZ(r);break}}if(r){Ammo.destroy(r)}return a}}class bN extends yN{createPhysicalShape(t,e){const s=e.axis??1;const i=e.radius??.5;const n=e.height??1;let r=null;if(typeof Ammo!=="undefined"){switch(s){case 0:r=new Ammo.btConeShapeX(i,n);break;case 1:r=new Ammo.btConeShape(i,n);break;case 2:r=new Ammo.btConeShapeZ(i,n);break}}return r}}class EN extends yN{beforeInitialize(t,e){}createAmmoHull(t,e,s,i){const n=new Ammo.btConvexHullShape;const r=new Ammo.btVector3;const a=[];t.getPositions(a);for(let t=0;t<a.length;t+=3){r.setValue(a[t]*i.x,a[t+1]*i.y,a[t+2]*i.z);n.addPoint(r,false)}Ammo.destroy(r);n.recalcLocalAabb();n.setMargin(.01);const o=this.system._getNodeTransform(e);s.addChildShape(o,n);Ammo.destroy(o)}createAmmoMesh(t,e,s,i,n=true){const r=this.system;let a;if(r._triMeshCache[t.id]){a=r._triMeshCache[t.id]}else{const e=t.vertexBuffer;const s=e.getFormat();let o,l;for(let t=0;t<s.elements.length;t++){const i=s.elements[t];if(i.name===Ki){l=new Float32Array(e.lock(),i.offset);o=i.stride/4;break}}const h=[];t.getIndices(h);const c=t.primitive[0].count/3;const d=new Ammo.btVector3;let u,f,p;const m=t.primitive[0].base;a=new Ammo.btTriangleMesh;r._triMeshCache[t.id]=a;const _=new Map;const g=a.getIndexedMeshArray();g.at(0).m_numTriangles=c;const v=i?i.x:1;const y=i?i.y:1;const S=i?i.z:1;const x=t=>{const e=l[t*o]*v;const s=l[t*o+1]*y;const i=l[t*o+2]*S;let r;if(n){const t=`${e}:${s}:${i}`;r=_.get(t);if(r!==undefined){return r}d.setValue(e,s,i);r=a.findOrAddVertex(d,false);_.set(t,r)}else{d.setValue(e,s,i);r=a.findOrAddVertex(d,false)}return r};for(let t=0;t<c;t++){u=x(h[m+t*3]);f=x(h[m+t*3+1]);p=x(h[m+t*3+2]);a.addIndex(u);a.addIndex(f);a.addIndex(p)}Ammo.destroy(d)}const o=new Ammo.btBvhTriangleMeshShape(a,true);if(!i){const t=r._getNodeScaling(e);o.setLocalScaling(t);Ammo.destroy(t)}const l=r._getNodeTransform(e);s.addChildShape(l,o);Ammo.destroy(l)}createPhysicalShape(t,e){if(typeof Ammo==="undefined")return undefined;if(e.model||e.render){const s=new Ammo.btCompoundShape;const i=t.getWorldTransform();const n=i.getScale();if(e.render){const t=e.render.meshes;for(let i=0;i<t.length;i++){if(e.convexHull){this.createAmmoHull(t[i],gN,s,n)}else{this.createAmmoMesh(t[i],gN,s,n,e.checkVertexDuplicates)}}}else if(e.model){const t=e.model.meshInstances;for(let i=0;i<t.length;i++){this.createAmmoMesh(t[i].mesh,t[i].node,s,null,e.checkVertexDuplicates)}const i=new Ammo.btVector3(n.x,n.y,n.z);s.setLocalScaling(i);Ammo.destroy(i)}return s}return undefined}recreatePhysicalShapes(t){const e=t.data;if(e.renderAsset||e.asset){if(t.enabled&&t.entity.enabled){this.loadAsset(t,e.renderAsset||e.asset,e.renderAsset?"render":"model");return}}this.doRecreatePhysicalShape(t)}loadAsset(t,e,s){const i=t.data;const n=this.system.app.assets;const r=i[s];const a=e=>{if(i[s]!==r){return}i[s]=e.resource;this.doRecreatePhysicalShape(t)};const o=t=>{t.ready((t=>{if(t.data.containerAsset){const e=n.get(t.data.containerAsset);if(e.loaded){a(t)}else{e.ready((()=>{a(t)}));n.load(e)}}else{a(t)}}));n.load(t)};const l=n.get(e);if(l){o(l)}else{n.once(`add:${e}`,o)}}doRecreatePhysicalShape(t){const e=t.entity;const s=t.data;if(s.model||s.render){this.destroyShape(s);s.shape=this.createPhysicalShape(e,s);if(e.rigidbody){e.rigidbody.disableSimulation();e.rigidbody.createBody();if(e.enabled&&e.rigidbody.enabled){e.rigidbody.enableSimulation()}}else{if(!e.trigger){e.trigger=new uN(this.system.app,t,s)}else{e.trigger.initialize(s)}}}else{this.beforeRemove(e,t);this.remove(e,s)}}updateTransform(t,e,s,i){if(t.shape){const e=t.entity.getWorldTransform();const s=e.getScale();const i=t.shape.getLocalScaling();if(s.x!==i.x()||s.y!==i.y()||s.z!==i.z()){this.doRecreatePhysicalShape(t)}}super.updateTransform(t,e,s,i)}destroyShape(t){if(!t.shape){return}const e=t.shape.getNumChildShapes();for(let s=0;s<e;s++){const e=t.shape.getChildShape(s);Ammo.destroy(e)}Ammo.destroy(t.shape);t.shape=null}}class AN extends yN{createPhysicalShape(t,e){if(typeof Ammo!=="undefined"){return new Ammo.btCompoundShape}return undefined}_addEachDescendant(t){if(!t.collision||t.rigidbody){return}t.collision._compoundParent=this;if(t!==this.entity){t.collision.system.recreatePhysicalShapes(t.collision)}}_updateEachDescendant(t){if(!t.collision){return}if(t.collision._compoundParent!==this){return}t.collision._compoundParent=null;if(t!==this.entity&&!t.rigidbody){t.collision.system.recreatePhysicalShapes(t.collision)}}_updateEachDescendantTransform(t){if(!t.collision||t.collision._compoundParent!==this.collision._compoundParent){return}this.collision.system.updateCompoundChildTransform(t,false)}}class CN extends $R{constructor(t){super(t);this.id="collision";this.ComponentType=PF;this.DataType=LF;this.schema=vN;this.implementations={};this._triMeshCache={};this.on("beforeremove",this.onBeforeRemove,this);this.on("remove",this.onRemove,this)}initializeComponentData(t,e,s){s=["type","halfExtents","radius","axis","height","convexHull","shape","model","asset","render","renderAsset","enabled","linearOffset","angularOffset","checkVertexDuplicates"];const i={};for(let t=0,n=s.length;t<n;t++){const n=s[t];i[n]=e[n]}let n;if(e.hasOwnProperty("asset")){n=s.indexOf("model");if(n!==-1){s.splice(n,1)}n=s.indexOf("render");if(n!==-1){s.splice(n,1)}}else if(e.hasOwnProperty("model")){n=s.indexOf("asset");if(n!==-1){s.splice(n,1)}}if(!i.type){i.type=t.data.type}t.data.type=i.type;if(Array.isArray(i.halfExtents)){i.halfExtents=new It(i.halfExtents)}if(Array.isArray(i.linearOffset)){i.linearOffset=new It(i.linearOffset)}if(Array.isArray(i.angularOffset)){const t=i.angularOffset;if(t.length===3){i.angularOffset=(new Gt).setFromEulerAngles(t[0],t[1],t[2])}else{i.angularOffset=new Gt(i.angularOffset)}}const r=this._createImplementation(i.type);r.beforeInitialize(t,i);super.initializeComponentData(t,i,s);r.afterInitialize(t,i)}_createImplementation(t){if(this.implementations[t]===undefined){let e;switch(t){case"box":e=new SN(this);break;case"sphere":e=new xN(this);break;case"capsule":e=new TN(this);break;case"cylinder":e=new wN(this);break;case"cone":e=new bN(this);break;case"mesh":e=new EN(this);break;case"compound":e=new AN(this);break}this.implementations[t]=e}return this.implementations[t]}_getImplementation(t){return this.implementations[t.collision.data.type]}cloneComponent(t,e){return this._getImplementation(t).clone(t,e)}onBeforeRemove(t,e){this.implementations[e.data.type].beforeRemove(t,e);e.onBeforeRemove()}onRemove(t,e){this.implementations[e.type].remove(t,e)}updateCompoundChildTransform(t,e){const s=t.collision._compoundParent;if(s===t.collision)return;if(t.enabled&&t.collision.enabled&&(t._dirtyLocal||e)){const e=this._getNodeTransform(t,s.entity);const i=s.getCompoundChildShapeIndex(t.collision.shape);if(i===null){s.shape.addChildShape(e,t.collision.data.shape)}else{s.shape.updateChildTransform(i,e,true)}Ammo.destroy(e)}}_removeCompoundChild(t,e){if(t.shape.getNumChildShapes()===0){return}if(t.shape.removeChildShape){t.shape.removeChildShape(e)}else{const s=t.getCompoundChildShapeIndex(e);if(s!==null){t.shape.removeChildShapeByIndex(s)}}}onTransformChanged(t,e,s,i){this.implementations[t.data.type].updateTransform(t,e,s,i)}changeType(t,e,s){this.implementations[e].beforeRemove(t.entity,t);this.implementations[e].remove(t.entity,t.data);this._createImplementation(s).reset(t,t.data)}recreatePhysicalShapes(t){this.implementations[t.data.type].recreatePhysicalShapes(t)}_calculateNodeRelativeTransform(t,e){if(t===e){const e=t.getWorldTransform().getScale();fN.setScale(e.x,e.y,e.z)}else{this._calculateNodeRelativeTransform(t.parent,e);fN.mul(t.getLocalTransform())}}_getNodeScaling(t){const e=t.getWorldTransform();const s=e.getScale();return new Ammo.btVector3(s.x,s.y,s.z)}_getNodeTransform(t,e){let s,i;if(e){this._calculateNodeRelativeTransform(t,e);s=pN;i=_N;fN.getTranslation(s);i.setFromMat4(fN)}else{s=t.getPosition();i=t.getRotation()}const n=new Ammo.btQuaternion;const r=new Ammo.btTransform;r.setIdentity();const a=r.getOrigin();const o=t.collision;if(o&&o._hasOffset){const t=o.data.linearOffset;const e=o.data.angularOffset;const r=mN;_N.copy(i).transformVector(t,r);r.add(s);_N.copy(i).mul(e);a.setValue(r.x,r.y,r.z);n.setValue(_N.x,_N.y,_N.z,_N.w)}else{a.setValue(s.x,s.y,s.z);n.setValue(i.x,i.y,i.z,i.w)}r.setRotation(n);Ammo.destroy(n);return r}destroy(){for(const t in this._triMeshCache){Ammo.destroy(this._triMeshCache[t])}this._triMeshCache=null;super.destroy()}}const PN=new bt;const LN=new ro;class DN{constructor(t,e,s){this._entity=t;this._element=t.element;this.model=new Jx;this.node=new By;this.model.graph=this.node;this.mesh=e;this.meshInstance=new sy(this.mesh,s,this.node);this.meshInstance.name=`ImageElement: ${t.name}`;this.meshInstance.castShadow=false;this.meshInstance.receiveShadow=false;this._meshDirty=false;this.model.meshInstances.push(this.meshInstance);this._entity.addChild(this.model.graph);this.model._entity=this._entity;this.unmaskMeshInstance=null}destroy(){this.setMaterial(null);this._element.removeModelFromLayers(this.model);this.model.destroy();this.model=null;this.node=null;this.mesh=null;this.meshInstance?.destroy();this.meshInstance=null;this.unmaskMeshInstance?.destroy();this.unmaskMeshInstance=null;this._entity=null;this._element=null}setMesh(t){if(!this.meshInstance)return;this.mesh=t;this.meshInstance.mesh=t;this.meshInstance.visible=!!t;if(this.unmaskMeshInstance){this.unmaskMeshInstance.mesh=t}this.forceUpdateAabb()}setMask(t){if(!this.meshInstance)return;if(this._entity.enabled&&this._element.enabled){this._element.removeModelFromLayers(this.model)}if(t){this.unmaskMeshInstance=new sy(this.mesh,this.meshInstance.material,this.node);this.unmaskMeshInstance.name=`Unmask: ${this._entity.name}`;this.unmaskMeshInstance.castShadow=false;this.unmaskMeshInstance.receiveShadow=false;this.unmaskMeshInstance.pick=false;this.model.meshInstances.push(this.unmaskMeshInstance);for(const t in this.meshInstance.parameters){this.unmaskMeshInstance.setParameter(t,this.meshInstance.parameters[t].data)}}else{const t=this.model.meshInstances.indexOf(this.unmaskMeshInstance);if(t>=0){this.model.meshInstances.splice(t,1)}}if(this._entity.enabled&&this._element.enabled){this._element.addModelToLayers(this.model)}if(!t){this.unmaskMeshInstance?.destroy();this.unmaskMeshInstance=null}}setMaterial(t){if(!this.meshInstance)return;this.meshInstance.material=t;if(this.unmaskMeshInstance){this.unmaskMeshInstance.material=t}}setParameter(t,e){if(!this.meshInstance)return;this.meshInstance.setParameter(t,e);if(this.unmaskMeshInstance){this.unmaskMeshInstance.setParameter(t,e)}}deleteParameter(t){if(!this.meshInstance)return;this.meshInstance.deleteParameter(t);if(this.unmaskMeshInstance){this.unmaskMeshInstance.deleteParameter(t)}}setUnmaskDrawOrder(){if(!this.meshInstance)return;const t=function(e){let s;const i=e.children;const n=i.length;if(n){for(let t=0;t<n;t++){if(i[t].element){s=i[t]}}if(!s)return null;const e=t(s);if(e){return e}return s}return null};if(this.unmaskMeshInstance){const e=t(this._entity);if(e&&e.element){this.unmaskMeshInstance.drawOrder=e.element.drawOrder+e.element.getMaskOffset()}else{this.unmaskMeshInstance.drawOrder=this.meshInstance.drawOrder+this._element.getMaskOffset()}}}setDrawOrder(t){if(!this.meshInstance){return}this.meshInstance.drawOrder=t}setCull(t){if(!this.meshInstance)return;const e=this._element;let s=null;if(t&&e._isScreenSpace()){s=function(t){return e.isVisibleForCamera(t)}}this.meshInstance.cull=t;this.meshInstance.isVisibleFunc=s;if(this.unmaskMeshInstance){this.unmaskMeshInstance.cull=t;this.unmaskMeshInstance.isVisibleFunc=s}}setScreenSpace(t){if(!this.meshInstance)return;this.meshInstance.screenSpace=t;if(this.unmaskMeshInstance){this.unmaskMeshInstance.screenSpace=t}}setLayer(t){if(!this.meshInstance)return;this.meshInstance.layer=t;if(this.unmaskMeshInstance){this.unmaskMeshInstance.layer=t}}forceUpdateAabb(t){if(!this.meshInstance)return;this.meshInstance._aabbVer=-1;if(this.unmaskMeshInstance){this.unmaskMeshInstance._aabbVer=-1}}setAabbFunc(t){if(!this.meshInstance)return;this.meshInstance._updateAabbFunc=t;if(this.unmaskMeshInstance){this.unmaskMeshInstance._updateAabbFunc=t}}}class MN{constructor(t){this._evtSetMeshes=null;this._element=t;this._entity=t.entity;this._system=t.system;this._textureAsset=null;this._texture=null;this._materialAsset=null;this._material=null;this._spriteAsset=null;this._sprite=null;this._spriteFrame=0;this._pixelsPerUnit=null;this._targetAspectRatio=-1;this._rect=new Ft(0,0,1,1);this._mask=false;this._maskRef=0;this._outerScale=new Ot;this._outerScaleUniform=new Float32Array(2);this._innerOffset=new Ft;this._innerOffsetUniform=new Float32Array(4);this._atlasRect=new Ft;this._atlasRectUniform=new Float32Array(4);this._defaultMesh=this._createMesh();this._renderable=new DN(this._entity,this._defaultMesh,this._material);this._color=new bt(1,1,1,1);this._colorUniform=new Float32Array([1,1,1]);this._updateRenderableEmissive();this._renderable.setParameter("material_opacity",1);this._updateAabbFunc=this._updateAabb.bind(this);this._onScreenChange(this._element.screen);this._element.on("resize",this._onParentResizeOrPivotChange,this);this._element.on("set:pivot",this._onParentResizeOrPivotChange,this);this._element.on("screen:set:screenspace",this._onScreenSpaceChange,this);this._element.on("set:screen",this._onScreenChange,this);this._element.on("set:draworder",this._onDrawOrderChange,this);this._element.on("screen:set:resolution",this._onResolutionChange,this)}destroy(){this.textureAsset=null;this.spriteAsset=null;this.materialAsset=null;this._renderable.setMesh(this._defaultMesh);this._renderable.destroy();this._defaultMesh=null;this._element.off("resize",this._onParentResizeOrPivotChange,this);this._element.off("set:pivot",this._onParentResizeOrPivotChange,this);this._element.off("screen:set:screenspace",this._onScreenSpaceChange,this);this._element.off("set:screen",this._onScreenChange,this);this._element.off("set:draworder",this._onDrawOrderChange,this);this._element.off("screen:set:resolution",this._onResolutionChange,this)}_onResolutionChange(t){}_onParentResizeOrPivotChange(){if(this._renderable.mesh){this._updateMesh(this._renderable.mesh)}}_onScreenSpaceChange(t){this._updateMaterial(t)}_onScreenChange(t,e){if(t){this._updateMaterial(t.screen.screenSpace)}else{this._updateMaterial(false)}}_onDrawOrderChange(t){this._renderable.setDrawOrder(t);if(this.mask&&this._element.screen){this._element.screen.screen.once("syncdraworder",(function(){this._renderable.setUnmaskDrawOrder()}),this)}}_hasUserMaterial(){return!!this._materialAsset||!!this._material&&this._system.defaultImageMaterials.indexOf(this._material)===-1}_use9Slicing(){return this.sprite&&(this.sprite.renderMode===Dg||this.sprite.renderMode===Mg)}_updateMaterial(t){const e=!!this._mask;const s=!!(this.sprite&&this.sprite.renderMode===Dg);const i=!!(this.sprite&&this.sprite.renderMode===Mg);if(!this._hasUserMaterial()){this._material=this._system.getImageElementMaterial(t,e,s,i)}if(this._renderable){this._renderable.setCull(!this._element._isScreenSpace()||this._element._isScreenCulled());this._renderable.setMaterial(this._material);this._renderable.setScreenSpace(t);this._renderable.setLayer(t?am:lm)}}_createMesh(){const t=this._element;const e=t.calculatedWidth;const s=t.calculatedHeight;const i=this._rect;const n=this._system.app.graphicsDevice;const r=new Float32Array([e,0,0,0,0,1,i.x+i.z,1-i.y,e,s,0,0,0,1,i.x+i.z,1-(i.y+i.w),0,0,0,0,0,1,i.x,1-i.y,0,s,0,0,0,1,i.x,1-(i.y+i.w)]);const a=LN.get(n,(()=>new Qo(n,[{semantic:Ki,components:3,type:vr},{semantic:Zi,components:3,type:vr},{semantic:nn,components:2,type:vr}])));const o=new qo(n,a,4,{data:r.buffer});const l=new Vv(n);l.vertexBuffer=o;l.primitive[0].type=ji;l.primitive[0].base=0;l.primitive[0].count=4;l.primitive[0].indexed=false;l.aabb.setMinMax(It.ZERO,new It(e,s,0));this._updateMesh(l);return l}_updateMesh(t){const e=this._element;let s=e.calculatedWidth;let i=e.calculatedHeight;if(e.fitMode!==pF&&this._targetAspectRatio>0){const t=e.calculatedWidth/e.calculatedHeight;if(e.fitMode===mF&&t>this._targetAspectRatio||e.fitMode===_F&&t<this._targetAspectRatio){s=e.calculatedHeight*this._targetAspectRatio}else{i=e.calculatedWidth/this._targetAspectRatio}}const n=e._isScreenSpace();this._updateMaterial(n);if(this._renderable)this._renderable.forceUpdateAabb();if(this.sprite&&(this.sprite.renderMode===Dg||this.sprite.renderMode===Mg)){const t=this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]];const n=2/t.rect.z;const r=2/t.rect.w;this._innerOffset.set(t.border.x*n,t.border.y*r,t.border.z*n,t.border.w*r);const a=this.sprite.atlas.texture;this._atlasRect.set(t.rect.x/a.width,t.rect.y/a.height,t.rect.z/a.width,t.rect.w/a.height);const o=this._pixelsPerUnit!==null?this._pixelsPerUnit:this.sprite.pixelsPerUnit;const l=t.rect.z/o;const h=t.rect.w/o;this._outerScale.set(Math.max(s,this._innerOffset.x*l),Math.max(i,this._innerOffset.y*h));let c=l;let d=h;this._outerScale.x/=l;this._outerScale.y/=h;c*=wt.clamp(s/(this._innerOffset.x*l),1e-4,1);d*=wt.clamp(i/(this._innerOffset.y*h),1e-4,1);if(this._renderable){this._innerOffsetUniform[0]=this._innerOffset.x;this._innerOffsetUniform[1]=this._innerOffset.y;this._innerOffsetUniform[2]=this._innerOffset.z;this._innerOffsetUniform[3]=this._innerOffset.w;this._renderable.setParameter("innerOffset",this._innerOffsetUniform);this._atlasRectUniform[0]=this._atlasRect.x;this._atlasRectUniform[1]=this._atlasRect.y;this._atlasRectUniform[2]=this._atlasRect.z;this._atlasRectUniform[3]=this._atlasRect.w;this._renderable.setParameter("atlasRect",this._atlasRectUniform);this._outerScaleUniform[0]=this._outerScale.x;this._outerScaleUniform[1]=this._outerScale.y;this._renderable.setParameter("outerScale",this._outerScaleUniform);this._renderable.setAabbFunc(this._updateAabbFunc);this._renderable.node.setLocalScale(c,d,1);this._renderable.node.setLocalPosition((.5-e.pivot.x)*s,(.5-e.pivot.y)*i,0)}}else{const n=t.vertexBuffer;const r=new Float32Array(n.lock());const a=e.pivot.x;const o=e.pivot.y;r[0]=s-a*s;r[1]=0-o*i;r[8]=s-a*s;r[9]=i-o*i;r[16]=0-a*s;r[17]=0-o*i;r[24]=0-a*s;r[25]=i-o*i;let l=1;let h=1;let c=this._rect;if(this._sprite&&this._sprite.frameKeys[this._spriteFrame]&&this._sprite.atlas){const t=this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]];if(t){c=t.rect;l=this._sprite.atlas.texture.width;h=this._sprite.atlas.texture.height}}r[6]=(c.x+c.z)/l;r[7]=1-c.y/h;r[14]=(c.x+c.z)/l;r[15]=1-(c.y+c.w)/h;r[22]=c.x/l;r[23]=1-c.y/h;r[30]=c.x/l;r[31]=1-(c.y+c.w)/h;n.unlock();const d=new It(0-a*s,0-o*i,0);const u=new It(s-a*s,i-o*i,0);t.aabb.setMinMax(d,u);if(this._renderable){this._renderable.node.setLocalScale(1,1,1);this._renderable.node.setLocalPosition(0,0,0);this._renderable.setAabbFunc(null)}}this._meshDirty=false}_updateSprite(){let t=false;let e=null;this._targetAspectRatio=-1;if(this._sprite&&this._sprite.atlas){e=this._sprite.meshes[this.spriteFrame];t=this._sprite.renderMode===Dg||this._sprite.renderMode===Mg;const s=this._sprite.atlas.frames[this._sprite.frameKeys[this._spriteFrame]];if(s?.rect.w>0){this._targetAspectRatio=s.rect.z/s.rect.w}}this.mesh=t?e:this._defaultMesh;this.refreshMesh()}refreshMesh(){if(this.mesh){if(!this._element._beingInitialized){this._updateMesh(this.mesh)}else{this._meshDirty=true}}}_updateAabb(t){t.center.set(0,0,0);t.halfExtents.set(this._outerScale.x*.5,this._outerScale.y*.5,.001);t.setFromTransformedAabb(t,this._renderable.node.getWorldTransform());return t}_toggleMask(){this._element._dirtifyMask();const t=this._element._isScreenSpace();this._updateMaterial(t);this._renderable.setMask(!!this._mask)}_onMaterialLoad(t){this.material=t.resource}_onMaterialAdded(t){this._system.app.assets.off(`add:${t.id}`,this._onMaterialAdded,this);if(this._materialAsset===t.id){this._bindMaterialAsset(t)}}_bindMaterialAsset(t){if(!this._entity.enabled)return;t.on("load",this._onMaterialLoad,this);t.on("change",this._onMaterialChange,this);t.on("remove",this._onMaterialRemove,this);if(t.resource){this._onMaterialLoad(t)}else{this._system.app.assets.load(t)}}_unbindMaterialAsset(t){t.off("load",this._onMaterialLoad,this);t.off("change",this._onMaterialChange,this);t.off("remove",this._onMaterialRemove,this)}_onMaterialChange(){}_onMaterialRemove(){}_onTextureAdded(t){this._system.app.assets.off(`add:${t.id}`,this._onTextureAdded,this);if(this._textureAsset===t.id){this._bindTextureAsset(t)}}_bindTextureAsset(t){if(!this._entity.enabled)return;t.on("load",this._onTextureLoad,this);t.on("change",this._onTextureChange,this);t.on("remove",this._onTextureRemove,this);if(t.resource){this._onTextureLoad(t)}else{this._system.app.assets.load(t)}}_unbindTextureAsset(t){t.off("load",this._onTextureLoad,this);t.off("change",this._onTextureChange,this);t.off("remove",this._onTextureRemove,this)}_onTextureLoad(t){this.texture=t.resource}_onTextureChange(t){}_onTextureRemove(t){}_onSpriteAssetAdded(t){this._system.app.assets.off(`add:${t.id}`,this._onSpriteAssetAdded,this);if(this._spriteAsset===t.id){this._bindSpriteAsset(t)}}_bindSpriteAsset(t){if(!this._entity.enabled)return;t.on("load",this._onSpriteAssetLoad,this);t.on("change",this._onSpriteAssetChange,this);t.on("remove",this._onSpriteAssetRemove,this);if(t.resource){this._onSpriteAssetLoad(t)}else{this._system.app.assets.load(t)}}_unbindSpriteAsset(t){t.off("load",this._onSpriteAssetLoad,this);t.off("change",this._onSpriteAssetChange,this);t.off("remove",this._onSpriteAssetRemove,this);if(t.data.textureAtlasAsset){this._system.app.assets.off(`load:${t.data.textureAtlasAsset}`,this._onTextureAtlasLoad,this)}}_onSpriteAssetLoad(t){if(!t||!t.resource){this.sprite=null}else{if(!t.resource.atlas){const e=t.data.textureAtlasAsset;if(e){const t=this._system.app.assets;t.off(`load:${e}`,this._onTextureAtlasLoad,this);t.once(`load:${e}`,this._onTextureAtlasLoad,this)}}else{this.sprite=t.resource}}}_onSpriteAssetChange(t){this._onSpriteAssetLoad(t)}_onSpriteAssetRemove(t){}_bindSprite(t){this._evtSetMeshes=t.on("set:meshes",this._onSpriteMeshesChange,this);t.on("set:pixelsPerUnit",this._onSpritePpuChange,this);t.on("set:atlas",this._onAtlasTextureChange,this);if(t.atlas){t.atlas.on("set:texture",this._onAtlasTextureChange,this)}}_unbindSprite(t){this._evtSetMeshes?.off();this._evtSetMeshes=null;t.off("set:pixelsPerUnit",this._onSpritePpuChange,this);t.off("set:atlas",this._onAtlasTextureChange,this);if(t.atlas){t.atlas.off("set:texture",this._onAtlasTextureChange,this)}}_onSpriteMeshesChange(){if(this._sprite){this._spriteFrame=wt.clamp(this._spriteFrame,0,this._sprite.frameKeys.length-1)}this._updateSprite()}_onSpritePpuChange(){if(this.sprite.renderMode!==Lg&&this._pixelsPerUnit===null){this._updateSprite()}}_onAtlasTextureChange(){if(this.sprite&&this.sprite.atlas&&this.sprite.atlas.texture){this._renderable.setParameter("texture_emissiveMap",this._sprite.atlas.texture);this._renderable.setParameter("texture_opacityMap",this._sprite.atlas.texture)}else{this._renderable.deleteParameter("texture_emissiveMap");this._renderable.deleteParameter("texture_opacityMap")}}_onTextureAtlasLoad(t){const e=this._spriteAsset;if(e instanceof qA){this._onSpriteAssetLoad(e)}else{this._onSpriteAssetLoad(this._system.app.assets.get(e))}}onEnable(){if(this._materialAsset){const t=this._system.app.assets.get(this._materialAsset);if(t&&t.resource!==this._material){this._bindMaterialAsset(t)}}if(this._textureAsset){const t=this._system.app.assets.get(this._textureAsset);if(t&&t.resource!==this._texture){this._bindTextureAsset(t)}}if(this._spriteAsset){const t=this._system.app.assets.get(this._spriteAsset);if(t&&t.resource!==this._sprite){this._bindSpriteAsset(t)}}this._element.addModelToLayers(this._renderable.model)}onDisable(){this._element.removeModelFromLayers(this._renderable.model)}_setStencil(t){this._renderable.meshInstance.stencilFront=t;this._renderable.meshInstance.stencilBack=t;let e=0;if(this._element.maskedBy){e=this._element.maskedBy.element._image._maskRef}if(this._renderable.unmaskMeshInstance){const t=new tl({ref:e+1,func:ps,zpass:On});this._renderable.unmaskMeshInstance.stencilFront=t;this._renderable.unmaskMeshInstance.stencilBack=t}}_updateRenderableEmissive(){PN.linear(this._color);this._colorUniform[0]=PN.r;this._colorUniform[1]=PN.g;this._colorUniform[2]=PN.b;this._renderable.setParameter("material_emissive",this._colorUniform)}set color(t){const{r:e,g:s,b:i}=t;if(this._color.r!==e||this._color.g!==s||this._color.b!==i){this._color.r=e;this._color.g=s;this._color.b=i;this._updateRenderableEmissive()}if(this._element){this._element.fire("set:color",this._color)}}get color(){return this._color}set opacity(t){if(t!==this._color.a){this._color.a=t;this._renderable.setParameter("material_opacity",t)}if(this._element){this._element.fire("set:opacity",t)}}get opacity(){return this._color.a}set rect(t){let e,s,i,n;if(t instanceof Ft){e=t.x;s=t.y;i=t.z;n=t.w}else{e=t[0];s=t[1];i=t[2];n=t[3]}if(e===this._rect.x&&s===this._rect.y&&i===this._rect.z&&n===this._rect.w){return}this._rect.set(e,s,i,n);if(this._renderable.mesh){if(!this._element._beingInitialized){this._updateMesh(this._renderable.mesh)}else{this._meshDirty=true}}}get rect(){return this._rect}_removeMaterialAssetEvents(){if(this._materialAsset){const t=this._system.app.assets;t.off(`add:${this._materialAsset}`,this._onMaterialAdded,this);const e=t.get(this._materialAsset);if(e){e.off("load",this._onMaterialLoad,this);e.off("change",this._onMaterialChange,this);e.off("remove",this._onMaterialRemove,this)}}}set material(t){if(this._material===t)return;if(!t){const e=this._element._isScreenSpace();if(this.mask){t=e?this._system.defaultScreenSpaceImageMaskMaterial:this._system.defaultImageMaskMaterial}else{t=e?this._system.defaultScreenSpaceImageMaterial:this._system.defaultImageMaterial}}this._material=t;if(this._materialAsset){const e=this._system.app.assets.get(this._materialAsset);if(!e||e.resource!==t){this._removeMaterialAssetEvents();this._materialAsset=null}}if(t){this._renderable.setMaterial(t);if(this._hasUserMaterial()){this._renderable.deleteParameter("material_opacity");this._renderable.deleteParameter("material_emissive")}else{this._updateRenderableEmissive();this._renderable.setParameter("material_opacity",this._color.a)}}}get material(){return this._material}set materialAsset(t){const e=this._system.app.assets;let s=t;if(t instanceof qA){s=t.id}if(this._materialAsset!==s){this._removeMaterialAssetEvents();this._materialAsset=s;if(this._materialAsset){const t=e.get(this._materialAsset);if(!t){this._materialAsset=null;this.material=null;this._materialAsset=s;e.on(`add:${this._materialAsset}`,this._onMaterialAdded,this)}else{this._bindMaterialAsset(t)}}else{this._materialAsset=null;this.material=null;this._materialAsset=s}}}get materialAsset(){return this._materialAsset}set texture(t){if(this._texture===t)return;if(this._textureAsset){const e=this._system.app.assets.get(this._textureAsset);if(e&&e.resource!==t){this.textureAsset=null}}this._texture=t;if(t){if(this._spriteAsset){this.spriteAsset=null}this._renderable.setParameter("texture_emissiveMap",this._texture);this._renderable.setParameter("texture_opacityMap",this._texture);this._updateRenderableEmissive();this._renderable.setParameter("material_opacity",this._color.a);const t=this._texture.width/this._texture.height;if(t!==this._targetAspectRatio){this._targetAspectRatio=t;if(this._element.fitMode!==pF){this.refreshMesh()}}}else{this._renderable.deleteParameter("texture_emissiveMap");this._renderable.deleteParameter("texture_opacityMap");this._targetAspectRatio=-1;if(this._element.fitMode!==pF){this.refreshMesh()}}}get texture(){return this._texture}set textureAsset(t){const e=this._system.app.assets;let s=t;if(t instanceof qA){s=t.id}if(this._textureAsset!==s){if(this._textureAsset){e.off(`add:${this._textureAsset}`,this._onTextureAdded,this);const t=e.get(this._textureAsset);if(t){t.off("load",this._onTextureLoad,this);t.off("change",this._onTextureChange,this);t.off("remove",this._onTextureRemove,this)}}this._textureAsset=s;if(this._textureAsset){const t=e.get(this._textureAsset);if(!t){this.texture=null;e.on(`add:${this._textureAsset}`,this._onTextureAdded,this)}else{this._bindTextureAsset(t)}}else{this.texture=null}}}get textureAsset(){return this._textureAsset}set spriteAsset(t){const e=this._system.app.assets;let s=t;if(t instanceof qA){s=t.id}if(this._spriteAsset!==s){if(this._spriteAsset){e.off(`add:${this._spriteAsset}`,this._onSpriteAssetAdded,this);const t=e.get(this._spriteAsset);if(t){this._unbindSpriteAsset(t)}}this._spriteAsset=s;if(this._spriteAsset){const t=e.get(this._spriteAsset);if(!t){this.sprite=null;e.on(`add:${this._spriteAsset}`,this._onSpriteAssetAdded,this)}else{this._bindSpriteAsset(t)}}else{this.sprite=null}}if(this._element){this._element.fire("set:spriteAsset",s)}}get spriteAsset(){return this._spriteAsset}set sprite(t){if(this._sprite===t)return;if(this._sprite){this._unbindSprite(this._sprite)}if(this._spriteAsset){const e=this._system.app.assets.get(this._spriteAsset);if(e&&e.resource!==t){this.spriteAsset=null}}this._sprite=t;if(this._sprite){this._bindSprite(this._sprite);if(this._textureAsset){this.textureAsset=null}}if(this._sprite&&this._sprite.atlas&&this._sprite.atlas.texture){this._renderable.setParameter("texture_emissiveMap",this._sprite.atlas.texture);this._renderable.setParameter("texture_opacityMap",this._sprite.atlas.texture)}else{this._renderable.deleteParameter("texture_emissiveMap");this._renderable.deleteParameter("texture_opacityMap")}if(this._sprite){this._spriteFrame=wt.clamp(this._spriteFrame,0,this._sprite.frameKeys.length-1)}this._updateSprite()}get sprite(){return this._sprite}set spriteFrame(t){const e=this._spriteFrame;if(this._sprite){this._spriteFrame=wt.clamp(t,0,this._sprite.frameKeys.length-1)}else{this._spriteFrame=t}if(this._spriteFrame!==e){this._updateSprite()}if(this._element){this._element.fire("set:spriteFrame",t)}}get spriteFrame(){return this._spriteFrame}set mesh(t){this._renderable.setMesh(t);if(this._defaultMesh===t){this._renderable.setAabbFunc(null)}else{this._renderable.setAabbFunc(this._updateAabbFunc)}}get mesh(){return this._renderable.mesh}set mask(t){if(this._mask!==t){this._mask=t;this._toggleMask()}}get mask(){return this._mask}set pixelsPerUnit(t){if(this._pixelsPerUnit===t)return;this._pixelsPerUnit=t;if(this._sprite&&(this._sprite.renderMode===Dg||this._sprite.renderMode===Mg)){this._updateSprite()}}get pixelsPerUnit(){return this._pixelsPerUnit}get aabb(){if(this._renderable.meshInstance){return this._renderable.meshInstance.aabb}return null}}class IN extends at{constructor(t){super();this._app=t;t.i18n.on(iC.EVENT_CHANGE,this._onSetLocale,this);this._autoLoad=false;this._disableLocalization=false;this._defaultAsset=null;this._localizedAsset=null}set defaultAsset(t){const e=t instanceof qA?t.id:t;if(this._defaultAsset===e)return;if(this._defaultAsset){this._unbindDefaultAsset()}this._defaultAsset=e;if(this._defaultAsset){this._bindDefaultAsset()}this._onSetLocale(this._app.i18n.locale)}get defaultAsset(){return this._defaultAsset}set localizedAsset(t){const e=t instanceof qA?t.id:t;if(this._localizedAsset===e){return}if(this._localizedAsset){this._app.assets.off(`add:${this._localizedAsset}`,this._onLocalizedAssetAdd,this);this._unbindLocalizedAsset()}this._localizedAsset=e;if(this._localizedAsset){const t=this._app.assets.get(this._localizedAsset);if(!t){this._app.assets.once(`add:${this._localizedAsset}`,this._onLocalizedAssetAdd,this)}else{this._bindLocalizedAsset()}}}get localizedAsset(){return this._localizedAsset}set autoLoad(t){if(this._autoLoad===t)return;this._autoLoad=t;if(this._autoLoad&&this._localizedAsset){this._unbindLocalizedAsset();this._bindLocalizedAsset()}}get autoLoad(){return this._autoLoad}set disableLocalization(t){if(this._disableLocalization===t)return;this._disableLocalization=t;this._onSetLocale(this._app.i18n.locale)}get disableLocalization(){return this._disableLocalization}_bindDefaultAsset(){const t=this._app.assets.get(this._defaultAsset);if(!t){this._app.assets.once(`add:${this._defaultAsset}`,this._onDefaultAssetAdd,this)}else{this._onDefaultAssetAdd(t)}}_unbindDefaultAsset(){if(!this._defaultAsset)return;this._app.assets.off(`add:${this._defaultAsset}`,this._onDefaultAssetAdd,this);const t=this._app.assets.get(this._defaultAsset);if(!t)return;t.off("add:localized",this._onLocaleAdd,this);t.off("remove:localized",this._onLocaleRemove,this);t.off("remove",this._onDefaultAssetRemove,this)}_onDefaultAssetAdd(t){if(this._defaultAsset!==t.id)return;t.on("add:localized",this._onLocaleAdd,this);t.on("remove:localized",this._onLocaleRemove,this);t.once("remove",this._onDefaultAssetRemove,this)}_onDefaultAssetRemove(t){if(this._defaultAsset!==t.id)return;t.off("add:localized",this._onLocaleAdd,this);t.off("remove:localized",this._onLocaleAdd,this);this._app.assets.once(`add:${this._defaultAsset}`,this._onDefaultAssetAdd,this)}_bindLocalizedAsset(){if(!this._autoLoad)return;const t=this._app.assets.get(this._localizedAsset);if(!t)return;t.on("load",this._onLocalizedAssetLoad,this);t.on("change",this._onLocalizedAssetChange,this);t.on("remove",this._onLocalizedAssetRemove,this);if(t.resource){this._onLocalizedAssetLoad(t)}else{this._app.assets.load(t)}}_unbindLocalizedAsset(){const t=this._app.assets.get(this._localizedAsset);if(!t)return;t.off("load",this._onLocalizedAssetLoad,this);t.off("change",this._onLocalizedAssetChange,this);t.off("remove",this._onLocalizedAssetRemove,this)}_onLocalizedAssetAdd(t){if(this._localizedAsset!==t.id)return;this._bindLocalizedAsset()}_onLocalizedAssetLoad(t){this.fire("load",t)}_onLocalizedAssetChange(t,e,s,i){this.fire("change",t,e,s,i)}_onLocalizedAssetRemove(t){if(this._localizedAsset===t.id){this.localizedAsset=this._defaultAsset}this.fire("remove",t)}_onLocaleAdd(t,e){if(this._app.i18n.locale!==t)return;this._onSetLocale(t)}_onLocaleRemove(t,e){if(this._app.i18n.locale!==t)return;this._onSetLocale(t)}_onSetLocale(t){if(!this._defaultAsset){this.localizedAsset=null;return}const e=this._app.assets.get(this._defaultAsset);if(!e||this._disableLocalization){this.localizedAsset=this._defaultAsset;return}const s=e.getLocalizedAssetId(t);if(!s){this.localizedAsset=this._defaultAsset;return}this.localizedAsset=s}destroy(){this.defaultAsset=null;this._app.i18n.off(iC.EVENT_CHANGE,this._onSetLocale,this);this.off()}}const RN="msdf";const ON="bitmap";const FN=0;const NN=1;const kN=2;const BN=3;const UN=4;const zN=5;const VN=6;const GN=7;const HN=8;const WN=" \t\n\r\v\f";const XN=/[\w|/]/;class qN{constructor(t){this._symbols=t;this._index=0;this._last=0;this._cur=this._symbols.length>0?this._symbols[0]:null;this._buf=[];this._mode="text";this._error=null}read(){let t=this._read();while(t===HN){t=this._read()}if(t!==FN&&t!==NN){this._last=this._index}return t}buf(){return this._buf}last(){return this._last}error(){return this._error}debugPrint(){const t=["EOF","ERROR","TEXT","OPEN_BRACKET","CLOSE_BRACKET","EQUALS","STRING","IDENTIFIER","WHITESPACE"];let e=this.read();let s="";while(true){s+=`${(s.length>0?"\n":"")+t[e]} '${this.buf().join("")}'`;if(e===FN||e===NN){break}e=this.read()}return s}_read(){this._buf=[];if(this._eof()){return FN}return this._mode==="text"?this._text():this._tag()}_text(){while(true){switch(this._cur){case null:return this._buf.length>0?kN:FN;case"[":this._mode="tag";return this._buf.length>0?kN:this._tag();case"\\":this._next();switch(this._cur){case"[":this._store();break;default:this._output("\\");break}break;default:this._store();break}}}_tag(){switch(this._cur){case null:this._error="unexpected end of input reading tag";return NN;case"[":this._store();return BN;case"]":this._store();this._mode="text";return UN;case"=":this._store();return zN;case" ":case"\t":case"\n":case"\r":case"\v":case"\f":return this._whitespace();case'"':return this._string();default:if(!this._isIdentifierSymbol(this._cur)){this._error="unrecognized character";return NN}return this._identifier()}}_whitespace(){this._store();while(WN.indexOf(this._cur)!==-1){this._store()}return HN}_string(){this._next();while(true){switch(this._cur){case null:this._error="unexpected end of input reading string";return NN;case'"':this._next();return VN;default:this._store();break}}}_identifier(){this._store();while(this._cur!==null&&this._isIdentifierSymbol(this._cur)){this._store()}return GN}_isIdentifierSymbol(t){return t.length===1&&t.match(XN)!==null}_eof(){return this._cur===null}_next(){if(!this._eof()){this._index++;this._cur=this._index<this._symbols.length?this._symbols[this._index]:null}return this._cur}_store(){this._buf.push(this._cur);return this._next()}_output(t){this._buf.push(t)}}class $N{constructor(t){this._scanner=new qN(t);this._error=null}parse(t,e){while(true){const s=this._scanner.read();switch(s){case FN:return true;case NN:return false;case kN:Array.prototype.push.apply(t,this._scanner.buf());break;case BN:if(!this._parseTag(t,e)){return false}break;default:return false}}}error(){return`Error evaluating markup at #${this._scanner.last().toString()} (${this._scanner.error()||this._error})`}_parseTag(t,e){let s=this._scanner.read();if(s!==GN){this._error="expected identifier";return false}const i=this._scanner.buf().join("");if(i[0]==="/"){for(let n=e.length-1;n>=0;--n){if(i===`/${e[n].name}`&&e[n].end===null){e[n].end=t.length;s=this._scanner.read();if(s!==UN){this._error="expected close bracket";return false}return true}}this._error="failed to find matching tag";return false}const n={name:i,value:null,attributes:{},start:t.length,end:null};s=this._scanner.read();if(s===zN){s=this._scanner.read();if(s!==VN){this._error="expected string";return false}n.value=this._scanner.buf().join("");s=this._scanner.read()}while(true){switch(s){case UN:e.push(n);return true;case GN:{const t=this._scanner.buf().join("");s=this._scanner.read();if(s!==zN){this._error="expected equals";return false}s=this._scanner.read();if(s!==VN){this._error="expected string";return false}const e=this._scanner.buf().join("");n.attributes[t]=e;break}default:this._error="expected close bracket or identifier";return false}s=this._scanner.read()}}}function jN(t,e){for(const s in e){if(!e.hasOwnProperty(s)){continue}const i=e[s];if(i instanceof Object){if(!t.hasOwnProperty(s)){t[s]={}}jN(t[s],e[s])}else{t[s]=i}}}function YN(t){if(t.length===0){return null}const e={};for(let s=0;s<t.length;++s){const i=t[s];const n={};n[i.name]={value:i.value,attributes:i.attributes};jN(e,n)}return e}function KN(t,e){if(t.length===0){return null}const s={};for(let e=0;e<t.length;++e){const i=t[e];if(!s.hasOwnProperty(i.start)){s[i.start]={open:[i],close:null}}else{if(s[i.start].open===null){s[i.start].open=[i]}else{s[i.start].open.push(i)}}if(!s.hasOwnProperty(i.end)){s[i.end]={open:null,close:[i]}}else{if(s[i.end].close===null){s[i.end].close=[i]}else{s[i.end].close.push(i)}}}let i=[];function n(t){i=i.filter((e=>t.find((t=>t===e))===undefined))}function r(t){for(let e=0;e<t.length;++e){i.push(t[e])}}const a=Object.keys(s).sort(((t,e)=>t-e));const o=[];for(let t=0;t<a.length;++t){const e=s[a[t]];if(e.close!==null){n(e.close)}if(e.open!==null){r(e.open)}o.push({start:a[t],tags:YN(i)})}const l=[];let h=null;for(let t=0;t<o.length;++t){const e=o[t];while(l.length<e.start){l.push(h?h.tags:null)}h=e}while(l.length<e){l.push(null)}return l}function ZN(t){const e=new $N(t);const s=[];const i=[];if(!e.parse(s,i)){console.warn(e.error());return{symbols:t,tags:null}}const n=i.find((t=>t.end===null));if(n){console.warn(`Markup error: found unclosed tag='${n.name}'`);return{symbols:t,tags:null}}const r=KN(i,s.length);return{symbols:s,tags:r}}class QN{static evaluate(t){return ZN(t)}}class JN{constructor(){this.count=0;this.quad=0;this.lines={};this.positions=[];this.normals=[];this.uvs=[];this.colors=[];this.indices=[];this.outlines=[];this.shadows=[];this.meshInstance=null}}function tk(t,e){const s=new Vv(t);s.setPositions(e.positions);s.setNormals(e.normals);s.setColors32(e.colors);s.setUvs(0,e.uvs);s.setIndices(e.indices);s.setVertexStream(Sn,e.outlines,3,undefined,vr,false);s.setVertexStream(xn,e.shadows,3,undefined,vr,false);s.update();return s}const ek=/^[\r\n]$/;const sk=/^[ \t]$/;const ik=/^[ \t\-]|\u200b$/;const nk=/^[a-z0-9]$/i;const rk=/^[\u1100-\u11ff]|[\u3000-\u9fff\ua960-\ua97f]|[\uac00-\ud7ff]$/;const ak=/^[〕〉》」』】〙〗〟ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻]$/;const ok=["​","؜","‎","‏","‪","‫","‬","‭","‮","⁦","⁧","⁨","⁩"];const lk={width:0,height:0,xadvance:0,xoffset:0,yoffset:0};const hk=new bt;const ck=new Ot;const dk=new bt;class uk{constructor(t){this._element=t;this._system=t.system;this._entity=t.entity;this._text="";this._symbols=[];this._colorPalette=[];this._outlinePalette=[];this._shadowPalette=[];this._symbolColors=null;this._symbolOutlineParams=null;this._symbolShadowParams=null;this._i18nKey=null;this._fontAsset=new IN(this._system.app);this._fontAsset.disableLocalization=true;this._fontAsset.on("load",this._onFontLoad,this);this._fontAsset.on("change",this._onFontChange,this);this._fontAsset.on("remove",this._onFontRemove,this);this._font=null;this._color=new bt(1,1,1,1);this._colorUniform=new Float32Array(3);this._spacing=1;this._fontSize=32;this._fontMinY=0;this._fontMaxY=0;this._originalFontSize=32;this._maxFontSize=32;this._minFontSize=8;this._autoFitWidth=false;this._autoFitHeight=false;this._maxLines=-1;this._lineHeight=32;this._scaledLineHeight=32;this._wrapLines=false;this._drawOrder=0;this._alignment=new Ot(.5,.5);this._autoWidth=true;this._autoHeight=true;this.width=0;this.height=0;this._node=new By;this._model=new Jx;this._model.graph=this._node;this._entity.addChild(this._node);this._meshInfo=[];this._material=null;this._aabbDirty=true;this._aabb=new jt;this._noResize=false;this._currentMaterialType=null;this._maskedMaterialSrc=null;this._rtlReorder=false;this._unicodeConverter=false;this._rtl=false;this._outlineColor=new bt(0,0,0,1);this._outlineColorUniform=new Float32Array(4);this._outlineThicknessScale=.2;this._outlineThickness=0;this._shadowColor=new bt(0,0,0,1);this._shadowColorUniform=new Float32Array(4);this._shadowOffsetScale=.005;this._shadowOffset=new Ot(0,0);this._shadowOffsetUniform=new Float32Array(2);this._enableMarkup=false;this._onScreenChange(this._element.screen);t.on("resize",this._onParentResize,this);t.on("set:screen",this._onScreenChange,this);t.on("screen:set:screenspace",this._onScreenSpaceChange,this);t.on("set:draworder",this._onDrawOrderChange,this);t.on("set:pivot",this._onPivotChange,this);this._system.app.i18n.on(iC.EVENT_CHANGE,this._onLocaleSet,this);this._system.app.i18n.on("data:add",this._onLocalizationData,this);this._system.app.i18n.on("data:remove",this._onLocalizationData,this);this._rangeStart=0;this._rangeEnd=0}destroy(){this._setMaterial(null);if(this._model){this._element.removeModelFromLayers(this._model);this._model.destroy();this._model=null}this._fontAsset.destroy();this.font=null;this._element.off("resize",this._onParentResize,this);this._element.off("set:screen",this._onScreenChange,this);this._element.off("screen:set:screenspace",this._onScreenSpaceChange,this);this._element.off("set:draworder",this._onDrawOrderChange,this);this._element.off("set:pivot",this._onPivotChange,this);this._system.app.i18n.off(iC.EVENT_CHANGE,this._onLocaleSet,this);this._system.app.i18n.off("data:add",this._onLocalizationData,this);this._system.app.i18n.off("data:remove",this._onLocalizationData,this)}_onParentResize(t,e){if(this._noResize)return;if(this._font)this._updateText()}_onScreenChange(t){if(t){this._updateMaterial(t.screen.screenSpace)}else{this._updateMaterial(false)}}_onScreenSpaceChange(t){this._updateMaterial(t)}_onDrawOrderChange(t){this._drawOrder=t;if(this._model){for(let e=0,s=this._model.meshInstances.length;e<s;e++){this._model.meshInstances[e].drawOrder=t}}}_onPivotChange(t){if(this._font){this._updateText()}}_onLocaleSet(t){if(!this._i18nKey)return;if(this.fontAsset){const t=this._system.app.assets.get(this.fontAsset);if(!t||!t.resource||t.resource!==this._font){this.font=null}}this._resetLocalizedText()}_onLocalizationData(t,e){if(this._i18nKey&&e[this._i18nKey]){this._resetLocalizedText()}}_resetLocalizedText(){this._setText(this._system.app.i18n.getText(this._i18nKey))}_setText(t){if(this.unicodeConverter){const e=this._system.getUnicodeConverter();if(e){t=e(t)}else{console.warn("Element created with unicodeConverter option but no unicodeConverter function registered")}}if(this._text!==t){if(this._font){this._updateText(t)}this._text=t}}_updateText(t){let e;if(t===undefined)t=this._text;this._symbols=nt.getSymbols(t.normalize?t.normalize("NFC"):t);if(this._symbols.length===0){this._symbols=[" "]}if(this._enableMarkup){const t=QN.evaluate(this._symbols);this._symbols=t.symbols;e=t.tags||[]}if(this._rtlReorder){const t=this._system.app.systems.element.getRtlReorder();if(t){const s=t(this._symbols);this._rtl=s.rtl;this._symbols=s.mapping.map((function(t){return this._symbols[t]}),this);if(e){e=s.mapping.map((t=>e[t]))}}else{console.warn("Element created with rtlReorder option but no rtlReorder function registered")}}else{this._rtl=false}const s=(t,e)=>`${t.toString(true).toLowerCase()}:${e.toFixed(2)}`;const i=(t,e)=>`${t.toString(true).toLowerCase()}:${e.x.toFixed(2)}:${e.y.toFixed(2)}`;if(e){const t={};const n={};const r={};this._colorPalette=[Math.round(this._color.r*255),Math.round(this._color.g*255),Math.round(this._color.b*255)];this._outlinePalette=[Math.round(this._outlineColor.r*255),Math.round(this._outlineColor.g*255),Math.round(this._outlineColor.b*255),Math.round(this._outlineColor.a*255),Math.round(this._outlineThickness*255)];this._shadowPalette=[Math.round(this._shadowColor.r*255),Math.round(this._shadowColor.g*255),Math.round(this._shadowColor.b*255),Math.round(this._shadowColor.a*255),Math.round(this._shadowOffset.x*127),Math.round(this._shadowOffset.y*127)];this._symbolColors=[];this._symbolOutlineParams=[];this._symbolShadowParams=[];t[this._color.toString(false).toLowerCase()]=0;n[s(this._outlineColor,this._outlineThickness)]=0;r[i(this._shadowColor,this._shadowOffset)]=0;for(let a=0,o=this._symbols.length;a<o;++a){const o=e[a];let l=0;if(o&&o.color&&o.color.value){const e=o.color.value;if(e.length===7&&e[0]==="#"){const s=e.substring(1).toLowerCase();if(t.hasOwnProperty(s)){l=t[s]}else{if(/^[0-9a-f]{6}$/.test(s)){l=this._colorPalette.length/3;t[s]=l;this._colorPalette.push(parseInt(s.substring(0,2),16));this._colorPalette.push(parseInt(s.substring(2,4),16));this._colorPalette.push(parseInt(s.substring(4,6),16))}}}}this._symbolColors.push(l);let h=0;if(o&&o.outline&&(o.outline.attributes.color||o.outline.attributes.thickness)){let t=o.outline.attributes.color?hk.fromString(o.outline.attributes.color):this._outlineColor;let e=Number(o.outline.attributes.thickness);if(Number.isNaN(t.r)||Number.isNaN(t.g)||Number.isNaN(t.b)||Number.isNaN(t.a)){t=this._outlineColor}if(Number.isNaN(e)){e=this._outlineThickness}const i=s(t,e);if(n.hasOwnProperty(i)){h=n[i]}else{h=this._outlinePalette.length/5;n[i]=h;this._outlinePalette.push(Math.round(t.r*255),Math.round(t.g*255),Math.round(t.b*255),Math.round(t.a*255),Math.round(e*255))}}this._symbolOutlineParams.push(h);let c=0;if(o&&o.shadow&&(o.shadow.attributes.color||o.shadow.attributes.offset||o.shadow.attributes.offsetX||o.shadow.attributes.offsetY)){let t=o.shadow.attributes.color?hk.fromString(o.shadow.attributes.color):this._shadowColor;const e=Number(o.shadow.attributes.offset);const s=Number(o.shadow.attributes.offsetX);const n=Number(o.shadow.attributes.offsetY);if(Number.isNaN(t.r)||Number.isNaN(t.g)||Number.isNaN(t.b)||Number.isNaN(t.a)){t=this._shadowColor}const a=ck.set(!Number.isNaN(s)?s:!Number.isNaN(e)?e:this._shadowOffset.x,!Number.isNaN(n)?n:!Number.isNaN(e)?e:this._shadowOffset.y);const l=i(t,a);if(r.hasOwnProperty(l)){c=r[l]}else{c=this._shadowPalette.length/6;r[l]=c;this._shadowPalette.push(Math.round(t.r*255),Math.round(t.g*255),Math.round(t.b*255),Math.round(t.a*255),Math.round(a.x*127),Math.round(a.y*127))}}this._symbolShadowParams.push(c)}}else{this._colorPalette=[];this._symbolColors=null;this._symbolOutlineParams=null;this._symbolShadowParams=null}this._updateMaterialEmissive();this._updateMaterialOutline();this._updateMaterialShadow();const n=this._calculateCharsPerTexture();let r=false;const a=this._element;const o=a._isScreenSpace();const l=a._isScreenCulled();const h=function(t){return a.isVisibleForCamera(t)};for(let t=0,e=this._meshInfo.length;t<e;t++){const e=n[t]||0;const s=this._meshInfo[t];if(s.count!==e){if(!r){a.removeModelFromLayers(this._model);r=true}s.count=e;s.positions.length=s.normals.length=e*3*4;s.indices.length=e*3*2;s.uvs.length=e*2*4;s.colors.length=e*4*4;s.outlines.length=e*4*3;s.shadows.length=e*4*3;if(s.meshInstance){this._removeMeshInstance(s.meshInstance)}if(e===0){s.meshInstance=null;continue}for(let t=0;t<e;t++){s.indices[t*3*2+0]=t*4;s.indices[t*3*2+1]=t*4+1;s.indices[t*3*2+2]=t*4+3;s.indices[t*3*2+3]=t*4+2;s.indices[t*3*2+4]=t*4+3;s.indices[t*3*2+5]=t*4+1;s.normals[t*4*3+0]=0;s.normals[t*4*3+1]=0;s.normals[t*4*3+2]=-1;s.normals[t*4*3+3]=0;s.normals[t*4*3+4]=0;s.normals[t*4*3+5]=-1;s.normals[t*4*3+6]=0;s.normals[t*4*3+7]=0;s.normals[t*4*3+8]=-1;s.normals[t*4*3+9]=0;s.normals[t*4*3+10]=0;s.normals[t*4*3+11]=-1}const i=tk(this._system.app.graphicsDevice,s);const n=new sy(i,this._material,this._node);n.name=`Text Element: ${this._entity.name}`;n.castShadow=false;n.receiveShadow=false;n.cull=!o;n.screenSpace=o;n.drawOrder=this._drawOrder;if(l){n.cull=true;n.isVisibleFunc=h}this._setTextureParams(n,this._font.textures[t]);n.setParameter("material_emissive",this._colorUniform);n.setParameter("material_opacity",this._color.a);n.setParameter("font_sdfIntensity",this._font.intensity);n.setParameter("font_pxrange",this._getPxRange(this._font));n.setParameter("font_textureWidth",this._font.data.info.maps[t].width);n.setParameter("outline_color",this._outlineColorUniform);n.setParameter("outline_thickness",this._outlineThicknessScale*this._outlineThickness);n.setParameter("shadow_color",this._shadowColorUniform);if(this._symbolShadowParams){this._shadowOffsetUniform[0]=0;this._shadowOffsetUniform[1]=0}else{const e=-this._font.data.info.maps[t].width/this._font.data.info.maps[t].height;this._shadowOffsetUniform[0]=this._shadowOffsetScale*this._shadowOffset.x;this._shadowOffsetUniform[1]=e*this._shadowOffsetScale*this._shadowOffset.y}n.setParameter("shadow_offset",this._shadowOffsetUniform);s.meshInstance=n;this._model.meshInstances.push(n)}}if(this._element.maskedBy){this._element._setMaskedBy(this._element.maskedBy)}if(r&&this._element.enabled&&this._entity.enabled){this._element.addModelToLayers(this._model)}this._updateMeshes();this._rangeStart=0;this._rangeEnd=this._symbols.length;this._updateRenderRange()}_removeMeshInstance(t){t.destroy();const e=this._model.meshInstances.indexOf(t);if(e!==-1){this._model.meshInstances.splice(e,1)}}_setMaterial(t){this._material=t;if(this._model){for(let e=0,s=this._model.meshInstances.length;e<s;e++){const s=this._model.meshInstances[e];s.material=t}}}_updateMaterial(t){const e=this._element;const s=e._isScreenCulled();const i=function(t){return e.isVisibleForCamera(t)};const n=this._font&&this._font.type===RN;this._material=this._system.getTextElementMaterial(t,n,this._enableMarkup);if(this._model){for(let e=0,n=this._model.meshInstances.length;e<n;e++){const n=this._model.meshInstances[e];n.cull=!t;n.material=this._material;n.screenSpace=t;if(s){n.cull=true;n.isVisibleFunc=i}else{n.isVisibleFunc=null}}}}_updateMaterialEmissive(){if(this._symbolColors){this._colorUniform[0]=1;this._colorUniform[1]=1;this._colorUniform[2]=1}else{dk.linear(this._color);this._colorUniform[0]=dk.r;this._colorUniform[1]=dk.g;this._colorUniform[2]=dk.b}}_updateMaterialOutline(){if(this._symbolOutlineParams){this._outlineColorUniform[0]=0;this._outlineColorUniform[1]=0;this._outlineColorUniform[2]=0;this._outlineColorUniform[3]=1}else{dk.linear(this._outlineColor);this._outlineColorUniform[0]=dk.r;this._outlineColorUniform[1]=dk.g;this._outlineColorUniform[2]=dk.b;this._outlineColorUniform[3]=dk.a}}_updateMaterialShadow(){if(this._symbolOutlineParams){this._shadowColorUniform[0]=0;this._shadowColorUniform[1]=0;this._shadowColorUniform[2]=0;this._shadowColorUniform[3]=0}else{dk.linear(this._shadowColor);this._shadowColorUniform[0]=dk.r;this._shadowColorUniform[1]=dk.g;this._shadowColorUniform[2]=dk.b;this._shadowColorUniform[3]=dk.a}}_isWordBoundary(t){return ik.test(t)}_isValidNextChar(t){return t!==null&&!ak.test(t)}_isNextCJKBoundary(t,e){return rk.test(t)&&(ik.test(e)||nk.test(e))}_isNextCJKWholeWord(t){return rk.test(t)}_updateMeshes(){const t=this._font.data;const e=this;const s=Math.min(this._minFontSize,this._maxFontSize);const i=this._maxFontSize;const n=this._shouldAutoFit();if(n){this._fontSize=this._maxFontSize}const r=32;const a=this._symbols.length;let o=0;let l=0;let h=0;let c=0;let d=1;let u=0;let f=0;let p=0;let m=0;let _=0;let g=0;const v=Math.abs(this._element.anchor.x-this._element.anchor.z)>=1e-4;let y=this._element.calculatedWidth;if(this.autoWidth&&!v||!this._wrapLines){y=Number.POSITIVE_INFINITY}let S=0;let x=0;let T,w,b,E;function A(t,s,i){e._lineWidths.push(Math.abs(i));const n=p>s?s+1:p;const r=p>s?p+1:s;const a=t.slice(n,r);if(g){let t=a.length;while(t--&&g>0){if(ek.test(a[t])){a.splice(t,1);g--}}}e._lineContents.push(a.join(""));o=0;l-=e._scaledLineHeight;d++;m=0;_=0;g=0;u=0;p=s}let C=true;while(C){C=false;if(n){this._scaledLineHeight=this._lineHeight*this._fontSize/(this._maxFontSize||1e-4)}else{this._scaledLineHeight=this._lineHeight}this.width=0;this.height=0;this._lineWidths=[];this._lineContents=[];o=0;l=0;h=0;c=0;d=1;u=0;f=0;p=0;m=0;_=0;g=0;const e=this._fontSize/r;S=this._fontMinY*e;x=this._fontMaxY*e;for(let t=0;t<this._meshInfo.length;t++){this._meshInfo[t].quad=0;this._meshInfo[t].lines={}}let v=255;let P=255;let L=255;let D=255+255*256;let M=255+255*256;let I=0;let R=255+255*256;let O=255+255*256;let F=127+127*256;for(let n=0;n<a;n++){T=this._symbols[n];E=n+1>=a?null:this._symbols[n+1];const r=ek.test(T);if(r){g++;if(!this._wrapLines||this._maxLines<0||d<this._maxLines){A(this._symbols,n,c);f=n+1;p=n+1}continue}let N=0;let k=0;let B=0;let U=1;let z,V;w=t.chars[T];if(!w){if(ok.indexOf(T)!==-1){w=lk}else{if(t.chars[" "]){w=t.chars[" "]}else{for(const e in t.chars){w=t.chars[e];break}}}}if(w){let t=0;if(_>0){const e=this._font.data.kerning;if(e){const s=e[nt.getCodePoint(this._symbols[n-1])||0];if(s){t=s[nt.getCodePoint(this._symbols[n])||0]||0}}}z=w.scale||1;V=(w.width+w.height)/2;U=e*V/z;B=(w.xadvance+t)*e;N=(w.xoffset-t)*e;k=w.yoffset*e}else{console.error(`Couldn't substitute missing character: '${T}'`)}const G=sk.test(T);const H=w&&w.map||0;const W=-this._font.data.info.maps[H].width/this._font.data.info.maps[H].height;const X=this._meshInfo[H];const q=o+this._spacing*B;if(q>y&&_>0&&!G){if(this._maxLines<0||d<this._maxLines){if(m===0){f=n;A(this._symbols,n,c)}else{const e=Math.max(n-f,0);if(this._meshInfo.length<=1){X.lines[d-1]-=e;X.quad-=e}else{const e=f;const s=n;for(let i=e;i<s;i++){const e=this._symbols[i];const s=t.chars[e];const n=this._meshInfo[s&&s.map||0];n.lines[d-1]-=1;n.quad-=1}}n-=e+1;A(this._symbols,f,u);continue}}}b=X.quad;X.lines[d-1]=b;let $=o-N;let j=$+U;const Y=l-k;const K=Y+U;if(this._rtl){const t=U-N-this._spacing*B-N;$-=t;j-=t}X.positions[b*4*3+0]=$;X.positions[b*4*3+1]=Y;X.positions[b*4*3+2]=h;X.positions[b*4*3+3]=j;X.positions[b*4*3+4]=Y;X.positions[b*4*3+5]=h;X.positions[b*4*3+6]=j;X.positions[b*4*3+7]=K;X.positions[b*4*3+8]=h;X.positions[b*4*3+9]=$;X.positions[b*4*3+10]=K;X.positions[b*4*3+11]=h;this.width=Math.max(this.width,q);let Z;if(this._shouldAutoFitWidth()&&this.width>this._element.calculatedWidth){Z=Math.floor(this._element.fontSize*this._element.calculatedWidth/(this.width||1e-4));Z=wt.clamp(Z,s,i);if(Z!==this._element.fontSize){this._fontSize=Z;C=true;break}}this.height=Math.max(this.height,x-(l+S));if(this._shouldAutoFitHeight()&&this.height>this._element.calculatedHeight){Z=wt.clamp(this._fontSize-1,s,i);if(Z!==this._element.fontSize){this._fontSize=Z;C=true;break}}o+=this._spacing*B;if(!G){c=o}if(this._isWordBoundary(T)||this._isValidNextChar(E)&&(this._isNextCJKBoundary(T,E)||this._isNextCJKWholeWord(E))){m++;u=c;f=n+1}_++;const Q=this._getUv(T);X.uvs[b*4*2+0]=Q[0];X.uvs[b*4*2+1]=1-Q[1];X.uvs[b*4*2+2]=Q[2];X.uvs[b*4*2+3]=1-Q[1];X.uvs[b*4*2+4]=Q[2];X.uvs[b*4*2+5]=1-Q[3];X.uvs[b*4*2+6]=Q[0];X.uvs[b*4*2+7]=1-Q[3];if(this._symbolColors){const t=this._symbolColors[n]*3;v=this._colorPalette[t];P=this._colorPalette[t+1];L=this._colorPalette[t+2]}X.colors[b*4*4+0]=v;X.colors[b*4*4+1]=P;X.colors[b*4*4+2]=L;X.colors[b*4*4+3]=255;X.colors[b*4*4+4]=v;X.colors[b*4*4+5]=P;X.colors[b*4*4+6]=L;X.colors[b*4*4+7]=255;X.colors[b*4*4+8]=v;X.colors[b*4*4+9]=P;X.colors[b*4*4+10]=L;X.colors[b*4*4+11]=255;X.colors[b*4*4+12]=v;X.colors[b*4*4+13]=P;X.colors[b*4*4+14]=L;X.colors[b*4*4+15]=255;if(this._symbolOutlineParams){const t=this._symbolOutlineParams[n]*5;D=this._outlinePalette[t]+this._outlinePalette[t+1]*256;M=this._outlinePalette[t+2]+this._outlinePalette[t+3]*256;I=this._outlinePalette[t+4]}X.outlines[b*4*3+0]=D;X.outlines[b*4*3+1]=M;X.outlines[b*4*3+2]=I;X.outlines[b*4*3+3]=D;X.outlines[b*4*3+4]=M;X.outlines[b*4*3+5]=I;X.outlines[b*4*3+6]=D;X.outlines[b*4*3+7]=M;X.outlines[b*4*3+8]=I;X.outlines[b*4*3+9]=D;X.outlines[b*4*3+10]=M;X.outlines[b*4*3+11]=I;if(this._symbolShadowParams){const t=this._symbolShadowParams[n]*6;R=this._shadowPalette[t]+this._shadowPalette[t+1]*256;O=this._shadowPalette[t+2]+this._shadowPalette[t+3]*256;F=this._shadowPalette[t+4]+127+Math.round(W*this._shadowPalette[t+5]+127)*256}X.shadows[b*4*3+0]=R;X.shadows[b*4*3+1]=O;X.shadows[b*4*3+2]=F;X.shadows[b*4*3+3]=R;X.shadows[b*4*3+4]=O;X.shadows[b*4*3+5]=F;X.shadows[b*4*3+6]=R;X.shadows[b*4*3+7]=O;X.shadows[b*4*3+8]=F;X.shadows[b*4*3+9]=R;X.shadows[b*4*3+10]=O;X.shadows[b*4*3+11]=F;X.quad++}if(C){continue}if(p<a){A(this._symbols,a,o)}}this._noResize=true;this.autoWidth=this._autoWidth;this.autoHeight=this._autoHeight;this._noResize=false;const P=this._element.pivot.x;const L=this._element.pivot.y;const D=this._alignment.x;const M=this._alignment.y;for(let t=0;t<this._meshInfo.length;t++){if(this._meshInfo[t].count===0)continue;let e=0;for(const s in this._meshInfo[t].lines){const i=this._meshInfo[t].lines[s];const n=this._lineWidths[parseInt(s,10)];const r=-P*this._element.calculatedWidth+D*(this._element.calculatedWidth-n)*(this._rtl?-1:1);const a=(1-L)*this._element.calculatedHeight-x-(1-M)*(this._element.calculatedHeight-this.height);for(let s=e;s<=i;s++){this._meshInfo[t].positions[s*4*3]+=r;this._meshInfo[t].positions[s*4*3+3]+=r;this._meshInfo[t].positions[s*4*3+6]+=r;this._meshInfo[t].positions[s*4*3+9]+=r;this._meshInfo[t].positions[s*4*3+1]+=a;this._meshInfo[t].positions[s*4*3+4]+=a;this._meshInfo[t].positions[s*4*3+7]+=a;this._meshInfo[t].positions[s*4*3+10]+=a}if(this._rtl){for(let s=e;s<=i;s++){const e=s*4*3;for(let s=0;s<4;++s){this._meshInfo[t].positions[e+s*3]=this._element.calculatedWidth-this._meshInfo[t].positions[e+s*3]+r*2}const i=this._meshInfo[t].positions[e+3];const n=this._meshInfo[t].positions[e+6];this._meshInfo[t].positions[e+3]=this._meshInfo[t].positions[e+0];this._meshInfo[t].positions[e+6]=this._meshInfo[t].positions[e+9];this._meshInfo[t].positions[e+0]=i;this._meshInfo[t].positions[e+9]=n}}e=i+1}const s=this._meshInfo[t].count*4;const i=this._meshInfo[t].quad*4;const n=new cd(this._meshInfo[t].meshInstance.mesh.vertexBuffer);for(let e=0;e<s;e++){if(e>=i){n.element[Ki].set(0,0,0);n.element[nn].set(0,0);n.element[en].set(0,0,0,0);n.element[Sn].set(0,0,0,0);n.element[xn].set(0,0,0,0)}else{n.element[Ki].set(this._meshInfo[t].positions[e*3+0],this._meshInfo[t].positions[e*3+1],this._meshInfo[t].positions[e*3+2]);n.element[nn].set(this._meshInfo[t].uvs[e*2+0],this._meshInfo[t].uvs[e*2+1]);n.element[en].set(this._meshInfo[t].colors[e*4+0],this._meshInfo[t].colors[e*4+1],this._meshInfo[t].colors[e*4+2],this._meshInfo[t].colors[e*4+3]);n.element[Sn].set(this._meshInfo[t].outlines[e*3+0],this._meshInfo[t].outlines[e*3+1],this._meshInfo[t].outlines[e*3+2]);n.element[xn].set(this._meshInfo[t].shadows[e*3+0],this._meshInfo[t].shadows[e*3+1],this._meshInfo[t].shadows[e*3+2])}n.next()}n.end();this._meshInfo[t].meshInstance.mesh.aabb.compute(this._meshInfo[t].positions);this._meshInfo[t].meshInstance._aabbVer=-1}this._aabbDirty=true}_onFontRender(){this.font=this._font}_onFontLoad(t){if(this.font!==t.resource){this.font=t.resource}}_onFontChange(t,e,s,i){if(e==="data"){this._font.data=s;const t=this._font.data.info.maps.length;for(let e=0;e<t;e++){if(!this._meshInfo[e])continue;const t=this._meshInfo[e].meshInstance;if(t){t.setParameter("font_sdfIntensity",this._font.intensity);t.setParameter("font_pxrange",this._getPxRange(this._font));t.setParameter("font_textureWidth",this._font.data.info.maps[e].width)}}}}_onFontRemove(t){}_setTextureParams(t,e){if(this._font){if(this._font.type===RN){t.deleteParameter("texture_emissiveMap");t.deleteParameter("texture_opacityMap");t.setParameter("texture_msdfMap",e)}else if(this._font.type===ON){t.deleteParameter("texture_msdfMap");t.setParameter("texture_emissiveMap",e);t.setParameter("texture_opacityMap",e)}}}_getPxRange(t){const e=Object.keys(this._font.data.chars);for(let t=0;t<e.length;t++){const s=this._font.data.chars[e[t]];if(s.range){return(s.scale||1)*s.range}}return 2}_getUv(t){const e=this._font.data;if(!e.chars[t]){const t=" ";if(e.chars[t]){return this._getUv(t)}return[0,0,0,0]}const s=e.chars[t].map;const i=e.info.maps[s].width;const n=e.info.maps[s].height;const r=e.chars[t].x;const a=e.chars[t].y;const o=r;const l=a;const h=r+e.chars[t].width;const c=a-e.chars[t].height;const d=1-e.chars[t].height/n;return[o/i,d-l/n,h/i,d-c/n]}onEnable(){this._fontAsset.autoLoad=true;if(this._model){this._element.addModelToLayers(this._model)}}onDisable(){this._fontAsset.autoLoad=false;if(this._model){this._element.removeModelFromLayers(this._model)}}_setStencil(t){if(this._model){const e=this._model.meshInstances;for(let s=0;s<e.length;s++){e[s].stencilFront=t;e[s].stencilBack=t}}}_shouldAutoFitWidth(){return this._autoFitWidth&&!this._autoWidth}_shouldAutoFitHeight(){return this._autoFitHeight&&!this._autoHeight}_shouldAutoFit(){return this._autoFitWidth&&!this._autoWidth||this._autoFitHeight&&!this._autoHeight}_calculateCharsPerTexture(t){const e={};if(t===undefined){t=this._symbols.length}for(let s=0,i=t;s<i;s++){const t=this._symbols[s];let i=this._font.data.chars[t];if(!i){i=this._font.data.chars[" "];if(!i){i=this._font.data.chars[Object.keys(this._font.data.chars)[0]]}}const n=i.map;if(!e[n]){e[n]=1}else{e[n]++}}return e}_updateRenderRange(){const t=this._rangeStart===0?0:this._calculateCharsPerTexture(this._rangeStart);const e=this._rangeEnd===0?0:this._calculateCharsPerTexture(this._rangeEnd);for(let s=0,i=this._meshInfo.length;s<i;s++){const i=t[s]||0;const n=e[s]||0;const r=this._meshInfo[s].meshInstance;if(r){const t=r.mesh;if(t){t.primitive[0].base=i*3*2;t.primitive[0].count=(n-i)*3*2}}}}set text(t){this._i18nKey=null;const e=t!=null&&t.toString()||"";this._setText(e)}get text(){return this._text}set key(t){const e=t!==null?t.toString():null;if(this._i18nKey===e){return}this._i18nKey=e;if(e){this._fontAsset.disableLocalization=false;this._resetLocalizedText()}else{this._fontAsset.disableLocalization=true}}get key(){return this._i18nKey}set color(t){const e=t.r;const s=t.g;const i=t.b;if(this._color.r===e&&this._color.g===s&&this._color.b===i){return}this._color.r=e;this._color.g=s;this._color.b=i;if(!this._model){return}if(this._symbolColors){if(this._font){this._updateText()}}else{dk.linear(this._color);this._colorUniform[0]=dk.r;this._colorUniform[1]=dk.g;this._colorUniform[2]=dk.b;for(let t=0,e=this._model.meshInstances.length;t<e;t++){const e=this._model.meshInstances[t];e.setParameter("material_emissive",this._colorUniform)}}if(this._element){this._element.fire("set:color",this._color)}}get color(){return this._color}set opacity(t){if(this._color.a!==t){this._color.a=t;if(this._model){for(let e=0,s=this._model.meshInstances.length;e<s;e++){const s=this._model.meshInstances[e];s.setParameter("material_opacity",t)}}}if(this._element){this._element.fire("set:opacity",t)}}get opacity(){return this._color.a}set lineHeight(t){const e=this._lineHeight;this._lineHeight=t;this._scaledLineHeight=t;if(e!==t&&this._font){this._updateText()}}get lineHeight(){return this._lineHeight}set wrapLines(t){const e=this._wrapLines;this._wrapLines=t;if(e!==t&&this._font){this._updateText()}}get wrapLines(){return this._wrapLines}get lines(){return this._lineContents}set spacing(t){const e=this._spacing;this._spacing=t;if(e!==t&&this._font){this._updateText()}}get spacing(){return this._spacing}set fontSize(t){const e=this._fontSize;this._fontSize=t;this._originalFontSize=t;if(e!==t&&this._font){this._updateText()}}get fontSize(){return this._fontSize}set fontAsset(t){this._fontAsset.defaultAsset=t}get fontAsset(){return this._fontAsset.localizedAsset}set font(t){let e;if(this._font){e=this._font.type;if(this._font.off)this._font.off("render",this._onFontRender,this)}this._font=t;this._fontMinY=0;this._fontMaxY=0;if(!t)return;const s=this._font.data;for(const t in s.chars){const e=s.chars[t];if(e.bounds){this._fontMinY=Math.min(this._fontMinY,e.bounds[1]);this._fontMaxY=Math.max(this._fontMaxY,e.bounds[3])}}if(this._font.on)this._font.on("render",this._onFontRender,this);if(this._fontAsset.localizedAsset){const t=this._system.app.assets.get(this._fontAsset.localizedAsset);if(t.resource!==this._font){this._fontAsset.defaultAsset=null}}if(t.type!==e){const t=this._element._isScreenSpace();this._updateMaterial(t)}for(let t=0,e=this._font.textures.length;t<e;t++){if(!this._meshInfo[t]){this._meshInfo[t]=new JN}else{const e=this._meshInfo[t].meshInstance;if(e){e.setParameter("font_sdfIntensity",this._font.intensity);e.setParameter("font_pxrange",this._getPxRange(this._font));e.setParameter("font_textureWidth",this._font.data.info.maps[t].width);this._setTextureParams(e,this._font.textures[t])}}}let i=false;for(let t=this._font.textures.length;t<this._meshInfo.length;t++){if(this._meshInfo[t].meshInstance){if(!i){this._element.removeModelFromLayers(this._model);i=true}this._removeMeshInstance(this._meshInfo[t].meshInstance)}}if(this._meshInfo.length>this._font.textures.length){this._meshInfo.length=this._font.textures.length}this._updateText()}get font(){return this._font}set alignment(t){if(t instanceof Ot){this._alignment.set(t.x,t.y)}else{this._alignment.set(t[0],t[1])}if(this._font){this._updateText()}}get alignment(){return this._alignment}set autoWidth(t){const e=this._autoWidth;this._autoWidth=t;if(t&&Math.abs(this._element.anchor.x-this._element.anchor.z)<1e-4){this._element.width=this.width}if(e!==t){const t=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize;if(t!==this._fontSize){this._fontSize=t;if(this._font){this._updateText()}}}}get autoWidth(){return this._autoWidth}set autoHeight(t){const e=this._autoHeight;this._autoHeight=t;if(t&&Math.abs(this._element.anchor.y-this._element.anchor.w)<1e-4){this._element.height=this.height}if(e!==t){const t=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize;if(t!==this._fontSize){this._fontSize=t;if(this._font){this._updateText()}}}}get autoHeight(){return this._autoHeight}set rtlReorder(t){if(this._rtlReorder!==t){this._rtlReorder=t;if(this._font){this._updateText()}}}get rtlReorder(){return this._rtlReorder}set unicodeConverter(t){if(this._unicodeConverter!==t){this._unicodeConverter=t;this._setText(this._text)}}get unicodeConverter(){return this._unicodeConverter}get aabb(){if(this._aabbDirty){let t=false;for(let e=0;e<this._meshInfo.length;e++){if(!this._meshInfo[e].meshInstance)continue;if(!t){this._aabb.copy(this._meshInfo[e].meshInstance.aabb);t=true}else{this._aabb.add(this._meshInfo[e].meshInstance.aabb)}}this._aabbDirty=false}return this._aabb}set outlineColor(t){const e=t instanceof bt?t.r:t[0];const s=t instanceof bt?t.g:t[1];const i=t instanceof bt?t.b:t[2];const n=t instanceof bt?t.a:t[3];if(this._outlineColor.r===e&&this._outlineColor.g===s&&this._outlineColor.b===i&&this._outlineColor.a===n){return}this._outlineColor.r=e;this._outlineColor.g=s;this._outlineColor.b=i;this._outlineColor.a=n;if(!this._model){return}if(this._symbolOutlineParams){if(this._font){this._updateText()}}else{dk.linear(this._outlineColor);this._outlineColorUniform[0]=dk.r;this._outlineColorUniform[1]=dk.g;this._outlineColorUniform[2]=dk.b;this._outlineColorUniform[3]=dk.a;for(let t=0,e=this._model.meshInstances.length;t<e;t++){const e=this._model.meshInstances[t];e.setParameter("outline_color",this._outlineColorUniform)}}if(this._element){this._element.fire("set:outline",this._color)}}get outlineColor(){return this._outlineColor}set outlineThickness(t){const e=this._outlineThickness;this._outlineThickness=t;if(e!==t&&this._font){if(!this._model){return}if(this._symbolOutlineParams){if(this._font){this._updateText()}}else{for(let t=0,e=this._model.meshInstances.length;t<e;t++){const e=this._model.meshInstances[t];e.setParameter("outline_thickness",this._outlineThicknessScale*this._outlineThickness)}}}}get outlineThickness(){return this._outlineThickness}set shadowColor(t){const e=t instanceof bt?t.r:t[0];const s=t instanceof bt?t.g:t[1];const i=t instanceof bt?t.b:t[2];const n=t instanceof bt?t.a:t[3];if(this._shadowColor.r===e&&this._shadowColor.g===s&&this._shadowColor.b===i&&this._shadowColor.a===n){return}this._shadowColor.r=e;this._shadowColor.g=s;this._shadowColor.b=i;this._shadowColor.a=n;if(!this._model){return}if(this._symbolShadowParams){if(this._font){this._updateText()}}else{dk.linear(this._shadowColor);this._shadowColorUniform[0]=dk.r;this._shadowColorUniform[1]=dk.g;this._shadowColorUniform[2]=dk.b;this._shadowColorUniform[3]=dk.a;for(let t=0,e=this._model.meshInstances.length;t<e;t++){const e=this._model.meshInstances[t];e.setParameter("shadow_color",this._shadowColorUniform)}}}get shadowColor(){return this._shadowColor}set shadowOffset(t){const e=t instanceof Ot?t.x:t[0],s=t instanceof Ot?t.y:t[1];if(this._shadowOffset.x===e&&this._shadowOffset.y===s){return}this._shadowOffset.set(e,s);if(this._font&&this._model){if(this._symbolShadowParams){this._updateText()}else{for(let t=0,e=this._model.meshInstances.length;t<e;t++){const e=-this._font.data.info.maps[t].width/this._font.data.info.maps[t].height;this._shadowOffsetUniform[0]=this._shadowOffsetScale*this._shadowOffset.x;this._shadowOffsetUniform[1]=e*this._shadowOffsetScale*this._shadowOffset.y;const s=this._model.meshInstances[t];s.setParameter("shadow_offset",this._shadowOffsetUniform)}}}}get shadowOffset(){return this._shadowOffset}set minFontSize(t){if(this._minFontSize===t)return;this._minFontSize=t;if(this.font&&this._shouldAutoFit()){this._updateText()}}get minFontSize(){return this._minFontSize}set maxFontSize(t){if(this._maxFontSize===t)return;this._maxFontSize=t;if(this.font&&this._shouldAutoFit()){this._updateText()}}get maxFontSize(){return this._maxFontSize}set autoFitWidth(t){if(this._autoFitWidth===t)return;this._autoFitWidth=t;this._fontSize=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize;if(this.font){this._updateText()}}get autoFitWidth(){return this._autoFitWidth}set autoFitHeight(t){if(this._autoFitHeight===t)return;this._autoFitHeight=t;this._fontSize=this._shouldAutoFit()?this._maxFontSize:this._originalFontSize;if(this.font){this._updateText()}}get autoFitHeight(){return this._autoFitHeight}set maxLines(t){if(this._maxLines===t)return;if(t===null&&this._maxLines===-1)return;this._maxLines=t===null?-1:t;if(this.font&&this._wrapLines){this._updateText()}}get maxLines(){return this._maxLines}set enableMarkup(t){t=!!t;if(this._enableMarkup===t)return;this._enableMarkup=t;if(this.font){this._updateText()}const e=this._element._isScreenSpace();this._updateMaterial(e)}get enableMarkup(){return this._enableMarkup}get symbols(){return this._symbols}get symbolColors(){if(this._symbolColors===null){return null}return this._symbolColors.map((function(t){return this._colorPalette.slice(t*3,t*3+3)}),this)}get symbolOutlineParams(){if(this._symbolOutlineParams===null){return null}return this._symbolOutlineParams.map((function(t){return this._outlinePalette.slice(t*5,t*5+5)}),this)}get symbolShadowParams(){if(this._symbolShadowParams===null){return null}return this._symbolShadowParams.map((function(t){return this._shadowPalette.slice(t*6,t*6+6)}),this)}get rtl(){return this._rtl}set rangeStart(t){t=Math.max(0,Math.min(t,this._symbols.length));if(t!==this._rangeStart){this._rangeStart=t;this._updateRenderRange()}}get rangeStart(){return this._rangeStart}set rangeEnd(t){t=Math.max(this._rangeStart,Math.min(t,this._symbols.length));if(t!==this._rangeEnd){this._rangeEnd=t;this._updateRenderRange()}}get rangeEnd(){return this._rangeEnd}}const fk=new It;const pk=new Vt;const mk=new It;const _k=new It;const gk=new Vt;const vk=new Vt;const yk=new Vt;const Sk=new Vt;class xk extends qR{static{this.EVENT_MOUSEDOWN="mousedown"}static{this.EVENT_MOUSEUP="mouseup"}static{this.EVENT_MOUSEENTER="mouseenter"}static{this.EVENT_MOUSELEAVE="mouseleave"}static{this.EVENT_MOUSEMOVE="mousemove"}static{this.EVENT_MOUSEWHEEL="mousewheel"}static{this.EVENT_CLICK="click"}static{this.EVENT_TOUCHSTART="touchstart"}static{this.EVENT_TOUCHEND="touchend"}static{this.EVENT_TOUCHMOVE="touchmove"}static{this.EVENT_TOUCHCANCEL="touchcancel"}constructor(t,e){super(t,e),this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null;this._beingInitialized=false;this._anchor=new Ft;this._localAnchor=new Ft;this._pivot=new Ot;this._width=this._calculatedWidth=32;this._height=this._calculatedHeight=32;this._margin=new Ft(0,0,-32,-32);this._modelTransform=new Vt;this._screenToWorld=new Vt;this._anchorTransform=new Vt;this._anchorDirty=true;this._parentWorldTransform=new Vt;this._screenTransform=new Vt;this._screenCorners=[new It,new It,new It,new It];this._canvasCorners=[new Ot,new Ot,new Ot,new Ot];this._worldCorners=[new It,new It,new It,new It];this._cornersDirty=true;this._canvasCornersDirty=true;this._worldCornersDirty=true;this.entity.on("insert",this._onInsert,this);this._patch();this.screen=null;this._type=dF;this._image=null;this._text=null;this._group=null;this._drawOrder=0;this._fitMode=pF;this._useInput=false;this._layers=[fm];this._addedModels=[];this._batchGroupId=-1;this._offsetReadAt=0;this._maskOffset=.5;this._maskedBy=null}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){const e=this.data;const s=e.enabled;e.enabled=t;this.fire("set","enabled",s,t)}get enabled(){return this.data.enabled}get _absLeft(){return this._localAnchor.x+this._margin.x}get _absRight(){return this._localAnchor.z-this._margin.z}get _absTop(){return this._localAnchor.w-this._margin.w}get _absBottom(){return this._localAnchor.y+this._margin.y}get _hasSplitAnchorsX(){return Math.abs(this._anchor.x-this._anchor.z)>.001}get _hasSplitAnchorsY(){return Math.abs(this._anchor.y-this._anchor.w)>.001}get aabb(){if(this._image){return this._image.aabb}if(this._text){return this._text.aabb}return null}set anchor(t){if(t instanceof Ft){this._anchor.copy(t)}else{this._anchor.set(...t)}if(!this.entity._parent&&!this.screen){this._calculateLocalAnchors()}else{this._calculateSize(this._hasSplitAnchorsX,this._hasSplitAnchorsY)}this._anchorDirty=true;if(!this.entity._dirtyLocal){this.entity._dirtifyLocal()}this.fire("set:anchor",this._anchor)}get anchor(){return this._anchor}set batchGroupId(t){if(this._batchGroupId===t){return}if(this.entity.enabled&&this._batchGroupId>=0){this.system.app.batcher?.remove(Ov.ELEMENT,this.batchGroupId,this.entity)}if(this.entity.enabled&&t>=0){this.system.app.batcher?.insert(Ov.ELEMENT,t,this.entity)}if(t<0&&this._batchGroupId>=0&&this.enabled&&this.entity.enabled){if(this._image&&this._image._renderable.model){this.addModelToLayers(this._image._renderable.model)}else if(this._text&&this._text._model){this.addModelToLayers(this._text._model)}}this._batchGroupId=t}get batchGroupId(){return this._batchGroupId}set bottom(t){this._margin.y=t;const e=this.entity.getLocalPosition();const s=this._absTop;const i=this._localAnchor.y+t;this._setHeight(s-i);e.y=t+this._calculatedHeight*this._pivot.y;this.entity.setLocalPosition(e)}get bottom(){return this._margin.y}set calculatedWidth(t){this._setCalculatedWidth(t,true)}get calculatedWidth(){return this._calculatedWidth}set calculatedHeight(t){this._setCalculatedHeight(t,true)}get calculatedHeight(){return this._calculatedHeight}get canvasCorners(){if(!this._canvasCornersDirty||!this.screen||!this.screen.screen.screenSpace){return this._canvasCorners}const t=this.system.app.graphicsDevice;const e=this.screenCorners;const s=t.canvas.clientWidth/t.width;const i=t.canvas.clientHeight/t.height;for(let n=0;n<4;n++){this._canvasCorners[n].set(e[n].x*s,(t.height-e[n].y)*i)}this._canvasCornersDirty=false;return this._canvasCorners}set drawOrder(t){let e=0;if(this.screen){e=this.screen.screen.priority}if(t>16777215){t=16777215}this._drawOrder=(e<<24)+t;this.fire("set:draworder",this._drawOrder)}get drawOrder(){return this._drawOrder}set height(t){this._height=t;if(!this._hasSplitAnchorsY){this._setCalculatedHeight(t,true)}this.fire("set:height",this._height)}get height(){return this._height}set layers(t){if(this._addedModels.length){for(let t=0;t<this._layers.length;t++){const e=this.system.app.scene.layers.getLayerById(this._layers[t]);if(e){for(let t=0;t<this._addedModels.length;t++){e.removeMeshInstances(this._addedModels[t].meshInstances)}}}}this._layers=t;if(!this.enabled||!this.entity.enabled||!this._addedModels.length){return}for(let t=0;t<this._layers.length;t++){const e=this.system.app.scene.layers.getLayerById(this._layers[t]);if(e){for(let t=0;t<this._addedModels.length;t++){e.addMeshInstances(this._addedModels[t].meshInstances)}}}}get layers(){return this._layers}set left(t){this._margin.x=t;const e=this.entity.getLocalPosition();const s=this._absRight;const i=this._localAnchor.x+t;this._setWidth(s-i);e.x=t+this._calculatedWidth*this._pivot.x;this.entity.setLocalPosition(e)}get left(){return this._margin.x}set margin(t){this._margin.copy(t);this._calculateSize(true,true);this.fire("set:margin",this._margin)}get margin(){return this._margin}get maskedBy(){return this._maskedBy}set pivot(t){const{pivot:e,margin:s}=this;const i=e.x;const n=e.y;if(t instanceof Ot){e.copy(t)}else{e.set(...t)}const r=s.x+s.z;const a=e.x-i;s.x+=r*a;s.z-=r*a;const o=s.y+s.w;const l=e.y-n;s.y+=o*l;s.w-=o*l;this._anchorDirty=true;this._cornersDirty=true;this._worldCornersDirty=true;this._calculateSize(false,false);this._flagChildrenAsDirty();this.fire("set:pivot",e)}get pivot(){return this._pivot}set right(t){this._margin.z=t;const e=this.entity.getLocalPosition();const s=this._absLeft;const i=this._localAnchor.z-t;this._setWidth(i-s);e.x=this._localAnchor.z-this._localAnchor.x-t-this._calculatedWidth*(1-this._pivot.x);this.entity.setLocalPosition(e)}get right(){return this._margin.z}get screenCorners(){if(!this._cornersDirty||!this.screen){return this._screenCorners}const t=this.entity.parent&&this.entity.parent.element&&this.entity.parent.element.screenCorners[0];this._screenCorners[0].set(this._absLeft,this._absBottom,0);this._screenCorners[1].set(this._absRight,this._absBottom,0);this._screenCorners[2].set(this._absRight,this._absTop,0);this._screenCorners[3].set(this._absLeft,this._absTop,0);const e=this.screen.screen.screenSpace;for(let s=0;s<4;s++){this._screenTransform.transformPoint(this._screenCorners[s],this._screenCorners[s]);if(e){this._screenCorners[s].mulScalar(this.screen.screen.scale)}if(t){this._screenCorners[s].add(t)}}this._cornersDirty=false;this._canvasCornersDirty=true;this._worldCornersDirty=true;return this._screenCorners}get textWidth(){return this._text?this._text.width:0}get textHeight(){return this._text?this._text.height:0}set top(t){this._margin.w=t;const e=this.entity.getLocalPosition();const s=this._absBottom;const i=this._localAnchor.w-t;this._setHeight(i-s);e.y=this._localAnchor.w-this._localAnchor.y-t-this._calculatedHeight*(1-this._pivot.y);this.entity.setLocalPosition(e)}get top(){return this._margin.w}set type(t){if(t!==this._type){this._type=t;if(this._image){this._image.destroy();this._image=null}if(this._text){this._text.destroy();this._text=null}if(t===uF){this._image=new MN(this)}else if(t===fF){this._text=new uk(this)}}}get type(){return this._type}set useInput(t){if(this._useInput===t){return}this._useInput=t;if(this.system.app.elementInput){if(t){if(this.enabled&&this.entity.enabled){this.system.app.elementInput.addElement(this)}}else{this.system.app.elementInput.removeElement(this)}}else{if(this._useInput===true);}this.fire("set:useInput",t)}get useInput(){return this._useInput}set fitMode(t){this._fitMode=t;this._calculateSize(true,true);if(this._image){this._image.refreshMesh()}}get fitMode(){return this._fitMode}set width(t){this._width=t;if(!this._hasSplitAnchorsX){this._setCalculatedWidth(t,true)}this.fire("set:width",this._width)}get width(){return this._width}get worldCorners(){if(!this._worldCornersDirty){return this._worldCorners}if(this.screen){const t=this.screenCorners;if(!this.screen.screen.screenSpace){gk.copy(this.screen.screen._screenMatrix);gk.data[13]=-gk.data[13];gk.mul2(this.screen.getWorldTransform(),gk);for(let e=0;e<4;e++){gk.transformPoint(t[e],this._worldCorners[e])}}}else{const t=this.entity.getLocalPosition();gk.setTranslate(-t.x,-t.y,-t.z);vk.setTRS(It.ZERO,this.entity.getLocalRotation(),this.entity.getLocalScale());yk.setTranslate(t.x,t.y,t.z);const e=this.entity.parent?this.entity.parent:this.entity;Sk.copy(e.getWorldTransform());Sk.mul(yk).mul(vk).mul(gk);mk.set(t.x-this.pivot.x*this.calculatedWidth,t.y-this.pivot.y*this.calculatedHeight,t.z);Sk.transformPoint(mk,this._worldCorners[0]);mk.set(t.x+(1-this.pivot.x)*this.calculatedWidth,t.y-this.pivot.y*this.calculatedHeight,t.z);Sk.transformPoint(mk,this._worldCorners[1]);mk.set(t.x+(1-this.pivot.x)*this.calculatedWidth,t.y+(1-this.pivot.y)*this.calculatedHeight,t.z);Sk.transformPoint(mk,this._worldCorners[2]);mk.set(t.x-this.pivot.x*this.calculatedWidth,t.y+(1-this.pivot.y)*this.calculatedHeight,t.z);Sk.transformPoint(mk,this._worldCorners[3])}this._worldCornersDirty=false;return this._worldCorners}set fontSize(t){this._setValue("fontSize",t)}get fontSize(){if(this._text){return this._text.fontSize}return null}set minFontSize(t){this._setValue("minFontSize",t)}get minFontSize(){if(this._text){return this._text.minFontSize}return null}set maxFontSize(t){this._setValue("maxFontSize",t)}get maxFontSize(){if(this._text){return this._text.maxFontSize}return null}set maxLines(t){this._setValue("maxLines",t)}get maxLines(){if(this._text){return this._text.maxLines}return null}set autoFitWidth(t){this._setValue("autoFitWidth",t)}get autoFitWidth(){if(this._text){return this._text.autoFitWidth}return null}set autoFitHeight(t){this._setValue("autoFitHeight",t)}get autoFitHeight(){if(this._text){return this._text.autoFitHeight}return null}set color(t){this._setValue("color",t)}get color(){if(this._text){return this._text.color}if(this._image){return this._image.color}return null}set font(t){this._setValue("font",t)}get font(){if(this._text){return this._text.font}return null}set fontAsset(t){this._setValue("fontAsset",t)}get fontAsset(){if(this._text&&typeof this._text.fontAsset==="number"){return this._text.fontAsset}return null}set spacing(t){this._setValue("spacing",t)}get spacing(){if(this._text){return this._text.spacing}return null}set lineHeight(t){this._setValue("lineHeight",t)}get lineHeight(){if(this._text){return this._text.lineHeight}return null}set wrapLines(t){this._setValue("wrapLines",t)}get wrapLines(){if(this._text){return this._text.wrapLines}return null}set lines(t){this._setValue("lines",t)}get lines(){if(this._text){return this._text.lines}return null}set alignment(t){this._setValue("alignment",t)}get alignment(){if(this._text){return this._text.alignment}return null}set autoWidth(t){this._setValue("autoWidth",t)}get autoWidth(){if(this._text){return this._text.autoWidth}return null}set autoHeight(t){this._setValue("autoHeight",t)}get autoHeight(){if(this._text){return this._text.autoHeight}return null}set rtlReorder(t){this._setValue("rtlReorder",t)}get rtlReorder(){if(this._text){return this._text.rtlReorder}return null}set unicodeConverter(t){this._setValue("unicodeConverter",t)}get unicodeConverter(){if(this._text){return this._text.unicodeConverter}return null}set text(t){this._setValue("text",t)}get text(){if(this._text){return this._text.text}return null}set key(t){this._setValue("key",t)}get key(){if(this._text){return this._text.key}return null}set texture(t){this._setValue("texture",t)}get texture(){if(this._image){return this._image.texture}return null}set textureAsset(t){this._setValue("textureAsset",t)}get textureAsset(){if(this._image){return this._image.textureAsset}return null}set material(t){this._setValue("material",t)}get material(){if(this._image){return this._image.material}return null}set materialAsset(t){this._setValue("materialAsset",t)}get materialAsset(){if(this._image){return this._image.materialAsset}return null}set sprite(t){this._setValue("sprite",t)}get sprite(){if(this._image){return this._image.sprite}return null}set spriteAsset(t){this._setValue("spriteAsset",t)}get spriteAsset(){if(this._image){return this._image.spriteAsset}return null}set spriteFrame(t){this._setValue("spriteFrame",t)}get spriteFrame(){if(this._image){return this._image.spriteFrame}return null}set pixelsPerUnit(t){this._setValue("pixelsPerUnit",t)}get pixelsPerUnit(){if(this._image){return this._image.pixelsPerUnit}return null}set opacity(t){this._setValue("opacity",t)}get opacity(){if(this._text){return this._text.opacity}if(this._image){return this._image.opacity}return null}set rect(t){this._setValue("rect",t)}get rect(){if(this._image){return this._image.rect}return null}set mask(t){this._setValue("mask",t)}get mask(){if(this._image){return this._image.mask}return null}set outlineColor(t){this._setValue("outlineColor",t)}get outlineColor(){if(this._text){return this._text.outlineColor}return null}set outlineThickness(t){this._setValue("outlineThickness",t)}get outlineThickness(){if(this._text){return this._text.outlineThickness}return null}set shadowColor(t){this._setValue("shadowColor",t)}get shadowColor(){if(this._text){return this._text.shadowColor}return null}set shadowOffset(t){this._setValue("shadowOffset",t)}get shadowOffset(){if(this._text){return this._text.shadowOffset}return null}set enableMarkup(t){this._setValue("enableMarkup",t)}get enableMarkup(){if(this._text){return this._text.enableMarkup}return null}set rangeStart(t){this._setValue("rangeStart",t)}get rangeStart(){if(this._text){return this._text.rangeStart}return null}set rangeEnd(t){this._setValue("rangeEnd",t)}get rangeEnd(){if(this._text){return this._text.rangeEnd}return null}_setValue(t,e){if(this._text){if(this._text[t]!==e){this._dirtyBatch()}this._text[t]=e}else if(this._image){if(this._image[t]!==e){this._dirtyBatch()}this._image[t]=e}}_patch(){this.entity._sync=this._sync;this.entity.setPosition=this._setPosition;this.entity.setLocalPosition=this._setLocalPosition}_unpatch(){this.entity._sync=dC.prototype._sync;this.entity.setPosition=dC.prototype.setPosition;this.entity.setLocalPosition=dC.prototype.setLocalPosition}_setPosition(t,e,s){if(!this.element.screen){dC.prototype.setPosition.call(this,t,e,s);return}if(t instanceof It){fk.copy(t)}else{fk.set(t,e,s)}this.getWorldTransform();pk.copy(this.element._screenToWorld).invert();pk.transformPoint(fk,this.localPosition);if(!this._dirtyLocal){this._dirtifyLocal()}}_setLocalPosition(t,e,s){if(t instanceof It){this.localPosition.copy(t)}else{this.localPosition.set(t,e,s)}const i=this.element;const n=this.localPosition;const r=i._pivot;i._margin.x=n.x-i._calculatedWidth*r.x;i._margin.z=i._localAnchor.z-i._localAnchor.x-i._calculatedWidth-i._margin.x;i._margin.y=n.y-i._calculatedHeight*r.y;i._margin.w=i._localAnchor.w-i._localAnchor.y-i._calculatedHeight-i._margin.y;if(!this._dirtyLocal){this._dirtifyLocal()}}_sync(){const t=this.element;const e=t.screen;if(e){if(t._anchorDirty){let s=0;let i=0;let n=0;let r=1;if(this._parent&&this._parent.element){s=this._parent.element.calculatedWidth;i=this._parent.element.calculatedHeight;n=this._parent.element.pivot.x;r=this._parent.element.pivot.y}else{const t=e.screen.resolution;s=t.x/e.screen.scale;i=t.y/e.screen.scale}t._anchorTransform.setTranslate(s*(t.anchor.x-n),-(i*(r-t.anchor.y)),0);t._anchorDirty=false;t._calculateLocalAnchors()}if(t._sizeDirty){t._calculateSize(false,false)}}if(this._dirtyLocal){this.localTransform.setTRS(this.localPosition,this.localRotation,this.localScale);const e=this.localPosition;const s=t._pivot;t._margin.x=e.x-t._calculatedWidth*s.x;t._margin.z=t._localAnchor.z-t._localAnchor.x-t._calculatedWidth-t._margin.x;t._margin.y=e.y-t._calculatedHeight*s.y;t._margin.w=t._localAnchor.w-t._localAnchor.y-t._calculatedHeight-t._margin.y;this._dirtyLocal=false}if(!e){if(this._dirtyWorld){t._cornersDirty=true;t._canvasCornersDirty=true;t._worldCornersDirty=true}dC.prototype._sync.call(this);return}if(this._dirtyWorld){if(this._parent===null){this.worldTransform.copy(this.localTransform)}else{if(this._parent.element){t._screenToWorld.mul2(this._parent.element._modelTransform,t._anchorTransform)}else{t._screenToWorld.copy(t._anchorTransform)}t._modelTransform.mul2(t._screenToWorld,this.localTransform);if(e){t._screenToWorld.mul2(e.screen._screenMatrix,t._screenToWorld);if(!e.screen.screenSpace){t._screenToWorld.mul2(e.worldTransform,t._screenToWorld)}this.worldTransform.mul2(t._screenToWorld,this.localTransform);const s=t._parentWorldTransform;s.setIdentity();const i=this._parent;if(i&&i.element&&i!==e){gk.setTRS(It.ZERO,i.getLocalRotation(),i.getLocalScale());s.mul2(i.element._parentWorldTransform,gk)}const n=mk;n.set(0,0,this.localPosition.z);const r=_k;r.set(t._absLeft+t._pivot.x*t.calculatedWidth,t._absBottom+t._pivot.y*t.calculatedHeight,0);gk.setTranslate(-r.x,-r.y,-r.z);vk.setTRS(n,this.getLocalRotation(),this.getLocalScale());yk.setTranslate(r.x,r.y,r.z);t._screenTransform.mul2(t._parentWorldTransform,yk).mul(vk).mul(gk);t._cornersDirty=true;t._canvasCornersDirty=true;t._worldCornersDirty=true}else{this.worldTransform.copy(t._modelTransform)}}this._dirtyWorld=false}}_onInsert(t){const e=this._parseUpToScreen();this.entity._dirtifyWorld();this._updateScreen(e.screen);this._dirtifyMask()}_dirtifyMask(){let t=this.entity;while(t){const e=t.parent;if((e===null||e.screen)&&t.element){if(!this.system._prerender||!this.system._prerender.length){this.system._prerender=[];this.system.app.once("prerender",this._onPrerender,this)}const e=this.system._prerender.indexOf(this.entity);if(e>=0){this.system._prerender.splice(e,1)}const s=this.system._prerender.indexOf(t);if(s<0){this.system._prerender.push(t)}}t=e}}_onPrerender(){for(let t=0;t<this.system._prerender.length;t++){const e=this.system._prerender[t];if(e.element){const t=1;e.element.syncMask(t)}}this.system._prerender.length=0}_bindScreen(t){t._bindElement(this)}_unbindScreen(t){t._unbindElement(this)}_updateScreen(t){if(this.screen&&this.screen!==t){this._unbindScreen(this.screen.screen)}const e=this.screen;this.screen=t;if(this.screen){this._bindScreen(this.screen.screen)}this._calculateSize(this._hasSplitAnchorsX,this._hasSplitAnchorsY);this.fire("set:screen",this.screen,e);this._anchorDirty=true;const s=this.entity.children;for(let e=0,i=s.length;e<i;e++){if(s[e].element){s[e].element._updateScreen(t)}}if(this.screen){this.screen.screen.syncDrawOrder()}}syncMask(t){const e=this._parseUpToScreen();this._updateMask(e.mask,t)}_setMaskedBy(t){const e=this._image||this._text;if(t){const s=t.element._image._maskRef;e?._setStencil(new tl({ref:s,func:ps}));this._maskedBy=t}else{e?._setStencil(null);this._maskedBy=null}}_updateMask(t,e){if(t){this._setMaskedBy(t);if(this.mask){const s=t.element._image._maskRef;const i=new tl({ref:s,func:ps,zpass:In});this._image._setStencil(i);this._image._maskRef=e;e++;t=this.entity}const s=this.entity.children;for(let i=0,n=s.length;i<n;i++){s[i].element?._updateMask(t,e)}if(this.mask)e--}else{this._setMaskedBy(null);if(this.mask){const s=new tl({ref:e,func:ys,zpass:Mn});this._image._setStencil(s);this._image._maskRef=e;e++;t=this.entity}const s=this.entity.children;for(let i=0,n=s.length;i<n;i++){s[i].element?._updateMask(t,e)}if(this.mask){e--}}}_parseUpToScreen(){const t={screen:null,mask:null};let e=this.entity._parent;while(e&&!e.screen){if(e.element&&e.element.mask){if(!t.mask)t.mask=e}e=e.parent}if(e&&e.screen){t.screen=e}return t}_onScreenResize(t){this._anchorDirty=true;this._cornersDirty=true;this._worldCornersDirty=true;this._calculateSize(this._hasSplitAnchorsX,this._hasSplitAnchorsY);this.fire("screen:set:resolution",t)}_onScreenSpaceChange(){this.fire("screen:set:screenspace",this.screen.screen.screenSpace)}_onScreenRemove(){if(this.screen){if(this.screen._destroying){this.screen=null}else{this._updateScreen(null)}}}_calculateLocalAnchors(){let t=1e3;let e=1e3;const s=this.entity._parent;if(s&&s.element){t=s.element.calculatedWidth;e=s.element.calculatedHeight}else if(this.screen){const s=this.screen.screen.resolution;const i=this.screen.screen.scale;t=s.x/i;e=s.y/i}this._localAnchor.set(this._anchor.x*t,this._anchor.y*e,this._anchor.z*t,this._anchor.w*e)}getOffsetPosition(t,e){const s=this.entity.getLocalPosition().clone();s.x+=t;s.y+=e;this._screenToWorld.transformPoint(s,s);return s}onLayersChanged(t,e){this.addModelToLayers(this._image?this._image._renderable.model:this._text._model);t.off("add",this.onLayerAdded,this);t.off("remove",this.onLayerRemoved,this);e.on("add",this.onLayerAdded,this);e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){const e=this.layers.indexOf(t.id);if(e<0)return;if(this._image){t.addMeshInstances(this._image._renderable.model.meshInstances)}else if(this._text){t.addMeshInstances(this._text._model.meshInstances)}}onLayerRemoved(t){const e=this.layers.indexOf(t.id);if(e<0)return;if(this._image){t.removeMeshInstances(this._image._renderable.model.meshInstances)}else if(this._text){t.removeMeshInstances(this._text._model.meshInstances)}}onEnable(){const t=this.system.app.scene;const e=t.layers;if(this._image){this._image.onEnable()}if(this._text){this._text.onEnable()}if(this._group){this._group.onEnable()}if(this.useInput&&this.system.app.elementInput){this.system.app.elementInput.addElement(this)}this._evtLayersChanged=t.on("set:layers",this.onLayersChanged,this);if(e){this._evtLayerAdded=e.on("add",this.onLayerAdded,this);this._evtLayerRemoved=e.on("remove",this.onLayerRemoved,this)}if(this._batchGroupId>=0){this.system.app.batcher?.insert(Ov.ELEMENT,this.batchGroupId,this.entity)}this.fire("enableelement")}onDisable(){const t=this.system.app.scene;const e=t.layers;this._evtLayersChanged?.off();this._evtLayersChanged=null;if(e){this._evtLayerAdded?.off();this._evtLayerAdded=null;this._evtLayerRemoved?.off();this._evtLayerRemoved=null}if(this._image)this._image.onDisable();if(this._text)this._text.onDisable();if(this._group)this._group.onDisable();if(this.system.app.elementInput&&this.useInput){this.system.app.elementInput.removeElement(this)}if(this._batchGroupId>=0){this.system.app.batcher?.remove(Ov.ELEMENT,this.batchGroupId,this.entity)}this.fire("disableelement")}onRemove(){this.entity.off("insert",this._onInsert,this);this._unpatch();if(this._image){this._image.destroy()}if(this._text){this._text.destroy()}if(this.system.app.elementInput&&this.useInput){this.system.app.elementInput.removeElement(this)}if(this.screen&&this.screen.screen){this._unbindScreen(this.screen.screen);this.screen.screen.syncDrawOrder()}this.off()}_calculateSize(t,e){if(!this.entity._parent&&!this.screen){return}this._calculateLocalAnchors();const s=this._absRight-this._absLeft;const i=this._absTop-this._absBottom;if(t){this._setWidth(s)}else{this._setCalculatedWidth(s,false)}if(e){this._setHeight(i)}else{this._setCalculatedHeight(i,false)}const n=this.entity.getLocalPosition();n.x=this._margin.x+this._calculatedWidth*this._pivot.x;n.y=this._margin.y+this._calculatedHeight*this._pivot.y;this.entity.setLocalPosition(n);this._sizeDirty=false}_setWidth(t){this._width=t;this._setCalculatedWidth(t,false);this.fire("set:width",this._width)}_setHeight(t){this._height=t;this._setCalculatedHeight(t,false);this.fire("set:height",this._height)}_setCalculatedWidth(t,e){if(Math.abs(t-this._calculatedWidth)<=1e-4){return}this._calculatedWidth=t;this.entity._dirtifyLocal();if(e){const t=this.entity.getLocalPosition();const e=this._pivot;this._margin.x=t.x-this._calculatedWidth*e.x;this._margin.z=this._localAnchor.z-this._localAnchor.x-this._calculatedWidth-this._margin.x}this._flagChildrenAsDirty();this.fire("set:calculatedWidth",this._calculatedWidth);this.fire("resize",this._calculatedWidth,this._calculatedHeight)}_setCalculatedHeight(t,e){if(Math.abs(t-this._calculatedHeight)<=1e-4){return}this._calculatedHeight=t;this.entity._dirtifyLocal();if(e){const t=this.entity.getLocalPosition();const e=this._pivot;this._margin.y=t.y-this._calculatedHeight*e.y;this._margin.w=this._localAnchor.w-this._localAnchor.y-this._calculatedHeight-this._margin.y}this._flagChildrenAsDirty();this.fire("set:calculatedHeight",this._calculatedHeight);this.fire("resize",this._calculatedWidth,this._calculatedHeight)}_flagChildrenAsDirty(){const t=this.entity._children;for(let e=0,s=t.length;e<s;e++){if(t[e].element){t[e].element._anchorDirty=true;t[e].element._sizeDirty=true}}}addModelToLayers(t){this._addedModels.push(t);for(let e=0;e<this.layers.length;e++){const s=this.system.app.scene.layers.getLayerById(this.layers[e]);if(!s)continue;s.addMeshInstances(t.meshInstances)}}removeModelFromLayers(t){const e=this._addedModels.indexOf(t);if(e>=0){this._addedModels.splice(e,1)}for(let e=0;e<this.layers.length;e++){const s=this.system.app.scene.layers.getLayerById(this.layers[e]);if(!s){continue}s.removeMeshInstances(t.meshInstances)}}getMaskOffset(){const t=this.system.app.frame;if(this._offsetReadAt!==t){this._maskOffset=.5;this._offsetReadAt=t}const e=this._maskOffset;this._maskOffset-=.001;return e}isVisibleForCamera(t){let e,s,i,n;if(this.maskedBy){const t=this.maskedBy.element.screenCorners;e=Math.min(Math.min(t[0].x,t[1].x),Math.min(t[2].x,t[3].x));s=Math.max(Math.max(t[0].x,t[1].x),Math.max(t[2].x,t[3].x));n=Math.min(Math.min(t[0].y,t[1].y),Math.min(t[2].y,t[3].y));i=Math.max(Math.max(t[0].y,t[1].y),Math.max(t[2].y,t[3].y))}else{const r=this.system.app.graphicsDevice.width;const a=this.system.app.graphicsDevice.height;const o=t._rect.z*r;const l=t._rect.w*a;e=t._rect.x*r;s=e+o;i=(1-t._rect.y)*a;n=i-l}const r=this.screenCorners;const a=Math.min(Math.min(r[0].x,r[1].x),Math.min(r[2].x,r[3].x));const o=Math.max(Math.max(r[0].x,r[1].x),Math.max(r[2].x,r[3].x));const l=Math.min(Math.min(r[0].y,r[1].y),Math.min(r[2].y,r[3].y));const h=Math.max(Math.max(r[0].y,r[1].y),Math.max(r[2].y,r[3].y));if(o<e||a>s||l>i||h<n){return false}return true}_isScreenSpace(){if(this.screen&&this.screen.screen){return this.screen.screen.screenSpace}return false}_isScreenCulled(){if(this.screen&&this.screen.screen){return this.screen.screen.cull}return false}_dirtyBatch(){if(this.batchGroupId!==-1){this.system.app.batcher?.markGroupDirty(this.batchGroupId)}}}class Tk{constructor(){this.enabled=true}}const wk=["enabled"];class bk extends $R{constructor(t){super(t);this.id="element";this.ComponentType=xk;this.DataType=Tk;this.schema=wk;this._unicodeConverter=null;this._rtlReorder=null;this._defaultTexture=new lo(t.graphicsDevice,{width:1,height:1,format:Hs,name:"element-system"});const e=this._defaultTexture.lock();const s=new Uint8Array(4);s[0]=255;s[1]=255;s[2]=255;s[3]=255;e.set(s);this._defaultTexture.unlock();this.defaultImageMaterial=null;this.defaultImage9SlicedMaterial=null;this.defaultImage9TiledMaterial=null;this.defaultImageMaskMaterial=null;this.defaultImage9SlicedMaskMaterial=null;this.defaultImage9TiledMaskMaterial=null;this.defaultScreenSpaceImageMaterial=null;this.defaultScreenSpaceImage9SlicedMaterial=null;this.defaultScreenSpaceImage9TiledMaterial=null;this.defaultScreenSpaceImageMask9SlicedMaterial=null;this.defaultScreenSpaceImageMask9TiledMaterial=null;this.defaultScreenSpaceImageMaskMaterial=null;this._defaultTextMaterials={};this.defaultImageMaterials=[];this.on("add",this.onAddComponent,this);this.on("beforeremove",this.onRemoveComponent,this)}destroy(){super.destroy();this._defaultTexture.destroy()}initializeComponentData(t,e,s){t._beingInitialized=true;if(e.anchor!==undefined){if(e.anchor instanceof Ft){t.anchor.copy(e.anchor)}else{t.anchor.set(e.anchor[0],e.anchor[1],e.anchor[2],e.anchor[3])}}if(e.pivot!==undefined){if(e.pivot instanceof Ot){t.pivot.copy(e.pivot)}else{t.pivot.set(e.pivot[0],e.pivot[1])}}const i=Math.abs(t.anchor.x-t.anchor.z)>.001;const n=Math.abs(t.anchor.y-t.anchor.w)>.001;let r=false;let a;if(e.margin!==undefined){if(e.margin instanceof Ft){t.margin.copy(e.margin)}else{t._margin.set(e.margin[0],e.margin[1],e.margin[2],e.margin[3])}r=true}if(e.left!==undefined){t._margin.x=e.left;r=true}if(e.bottom!==undefined){t._margin.y=e.bottom;r=true}if(e.right!==undefined){t._margin.z=e.right;r=true}if(e.top!==undefined){t._margin.w=e.top;r=true}if(r){t.margin=t._margin}let o=false;if(e.width!==undefined&&!i){t.width=e.width}else if(i){o=true}if(e.height!==undefined&&!n){t.height=e.height}else if(n){o=true}if(o){t.anchor=t.anchor}if(e.enabled!==undefined){t.enabled=e.enabled}if(e.useInput!==undefined){t.useInput=e.useInput}if(e.fitMode!==undefined){t.fitMode=e.fitMode}t.batchGroupId=e.batchGroupId===undefined||e.batchGroupId===null?-1:e.batchGroupId;if(e.layers&&Array.isArray(e.layers)){t.layers=e.layers.slice(0)}if(e.type!==undefined){t.type=e.type}if(t.type===uF){if(e.rect!==undefined){t.rect=e.rect}if(e.color!==undefined){a=e.color;if(!(a instanceof bt)){a=new bt(e.color[0],e.color[1],e.color[2])}t.color=a}if(e.opacity!==undefined)t.opacity=e.opacity;if(e.textureAsset!==undefined)t.textureAsset=e.textureAsset;if(e.texture)t.texture=e.texture;if(e.spriteAsset!==undefined)t.spriteAsset=e.spriteAsset;if(e.sprite)t.sprite=e.sprite;if(e.spriteFrame!==undefined)t.spriteFrame=e.spriteFrame;if(e.pixelsPerUnit!==undefined&&e.pixelsPerUnit!==null)t.pixelsPerUnit=e.pixelsPerUnit;if(e.materialAsset!==undefined)t.materialAsset=e.materialAsset;if(e.material)t.material=e.material;if(e.mask!==undefined){t.mask=e.mask}}else if(t.type===fF){if(e.autoWidth!==undefined)t.autoWidth=e.autoWidth;if(e.autoHeight!==undefined)t.autoHeight=e.autoHeight;if(e.rtlReorder!==undefined)t.rtlReorder=e.rtlReorder;if(e.unicodeConverter!==undefined)t.unicodeConverter=e.unicodeConverter;if(e.text!==null&&e.text!==undefined){t.text=e.text}else if(e.key!==null&&e.key!==undefined){t.key=e.key}if(e.color!==undefined){a=e.color;if(!(a instanceof bt)){a=new bt(a[0],a[1],a[2])}t.color=a}if(e.opacity!==undefined){t.opacity=e.opacity}if(e.spacing!==undefined)t.spacing=e.spacing;if(e.fontSize!==undefined){t.fontSize=e.fontSize;if(!e.lineHeight)t.lineHeight=e.fontSize}if(e.lineHeight!==undefined)t.lineHeight=e.lineHeight;if(e.maxLines!==undefined)t.maxLines=e.maxLines;if(e.wrapLines!==undefined)t.wrapLines=e.wrapLines;if(e.minFontSize!==undefined)t.minFontSize=e.minFontSize;if(e.maxFontSize!==undefined)t.maxFontSize=e.maxFontSize;if(e.autoFitWidth)t.autoFitWidth=e.autoFitWidth;if(e.autoFitHeight)t.autoFitHeight=e.autoFitHeight;if(e.fontAsset!==undefined)t.fontAsset=e.fontAsset;if(e.font!==undefined)t.font=e.font;if(e.alignment!==undefined)t.alignment=e.alignment;if(e.outlineColor!==undefined)t.outlineColor=e.outlineColor;if(e.outlineThickness!==undefined)t.outlineThickness=e.outlineThickness;if(e.shadowColor!==undefined)t.shadowColor=e.shadowColor;if(e.shadowOffset!==undefined)t.shadowOffset=e.shadowOffset;if(e.enableMarkup!==undefined)t.enableMarkup=e.enableMarkup}const l=t._parseUpToScreen();if(l.screen){t._updateScreen(l.screen)}super.initializeComponentData(t,e,s);t._beingInitialized=false;if(t.type===uF&&t._image._meshDirty){t._image._updateMesh(t._image.mesh)}}onAddComponent(t,e){t.fire("element:add")}onRemoveComponent(t,e){e.onRemove()}cloneComponent(t,e){const s=t.element;const i={enabled:s.enabled,width:s.width,height:s.height,anchor:s.anchor.clone(),pivot:s.pivot.clone(),margin:s.margin.clone(),alignment:s.alignment&&s.alignment.clone()||s.alignment,autoWidth:s.autoWidth,autoHeight:s.autoHeight,type:s.type,rect:s.rect&&s.rect.clone()||s.rect,rtlReorder:s.rtlReorder,unicodeConverter:s.unicodeConverter,materialAsset:s.materialAsset,material:s.material,color:s.color&&s.color.clone()||s.color,opacity:s.opacity,textureAsset:s.textureAsset,texture:s.texture,spriteAsset:s.spriteAsset,sprite:s.sprite,spriteFrame:s.spriteFrame,pixelsPerUnit:s.pixelsPerUnit,spacing:s.spacing,lineHeight:s.lineHeight,wrapLines:s.wrapLines,layers:s.layers,fontSize:s.fontSize,minFontSize:s.minFontSize,maxFontSize:s.maxFontSize,autoFitWidth:s.autoFitWidth,autoFitHeight:s.autoFitHeight,maxLines:s.maxLines,fontAsset:s.fontAsset,font:s.font,useInput:s.useInput,fitMode:s.fitMode,batchGroupId:s.batchGroupId,mask:s.mask,outlineColor:s.outlineColor&&s.outlineColor.clone()||s.outlineColor,outlineThickness:s.outlineThickness,shadowColor:s.shadowColor&&s.shadowColor.clone()||s.shadowColor,shadowOffset:s.shadowOffset&&s.shadowOffset.clone()||s.shadowOffset,enableMarkup:s.enableMarkup};if(s.key!==undefined&&s.key!==null){i.key=s.key}else{i.text=s.text}return this.addComponent(e,i)}getTextElementMaterial(t,e,s){const i=(t&&1<<0)|(e&&1<<1)|(s&&1<<2);let n=this._defaultTextMaterials[i];if(n){return n}let r="TextMaterial";n=new Qb;if(e){n.msdfMap=this._defaultTexture;n.msdfTextAttribute=s;n.emissive.set(1,1,1)}else{r=`Bitmap${r}`;n.emissive.set(1,1,1);n.emissiveMap=this._defaultTexture;n.opacityMap=this._defaultTexture;n.opacityMapChannel="a"}if(t){r=`ScreenSpace${r}`;n.depthTest=false}n.name=`default${r}`;n.useLighting=false;n.useTonemap=false;n.useFog=false;n.useSkybox=false;n.diffuse.set(0,0,0);n.opacity=.5;n.blendType=Xp;n.depthWrite=false;n.emissiveVertexColor=true;n.update();this._defaultTextMaterials[i]=n;return n}_createBaseImageMaterial(){const t=new Qb;t.diffuse.set(0,0,0);t.emissive.set(1,1,1);t.emissiveMap=this._defaultTexture;t.opacityMap=this._defaultTexture;t.opacityMapChannel="a";t.useLighting=false;t.useTonemap=false;t.useFog=false;t.useSkybox=false;t.blendType=Xp;t.depthWrite=false;return t}getImageElementMaterial(t,e,s,i){if(t){if(e){if(s){if(!this.defaultScreenSpaceImageMask9SlicedMaterial){this.defaultScreenSpaceImageMask9SlicedMaterial=this._createBaseImageMaterial();this.defaultScreenSpaceImageMask9SlicedMaterial.name="defaultScreenSpaceImageMask9SlicedMaterial";this.defaultScreenSpaceImageMask9SlicedMaterial.nineSlicedMode=Dg;this.defaultScreenSpaceImageMask9SlicedMaterial.depthTest=false;this.defaultScreenSpaceImageMask9SlicedMaterial.alphaTest=1;this.defaultScreenSpaceImageMask9SlicedMaterial.redWrite=false;this.defaultScreenSpaceImageMask9SlicedMaterial.greenWrite=false;this.defaultScreenSpaceImageMask9SlicedMaterial.blueWrite=false;this.defaultScreenSpaceImageMask9SlicedMaterial.alphaWrite=false;this.defaultScreenSpaceImageMask9SlicedMaterial.update();this.defaultImageMaterials.push(this.defaultScreenSpaceImageMask9SlicedMaterial)}return this.defaultScreenSpaceImageMask9SlicedMaterial}else if(i){if(!this.defaultScreenSpaceImageMask9TiledMaterial){this.defaultScreenSpaceImageMask9TiledMaterial=this.defaultScreenSpaceImage9TiledMaterial.clone();this.defaultScreenSpaceImageMask9TiledMaterial.name="defaultScreenSpaceImageMask9TiledMaterial";this.defaultScreenSpaceImageMask9TiledMaterial.nineSlicedMode=Mg;this.defaultScreenSpaceImageMask9TiledMaterial.depthTest=false;this.defaultScreenSpaceImageMask9TiledMaterial.alphaTest=1;this.defaultScreenSpaceImageMask9TiledMaterial.redWrite=false;this.defaultScreenSpaceImageMask9TiledMaterial.greenWrite=false;this.defaultScreenSpaceImageMask9TiledMaterial.blueWrite=false;this.defaultScreenSpaceImageMask9TiledMaterial.alphaWrite=false;this.defaultScreenSpaceImageMask9TiledMaterial.update();this.defaultImageMaterials.push(this.defaultScreenSpaceImageMask9TiledMaterial)}return this.defaultScreenSpaceImageMask9TiledMaterial}else{if(!this.defaultScreenSpaceImageMaskMaterial){this.defaultScreenSpaceImageMaskMaterial=this._createBaseImageMaterial();this.defaultScreenSpaceImageMaskMaterial.name="defaultScreenSpaceImageMaskMaterial";this.defaultScreenSpaceImageMaskMaterial.depthTest=false;this.defaultScreenSpaceImageMaskMaterial.alphaTest=1;this.defaultScreenSpaceImageMaskMaterial.redWrite=false;this.defaultScreenSpaceImageMaskMaterial.greenWrite=false;this.defaultScreenSpaceImageMaskMaterial.blueWrite=false;this.defaultScreenSpaceImageMaskMaterial.alphaWrite=false;this.defaultScreenSpaceImageMaskMaterial.update();this.defaultImageMaterials.push(this.defaultScreenSpaceImageMaskMaterial)}return this.defaultScreenSpaceImageMaskMaterial}}else{if(s){if(!this.defaultScreenSpaceImage9SlicedMaterial){this.defaultScreenSpaceImage9SlicedMaterial=this._createBaseImageMaterial();this.defaultScreenSpaceImage9SlicedMaterial.name="defaultScreenSpaceImage9SlicedMaterial";this.defaultScreenSpaceImage9SlicedMaterial.nineSlicedMode=Dg;this.defaultScreenSpaceImage9SlicedMaterial.depthTest=false;this.defaultScreenSpaceImage9SlicedMaterial.update();this.defaultImageMaterials.push(this.defaultScreenSpaceImage9SlicedMaterial)}return this.defaultScreenSpaceImage9SlicedMaterial}else if(i){if(!this.defaultScreenSpaceImage9TiledMaterial){this.defaultScreenSpaceImage9TiledMaterial=this._createBaseImageMaterial();this.defaultScreenSpaceImage9TiledMaterial.name="defaultScreenSpaceImage9TiledMaterial";this.defaultScreenSpaceImage9TiledMaterial.nineSlicedMode=Mg;this.defaultScreenSpaceImage9TiledMaterial.depthTest=false;this.defaultScreenSpaceImage9TiledMaterial.update();this.defaultImageMaterials.push(this.defaultScreenSpaceImage9TiledMaterial)}return this.defaultScreenSpaceImage9TiledMaterial}else{if(!this.defaultScreenSpaceImageMaterial){this.defaultScreenSpaceImageMaterial=this._createBaseImageMaterial();this.defaultScreenSpaceImageMaterial.name="defaultScreenSpaceImageMaterial";this.defaultScreenSpaceImageMaterial.depthTest=false;this.defaultScreenSpaceImageMaterial.update();this.defaultImageMaterials.push(this.defaultScreenSpaceImageMaterial)}return this.defaultScreenSpaceImageMaterial}}}else{if(e){if(s){if(!this.defaultImage9SlicedMaskMaterial){this.defaultImage9SlicedMaskMaterial=this._createBaseImageMaterial();this.defaultImage9SlicedMaskMaterial.name="defaultImage9SlicedMaskMaterial";this.defaultImage9SlicedMaskMaterial.nineSlicedMode=Dg;this.defaultImage9SlicedMaskMaterial.alphaTest=1;this.defaultImage9SlicedMaskMaterial.redWrite=false;this.defaultImage9SlicedMaskMaterial.greenWrite=false;this.defaultImage9SlicedMaskMaterial.blueWrite=false;this.defaultImage9SlicedMaskMaterial.alphaWrite=false;this.defaultImage9SlicedMaskMaterial.update();this.defaultImageMaterials.push(this.defaultImage9SlicedMaskMaterial)}return this.defaultImage9SlicedMaskMaterial}else if(i){if(!this.defaultImage9TiledMaskMaterial){this.defaultImage9TiledMaskMaterial=this._createBaseImageMaterial();this.defaultImage9TiledMaskMaterial.name="defaultImage9TiledMaskMaterial";this.defaultImage9TiledMaskMaterial.nineSlicedMode=Mg;this.defaultImage9TiledMaskMaterial.alphaTest=1;this.defaultImage9TiledMaskMaterial.redWrite=false;this.defaultImage9TiledMaskMaterial.greenWrite=false;this.defaultImage9TiledMaskMaterial.blueWrite=false;this.defaultImage9TiledMaskMaterial.alphaWrite=false;this.defaultImage9TiledMaskMaterial.update();this.defaultImageMaterials.push(this.defaultImage9TiledMaskMaterial)}return this.defaultImage9TiledMaskMaterial}else{if(!this.defaultImageMaskMaterial){this.defaultImageMaskMaterial=this._createBaseImageMaterial();this.defaultImageMaskMaterial.name="defaultImageMaskMaterial";this.defaultImageMaskMaterial.alphaTest=1;this.defaultImageMaskMaterial.redWrite=false;this.defaultImageMaskMaterial.greenWrite=false;this.defaultImageMaskMaterial.blueWrite=false;this.defaultImageMaskMaterial.alphaWrite=false;this.defaultImageMaskMaterial.update();this.defaultImageMaterials.push(this.defaultImageMaskMaterial)}return this.defaultImageMaskMaterial}}else{if(s){if(!this.defaultImage9SlicedMaterial){this.defaultImage9SlicedMaterial=this._createBaseImageMaterial();this.defaultImage9SlicedMaterial.name="defaultImage9SlicedMaterial";this.defaultImage9SlicedMaterial.nineSlicedMode=Dg;this.defaultImage9SlicedMaterial.update();this.defaultImageMaterials.push(this.defaultImage9SlicedMaterial)}return this.defaultImage9SlicedMaterial}else if(i){if(!this.defaultImage9TiledMaterial){this.defaultImage9TiledMaterial=this._createBaseImageMaterial();this.defaultImage9TiledMaterial.name="defaultImage9TiledMaterial";this.defaultImage9TiledMaterial.nineSlicedMode=Mg;this.defaultImage9TiledMaterial.update();this.defaultImageMaterials.push(this.defaultImage9TiledMaterial)}return this.defaultImage9TiledMaterial}else{if(!this.defaultImageMaterial){this.defaultImageMaterial=this._createBaseImageMaterial();this.defaultImageMaterial.name="defaultImageMaterial";this.defaultImageMaterial.update();this.defaultImageMaterials.push(this.defaultImageMaterial)}return this.defaultImageMaterial}}}}registerUnicodeConverter(t){this._unicodeConverter=t}registerRtlReorder(t){this._rtlReorder=t}getUnicodeConverter(){return this._unicodeConverter}getRtlReorder(){return this._rtlReorder}}const Ek="free";const Ak="limited";const Ck="locked";const Pk=["angularDampingX","angularDampingY","angularDampingZ","angularEquilibriumX","angularEquilibriumY","angularEquilibriumZ","angularLimitsX","angularLimitsY","angularLimitsZ","angularMotionX","angularMotionY","angularMotionZ","angularSpringX","angularSpringY","angularSpringZ","angularStiffnessX","angularStiffnessY","angularStiffnessZ","breakForce","enableCollision","enabled","entityA","entityB","linearDampingX","linearDampingY","linearDampingZ","linearEquilibriumX","linearEquilibriumY","linearEquilibriumZ","linearLimitsX","linearLimitsY","linearLimitsZ","linearMotionX","linearMotionY","linearMotionZ","linearSpringX","linearSpringY","linearSpringZ","linearStiffnessX","linearStiffnessY","linearStiffnessZ"];class Lk extends qR{constructor(t,e){super(t,e);this._constraint=null;this._entityA=null;this._entityB=null;this._breakForce=34e37;this._enableCollision=true;this._linearMotionX=Ck;this._linearLimitsX=new Ot(0,0);this._linearSpringX=false;this._linearStiffnessX=0;this._linearDampingX=1;this._linearEquilibriumX=0;this._linearMotionY=Ck;this._linearLimitsY=new Ot(0,0);this._linearSpringY=false;this._linearStiffnessY=0;this._linearDampingY=1;this._linearEquilibriumY=0;this._linearMotionZ=Ck;this._linearLimitsZ=new Ot(0,0);this._linearSpringZ=false;this._linearStiffnessZ=0;this._linearDampingZ=1;this._linearEquilibriumZ=0;this._angularMotionX=Ck;this._angularLimitsX=new Ot(0,0);this._angularSpringX=false;this._angularStiffnessX=0;this._angularDampingX=1;this._angularEquilibriumX=0;this._angularMotionY=Ck;this._angularLimitsY=new Ot(0,0);this._angularSpringY=false;this._angularStiffnessY=0;this._angularDampingY=1;this._angularEquilibriumY=0;this._angularMotionZ=Ck;this._angularLimitsZ=new Ot(0,0);this._angularSpringZ=false;this._angularEquilibriumZ=0;this._angularDampingZ=1;this._angularStiffnessZ=0;this.on("set_enabled",this._onSetEnabled,this)}set entityA(t){this._destroyConstraint();this._entityA=t;this._createConstraint()}get entityA(){return this._entityA}set entityB(t){this._destroyConstraint();this._entityB=t;this._createConstraint()}get entityB(){return this._entityB}set breakForce(t){if(this._constraint&&this._breakForce!==t){this._constraint.setBreakingImpulseThreshold(t);this._breakForce=t}}get breakForce(){return this._breakForce}set enableCollision(t){this._destroyConstraint();this._enableCollision=t;this._createConstraint()}get enableCollision(){return this._enableCollision}set angularLimitsX(t){if(!this._angularLimitsX.equals(t)){this._angularLimitsX.copy(t);this._updateAngularLimits()}}get angularLimitsX(){return this._angularLimitsX}set angularMotionX(t){if(this._angularMotionX!==t){this._angularMotionX=t;this._updateAngularLimits()}}get angularMotionX(){return this._angularMotionX}set angularLimitsY(t){if(!this._angularLimitsY.equals(t)){this._angularLimitsY.copy(t);this._updateAngularLimits()}}get angularLimitsY(){return this._angularLimitsY}set angularMotionY(t){if(this._angularMotionY!==t){this._angularMotionY=t;this._updateAngularLimits()}}get angularMotionY(){return this._angularMotionY}set angularLimitsZ(t){if(!this._angularLimitsZ.equals(t)){this._angularLimitsZ.copy(t);this._updateAngularLimits()}}get angularLimitsZ(){return this._angularLimitsZ}set angularMotionZ(t){if(this._angularMotionZ!==t){this._angularMotionZ=t;this._updateAngularLimits()}}get angularMotionZ(){return this._angularMotionZ}set linearLimitsX(t){if(!this._linearLimitsX.equals(t)){this._linearLimitsX.copy(t);this._updateLinearLimits()}}get linearLimitsX(){return this._linearLimitsX}set linearMotionX(t){if(this._linearMotionX!==t){this._linearMotionX=t;this._updateLinearLimits()}}get linearMotionX(){return this._linearMotionX}set linearLimitsY(t){if(!this._linearLimitsY.equals(t)){this._linearLimitsY.copy(t);this._updateLinearLimits()}}get linearLimitsY(){return this._linearLimitsY}set linearMotionY(t){if(this._linearMotionY!==t){this._linearMotionY=t;this._updateLinearLimits()}}get linearMotionY(){return this._linearMotionY}set linearLimitsZ(t){if(!this._linearLimitsZ.equals(t)){this._linearLimitsZ.copy(t);this._updateLinearLimits()}}get linearLimitsZ(){return this._linearLimitsZ}set linearMotionZ(t){if(this._linearMotionZ!==t){this._linearMotionZ=t;this._updateLinearLimits()}}get linearMotionZ(){return this._linearMotionZ}_convertTransform(t,e){const s=t.getTranslation();const i=new Gt;i.setFromMat4(t);const n=new Ammo.btVector3(s.x,s.y,s.z);const r=new Ammo.btQuaternion(i.x,i.y,i.z,i.w);e.setOrigin(n);e.setRotation(r);Ammo.destroy(n);Ammo.destroy(r)}_updateAngularLimits(){const t=this._constraint;if(t){let e,s,i,n,r,a;if(this._angularMotionX===Ak){e=this._angularLimitsX.x*wt.DEG_TO_RAD;n=this._angularLimitsX.y*wt.DEG_TO_RAD}else if(this._angularMotionX===Ek){e=1;n=0}else{e=n=0}if(this._angularMotionY===Ak){s=this._angularLimitsY.x*wt.DEG_TO_RAD;r=this._angularLimitsY.y*wt.DEG_TO_RAD}else if(this._angularMotionY===Ek){s=1;r=0}else{s=r=0}if(this._angularMotionZ===Ak){i=this._angularLimitsZ.x*wt.DEG_TO_RAD;a=this._angularLimitsZ.y*wt.DEG_TO_RAD}else if(this._angularMotionZ===Ek){i=1;a=0}else{i=a=0}const o=new Ammo.btVector3(e,s,i);t.setAngularLowerLimit(o);o.setValue(n,r,a);t.setAngularUpperLimit(o);Ammo.destroy(o)}}_updateLinearLimits(){const t=this._constraint;if(t){let e,s,i,n,r,a;if(this._linearMotionX===Ak){e=this._linearLimitsX.x;n=this._linearLimitsX.y}else if(this._linearMotionX===Ek){e=1;n=0}else{e=n=0}if(this._linearMotionY===Ak){s=this._linearLimitsY.x;r=this._linearLimitsY.y}else if(this._linearMotionY===Ek){s=1;r=0}else{s=r=0}if(this._linearMotionZ===Ak){i=this._linearLimitsZ.x;a=this._linearLimitsZ.y}else if(this._linearMotionZ===Ek){i=1;a=0}else{i=a=0}const o=new Ammo.btVector3(e,s,i);t.setLinearLowerLimit(o);o.setValue(n,r,a);t.setLinearUpperLimit(o);Ammo.destroy(o)}}_createConstraint(){if(this._entityA&&this._entityA.rigidbody){this._destroyConstraint();const t=new Vt;const e=this._entityA.rigidbody.body;e.activate();const s=this.entity.getWorldTransform();const i=this._entityA.getWorldTransform();const n=i.clone().invert();t.mul2(n,s);const r=new Ammo.btTransform;this._convertTransform(t,r);if(this._entityB&&this._entityB.rigidbody){const i=this._entityB.rigidbody.body;i.activate();const n=this._entityB.getWorldTransform();const a=n.clone().invert();t.mul2(a,s);const o=new Ammo.btTransform;this._convertTransform(t,o);this._constraint=new Ammo.btGeneric6DofSpringConstraint(e,i,r,o,!this._enableCollision);Ammo.destroy(o)}else{this._constraint=new Ammo.btGeneric6DofSpringConstraint(e,r,!this._enableCollision)}Ammo.destroy(r);const a=["X","Y","Z","X","Y","Z"];for(let t=0;t<6;t++){const e=t<3?"_linear":"_angular";this._constraint.enableSpring(t,this[`${e}Spring${a[t]}`]);this._constraint.setDamping(t,this[`${e}Damping${a[t]}`]);this._constraint.setEquilibriumPoint(t,this[`${e}Equilibrium${a[t]}`]);this._constraint.setStiffness(t,this[`${e}Stiffness${a[t]}`])}this._constraint.setBreakingImpulseThreshold(this._breakForce);this._updateLinearLimits();this._updateAngularLimits();const o=this.system.app;const l=o.systems.rigidbody.dynamicsWorld;l.addConstraint(this._constraint,!this._enableCollision)}}_destroyConstraint(){if(this._constraint){const t=this.system.app;const e=t.systems.rigidbody.dynamicsWorld;e.removeConstraint(this._constraint);Ammo.destroy(this._constraint);this._constraint=null}}initFromData(t){for(const e of Pk){if(t.hasOwnProperty(e)){if(t[e]instanceof Ot){this[`_${e}`].copy(t[e])}else{this[`_${e}`]=t[e]}}}this._createConstraint()}onEnable(){this._createConstraint()}onDisable(){this._destroyConstraint()}_onSetEnabled(t,e,s){}_onBeforeRemove(){this.fire("remove")}}const Dk={Damping:"setDamping",Equilibrium:"setEquilibriumPoint",Spring:"enableSpring",Stiffness:"setStiffness"};["linear","angular"].forEach((t=>{["Damping","Equilibrium","Spring","Stiffness"].forEach((e=>{["X","Y","Z"].forEach((s=>{const i=t+e+s;const n=`_${i}`;let r=t==="linear"?0:3;if(s==="Y")r+=1;if(s==="Z")r+=2;Object.defineProperty(Lk.prototype,i,{get:function(){return this[n]},set:function(t){if(this[n]!==t){this[n]=t;this._constraint[Dk[e]](r,t)}}})}))}))}));class Mk{constructor(){this.enabled=true}}const Ik=["enabled"];class Rk extends $R{constructor(t){super(t);this.id="joint";this.app=t;this.ComponentType=Lk;this.DataType=Mk;this.schema=Ik}initializeComponentData(t,e,s){t.initFromData(e);super.initializeComponentData(t,e,Ik)}}qR._buildAccessors(Lk.prototype,Ik);class Ok extends qR{set minWidth(t){if(t!==this._minWidth){this._minWidth=t;this.fire("resize")}}get minWidth(){return this._minWidth}set minHeight(t){if(t!==this._minHeight){this._minHeight=t;this.fire("resize")}}get minHeight(){return this._minHeight}set maxWidth(t){if(t!==this._maxWidth){this._maxWidth=t;this.fire("resize")}}get maxWidth(){return this._maxWidth}set maxHeight(t){if(t!==this._maxHeight){this._maxHeight=t;this.fire("resize")}}get maxHeight(){return this._maxHeight}set fitWidthProportion(t){if(t!==this._fitWidthProportion){this._fitWidthProportion=t;this.fire("resize")}}get fitWidthProportion(){return this._fitWidthProportion}set fitHeightProportion(t){if(t!==this._fitHeightProportion){this._fitHeightProportion=t;this.fire("resize")}}get fitHeightProportion(){return this._fitHeightProportion}set excludeFromLayout(t){if(t!==this._excludeFromLayout){this._excludeFromLayout=t;this.fire("resize")}}get excludeFromLayout(){return this._excludeFromLayout}constructor(...t){super(...t),this._minWidth=0,this._minHeight=0,this._maxWidth=null,this._maxHeight=null,this._fitWidthProportion=0,this._fitHeightProportion=0,this._excludeFromLayout=false}}class Fk{constructor(){this.enabled=true}}const Nk=["enabled"];class kk extends $R{constructor(t){super(t);this.id="layoutchild";this.ComponentType=Ok;this.DataType=Fk;this.schema=Nk}initializeComponentData(t,e,s){if(e.enabled!==undefined)t.enabled=e.enabled;if(e.minWidth!==undefined)t.minWidth=e.minWidth;if(e.minHeight!==undefined)t.minHeight=e.minHeight;if(e.maxWidth!==undefined)t.maxWidth=e.maxWidth;if(e.maxHeight!==undefined)t.maxHeight=e.maxHeight;if(e.fitWidthProportion!==undefined)t.fitWidthProportion=e.fitWidthProportion;if(e.fitHeightProportion!==undefined)t.fitHeightProportion=e.fitHeightProportion;if(e.excludeFromLayout!==undefined)t.excludeFromLayout=e.excludeFromLayout;super.initializeComponentData(t,e,s)}cloneComponent(t,e){const s=t.layoutchild;return this.addComponent(e,{enabled:s.enabled,minWidth:s.minWidth,minHeight:s.minHeight,maxWidth:s.maxWidth,maxHeight:s.maxHeight,fitWidthProportion:s.fitWidthProportion,fitHeightProportion:s.fitHeightProportion,excludeFromLayout:s.excludeFromLayout})}}qR._buildAccessors(Ok.prototype,Nk);const Bk=0;const Uk=1;const zk=2;const Vk=3;const Gk={};Gk[qg]={axis:"x",size:"width",calculatedSize:"calculatedWidth",minSize:"minWidth",maxSize:"maxWidth",fitting:"widthFitting",fittingProportion:"fitWidthProportion"};Gk[$g]={axis:"y",size:"height",calculatedSize:"calculatedHeight",minSize:"minHeight",maxSize:"maxHeight",fitting:"heightFitting",fittingProportion:"fitHeightProportion"};const Hk={};Hk[qg]=$g;Hk[$g]=qg;const Wk={minWidth:0,minHeight:0,maxWidth:Number.POSITIVE_INFINITY,maxHeight:Number.POSITIVE_INFINITY,width:null,height:null,fitWidthProportion:0,fitHeightProportion:0};const Xk={NONE:"NONE",APPLY_STRETCHING:"APPLY_STRETCHING",APPLY_SHRINKING:"APPLY_SHRINKING"};const qk=new Ot;function $k(t){let e;const s=Gk[t];const i=Gk[Hk[t]];function n(t,e){return-e[s.size]*t.pivot[s.axis]}function r(t,e){return-e[i.size]*t.pivot[i.axis]}function a(t,e){return e[s.size]*(1-t.pivot[s.axis])}function o(t,s){t=t.filter(l);e=s;qk.x=e.containerSize.x-e.padding.x-e.padding.z;qk.y=e.containerSize.y-e.padding.y-e.padding.w;h(t);const i=d(c(t));const n=f(i,u(i));const r=y(i,n);S(i,n,r);x(i,n,r);return T(i)}function l(t){const e=t.entity.layoutchild;return!e||!e.enabled||!e.excludeFromLayout}function h(t){for(let e=0;e<t.length;++e){const s=t[e];const i=s.anchor;if(i.x!==0||i.y!==0||i.z!==0||i.w!==0){s.anchor=Ft.ZERO}}}function c(t){if(!e.wrap){return[t]}const i=[[]];const n=w(t);let r=0;const a=e[s.fitting]===zk;for(let o=0;o<t.length;++o){if(i[i.length-1].length>0){r+=e.spacing[s.axis]}const l=n[o][s.size];r+=l;if(!a&&r>qk[s.axis]&&i[i.length-1].length!==0){r=l;i.push([])}i[i.length-1].push(t[o]);if(a&&r>qk[s.axis]&&o!==t.length-1){r=0;i.push([])}}return i}function d(t){const s=e.orientation===qg&&e.reverseX||e.orientation===$g&&e.reverseY;const i=e.orientation===qg&&e.reverseY||e.orientation===$g&&e.reverseX;if(s){for(let e=0;e<t.length;++e){if(s){t[e].reverse()}}}if(i){t.reverse()}return t}function u(t){const i=[];for(let n=0;n<t.length;++n){const r=t[n];const a=w(r);const o=m(a,s);const l=p(e[s.fitting],o,qk[s.axis]);if(l===Xk.APPLY_STRETCHING){_(a,o,s)}else if(l===Xk.APPLY_SHRINKING){g(a,o,s)}i.push(a)}return i}function f(t,s){const n=[];const r=[];for(let e=0;e<t.length;++e){const a=t[e];a.largestElement=null;a.largestSize={width:Number.NEGATIVE_INFINITY,height:Number.NEGATIVE_INFINITY};for(let t=0;t<a.length;++t){const n=s[e][t];if(n[i.size]>a.largestSize[i.size]){a.largestElement=a[t];a.largestSize=n}}n.push(a.largestElement);r.push(a.largestSize)}const a=m(r,i);const o=p(e[i.fitting],a,qk[i.axis]);if(o===Xk.APPLY_STRETCHING){_(r,a,i)}else if(o===Xk.APPLY_SHRINKING){g(r,a,i)}for(let n=0;n<t.length;++n){const r=t[n];for(let a=0;a<r.length;++a){const o=s[n][a];const l=o[i.size];const h=t.length===1?qk[i.axis]:r.largestSize[i.size];const c=p(e[i.fitting],l,h);if(c===Xk.APPLY_STRETCHING){o[i.size]=Math.min(h,o[i.maxSize])}else if(c===Xk.APPLY_SHRINKING){o[i.size]=Math.max(h,o[i.minSize])}}}return s}function p(t,e,s){switch(t){case Bk:return Xk.NONE;case Uk:if(e<s){return Xk.APPLY_STRETCHING}return Xk.NONE;case zk:if(e>=s){return Xk.APPLY_SHRINKING}return Xk.NONE;case Vk:if(e<s){return Xk.APPLY_STRETCHING}return Xk.APPLY_SHRINKING;default:throw new Error(`Unrecognized fitting mode: ${t}`)}}function m(t,s){const i=A(t,s.size);const n=(t.length-1)*e.spacing[s.axis];return i+n}function _(t,e,s){const i=L(t,s.maxSize);const n=C(t,s.fittingProportion);const r=I(n,i);let a=qk[s.axis]-e;for(let e=0;e<t.length;++e){const o=i[e];const l=v(o,a,n,r);const h=t[o][s.size]+l;const c=t[o][s.maxSize];const d=Math.min(h,c);t[o][s.size]=d;const u=Math.max(h-d,0);const f=l-u;a-=f}}function g(t,e,s){const i=L(t,s.minSize,true);const n=C(t,s.fittingProportion);const r=P(n);const a=I(r,i);let o=e-qk[s.axis];for(let e=0;e<t.length;++e){const n=i[e];const l=v(n,o,r,a);const h=t[n][s.size]-l;const c=t[n][s.minSize];const d=Math.max(h,c);t[n][s.size]=d;const u=Math.max(d-h,0);const f=l-u;o-=f}}function v(t,e,s,i){const n=s[t];const r=i[t];if(Math.abs(n)<1e-5&&Math.abs(r)<1e-5){return e}return e*n/r}function y(t,o){const l={};l[s.axis]=0;l[i.axis]=0;t[s.size]=Number.NEGATIVE_INFINITY;const h=[];for(let c=0;c<t.length;++c){const d=t[c];if(d.length===0){h.push([]);continue}const u=[];const f=o[c];for(let t=0;t<d.length;++t){const o=d[t];const h=f[t];l[i.axis]-=r(o,h);l[s.axis]-=n(o,h);u[t]={};u[t][s.axis]=l[s.axis];u[t][i.axis]=l[i.axis];l[i.axis]+=r(o,h);l[s.axis]+=a(o,h)+e.spacing[s.axis]}d[s.size]=l[s.axis]-e.spacing[s.axis];d[i.size]=d.largestSize[i.size];t[s.size]=Math.max(t[s.size],d[s.size]);l[s.axis]=0;l[i.axis]+=d[i.size]+e.spacing[i.axis];h.push(u)}t[i.size]=l[i.axis]-e.spacing[i.axis];return h}function S(t,n,r){const a=e.alignment[s.axis];const o=e.alignment[i.axis];const l=e.padding[s.axis];const h=e.padding[i.axis];for(let c=0;c<t.length;++c){const d=t[c];const u=n[c];const f=r[c];const p=(qk[s.axis]-d[s.size])*a+l;const m=(qk[i.axis]-t[i.size])*o+h;for(let t=0;t<d.length;++t){const n=(d[i.size]-u[t][i.size])*e.alignment[i.axis];f[t][s.axis]+=p;f[t][i.axis]+=m+n}}}function x(t,n,r){for(let a=0;a<t.length;++a){const o=t[a];const l=n[a];const h=r[a];for(let t=0;t<o.length;++t){const n=o[t];n[s.calculatedSize]=l[t][s.size];n[i.calculatedSize]=l[t][i.size];if(e.orientation===qg){n.entity.setLocalPosition(h[t][s.axis],h[t][i.axis],n.entity.getLocalPosition().z)}else{n.entity.setLocalPosition(h[t][i.axis],h[t][s.axis],n.entity.getLocalPosition().z)}}}}function T(t){const s=t.width;const i=t.height;const n=(qk.x-s)*e.alignment.x+e.padding.x;const r=(qk.y-i)*e.alignment.y+e.padding.y;return{bounds:new Ft(n,r,s,i)}}function w(t){const e=[];for(let s=0;s<t.length;++s){const i=t[s];const n=Math.max(b(i,"minWidth"),0);const r=Math.max(b(i,"minHeight"),0);const a=Math.max(b(i,"maxWidth"),n);const o=Math.max(b(i,"maxHeight"),r);const l=E(b(i,"width"),n,a);const h=E(b(i,"height"),r,o);const c=b(i,"fitWidthProportion");const d=b(i,"fitHeightProportion");e.push({minWidth:n,minHeight:r,maxWidth:a,maxHeight:o,width:l,height:h,fitWidthProportion:c,fitHeightProportion:d})}return e}function b(t,e){const s=t.entity.layoutchild;if(s&&s.enabled&&s[e]!==undefined&&s[e]!==null){return s[e]}else if(t[e]!==undefined){return t[e]}return Wk[e]}function E(t,e,s){return Math.min(Math.max(t,e),s)}function A(t,e){return t.reduce(((t,s)=>t+s[e]),0)}function C(t,e){const s=A(t,e);const i=[];const n=t.length;if(s===0){for(let t=0;t<n;++t){i.push(1/n)}}else{for(let r=0;r<n;++r){i.push(t[r][e]/s)}}return i}function P(t){if(t.length===1){return[1]}const e=[];const s=t.length;for(let i=0;i<s;++i){e.push((1-t[i])/(s-1))}return e}function L(t,e,s){t.forEach(D);return t.slice().sort(((t,i)=>s?i[e]-t[e]:t[e]-i[e])).map(M)}function D(t,e){t.index=e}function M(t){return t.index}function I(t,e){const s=[];s[e[t.length-1]]=t[e[t.length-1]];for(let i=t.length-2;i>=0;--i){s[e[i]]=s[e[i+1]]+t[e[i]]}return s}return o}const jk={};jk[qg]=$k(qg);jk[$g]=$k($g);class Yk{calculateLayout(t,e){const s=jk[e.orientation];if(!s){throw new Error(`Unrecognized orientation value: ${e.orientation}`)}else{return s(t,e)}}}function Kk(t){return t.element}function Zk(t){return t.enabled&&t.element&&t.element.enabled}class Qk extends qR{constructor(t,e){super(t,e),this._orientation=qg,this._reverseX=false,this._reverseY=true,this._alignment=new Ot(0,1),this._padding=new Ft,this._spacing=new Ot,this._widthFitting=Bk,this._heightFitting=Bk,this._wrap=false,this._layoutCalculator=new Yk;this._listenForReflowEvents(this.entity,"on");this.entity.children.forEach((t=>{this._listenForReflowEvents(t,"on")}));this.entity.on("childinsert",this._onChildInsert,this);this.entity.on("childremove",this._onChildRemove,this);t.app.systems.element.on("add",this._onElementOrLayoutComponentAdd,this);t.app.systems.element.on("beforeremove",this._onElementOrLayoutComponentRemove,this);t.app.systems.layoutchild.on("add",this._onElementOrLayoutComponentAdd,this);t.app.systems.layoutchild.on("beforeremove",this._onElementOrLayoutComponentRemove,this)}set orientation(t){if(t!==this._orientation){this._orientation=t;this._scheduleReflow()}}get orientation(){return this._orientation}set reverseX(t){if(t!==this._reverseX){this._reverseX=t;this._scheduleReflow()}}get reverseX(){return this._reverseX}set reverseY(t){if(t!==this._reverseY){this._reverseY=t;this._scheduleReflow()}}get reverseY(){return this._reverseY}set alignment(t){if(!t.equals(this._alignment)){this._alignment.copy(t);this._scheduleReflow()}}get alignment(){return this._alignment}set padding(t){if(!t.equals(this._padding)){this._padding.copy(t);this._scheduleReflow()}}get padding(){return this._padding}set spacing(t){if(!t.equals(this._spacing)){this._spacing.copy(t);this._scheduleReflow()}}get spacing(){return this._spacing}set widthFitting(t){if(t!==this._widthFitting){this._widthFitting=t;this._scheduleReflow()}}get widthFitting(){return this._widthFitting}set heightFitting(t){if(t!==this._heightFitting){this._heightFitting=t;this._scheduleReflow()}}get heightFitting(){return this._heightFitting}set wrap(t){if(t!==this._wrap){this._wrap=t;this._scheduleReflow()}}get wrap(){return this._wrap}_isSelfOrChild(t){return t===this.entity||this.entity.children.indexOf(t)!==-1}_listenForReflowEvents(t,e){if(t.element){t.element[e]("enableelement",this._scheduleReflow,this);t.element[e]("disableelement",this._scheduleReflow,this);t.element[e]("resize",this._scheduleReflow,this);t.element[e]("set:pivot",this._scheduleReflow,this)}if(t.layoutchild){t.layoutchild[e]("set_enabled",this._scheduleReflow,this);t.layoutchild[e]("resize",this._scheduleReflow,this)}}_onElementOrLayoutComponentAdd(t){if(this._isSelfOrChild(t)){this._listenForReflowEvents(t,"on");this._scheduleReflow()}}_onElementOrLayoutComponentRemove(t){if(this._isSelfOrChild(t)){this._listenForReflowEvents(t,"off");this._scheduleReflow()}}_onChildInsert(t){this._listenForReflowEvents(t,"on");this._scheduleReflow()}_onChildRemove(t){this._listenForReflowEvents(t,"off");this._scheduleReflow()}_scheduleReflow(){if(this.enabled&&this.entity&&this.entity.enabled&&!this._isPerformingReflow){this.system.scheduleReflow(this)}}reflow(){const t=Kk(this.entity);const e=this.entity.children.filter(Zk).map(Kk);if(!t||e.length===0){return}const s=Math.max(t.calculatedWidth,0);const i=Math.max(t.calculatedHeight,0);const n={orientation:this._orientation,reverseX:this._reverseX,reverseY:this._reverseY,alignment:this._alignment,padding:this._padding,spacing:this._spacing,widthFitting:this._widthFitting,heightFitting:this._heightFitting,wrap:this._wrap,containerSize:new Ot(s,i)};this._isPerformingReflow=true;const r=this._layoutCalculator.calculateLayout(e,n);this._isPerformingReflow=false;this.fire("reflow",r)}onEnable(){this._scheduleReflow()}onRemove(){this.entity.off("childinsert",this._onChildInsert,this);this.entity.off("childremove",this._onChildRemove,this);this._listenForReflowEvents(this.entity,"off");this.entity.children.forEach((t=>{this._listenForReflowEvents(t,"off")}));this.system.app.systems.element.off("add",this._onElementOrLayoutComponentAdd,this);this.system.app.systems.element.off("beforeremove",this._onElementOrLayoutComponentRemove,this);this.system.app.systems.layoutchild.off("add",this._onElementOrLayoutComponentAdd,this);this.system.app.systems.layoutchild.off("beforeremove",this._onElementOrLayoutComponentRemove,this)}}class Jk{constructor(){this.enabled=true}}const tB=["enabled"];const eB=100;class sB extends $R{constructor(t){super(t);this.id="layoutgroup";this.ComponentType=Qk;this.DataType=Jk;this.schema=tB;this._reflowQueue=[];this.on("beforeremove",this._onRemoveComponent,this);this.app.systems.on("postUpdate",this._onPostUpdate,this)}initializeComponentData(t,e,s){if(e.enabled!==undefined)t.enabled=e.enabled;if(e.orientation!==undefined)t.orientation=e.orientation;if(e.reverseX!==undefined)t.reverseX=e.reverseX;if(e.reverseY!==undefined)t.reverseY=e.reverseY;if(e.alignment!==undefined){t.alignment=Array.isArray(e.alignment)?new Ot(e.alignment):e.alignment}if(e.padding!==undefined){t.padding=Array.isArray(e.padding)?new Ft(e.padding):e.padding}if(e.spacing!==undefined){t.spacing=Array.isArray(e.spacing)?new Ot(e.spacing):e.spacing}if(e.widthFitting!==undefined)t.widthFitting=e.widthFitting;if(e.heightFitting!==undefined)t.heightFitting=e.heightFitting;if(e.wrap!==undefined)t.wrap=e.wrap;super.initializeComponentData(t,e,s)}cloneComponent(t,e){const s=t.layoutgroup;return this.addComponent(e,{enabled:s.enabled,orientation:s.orientation,reverseX:s.reverseX,reverseY:s.reverseY,alignment:s.alignment,padding:s.padding,spacing:s.spacing,widthFitting:s.widthFitting,heightFitting:s.heightFitting,wrap:s.wrap})}scheduleReflow(t){if(this._reflowQueue.indexOf(t)===-1){this._reflowQueue.push(t)}}_onPostUpdate(){this._processReflowQueue()}_processReflowQueue(){if(this._reflowQueue.length===0){return}let t=0;while(this._reflowQueue.length>0){const e=this._reflowQueue.slice();this._reflowQueue.length=0;e.sort(((t,e)=>t.entity.graphDepth-e.entity.graphDepth));for(let t=0;t<e.length;++t){e[t].reflow()}if(++t>=eB){console.warn("Max reflow iterations limit reached, bailing.");break}}}_onRemoveComponent(t,e){e.onRemove()}destroy(){super.destroy();this.app.systems.off("postUpdate",this._onPostUpdate,this)}}qR._buildAccessors(Qk.prototype,tB);class iB{destroy(t){this.map.forEach((t=>t.mesh.destroy()))}constructor(){this.map=new Map}}const nB=new ro;const rB=(t,e)=>{const s=nB.get(t,(()=>new iB));let i=s.map.get(e);if(!i){let n,r;switch(e){case"box":n=Vv.fromGeometry(t,new Sw);r={x:2,y:2,z:2,uv:2/3};break;case"capsule":n=Vv.fromGeometry(t,new fE({radius:.5,height:2}));r={x:Math.PI*2,y:Math.PI,z:Math.PI*2,uv:1/3+1/3/3*2};break;case"cone":n=Vv.fromGeometry(t,new pE({baseRadius:.5,peakRadius:0,height:1}));r={x:2.54,y:2.54,z:2.54,uv:1/3+1/3/3};break;case"cylinder":n=Vv.fromGeometry(t,new mE({radius:.5,height:1}));r={x:Math.PI,y:.79*2,z:Math.PI,uv:1/3+1/3/3*2};break;case"plane":n=Vv.fromGeometry(t,new _E({halfExtents:new Ot(.5,.5),widthSegments:1,lengthSegments:1}));r={x:0,y:1,z:0,uv:1};break;case"sphere":n=Vv.fromGeometry(t,new xw({radius:.5}));r={x:Math.PI,y:Math.PI,z:Math.PI,uv:1};break;case"torus":n=Vv.fromGeometry(t,new gE({tubeRadius:.2,ringRadius:.3}));r={x:Math.PI*.5*.5-Math.PI*.1*.1,y:.4,z:.4,uv:1};break;default:throw new Error(`Invalid primitive type: ${e}`)}n.incRefCount();i={mesh:n,area:r};s.map.set(e,i)}return i};class aB extends qR{constructor(t,e){super(t,e),this._type="asset",this._asset=null,this._model=null,this._mapping={},this._castShadows=true,this._receiveShadows=true,this._materialAsset=null,this._castShadowsLightmap=true,this._lightmapped=false,this._lightmapSizeMultiplier=1,this.isStatic=false,this._layers=[hm],this._batchGroupId=-1,this._customAabb=null,this._area=null,this._materialEvents=null,this._clonedModel=false,this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null;this._material=t.defaultMaterial;e.on("remove",this.onRemoveChild,this);e.on("removehierarchy",this.onRemoveChild,this);e.on("insert",this.onInsertChild,this);e.on("inserthierarchy",this.onInsertChild,this)}set meshInstances(t){if(!this._model){return}this._model.meshInstances=t}get meshInstances(){if(!this._model){return null}return this._model.meshInstances}set customAabb(t){this._customAabb=t;if(this._model){const t=this._model.meshInstances;if(t){for(let e=0;e<t.length;e++){t[e].setCustomAabb(this._customAabb)}}}}get customAabb(){return this._customAabb}set type(t){if(this._type===t)return;this._area=null;this._type=t;if(t==="asset"){if(this._asset!==null){this._bindModelAsset(this._asset)}else{this.model=null}}else{const e=rB(this.system.app.graphicsDevice,t);this._area=e.area;const s=e.mesh;const i=new By;const n=new Jx;n.graph=i;n.meshInstances=[new sy(s,this._material,i)];this.model=n;this._asset=null}}get type(){return this._type}set asset(t){const e=this.system.app.assets;let s=t;if(t instanceof qA){s=t.id}if(this._asset!==s){if(this._asset){e.off(`add:${this._asset}`,this._onModelAssetAdded,this);const t=e.get(this._asset);if(t){this._unbindModelAsset(t)}}this._asset=s;if(this._asset){const t=e.get(this._asset);if(!t){this.model=null;e.on(`add:${this._asset}`,this._onModelAssetAdded,this)}else{this._bindModelAsset(t)}}else{this.model=null}}}get asset(){return this._asset}set model(t){if(this._model===t){return}if(t&&t._immutable){return}if(this._model){this._model._immutable=false;this.removeModelFromLayers();this._model.getGraph().destroy();delete this._model._entity;if(this._clonedModel){this._model.destroy();this._clonedModel=false}}this._model=t;if(this._model){this._model._immutable=true;const t=this._model.meshInstances;for(let e=0;e<t.length;e++){t[e].castShadow=this._castShadows;t[e].receiveShadow=this._receiveShadows;t[e].setCustomAabb(this._customAabb)}this.lightmapped=this._lightmapped;this.entity.addChild(this._model.graph);if(this.enabled&&this.entity.enabled){this.addModelToLayers()}this._model._entity=this.entity;if(this.entity.animation){this.entity.animation.setModel(this._model)}if(this.entity.anim){this.entity.anim.rebind()}if(this.type==="asset"){this.mapping=this._mapping}else{this._unsetMaterialEvents()}}}get model(){return this._model}set lightmapped(t){if(t!==this._lightmapped){this._lightmapped=t;if(this._model){const e=this._model.meshInstances;for(let s=0;s<e.length;s++){e[s].setLightmapped(t)}}}}get lightmapped(){return this._lightmapped}set castShadows(t){if(this._castShadows===t)return;const e=this._model;if(e){const s=this.layers;const i=this.system.app.scene;if(this._castShadows&&!t){for(let t=0;t<s.length;t++){const s=this.system.app.scene.layers.getLayerById(this.layers[t]);if(!s)continue;s.removeShadowCasters(e.meshInstances)}}const n=e.meshInstances;for(let e=0;e<n.length;e++){n[e].castShadow=t}if(!this._castShadows&&t){for(let t=0;t<s.length;t++){const n=i.layers.getLayerById(s[t]);if(!n)continue;n.addShadowCasters(e.meshInstances)}}}this._castShadows=t}get castShadows(){return this._castShadows}set receiveShadows(t){if(this._receiveShadows===t)return;this._receiveShadows=t;if(this._model){const e=this._model.meshInstances;for(let s=0,i=e.length;s<i;s++){e[s].receiveShadow=t}}}get receiveShadows(){return this._receiveShadows}set castShadowsLightmap(t){this._castShadowsLightmap=t}get castShadowsLightmap(){return this._castShadowsLightmap}set lightmapSizeMultiplier(t){this._lightmapSizeMultiplier=t}get lightmapSizeMultiplier(){return this._lightmapSizeMultiplier}set layers(t){const e=this.system.app.scene.layers;if(this.meshInstances){for(let t=0;t<this._layers.length;t++){const s=e.getLayerById(this._layers[t]);if(!s)continue;s.removeMeshInstances(this.meshInstances)}}this._layers.length=0;for(let e=0;e<t.length;e++){this._layers[e]=t[e]}if(!this.enabled||!this.entity.enabled||!this.meshInstances)return;for(let t=0;t<this._layers.length;t++){const s=e.getLayerById(this._layers[t]);if(!s)continue;s.addMeshInstances(this.meshInstances)}}get layers(){return this._layers}set batchGroupId(t){if(this._batchGroupId===t)return;if(this.entity.enabled&&this._batchGroupId>=0){this.system.app.batcher?.remove(Ov.MODEL,this.batchGroupId,this.entity)}if(this.entity.enabled&&t>=0){this.system.app.batcher?.insert(Ov.MODEL,t,this.entity)}if(t<0&&this._batchGroupId>=0&&this.enabled&&this.entity.enabled){this.addModelToLayers()}this._batchGroupId=t}get batchGroupId(){return this._batchGroupId}set materialAsset(t){let e=t;if(t instanceof qA){e=t.id}const s=this.system.app.assets;if(e!==this._materialAsset){if(this._materialAsset){s.off(`add:${this._materialAsset}`,this._onMaterialAssetAdd,this);const t=s.get(this._materialAsset);if(t){this._unbindMaterialAsset(t)}}this._materialAsset=e;if(this._materialAsset){const t=s.get(this._materialAsset);if(!t){this._setMaterial(this.system.defaultMaterial);s.on(`add:${this._materialAsset}`,this._onMaterialAssetAdd,this)}else{this._bindMaterialAsset(t)}}else{this._setMaterial(this.system.defaultMaterial)}}}get materialAsset(){return this._materialAsset}set material(t){if(this._material===t){return}this.materialAsset=null;this._setMaterial(t)}get material(){return this._material}set mapping(t){if(this._type!=="asset"){return}this._unsetMaterialEvents();if(!t){t={}}this._mapping=t;if(!this._model)return;const e=this._model.meshInstances;const s=this.asset?this.system.app.assets.get(this.asset):null;const i=s?s.data.mapping:null;let n=null;for(let s=0,r=e.length;s<r;s++){if(t[s]!==undefined){if(t[s]){n=this.system.app.assets.get(t[s]);this._loadAndSetMeshInstanceMaterial(n,e[s],s)}else{e[s].material=this.system.defaultMaterial}}else if(i){if(i[s]&&(i[s].material||i[s].path)){if(i[s].material!==undefined){n=this.system.app.assets.get(i[s].material)}else if(i[s].path!==undefined){const t=this._getMaterialAssetUrl(i[s].path);if(t){n=this.system.app.assets.getByUrl(t)}}this._loadAndSetMeshInstanceMaterial(n,e[s],s)}else{e[s].material=this.system.defaultMaterial}}}}get mapping(){return this._mapping}addModelToLayers(){const t=this.system.app.scene.layers;for(let e=0;e<this._layers.length;e++){const s=t.getLayerById(this._layers[e]);if(s){s.addMeshInstances(this.meshInstances)}}}removeModelFromLayers(){const t=this.system.app.scene.layers;for(let e=0;e<this._layers.length;e++){const s=t.getLayerById(this._layers[e]);if(!s)continue;s.removeMeshInstances(this.meshInstances)}}onRemoveChild(){if(this._model){this.removeModelFromLayers()}}onInsertChild(){if(this._model&&this.enabled&&this.entity.enabled){this.addModelToLayers()}}onRemove(){this.asset=null;this.model=null;this.materialAsset=null;this._unsetMaterialEvents();this.entity.off("remove",this.onRemoveChild,this);this.entity.off("insert",this.onInsertChild,this)}onLayersChanged(t,e){this.addModelToLayers();t.off("add",this.onLayerAdded,this);t.off("remove",this.onLayerRemoved,this);e.on("add",this.onLayerAdded,this);e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){const e=this.layers.indexOf(t.id);if(e<0)return;t.addMeshInstances(this.meshInstances)}onLayerRemoved(t){const e=this.layers.indexOf(t.id);if(e<0)return;t.removeMeshInstances(this.meshInstances)}_setMaterialEvent(t,e,s,i){const n=`${e}:${s}`;this.system.app.assets.on(n,i,this);if(!this._materialEvents){this._materialEvents=[]}if(!this._materialEvents[t]){this._materialEvents[t]={}}this._materialEvents[t][n]={id:s,handler:i}}_unsetMaterialEvents(){const t=this.system.app.assets;const e=this._materialEvents;if(!e){return}for(let s=0,i=e.length;s<i;s++){if(!e[s])continue;const i=e[s];for(const e in i){t.off(e,i[e].handler,this)}}this._materialEvents=null}_getAssetByIdOrPath(t){let e=null;const s=isNaN(parseInt(t,10));if(!s){e=this.system.app.assets.get(t)}else if(this.asset){const s=this._getMaterialAssetUrl(t);if(s){e=this.system.app.assets.getByUrl(s)}}return e}_getMaterialAssetUrl(t){if(!this.asset)return null;const e=this.system.app.assets.get(this.asset);return e?e.getAbsoluteUrl(t):null}_loadAndSetMeshInstanceMaterial(t,e,s){const i=this.system.app.assets;if(!t){return}if(t.resource){e.material=t.resource;this._setMaterialEvent(s,"remove",t.id,(function(){e.material=this.system.defaultMaterial}))}else{this._setMaterialEvent(s,"load",t.id,(function(i){e.material=i.resource;this._setMaterialEvent(s,"remove",t.id,(function(){e.material=this.system.defaultMaterial}))}));if(this.enabled&&this.entity.enabled){i.load(t)}}}onEnable(){const t=this.system.app;const e=t.scene;const s=e?.layers;this._evtLayersChanged=e.on("set:layers",this.onLayersChanged,this);if(s){this._evtLayerAdded=s.on("add",this.onLayerAdded,this);this._evtLayerRemoved=s.on("remove",this.onLayerRemoved,this)}const i=this._type==="asset";let n;if(this._model){this.addModelToLayers()}else if(i&&this._asset){n=t.assets.get(this._asset);if(n&&n.resource!==this._model){this._bindModelAsset(n)}}if(this._materialAsset){n=t.assets.get(this._materialAsset);if(n&&n.resource!==this._material){this._bindMaterialAsset(n)}}if(i){if(this._mapping){for(const e in this._mapping){if(this._mapping[e]){n=this._getAssetByIdOrPath(this._mapping[e]);if(n&&!n.resource){t.assets.load(n)}}}}}if(this._batchGroupId>=0){t.batcher?.insert(Ov.MODEL,this.batchGroupId,this.entity)}}onDisable(){const t=this.system.app;const e=t.scene;const s=e.layers;this._evtLayersChanged?.off();this._evtLayersChanged=null;if(s){this._evtLayerAdded?.off();this._evtLayerAdded=null;this._evtLayerRemoved?.off();this._evtLayerRemoved=null}if(this._batchGroupId>=0){t.batcher?.remove(Ov.MODEL,this.batchGroupId,this.entity)}if(this._model){this.removeModelFromLayers()}}hide(){if(this._model){const t=this._model.meshInstances;for(let e=0,s=t.length;e<s;e++){t[e].visible=false}}}show(){if(this._model){const t=this._model.meshInstances;for(let e=0,s=t.length;e<s;e++){t[e].visible=true}}}_bindMaterialAsset(t){t.on("load",this._onMaterialAssetLoad,this);t.on("unload",this._onMaterialAssetUnload,this);t.on("remove",this._onMaterialAssetRemove,this);t.on("change",this._onMaterialAssetChange,this);if(t.resource){this._onMaterialAssetLoad(t)}else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(t)}}_unbindMaterialAsset(t){t.off("load",this._onMaterialAssetLoad,this);t.off("unload",this._onMaterialAssetUnload,this);t.off("remove",this._onMaterialAssetRemove,this);t.off("change",this._onMaterialAssetChange,this)}_onMaterialAssetAdd(t){this.system.app.assets.off(`add:${t.id}`,this._onMaterialAssetAdd,this);if(this._materialAsset===t.id){this._bindMaterialAsset(t)}}_onMaterialAssetLoad(t){this._setMaterial(t.resource)}_onMaterialAssetUnload(t){this._setMaterial(this.system.defaultMaterial)}_onMaterialAssetRemove(t){this._onMaterialAssetUnload(t)}_onMaterialAssetChange(t){}_bindModelAsset(t){this._unbindModelAsset(t);t.on("load",this._onModelAssetLoad,this);t.on("unload",this._onModelAssetUnload,this);t.on("change",this._onModelAssetChange,this);t.on("remove",this._onModelAssetRemove,this);if(t.resource){this._onModelAssetLoad(t)}else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(t)}}_unbindModelAsset(t){t.off("load",this._onModelAssetLoad,this);t.off("unload",this._onModelAssetUnload,this);t.off("change",this._onModelAssetChange,this);t.off("remove",this._onModelAssetRemove,this)}_onModelAssetAdded(t){this.system.app.assets.off(`add:${t.id}`,this._onModelAssetAdded,this);if(t.id===this._asset){this._bindModelAsset(t)}}_onModelAssetLoad(t){this.model=t.resource.clone();this._clonedModel=true}_onModelAssetUnload(t){this.model=null}_onModelAssetChange(t,e,s,i){if(e==="data"){this.mapping=this._mapping}}_onModelAssetRemove(t){this.model=null}_setMaterial(t){if(this._material===t){return}this._material=t;const e=this._model;if(e&&this._type!=="asset"){const s=e.meshInstances;for(let e=0,i=s.length;e<i;e++){s[e].material=t}}}}class oB{constructor(){this.enabled=true}}const lB=["enabled"];class hB extends $R{constructor(t){super(t);this.id="model";this.ComponentType=aB;this.DataType=oB;this.schema=lB;this.defaultMaterial=Hv(t.graphicsDevice);this.on("beforeremove",this.onRemove,this)}initializeComponentData(t,e,s){s=["material","materialAsset","asset","castShadows","receiveShadows","castShadowsLightmap","lightmapped","lightmapSizeMultiplier","type","mapping","layers","isStatic","batchGroupId"];if(e.batchGroupId===null||e.batchGroupId===undefined){e.batchGroupId=-1}if(e.layers&&e.layers.length){e.layers=e.layers.slice(0)}for(let i=0;i<s.length;i++){if(e.hasOwnProperty(s[i])){t[s[i]]=e[s[i]]}}if(e.aabbCenter&&e.aabbHalfExtents){t.customAabb=new jt(new It(e.aabbCenter),new It(e.aabbHalfExtents))}super.initializeComponentData(t,e,["enabled"])}cloneComponent(t,e){const s={type:t.model.type,asset:t.model.asset,castShadows:t.model.castShadows,receiveShadows:t.model.receiveShadows,castShadowsLightmap:t.model.castShadowsLightmap,lightmapped:t.model.lightmapped,lightmapSizeMultiplier:t.model.lightmapSizeMultiplier,isStatic:t.model.isStatic,enabled:t.model.enabled,layers:t.model.layers,batchGroupId:t.model.batchGroupId,mapping:b({},t.model.mapping)};let i=t.model.materialAsset;if(!(i instanceof qA)&&i!=null){i=this.app.assets.get(i)}const n=t.model.material;if(!n||n===this.defaultMaterial||!i||n===i.resource){s.materialAsset=i}const r=this.addComponent(e,s);if(t.model.model&&t.model.type==="asset"&&!t.model.asset){r.model=t.model.model.clone();r._clonedModel=true}if(!s.materialAsset){r.material=n}if(t.model.model){const e=t.model.model.meshInstances;const s=r.model.meshInstances;for(let t=0;t<e.length;t++){s[t].mask=e[t].mask;s[t].material=e[t].material;s[t].layer=e[t].layer;s[t].receiveShadow=e[t].receiveShadow}}if(t.model.customAabb){r.customAabb=t.model.customAabb.clone()}return r}onRemove(t,e){e.onRemove()}}qR._buildAccessors(aB.prototype,lB);const cB=["emitterExtents","emitterRadius","emitterExtentsInner","emitterRadiusInner","loop","initialVelocity","animSpeed","normalMap","particleNormal"];const dB=["numParticles","lifetime","rate","rate2","startAngle","startAngle2","lighting","halfLambert","intensity","wrap","wrapBounds","depthWrite","noFog","sort","stretch","alignToMotion","preWarm","emitterShape","animTilesX","animTilesY","animStartFrame","animNumFrames","animNumAnimations","animIndex","randomizeAnimIndex","animLoop","colorMap","localSpace","screenSpace","orientation"];const uB=["scaleGraph","scaleGraph2","colorGraph","colorGraph2","alphaGraph","alphaGraph2","velocityGraph","velocityGraph2","localVelocityGraph","localVelocityGraph2","rotationSpeedGraph","rotationSpeedGraph2","radialSpeedGraph","radialSpeedGraph2"];const fB=["colorMapAsset","normalMapAsset","meshAsset","renderAsset"];let pB;class mB extends qR{constructor(t,e){super(t,e),this._requestedDepth=false,this._drawOrder=0,this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null,this._evtSetMeshes=null;this.on("set_colorMapAsset",this.onSetColorMapAsset,this);this.on("set_normalMapAsset",this.onSetNormalMapAsset,this);this.on("set_meshAsset",this.onSetMeshAsset,this);this.on("set_mesh",this.onSetMesh,this);this.on("set_renderAsset",this.onSetRenderAsset,this);this.on("set_loop",this.onSetLoop,this);this.on("set_blendType",this.onSetBlendType,this);this.on("set_depthSoftening",this.onSetDepthSoftening,this);this.on("set_layers",this.onSetLayers,this);cB.forEach((t=>{this.on(`set_${t}`,this.onSetSimpleProperty,this)}));dB.forEach((t=>{this.on(`set_${t}`,this.onSetComplexProperty,this)}));uB.forEach((t=>{this.on(`set_${t}`,this.onSetGraphProperty,this)}))}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){this._setValue("enabled",t)}get enabled(){return this.data.enabled}set autoPlay(t){this._setValue("autoPlay",t)}get autoPlay(){return this.data.autoPlay}set numParticles(t){this._setValue("numParticles",t)}get numParticles(){return this.data.numParticles}set lifetime(t){this._setValue("lifetime",t)}get lifetime(){return this.data.lifetime}set rate(t){this._setValue("rate",t)}get rate(){return this.data.rate}set rate2(t){this._setValue("rate2",t)}get rate2(){return this.data.rate2}set startAngle(t){this._setValue("startAngle",t)}get startAngle(){return this.data.startAngle}set startAngle2(t){this._setValue("startAngle2",t)}get startAngle2(){return this.data.startAngle2}set loop(t){this._setValue("loop",t)}get loop(){return this.data.loop}set preWarm(t){this._setValue("preWarm",t)}get preWarm(){return this.data.preWarm}set lighting(t){this._setValue("lighting",t)}get lighting(){return this.data.lighting}set halfLambert(t){this._setValue("halfLambert",t)}get halfLambert(){return this.data.halfLambert}set intensity(t){this._setValue("intensity",t)}get intensity(){return this.data.intensity}set depthWrite(t){this._setValue("depthWrite",t)}get depthWrite(){return this.data.depthWrite}set noFog(t){this._setValue("noFog",t)}get noFog(){return this.data.noFog}set depthSoftening(t){this._setValue("depthSoftening",t)}get depthSoftening(){return this.data.depthSoftening}set sort(t){this._setValue("sort",t)}get sort(){return this.data.sort}set blendType(t){this._setValue("blendType",t)}get blendType(){return this.data.blendType}set stretch(t){this._setValue("stretch",t)}get stretch(){return this.data.stretch}set alignToMotion(t){this._setValue("alignToMotion",t)}get alignToMotion(){return this.data.alignToMotion}set emitterShape(t){this._setValue("emitterShape",t)}get emitterShape(){return this.data.emitterShape}set emitterExtents(t){this._setValue("emitterExtents",t)}get emitterExtents(){return this.data.emitterExtents}set emitterExtentsInner(t){this._setValue("emitterExtentsInner",t)}get emitterExtentsInner(){return this.data.emitterExtentsInner}set emitterRadius(t){this._setValue("emitterRadius",t)}get emitterRadius(){return this.data.emitterRadius}set emitterRadiusInner(t){this._setValue("emitterRadiusInner",t)}get emitterRadiusInner(){return this.data.emitterRadiusInner}set initialVelocity(t){this._setValue("initialVelocity",t)}get initialVelocity(){return this.data.initialVelocity}set wrap(t){this._setValue("wrap",t)}get wrap(){return this.data.wrap}set wrapBounds(t){this._setValue("wrapBounds",t)}get wrapBounds(){return this.data.wrapBounds}set localSpace(t){this._setValue("localSpace",t)}get localSpace(){return this.data.localSpace}set screenSpace(t){this._setValue("screenSpace",t)}get screenSpace(){return this.data.screenSpace}set colorMapAsset(t){this._setValue("colorMapAsset",t)}get colorMapAsset(){return this.data.colorMapAsset}set normalMapAsset(t){this._setValue("normalMapAsset",t)}get normalMapAsset(){return this.data.normalMapAsset}set mesh(t){this._setValue("mesh",t)}get mesh(){return this.data.mesh}set meshAsset(t){this._setValue("meshAsset",t)}get meshAsset(){return this.data.meshAsset}set renderAsset(t){this._setValue("renderAsset",t)}get renderAsset(){return this.data.renderAsset}set orientation(t){this._setValue("orientation",t)}get orientation(){return this.data.orientation}set particleNormal(t){this._setValue("particleNormal",t)}get particleNormal(){return this.data.particleNormal}set localVelocityGraph(t){this._setValue("localVelocityGraph",t)}get localVelocityGraph(){return this.data.localVelocityGraph}set localVelocityGraph2(t){this._setValue("localVelocityGraph2",t)}get localVelocityGraph2(){return this.data.localVelocityGraph2}set velocityGraph(t){this._setValue("velocityGraph",t)}get velocityGraph(){return this.data.velocityGraph}set velocityGraph2(t){this._setValue("velocityGraph2",t)}get velocityGraph2(){return this.data.velocityGraph2}set rotationSpeedGraph(t){this._setValue("rotationSpeedGraph",t)}get rotationSpeedGraph(){return this.data.rotationSpeedGraph}set rotationSpeedGraph2(t){this._setValue("rotationSpeedGraph2",t)}get rotationSpeedGraph2(){return this.data.rotationSpeedGraph2}set radialSpeedGraph(t){this._setValue("radialSpeedGraph",t)}get radialSpeedGraph(){return this.data.radialSpeedGraph}set radialSpeedGraph2(t){this._setValue("radialSpeedGraph2",t)}get radialSpeedGraph2(){return this.data.radialSpeedGraph2}set scaleGraph(t){this._setValue("scaleGraph",t)}get scaleGraph(){return this.data.scaleGraph}set scaleGraph2(t){this._setValue("scaleGraph2",t)}get scaleGraph2(){return this.data.scaleGraph2}set colorGraph(t){this._setValue("colorGraph",t)}get colorGraph(){return this.data.colorGraph}set colorGraph2(t){this._setValue("colorGraph2",t)}get colorGraph2(){return this.data.colorGraph2}set alphaGraph(t){this._setValue("alphaGraph",t)}get alphaGraph(){return this.data.alphaGraph}set alphaGraph2(t){this._setValue("alphaGraph2",t)}get alphaGraph2(){return this.data.alphaGraph2}set colorMap(t){this._setValue("colorMap",t)}get colorMap(){return this.data.colorMap}set normalMap(t){this._setValue("normalMap",t)}get normalMap(){return this.data.normalMap}set animTilesX(t){this._setValue("animTilesX",t)}get animTilesX(){return this.data.animTilesX}set animTilesY(t){this._setValue("animTilesY",t)}get animTilesY(){return this.data.animTilesY}set animStartFrame(t){this._setValue("animStartFrame",t)}get animStartFrame(){return this.data.animStartFrame}set animNumFrames(t){this._setValue("animNumFrames",t)}get animNumFrames(){return this.data.animNumFrames}set animNumAnimations(t){this._setValue("animNumAnimations",t)}get animNumAnimations(){return this.data.animNumAnimations}set animIndex(t){this._setValue("animIndex",t)}get animIndex(){return this.data.animIndex}set randomizeAnimIndex(t){this._setValue("randomizeAnimIndex",t)}get randomizeAnimIndex(){return this.data.randomizeAnimIndex}set animSpeed(t){this._setValue("animSpeed",t)}get animSpeed(){return this.data.animSpeed}set animLoop(t){this._setValue("animLoop",t)}get animLoop(){return this.data.animLoop}set layers(t){this._setValue("layers",t)}get layers(){return this.data.layers}set drawOrder(t){this._drawOrder=t;if(this.emitter){this.emitter.drawOrder=t}}get drawOrder(){return this._drawOrder}_setValue(t,e){const s=this.data;const i=s[t];s[t]=e;this.fire("set",t,i,e)}addMeshInstanceToLayers(){if(!this.emitter)return;for(let t=0;t<this.layers.length;t++){const e=this.system.app.scene.layers.getLayerById(this.layers[t]);if(!e)continue;e.addMeshInstances([this.emitter.meshInstance]);this.emitter._layer=e}}removeMeshInstanceFromLayers(){if(!this.emitter)return;for(let t=0;t<this.layers.length;t++){const e=this.system.app.scene.layers.getLayerById(this.layers[t]);if(!e)continue;e.removeMeshInstances([this.emitter.meshInstance])}}onSetLayers(t,e,s){if(!this.emitter)return;for(let t=0;t<e.length;t++){const s=this.system.app.scene.layers.getLayerById(e[t]);if(!s)continue;s.removeMeshInstances([this.emitter.meshInstance])}if(!this.enabled||!this.entity.enabled)return;for(let t=0;t<s.length;t++){const e=this.system.app.scene.layers.getLayerById(s[t]);if(!e)continue;e.addMeshInstances([this.emitter.meshInstance])}}onLayersChanged(t,e){this.addMeshInstanceToLayers();t.off("add",this.onLayerAdded,this);t.off("remove",this.onLayerRemoved,this);e.on("add",this.onLayerAdded,this);e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){if(!this.emitter)return;const e=this.layers.indexOf(t.id);if(e<0)return;t.addMeshInstances([this.emitter.meshInstance])}onLayerRemoved(t){if(!this.emitter)return;const e=this.layers.indexOf(t.id);if(e<0)return;t.removeMeshInstances([this.emitter.meshInstance])}_bindColorMapAsset(t){t.on("load",this._onColorMapAssetLoad,this);t.on("unload",this._onColorMapAssetUnload,this);t.on("remove",this._onColorMapAssetRemove,this);t.on("change",this._onColorMapAssetChange,this);if(t.resource){this._onColorMapAssetLoad(t)}else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(t)}}_unbindColorMapAsset(t){t.off("load",this._onColorMapAssetLoad,this);t.off("unload",this._onColorMapAssetUnload,this);t.off("remove",this._onColorMapAssetRemove,this);t.off("change",this._onColorMapAssetChange,this)}_onColorMapAssetLoad(t){this.colorMap=t.resource}_onColorMapAssetUnload(t){this.colorMap=null}_onColorMapAssetRemove(t){this._onColorMapAssetUnload(t)}_onColorMapAssetChange(t){}onSetColorMapAsset(t,e,s){const i=this.system.app.assets;if(e){const t=i.get(e);if(t){this._unbindColorMapAsset(t)}}if(s){if(s instanceof qA){this.data.colorMapAsset=s.id;s=s.id}const t=i.get(s);if(t){this._bindColorMapAsset(t)}else{i.once(`add:${s}`,(t=>{this._bindColorMapAsset(t)}))}}else{this.colorMap=null}}_bindNormalMapAsset(t){t.on("load",this._onNormalMapAssetLoad,this);t.on("unload",this._onNormalMapAssetUnload,this);t.on("remove",this._onNormalMapAssetRemove,this);t.on("change",this._onNormalMapAssetChange,this);if(t.resource){this._onNormalMapAssetLoad(t)}else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(t)}}_unbindNormalMapAsset(t){t.off("load",this._onNormalMapAssetLoad,this);t.off("unload",this._onNormalMapAssetUnload,this);t.off("remove",this._onNormalMapAssetRemove,this);t.off("change",this._onNormalMapAssetChange,this)}_onNormalMapAssetLoad(t){this.normalMap=t.resource}_onNormalMapAssetUnload(t){this.normalMap=null}_onNormalMapAssetRemove(t){this._onNormalMapAssetUnload(t)}_onNormalMapAssetChange(t){}onSetNormalMapAsset(t,e,s){const i=this.system.app.assets;if(e){const t=i.get(e);if(t){this._unbindNormalMapAsset(t)}}if(s){if(s instanceof qA){this.data.normalMapAsset=s.id;s=s.id}const t=i.get(s);if(t){this._bindNormalMapAsset(t)}else{i.once(`add:${s}`,(t=>{this._bindNormalMapAsset(t)}))}}else{this.normalMap=null}}_bindMeshAsset(t){t.on("load",this._onMeshAssetLoad,this);t.on("unload",this._onMeshAssetUnload,this);t.on("remove",this._onMeshAssetRemove,this);t.on("change",this._onMeshAssetChange,this);if(t.resource){this._onMeshAssetLoad(t)}else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(t)}}_unbindMeshAsset(t){t.off("load",this._onMeshAssetLoad,this);t.off("unload",this._onMeshAssetUnload,this);t.off("remove",this._onMeshAssetRemove,this);t.off("change",this._onMeshAssetChange,this)}_onMeshAssetLoad(t){this._onMeshChanged(t.resource)}_onMeshAssetUnload(t){this.mesh=null}_onMeshAssetRemove(t){this._onMeshAssetUnload(t)}_onMeshAssetChange(t){}onSetMeshAsset(t,e,s){const i=this.system.app.assets;if(e){const t=i.get(e);if(t){this._unbindMeshAsset(t)}}if(s){if(s instanceof qA){this.data.meshAsset=s.id;s=s.id}const t=i.get(s);if(t){this._bindMeshAsset(t)}}else{this._onMeshChanged(null)}}onSetMesh(t,e,s){if(!s||s instanceof qA||typeof s==="number"){this.meshAsset=s}else{this._onMeshChanged(s)}}_onMeshChanged(t){if(t&&!(t instanceof Vv)){if(t.meshInstances[0]){t=t.meshInstances[0].mesh}else{t=null}}this.data.mesh=t;if(this.emitter){this.emitter.mesh=t;this.emitter.resetMaterial();this.rebuild()}}onSetRenderAsset(t,e,s){const i=this.system.app.assets;if(e){const t=i.get(e);if(t){this._unbindRenderAsset(t)}}if(s){if(s instanceof qA){this.data.renderAsset=s.id;s=s.id}const t=i.get(s);if(t){this._bindRenderAsset(t)}}else{this._onRenderChanged(null)}}_bindRenderAsset(t){t.on("load",this._onRenderAssetLoad,this);t.on("unload",this._onRenderAssetUnload,this);t.on("remove",this._onRenderAssetRemove,this);if(t.resource){this._onRenderAssetLoad(t)}else{if(!this.enabled||!this.entity.enabled)return;this.system.app.assets.load(t)}}_unbindRenderAsset(t){t.off("load",this._onRenderAssetLoad,this);t.off("unload",this._onRenderAssetUnload,this);t.off("remove",this._onRenderAssetRemove,this);this._evtSetMeshes?.off();this._evtSetMeshes=null}_onRenderAssetLoad(t){this._onRenderChanged(t.resource)}_onRenderAssetUnload(t){this._onRenderChanged(null)}_onRenderAssetRemove(t){this._onRenderAssetUnload(t)}_onRenderChanged(t){if(!t){this._onMeshChanged(null);return}this._evtSetMeshes?.off();this._evtSetMeshes=t.on("set:meshes",this._onRenderSetMeshes,this);if(t.meshes){this._onRenderSetMeshes(t.meshes)}}_onRenderSetMeshes(t){this._onMeshChanged(t&&t[0])}onSetLoop(t,e,s){if(this.emitter){this.emitter[t]=s;this.emitter.resetTime()}}onSetBlendType(t,e,s){if(this.emitter){this.emitter[t]=s;this.emitter.material.blendType=s;this.emitter.resetMaterial();this.rebuild()}}_requestDepth(){if(this._requestedDepth)return;if(!pB)pB=this.system.app.scene.layers.getLayerById(cm);if(pB){pB.incrementCounter();this._requestedDepth=true}}_releaseDepth(){if(!this._requestedDepth)return;if(pB){pB.decrementCounter();this._requestedDepth=false}}onSetDepthSoftening(t,e,s){if(e!==s){if(s){if(this.enabled&&this.entity.enabled)this._requestDepth();if(this.emitter)this.emitter[t]=s}else{if(this.enabled&&this.entity.enabled)this._releaseDepth();if(this.emitter)this.emitter[t]=s}if(this.emitter){this.reset();this.emitter.resetMaterial();this.rebuild()}}}onSetSimpleProperty(t,e,s){if(this.emitter){this.emitter[t]=s;this.emitter.resetMaterial()}}onSetComplexProperty(t,e,s){if(this.emitter){this.emitter[t]=s;this.emitter.resetMaterial();this.rebuild();this.reset()}}onSetGraphProperty(t,e,s){if(this.emitter){this.emitter[t]=s;this.emitter.rebuildGraphs();this.emitter.resetMaterial()}}onEnable(){const t=this.system.app.scene;const e=t.layers;const s=this.data;for(let t=0,e=fB.length;t<e;t++){let e=s[fB[t]];if(e){if(!(e instanceof qA)){const t=parseInt(e,10);if(t>=0){e=this.system.app.assets.get(e)}else{continue}}if(e&&!e.resource){this.system.app.assets.load(e)}}}if(this.system.app.graphicsDevice.disableParticleSystem){return}if(!this.emitter){let t=s.mesh;if(!(t instanceof Vv)){t=null}this.emitter=new lw(this.system.app.graphicsDevice,{numParticles:s.numParticles,emitterExtents:s.emitterExtents,emitterExtentsInner:s.emitterExtentsInner,emitterRadius:s.emitterRadius,emitterRadiusInner:s.emitterRadiusInner,emitterShape:s.emitterShape,initialVelocity:s.initialVelocity,wrap:s.wrap,localSpace:s.localSpace,screenSpace:s.screenSpace,wrapBounds:s.wrapBounds,lifetime:s.lifetime,rate:s.rate,rate2:s.rate2,orientation:s.orientation,particleNormal:s.particleNormal,animTilesX:s.animTilesX,animTilesY:s.animTilesY,animStartFrame:s.animStartFrame,animNumFrames:s.animNumFrames,animNumAnimations:s.animNumAnimations,animIndex:s.animIndex,randomizeAnimIndex:s.randomizeAnimIndex,animSpeed:s.animSpeed,animLoop:s.animLoop,startAngle:s.startAngle,startAngle2:s.startAngle2,scaleGraph:s.scaleGraph,scaleGraph2:s.scaleGraph2,colorGraph:s.colorGraph,colorGraph2:s.colorGraph2,alphaGraph:s.alphaGraph,alphaGraph2:s.alphaGraph2,localVelocityGraph:s.localVelocityGraph,localVelocityGraph2:s.localVelocityGraph2,velocityGraph:s.velocityGraph,velocityGraph2:s.velocityGraph2,rotationSpeedGraph:s.rotationSpeedGraph,rotationSpeedGraph2:s.rotationSpeedGraph2,radialSpeedGraph:s.radialSpeedGraph,radialSpeedGraph2:s.radialSpeedGraph2,colorMap:s.colorMap,normalMap:s.normalMap,loop:s.loop,preWarm:s.preWarm,sort:s.sort,stretch:s.stretch,alignToMotion:s.alignToMotion,lighting:s.lighting,halfLambert:s.halfLambert,intensity:s.intensity,depthSoftening:s.depthSoftening,scene:this.system.app.scene,mesh:t,depthWrite:s.depthWrite,noFog:s.noFog,node:this.entity,blendType:s.blendType});this.emitter.meshInstance.node=this.entity;this.emitter.drawOrder=this.drawOrder;if(!s.autoPlay){this.pause();this.emitter.meshInstance.visible=false}}if(this.emitter.colorMap){this.addMeshInstanceToLayers()}this._evtLayersChanged=t.on("set:layers",this.onLayersChanged,this);if(e){this._evtLayerAdded=e.on("add",this.onLayerAdded,this);this._evtLayerRemoved=e.on("remove",this.onLayerRemoved,this)}if(this.enabled&&this.entity.enabled&&s.depthSoftening){this._requestDepth()}}onDisable(){const t=this.system.app.scene;const e=t.layers;this._evtLayersChanged?.off();this._evtLayersChanged=null;if(e){this._evtLayerAdded?.off();this._evtLayerAdded=null;this._evtLayerRemoved?.off();this._evtLayerRemoved=null}if(this.emitter){this.removeMeshInstanceFromLayers();if(this.data.depthSoftening)this._releaseDepth();this.emitter.camera=null}}onBeforeRemove(){if(this.enabled){this.enabled=false}if(this.emitter){this.emitter.destroy();this.emitter=null}for(let t=0;t<fB.length;t++){const e=fB[t];if(this.data[e]){this[e]=null}}this.off()}reset(){if(this.emitter){this.emitter.reset()}}stop(){if(this.emitter){this.emitter.loop=false;this.emitter.resetTime();this.emitter.addTime(0,true)}}pause(){this.data.paused=true}unpause(){this.data.paused=false}play(){this.data.paused=false;if(this.emitter){this.emitter.meshInstance.visible=true;this.emitter.loop=this.data.loop;this.emitter.resetTime()}}isPlaying(){if(this.data.paused){return false}if(this.emitter&&this.emitter.loop){return true}return Date.now()<=this.emitter.endTime}setInTools(){const{emitter:t}=this;if(t&&!t.inTools){t.inTools=true;this.rebuild()}}rebuild(){const t=this.enabled;this.enabled=false;if(this.emitter){this.emitter.rebuild()}this.enabled=t}}class _B{constructor(){this.numParticles=1;this.rate=1;this.rate2=null;this.startAngle=0;this.startAngle2=null;this.lifetime=50;this.emitterExtents=new It;this.emitterExtentsInner=new It;this.emitterRadius=0;this.emitterRadiusInner=0;this.emitterShape=i_;this.initialVelocity=0;this.wrap=false;this.wrapBounds=new It;this.localSpace=false;this.screenSpace=false;this.colorMap=null;this.colorMapAsset=null;this.normalMap=null;this.normalMapAsset=null;this.loop=true;this.preWarm=false;this.sort=0;this.mode=e_;this.scene=null;this.lighting=false;this.halfLambert=false;this.intensity=1;this.stretch=0;this.alignToMotion=false;this.depthSoftening=0;this.renderAsset=null;this.meshAsset=null;this.mesh=null;this.depthWrite=false;this.noFog=false;this.orientation=r_;this.particleNormal=new It(0,1,0);this.animTilesX=1;this.animTilesY=1;this.animStartFrame=0;this.animNumFrames=1;this.animNumAnimations=1;this.animIndex=0;this.randomizeAnimIndex=false;this.animSpeed=1;this.animLoop=true;this.scaleGraph=null;this.scaleGraph2=null;this.colorGraph=null;this.colorGraph2=null;this.alphaGraph=null;this.alphaGraph2=null;this.localVelocityGraph=null;this.localVelocityGraph2=null;this.velocityGraph=null;this.velocityGraph2=null;this.rotationSpeedGraph=null;this.rotationSpeedGraph2=null;this.radialSpeedGraph=null;this.radialSpeedGraph2=null;this.blendType=Hp;this.enabled=true;this.paused=false;this.autoPlay=true;this.layers=[hm]}}var gB=`\nvarying vec4 texCoordsAlphaLife;\nuniform sampler2D colorMap;\nuniform sampler2D colorParam;\nuniform float graphSampleSize;\nuniform float graphNumSamples;\n#ifndef CAMERAPLANES\n\t#define CAMERAPLANES\n\tuniform vec4 camera_params;\n#endif\nuniform float softening;\nuniform float colorMult;\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvoid main(void) {\n\tvec4 tex  = texture2D(colorMap, vec2(texCoordsAlphaLife.x, 1.0 - texCoordsAlphaLife.y));\n\tvec4 ramp = texture2D(colorParam, vec2(texCoordsAlphaLife.w, 0.0));\n\tramp.rgb *= colorMult;\n\tramp.a += texCoordsAlphaLife.z;\n\tvec3 rgb = tex.rgb * ramp.rgb;\n\tfloat a  = tex.a * ramp.a;\n`;var vB=`\nvec3 unpack3NFloats(float src) {\n\tfloat r = fract(src);\n\tfloat g = fract(src * 256.0);\n\tfloat b = fract(src * 65536.0);\n\treturn vec3(r, g, b);\n}\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvec4 tex1Dlod_lerp(TEXTURE_ACCEPT_HIGHP(tex), vec2 tc) {\n\treturn mix( texture2D(tex,tc), texture2D(tex,tc + graphSampleSize), fract(tc.x*graphNumSamples) );\n}\nvec4 tex1Dlod_lerp(TEXTURE_ACCEPT_HIGHP(tex), vec2 tc, out vec3 w) {\n\tvec4 a = texture2D(tex,tc);\n\tvec4 b = texture2D(tex,tc + graphSampleSize);\n\tfloat c = fract(tc.x*graphNumSamples);\n\tvec3 unpackedA = unpack3NFloats(a.w);\n\tvec3 unpackedB = unpack3NFloats(b.w);\n\tw = mix(unpackedA, unpackedB, c);\n\treturn mix(a, b, c);\n}\nvec2 rotate(vec2 quadXY, float pRotation, out mat2 rotMatrix) {\n\tfloat c = cos(pRotation);\n\tfloat s = sin(pRotation);\n\tmat2 m = mat2(c, -s, s, c);\n\trotMatrix = m;\n\treturn m * quadXY;\n}\nvec3 billboard(vec3 InstanceCoords, vec2 quadXY) {\n\t#ifdef SCREEN_SPACE\n\t\tvec3 pos = vec3(-1, 0, 0) * quadXY.x + vec3(0, -1, 0) * quadXY.y;\n\t#else\n\t\tvec3 pos = -matrix_viewInverse[0].xyz * quadXY.x + -matrix_viewInverse[1].xyz * quadXY.y;\n\t#endif\n\treturn pos;\n}\nvec3 customFace(vec3 InstanceCoords, vec2 quadXY) {\n\tvec3 pos = faceTangent * quadXY.x + faceBinorm * quadXY.y;\n\treturn pos;\n}\nvec2 safeNormalize(vec2 v) {\n\tfloat l = length(v);\n\treturn (l > 1e-06) ? v / l : v;\n}\nvoid main(void) {\n\tvec3 meshLocalPos = particle_vertexData.xyz;\n\tfloat id = floor(particle_vertexData.w);\n\tfloat rndFactor = fract(sin(id + 1.0 + seed));\n\tvec3 rndFactor3 = vec3(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\n\tfloat uv = id / numParticlesPot;\n\treadInput(uv);\n#ifdef LOCAL_SPACE\n\tinVel = mat3(matrix_model) * inVel;\n#endif\n\tvec2 velocityV = safeNormalize((mat3(matrix_view) * inVel).xy);\n\tfloat particleLifetime = lifetime;\n\tif (inLife <= 0.0 || inLife > particleLifetime || !inShow)\n\t\tmeshLocalPos = vec3(0.0);\n\tvec2 quadXY = meshLocalPos.xy;\n\tfloat nlife = clamp(inLife / particleLifetime, 0.0, 1.0);\n\tvec3 paramDiv;\n\tvec4 params = tex1Dlod_lerp(TEXTURE_PASS(internalTex2), vec2(nlife, 0), paramDiv);\n\tfloat scale = params.y;\n\tfloat scaleDiv = paramDiv.x;\n\tfloat alphaDiv = paramDiv.z;\n\tscale += (scaleDiv * 2.0 - 1.0) * scaleDivMult * fract(rndFactor*10000.0);\n#ifndef USE_MESH\n\ttexCoordsAlphaLife = vec4(quadXY * -0.5 + 0.5, (alphaDiv * 2.0 - 1.0) * alphaDivMult * fract(rndFactor*1000.0), nlife);\n#else\n\ttexCoordsAlphaLife = vec4(particle_uv, (alphaDiv * 2.0 - 1.0) * alphaDivMult * fract(rndFactor*1000.0), nlife);\n#endif\n\tvec3 particlePos = inPos;\n\tvec3 particlePosMoved = vec3(0.0);\n\tmat2 rotMatrix;\n`;var yB=`\n\tfloat animFrame = min(floor(texCoordsAlphaLife.w * animTexParams.y) + animTexParams.x, animTexParams.z);\n`;var SB=`\n\tfloat animFrame = floor(mod(texCoordsAlphaLife.w * animTexParams.y + animTexParams.x, animTexParams.z + 1.0));\n`;var xB=`\n\tfloat animationIndex;\n\tif (animTexIndexParams.y == 1.0) {\n\t\tanimationIndex = floor((animTexParams.w + 1.0) * rndFactor3.z) * (animTexParams.z + 1.0);\n\t} else {\n\t\tanimationIndex = animTexIndexParams.x * (animTexParams.z + 1.0);\n\t}\n\tfloat atlasX = (animationIndex + animFrame) * animTexTilesParams.x;\n\tfloat atlasY = 1.0 - floor(atlasX + 1.0) * animTexTilesParams.y;\n\tatlasX = fract(atlasX);\n\ttexCoordsAlphaLife.xy *= animTexTilesParams.xy;\n\ttexCoordsAlphaLife.xy += vec2(atlasX, atlasY);\n`;var TB=`\nvoid readInput(float uv) {\n\tvec4 tex = texture2D(particleTexIN, vec2(uv, 0.25));\n\tvec4 tex2 = texture2D(particleTexIN, vec2(uv, 0.75));\n\tinPos = tex.xyz;\n\tinVel = tex2.xyz;\n\tinAngle = (tex.w < 0.0? -tex.w : tex.w) - 1000.0;\n\tinShow = tex.w >= 0.0;\n\tinLife = tex2.w;\n}\n`;var wB=`\n#define PI2 6.283185307179586\nuniform vec3 inBoundsSize;\nuniform vec3 inBoundsCenter;\nuniform float maxVel;\nfloat decodeFloatRG(vec2 rg) {\n\treturn rg.y * (1.0 / 255.0) + rg.x;\n}\nfloat decodeFloatRGBA( vec4 rgba ) {\n\treturn dot(rgba, vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n}\nvoid readInput(float uv) {\n\tvec4 tex0 = texture2D(particleTexIN, vec2(uv, 0.125));\n\tvec4 tex1 = texture2D(particleTexIN, vec2(uv, 0.375));\n\tvec4 tex2 = texture2D(particleTexIN, vec2(uv, 0.625));\n\tvec4 tex3 = texture2D(particleTexIN, vec2(uv, 0.875));\n\tinPos = vec3(decodeFloatRG(tex0.rg), decodeFloatRG(tex0.ba), decodeFloatRG(tex1.rg));\n\tinPos = (inPos - vec3(0.5)) * inBoundsSize + inBoundsCenter;\n\tinVel = tex2.xyz;\n\tinVel = (inVel - vec3(0.5)) * maxVel;\n\tinAngle = decodeFloatRG(tex1.ba) * PI2;\n\tinShow = tex2.a > 0.5;\n\tinLife = decodeFloatRGBA(tex3);\n\tfloat maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));\n\tfloat maxPosLife = lifetime+1.0;\n\tinLife = inLife * (maxNegLife + maxPosLife) - maxNegLife;\n}\n`;var bB=`\nvoid writeOutput() {\n\tif (gl_FragCoord.y<1.0) {\n\t\tgl_FragColor = vec4(outPos, (outAngle + 1000.0) * visMode);\n\t} else {\n\t\tgl_FragColor = vec4(outVel, outLife);\n\t}\n}\n`;var EB=`\nuniform vec3 outBoundsMul;\nuniform vec3 outBoundsAdd;\nvec2 encodeFloatRG( float v ) {\n\tvec2 enc = vec2(1.0, 255.0) * v;\n\tenc = fract(enc);\n\tenc -= enc.yy * vec2(1.0/255.0, 1.0/255.0);\n\treturn enc;\n}\nvec4 encodeFloatRGBA( float v ) {\n\tvec4 enc = vec4(1.0, 255.0, 65025.0, 160581375.0) * v;\n\tenc = fract(enc);\n\tenc -= enc.yzww * vec4(1.0/255.0,1.0/255.0,1.0/255.0,0.0);\n\treturn enc;\n}\nvoid writeOutput() {\n\toutPos = outPos * outBoundsMul + outBoundsAdd;\n\toutAngle = fract(outAngle / PI2);\n\toutVel = (outVel / maxVel) + vec3(0.5);\n\tfloat maxNegLife = max(lifetime, (numParticles - 1.0) * (rate+rateDiv));\n\tfloat maxPosLife = lifetime+1.0;\n\toutLife = (outLife + maxNegLife) / (maxNegLife + maxPosLife);\n\tif (gl_FragCoord.y < 1.0) {\n\t\tgl_FragColor = vec4(encodeFloatRG(outPos.x), encodeFloatRG(outPos.y));\n\t} else if (gl_FragCoord.y < 2.0) {\n\t\tgl_FragColor = vec4(encodeFloatRG(outPos.z), encodeFloatRG(outAngle));\n\t} else if (gl_FragCoord.y < 3.0) {\n\t\tgl_FragColor = vec4(outVel, visMode*0.5+0.5);\n\t} else {\n\t\tgl_FragColor = encodeFloatRGBA(outLife);\n\t}\n}\n`;var AB=`\nuniform mat3 spawnBounds;\nuniform vec3 spawnPosInnerRatio;\nvec3 calcSpawnPosition(vec3 inBounds, float rndFactor) {\n\tvec3 pos = inBounds - vec3(0.5);\n\tvec3 posAbs = abs(pos);\n\tvec3 maxPos = vec3(max(posAbs.x, max(posAbs.y, posAbs.z)));\n\tvec3 edge = maxPos + (vec3(0.5) - maxPos) * spawnPosInnerRatio;\n\tpos.x = edge.x * (maxPos.x == posAbs.x ? sign(pos.x) : 2.0 * pos.x);\n\tpos.y = edge.y * (maxPos.y == posAbs.y ? sign(pos.y) : 2.0 * pos.y);\n\tpos.z = edge.z * (maxPos.z == posAbs.z ? sign(pos.z) : 2.0 * pos.z);\n#ifndef LOCAL_SPACE\n\treturn emitterPos + spawnBounds * pos;\n#else\n\treturn spawnBounds * pos;\n#endif\n}\nvoid addInitialVelocity(inout vec3 localVelocity, vec3 inBounds) {\n\tlocalVelocity -= vec3(0, 0, initialVelocity);\n}\n`;var CB=`\n\twriteOutput();\n}\n`;var PB=`\nvarying vec2 vUv0;\nuniform highp sampler2D particleTexIN;\nuniform highp sampler2D internalTex0;\nuniform highp sampler2D internalTex1;\nuniform highp sampler2D internalTex2;\nuniform highp sampler2D internalTex3;\nuniform mat3 emitterMatrix;\nuniform mat3 emitterMatrixInv;\nuniform vec3 emitterScale;\nuniform vec3 emitterPos;\nuniform vec3 frameRandom;\nuniform vec3 localVelocityDivMult;\nuniform vec3 velocityDivMult;\nuniform float delta;\nuniform float rate;\nuniform float rateDiv;\nuniform float lifetime;\nuniform float numParticles;\nuniform float rotSpeedDivMult;\nuniform float radialSpeedDivMult;\nuniform float seed;\nuniform float startAngle;\nuniform float startAngle2;\nuniform float initialVelocity;\nuniform float graphSampleSize;\nuniform float graphNumSamples;\nvec3 inPos;\nvec3 inVel;\nfloat inAngle;\nbool inShow;\nfloat inLife;\nfloat visMode;\nvec3 outPos;\nvec3 outVel;\nfloat outAngle;\nbool outShow;\nfloat outLife;\n`;var LB=`\n\tif (outLife >= lifetime) {\n\t\toutLife -= max(lifetime, (numParticles - 1.0) * particleRate);\n\t\tvisMode = -1.0;\n\t}\n`;var DB=`\n\tvisMode = outLife < 0.0? -1.0: visMode;\n`;var MB=`\n\tif (outLife >= lifetime) {\n\t\toutLife -= max(lifetime, (numParticles - 1.0) * particleRate);\n\t\tvisMode = 1.0;\n\t}\n\tvisMode = outLife < 0.0? 1.0: visMode;\n`;var IB=`\nuniform float spawnBoundsSphere;\nuniform float spawnBoundsSphereInnerRatio;\nvec3 calcSpawnPosition(vec3 inBounds, float rndFactor) {\n\tfloat rnd4 = fract(rndFactor * 1000.0);\n\tvec3 norm = normalize(inBounds.xyz - vec3(0.5));\n\tfloat r = rnd4 * (1.0 - spawnBoundsSphereInnerRatio) + spawnBoundsSphereInnerRatio;\n#ifndef LOCAL_SPACE\n\treturn emitterPos + norm * r * spawnBoundsSphere;\n#else\n\treturn norm * r * spawnBoundsSphere;\n#endif\n}\nvoid addInitialVelocity(inout vec3 localVelocity, vec3 inBounds) {\n\tlocalVelocity += normalize(inBounds - vec3(0.5)) * initialVelocity;\n}\n`;var RB=`\nfloat saturate(float x) {\n\treturn clamp(x, 0.0, 1.0);\n}\nvec3 unpack3NFloats(float src) {\n\tfloat r = fract(src);\n\tfloat g = fract(src * 256.0);\n\tfloat b = fract(src * 65536.0);\n\treturn vec3(r, g, b);\n}\nvec3 tex1Dlod_lerp(TEXTURE_ACCEPT_HIGHP(tex), vec2 tc, out vec3 w) {\n\tvec4 a = texture2D(tex, tc);\n\tvec4 b = texture2D(tex, tc + graphSampleSize);\n\tfloat c = fract(tc.x * graphNumSamples);\n\tvec3 unpackedA = unpack3NFloats(a.w);\n\tvec3 unpackedB = unpack3NFloats(b.w);\n\tw = mix(unpackedA, unpackedB, c);\n\treturn mix(a.xyz, b.xyz, c);\n}\n#define HASHSCALE4 vec4(1031, .1030, .0973, .1099)\nvec4 hash41(float p) {\n\tvec4 p4 = fract(vec4(p) * HASHSCALE4);\n\tp4 += dot(p4, p4.wzxy+19.19);\n\treturn fract(vec4((p4.x + p4.y)*p4.z, (p4.x + p4.z)*p4.y, (p4.y + p4.z)*p4.w, (p4.z + p4.w)*p4.x));\n}\nvoid main(void) {\n\tif (gl_FragCoord.x > numParticles) discard;\n\treadInput(vUv0.x);\n\tvisMode = inShow? 1.0 : -1.0;\n\tvec4 rndFactor = hash41(gl_FragCoord.x + seed);\n\tfloat particleRate = rate + rateDiv * rndFactor.x;\n\toutLife = inLife + delta;\n\tfloat nlife = clamp(outLife / lifetime, 0.0, 1.0);\n\tvec3 localVelocityDiv;\n\tvec3 velocityDiv;\n\tvec3 paramDiv;\n\tvec3 localVelocity = tex1Dlod_lerp(TEXTURE_PASS(internalTex0), vec2(nlife, 0), localVelocityDiv);\n\tvec3 velocity =\t  tex1Dlod_lerp(TEXTURE_PASS(internalTex1), vec2(nlife, 0), velocityDiv);\n\tvec3 params =\t\ttex1Dlod_lerp(TEXTURE_PASS(internalTex2), vec2(nlife, 0), paramDiv);\n\tfloat rotSpeed = params.x;\n\tfloat rotSpeedDiv = paramDiv.y;\n\tvec3 radialParams = tex1Dlod_lerp(TEXTURE_PASS(internalTex3), vec2(nlife, 0), paramDiv);\n\tfloat radialSpeed = radialParams.x;\n\tfloat radialSpeedDiv = radialParams.y;\n\tbool respawn = inLife <= 0.0 || outLife >= lifetime;\n\tinPos = respawn ? calcSpawnPosition(rndFactor.xyz, rndFactor.x) : inPos;\n\tinAngle = respawn ? mix(startAngle, startAngle2, rndFactor.x) : inAngle;\n#ifndef LOCAL_SPACE\n\tvec3 radialVel = inPos - emitterPos;\n#else\n\tvec3 radialVel = inPos;\n#endif\n\tradialVel = (dot(radialVel, radialVel) > 1.0E-8) ? radialSpeed * normalize(radialVel) : vec3(0.0);\n\tradialVel += (radialSpeedDiv * vec3(2.0) - vec3(1.0)) * radialSpeedDivMult * rndFactor.xyz;\n\tlocalVelocity +=\t(localVelocityDiv * vec3(2.0) - vec3(1.0)) * localVelocityDivMult * rndFactor.xyz;\n\tvelocity +=\t\t (velocityDiv * vec3(2.0) - vec3(1.0)) * velocityDivMult * rndFactor.xyz;\n\trotSpeed +=\t\t (rotSpeedDiv * 2.0 - 1.0) * rotSpeedDivMult * rndFactor.y;\n\taddInitialVelocity(localVelocity, rndFactor.xyz);\n#ifndef LOCAL_SPACE\n\toutVel = emitterMatrix * localVelocity + (radialVel + velocity) * emitterScale;\n#else\n\toutVel = (localVelocity + radialVel) / emitterScale + emitterMatrixInv * velocity;\n#endif\n\toutPos = inPos + outVel * delta;\n\toutAngle = inAngle + rotSpeed * delta;\n`;var OB=`\n\tquadXY = rotate(quadXY, inAngle, rotMatrix);\n\tvec3 localPos = billboard(particlePos, quadXY);\n`;var FB=`\n\tdBlendModeFogFactor = 0.0;\n\trgb *= saturate(gammaCorrectInput(max(a, 0.0)));\n\tif ((rgb.r + rgb.g + rgb.b) < 0.000001) discard;\n`;var NB=`\n\trgb = mix(vec3(1.0), rgb, vec3(a));\n\tif (rgb.r + rgb.g + rgb.b > 2.99) discard;\n`;var kB=`\n\tif (a < 0.01) discard;\n`;var BB=`\nattribute vec4 particle_vertexData;\nattribute vec4 particle_vertexData2;\nattribute vec4 particle_vertexData3;\nattribute float particle_vertexData4;\n#ifndef USE_MESH\n\tattribute vec2 particle_vertexData5;\n#else\n\tattribute vec4 particle_vertexData5;\n#endif\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform mat4 matrix_view;\n#endif\nuniform mat3 matrix_normal;\nuniform mat4 matrix_viewInverse;\nuniform float numParticles;\nuniform float lifetime;\nuniform float stretch;\nuniform float seed;\nuniform vec3 wrapBounds;\nuniform vec3 emitterScale;\nuniform vec3 faceTangent;\nuniform vec3 faceBinorm;\n#ifdef PARTICLE_GPU\n\tuniform highp sampler2D internalTex0;\n\tuniform highp sampler2D internalTex1;\n\tuniform highp sampler2D internalTex2;\n#endif\nuniform vec3 emitterPos;\nvarying vec4 texCoordsAlphaLife;\nvec2 rotate(vec2 quadXY, float pRotation, out mat2 rotMatrix)\n{\n\tfloat c = cos(pRotation);\n\tfloat s = sin(pRotation);\n\tmat2 m = mat2(c, -s, s, c);\n\trotMatrix = m;\n\treturn m * quadXY;\n}\nvec3 billboard(vec3 InstanceCoords, vec2 quadXY)\n{\n\tvec3 pos = -matrix_viewInverse[0].xyz * quadXY.x + -matrix_viewInverse[1].xyz * quadXY.y;\n\treturn pos;\n}\nvec3 customFace(vec3 InstanceCoords, vec2 quadXY)\n{\n\tvec3 pos = faceTangent * quadXY.x + faceBinorm * quadXY.y;\n\treturn pos;\n}\nvoid main(void)\n{\n\tvec3 particlePos = particle_vertexData.xyz;\n\tvec3 inPos = particlePos;\n\tvec3 vertPos = particle_vertexData3.xyz;\n\tvec3 inVel = vec3(particle_vertexData2.w, particle_vertexData3.w, particle_vertexData5.x);\n\tfloat id = floor(particle_vertexData4);\n\tfloat rndFactor = fract(sin(id + 1.0 + seed));\n\tvec3 rndFactor3 = vec3(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\n#ifdef LOCAL_SPACE\n\tinVel = mat3(matrix_model) * inVel;\n#endif\n\tvec2 velocityV = normalize((mat3(matrix_view) * inVel).xy);\n\tvec2 quadXY = vertPos.xy;\n#ifdef USE_MESH\n\ttexCoordsAlphaLife = vec4(particle_vertexData5.zw, particle_vertexData2.z, particle_vertexData.w);\n#else\n\ttexCoordsAlphaLife = vec4(quadXY * -0.5 + 0.5, particle_vertexData2.z, particle_vertexData.w);\n#endif\n\tmat2 rotMatrix;\n\tfloat inAngle = particle_vertexData2.x;\n\tvec3 particlePosMoved = vec3(0.0);\n\tvec3 meshLocalPos = particle_vertexData3.xyz;\n`;var UB=`\n\tlocalPos *= particle_vertexData2.y * emitterScale;\n\tlocalPos += particlePos;\n\tgl_Position = matrix_viewProjection * vec4(localPos, 1.0);\n`;var zB=`\n\tquadXY = rotate(quadXY, inAngle, rotMatrix);\n\tvec3 localPos = customFace(particlePos, quadXY);\n`;var VB=`\n\trgb = addFog(rgb);\n\trgb = toneMap(rgb);\n\trgb = gammaCorrectOutput(rgb);\n\tgl_FragColor = vec4(rgb, a);\n}\n`;var GB=`\n\tlocalPos *= scale * emitterScale;\n\tlocalPos += particlePos;\n\t#ifdef SCREEN_SPACE\n\tgl_Position = vec4(localPos.x, localPos.y, 0.0, 1.0);\n\t#else\n\tgl_Position = matrix_viewProjection * vec4(localPos.xyz, 1.0);\n\t#endif\n`;var HB=`\n\tvec3 negNormal = normal * 0.5 + 0.5;\n\tvec3 posNormal = -normal * 0.5 + 0.5;\n\tnegNormal *= negNormal;\n\tposNormal *= posNormal;\n`;var WB=`\nattribute vec4 particle_vertexData;\n#if defined(USE_MESH)\n\t#if defined(USE_MESH_UV)\n\t\tattribute vec2 particle_uv;\n\t#else\n\t\tvec2 particle_uv = vec2(0.0, 0.0);\n\t#endif\n#endif\nuniform mat4 matrix_viewProjection;\nuniform mat4 matrix_model;\nuniform mat3 matrix_normal;\nuniform mat4 matrix_viewInverse;\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform mat4 matrix_view;\n#endif\nuniform float numParticles;\nuniform float numParticlesPot;\nuniform float graphSampleSize;\nuniform float graphNumSamples;\nuniform float stretch;\nuniform vec3 wrapBounds;\nuniform vec3 emitterScale;\nuniform vec3 emitterPos;\nuniform vec3 faceTangent;\nuniform vec3 faceBinorm;\nuniform float rate;\nuniform float rateDiv;\nuniform float lifetime;\nuniform float deltaRandomnessStatic;\nuniform float scaleDivMult;\nuniform float alphaDivMult;\nuniform float seed;\nuniform float delta;\nuniform sampler2D particleTexOUT;\nuniform sampler2D particleTexIN;\n#ifdef PARTICLE_GPU\n\tuniform highp sampler2D internalTex0;\n\tuniform highp sampler2D internalTex1;\n\tuniform highp sampler2D internalTex2;\n#endif\n#ifndef CAMERAPLANES\n\t#define CAMERAPLANES\n\tuniform vec4 camera_params;\n#endif\nvarying vec4 texCoordsAlphaLife;\nvec3 inPos;\nvec3 inVel;\nfloat inAngle;\nbool inShow;\nfloat inLife;\n`;var XB=`\n\tvec3 negNormal = max(normal, vec3(0.0));\n\tvec3 posNormal = max(-normal, vec3(0.0));\n`;var qB=`\n\tvec3 light = negNormal.x*lightCube[0] + posNormal.x*lightCube[1] +\n\t\t\t\t\t\tnegNormal.y*lightCube[2] + posNormal.y*lightCube[3] +\n\t\t\t\t\t\tnegNormal.z*lightCube[4] + posNormal.z*lightCube[5];\n\trgb *= light;\n`;var $B=`\n\tparticlePos = (matrix_model * vec4(particlePos, 1.0)).xyz;\n`;var jB=`\n\tvec3 localPos = meshLocalPos;\n\tlocalPos.xy = rotate(localPos.xy, inAngle, rotMatrix);\n\tlocalPos.yz = rotate(localPos.yz, inAngle, rotMatrix);\n\tbillboard(particlePos, quadXY);\n`;var YB=`\n\tNormal = normalize(localPos + matrix_viewInverse[2].xyz);\n`;var KB=`\n\tvec3 normalMap = normalize(texture2D(normalMap, vec2(texCoordsAlphaLife.x, 1.0 - texCoordsAlphaLife.y)).xyz * 2.0 - 1.0);\n\tvec3 normal = ParticleMat * normalMap;\n`;var ZB=`\n\tinAngle = atan(velocityV.x, velocityV.y);\n`;var QB=`\n\t#include "particleUpdaterInitPS"\n\t#ifdef PACK8\n\t\t#include "particleInputRgba8PS"\n\t\t#include "particleOutputRgba8PS"\n\t#else\n\t\t#include "particleInputFloatPS"\n\t\t#include "particleOutputFloatPS"\n\t#endif\n\t#ifdef EMITTERSHAPE_BOX\n\t\t#include "particleUpdaterAABBPS"\n\t#else\n\t\t#include "particleUpdaterSpherePS"\n\t#endif\n\t#include "particleUpdaterStartPS"\n\t#ifdef RESPAWN\n\t\t#include "particleUpdaterRespawnPS"\n\t#endif\n\t#ifdef NO_RESPAWN\n\t\t#include "particleUpdaterNoRespawnPS"\n\t#endif\n\t#ifdef ON_STOP\n\t\t#include "particleUpdaterOnStopPS"\n\t#endif\n\t#include "particleUpdaterEndPS"\n`;var JB=`\n\t#if NORMAL != NONE\n\t\t#if NORMAL == VERTEX\n\t\t\tvarying vec3 Normal;\n\t\t#endif\n\t\t#if NORMAL == MAP\n\t\t\tvarying mat3 ParticleMat;\n\t\t#endif\n\t\tuniform vec3 lightCube[6];\n\t#endif\n\t#ifdef SOFT\n\t\tvarying float vDepth;\n\t\t#include "screenDepthPS"\n\t#endif\n\t#include "gammaPS"\n\t#include "tonemappingPS"\n\t#include "fogPS"\n\t#if NORMAL == MAP\n\t\tuniform sampler2D normalMap;\n\t#endif\n\t#include "particlePS"\n\t#ifdef SOFT\n\t\t#include "particle_softPS"\n\t#endif\n\t#if NORMAL == VERTEX\n\t\tvec3 normal = Normal;\n\t#endif\n\t#if NORMAL == MAP\n\t\t#include "particle_normalMapPS"\n\t#endif\n\t#if NORMAL != NONE\n\t\t#ifdef HALF_LAMBERT\n\t\t\t#include "particle_halflambertPS"\n\t\t#else\n\t\t\t#include "particle_lambertPS"\n\t\t#endif\n\t\t#include "particle_lightingPS"\n\t#endif\n\t#if BLEND == NORMAL\n\t\t#include "particle_blendNormalPS"\n\t#elif BLEND == ADDITIVE\n\t\t#include "particle_blendAddPS"\n\t#elif BLEND == MULTIPLICATIVE\n\t\t#include "particle_blendMultiplyPS"\n\t#endif\n\t#include "particle_endPS"\n`;var tU=`\n\t#ifdef ANIMTEX\n\t\tuniform vec2 animTexTilesParams;\n\t\tuniform vec4 animTexParams;\n\t\tuniform vec2 animTexIndexParams;\n\t#endif\n\t#if NORMAL == MAP\n\t\tvarying mat3 ParticleMat;\n\t#endif\n\t#if NORMAL == VERTEX\n\t\tvarying vec3 Normal;\n\t#endif\n\t#ifdef SOFT\n\t\tvarying float vDepth;\n\t#endif\n\t#ifdef PARTICLE_GPU\n\t\t#include "particle_initVS"\n\t\t#ifdef PACK8\n\t\t\t#include "particleInputRgba8PS"\n\t\t#else\n\t\t\t#include  "particleInputFloatPS"\n\t\t#endif\n\t\t#ifdef SOFT\n\t\t\t#include "screenDepthPS"\n\t\t#endif\n\t\t#include "particleVS"\n\t#else\n\t\t#ifdef SOFT\n\t\t\t#include "screenDepthPS"\n\t\t#endif\n\t\t#include "particle_cpuVS"\n\t#endif\n\t#ifdef LOCAL_SPACE\n\t\t#include "particle_localShiftVS"\n\t#endif\n\t#ifdef ANIMTEX\n\t\t#ifdef ANIMTEX_LOOP\n\t\t\t#include "particleAnimFrameLoopVS"\n\t\t#else\n\t\t\t#include "particleAnimFrameClampVS"\n\t\t#endif\n\t\t#include "particleAnimTexVS"\n\t#endif\n\t#ifdef PARTICLE_GPU\n\t\t#ifdef WRAP\n\t\t\t#include "particle_wrapVS"\n\t\t#endif\n\t#endif\n\t#ifdef ALIGN_TO_MOTION\n\t\t#include "particle_pointAlongVS"\n\t#endif\n\t#ifdef USE_MESH\n\t\t#include "particle_meshVS"\n\t#else\n\t\t#ifdef CUSTOM_FACE\n\t\t\t#include "particle_customFaceVS"\n\t\t#else\n\t\t\t#include "particle_billboardVS"\n\t\t#endif\n\t#endif\n\t#if NORMAL == VERTEX\n\t\t#include "particle_normalVS"\n\t#endif\n\t#if NORMAL == MAP\n\t\t#include "particle_TBNVS"\n\t#endif\n\t#ifdef STRETCH\n\t\t#include "particle_stretchVS"\n\t#endif\n\t#ifdef PARTICLE_GPU\n\t\t#include "particle_endVS"\n\t#else\n\t\t#include "particle_cpu_endVS"\n\t#endif\n\t#ifdef SOFT\n\t\t#include "particle_softVS"\n\t#endif\n\t}\n`;var eU=`\n\tfloat depth = getLinearScreenDepth();\n\tfloat particleDepth = vDepth;\n\tfloat depthDiff = saturate(abs(particleDepth - depth) * softening);\n\ta *= depthDiff;\n`;var sU=`\n\tvDepth = getLinearDepth(localPos);\n`;var iU=`\n\tvec3 moveDir = inVel * stretch;\n\tvec3 posPrev = particlePos - moveDir;\n\tposPrev += particlePosMoved;\n\tvec2 centerToVertexV = normalize((mat3(matrix_view) * localPos).xy);\n\tfloat interpolation = dot(-velocityV, centerToVertexV) * 0.5 + 0.5;\n\tparticlePos = mix(particlePos, posPrev, interpolation);\n`;var nU=`\n\tmat3 rot3 = mat3(rotMatrix[0][0], rotMatrix[0][1], 0.0, rotMatrix[1][0], rotMatrix[1][1], 0.0, 0.0, 0.0, 1.0);\n\tParticleMat = mat3(-matrix_viewInverse[0].xyz, -matrix_viewInverse[1].xyz, matrix_viewInverse[2].xyz) * rot3;\n`;var rU=`\n\tvec3 origParticlePos = particlePos;\n\tparticlePos -= matrix_model[3].xyz;\n\tparticlePos = mod(particlePos, wrapBounds) - wrapBounds * 0.5;\n\tparticlePos += matrix_model[3].xyz;\n\tparticlePosMoved = particlePos - origParticlePos;\n`;const aU={particlePS:gB,particleVS:vB,particleAnimFrameClampVS:yB,particleAnimFrameLoopVS:SB,particleAnimTexVS:xB,particleInputFloatPS:TB,particleInputRgba8PS:wB,particleOutputFloatPS:bB,particleOutputRgba8PS:EB,particleUpdaterAABBPS:AB,particleUpdaterEndPS:CB,particleUpdaterInitPS:PB,particleUpdaterNoRespawnPS:LB,particleUpdaterOnStopPS:DB,particleUpdaterRespawnPS:MB,particleUpdaterSpherePS:IB,particleUpdaterStartPS:RB,particle_billboardVS:OB,particle_blendAddPS:FB,particle_blendMultiplyPS:NB,particle_blendNormalPS:kB,particle_cpuVS:BB,particle_cpu_endVS:UB,particle_customFaceVS:zB,particle_endPS:VB,particle_endVS:GB,particle_halflambertPS:HB,particle_initVS:WB,particle_lambertPS:XB,particle_lightingPS:qB,particle_localShiftVS:$B,particle_meshVS:jB,particle_normalVS:YB,particle_normalMapPS:KB,particle_pointAlongVS:ZB,particle_simulationPS:QB,particle_shaderPS:JB,particle_shaderVS:tU,particle_softPS:eU,particle_softVS:sU,particle_stretchVS:iU,particle_TBNVS:nU,particle_wrapVS:rU};var oU=`\nvarying texCoordsAlphaLife: vec4f;\nvar colorMap: texture_2d<f32>;\nvar colorMapSampler: sampler;\nvar colorParam: texture_2d<f32>;\nvar colorParamSampler: sampler;\nuniform graphSampleSize: f32;\nuniform graphNumSamples: f32;\n#ifndef CAMERAPLANES\n\t#define CAMERAPLANES\n\tuniform camera_params: vec4f;\n#endif\nuniform softening: f32;\nuniform colorMult: f32;\nfn saturate(x: f32) -> f32 {\n\treturn clamp(x, 0.0, 1.0);\n}\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tlet tex: vec4f  = textureSample(colorMap, colorMapSampler, vec2f(input.texCoordsAlphaLife.x, 1.0 - input.texCoordsAlphaLife.y));\n\tvar ramp: vec4f = textureSample(colorParam, colorParamSampler, vec2f(input.texCoordsAlphaLife.w, 0.0));\n\tramp = vec4f(ramp.rgb * uniform.colorMult, ramp.a);\n\tramp.a = ramp.a + input.texCoordsAlphaLife.z;\n\tvar rgb: vec3f = tex.rgb * ramp.rgb;\n\tvar a: f32 = tex.a * ramp.a;\n`;var lU=`\nfn unpack3NFloats(src: f32) -> vec3f {\n\tlet r = fract(src);\n\tlet g = fract(src * 256.0);\n\tlet b = fract(src * 65536.0);\n\treturn vec3f(r, g, b);\n}\nfn saturate(x: f32) -> f32 {\n\treturn clamp(x, 0.0, 1.0);\n}\nstruct TexLerpUnpackResult {\n\tresult: vec4f,\n\tunpacked: vec3f\n}\nfn tex1Dlod_lerp_simple(tex: texture_2d<f32>, texSampler: sampler, tc: vec2f) -> vec4f {\n\tlet tc_next = tc + vec2f(uniform.graphSampleSize);\n\treturn mix( textureSample(tex, texSampler, tc), textureSample(tex, texSampler, tc_next), fract(tc.x * uniform.graphNumSamples) );\n}\nfn tex1Dlod_lerp_unpack(tex: texture_2d<f32>, texSampler: sampler, tc: vec2f) -> TexLerpUnpackResult {\n\tlet tc_next = tc + vec2f(uniform.graphSampleSize);\n\tlet a = textureSampleLevel(tex, texSampler, tc, 0.0);\n\tlet b = textureSampleLevel(tex, texSampler, tc_next, 0.0);\n\tlet c = fract(tc.x * uniform.graphNumSamples);\n\tlet unpackedA = unpack3NFloats(a.w);\n\tlet unpackedB = unpack3NFloats(b.w);\n\tlet w_out = mix(unpackedA, unpackedB, c);\n\treturn TexLerpUnpackResult(mix(a, b, c), w_out);\n}\nstruct RotateResult {\n\trotatedVec: vec2f,\n\tmatrix: mat2x2f\n}\nfn rotateWithMatrix(quadXY: vec2f, pRotation: f32) -> RotateResult {\n\tlet c = cos(pRotation);\n\tlet s = sin(pRotation);\n\tlet m = mat2x2f(vec2f(c, s), vec2f(-s, c));\n\treturn RotateResult(m * quadXY, m);\n}\nfn billboard(InstanceCoords: vec3f, quadXY: vec2f) -> vec3f {\n\tvar pos: vec3f;\n\t#ifdef SCREEN_SPACE\n\t\tpos = vec3f(-1.0, 0.0, 0.0) * quadXY.x + vec3f(0.0, -1.0, 0.0) * quadXY.y;\n\t#else\n\t\tpos = -uniform.matrix_viewInverse[0].xyz * quadXY.x + -uniform.matrix_viewInverse[1].xyz * quadXY.y;\n\t#endif\n\treturn pos;\n}\nfn customFace(InstanceCoords: vec3f, quadXY: vec2f) -> vec3f {\n\tlet pos = uniform.faceTangent * quadXY.x + uniform.faceBinorm * quadXY.y;\n\treturn pos;\n}\nfn safeNormalize(v: vec2f) -> vec2f {\n\tlet l = length(v);\n\treturn select(v, v / l, l > 1e-06);\n}\n@vertex\nfn vertexMain(input: VertexInput) -> VertexOutput {\n\tvar output: VertexOutput;\n\tlet meshLocalPos_in = input.particle_vertexData.xyz;\n\tlet id = floor(input.particle_vertexData.w);\n\tlet rndFactor = fract(sin(id + 1.0 + uniform.seed));\n\tlet rndFactor3 = vec3f(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\n\tlet uv = id / uniform.numParticlesPot;\n\treadInput(uv);\n\t#ifdef LOCAL_SPACE\n\t\tlet modelRotation = mat3x3f(uniform.matrix_model[0].xyz, uniform.matrix_model[1].xyz, uniform.matrix_model[2].xyz);\n\t\tinVel = modelRotation * inVel;\n\t#endif\n\tlet viewRotation = mat3x3f(uniform.matrix_view[0].xyz, uniform.matrix_view[1].xyz, uniform.matrix_view[2].xyz);\n\tlet velocityV = safeNormalize((viewRotation * inVel).xy);\n\tlet particleLifetime = uniform.lifetime;\n\tvar meshLocalPos = meshLocalPos_in;\n\tif (inLife <= 0.0 || inLife > particleLifetime || !inShow) {\n\t\t meshLocalPos = vec3f(0.0);\n\t}\n\tlet quadXY = meshLocalPos.xy;\n\tlet nlife = clamp(inLife / particleLifetime, 0.0, 1.0);\n\tlet lerp_result = tex1Dlod_lerp_unpack(internalTex2, internalTex2Sampler, vec2f(nlife, 0.0));\n\tlet params = lerp_result.result;\n\tlet paramDiv = lerp_result.unpacked;\n\tvar scale = params.y;\n\tlet scaleDiv = paramDiv.x;\n\tlet alphaDiv = paramDiv.z;\n\tscale = scale + (scaleDiv * 2.0 - 1.0) * uniform.scaleDivMult * fract(rndFactor*10000.0);\n\t#ifndef USE_MESH\n\t\toutput.texCoordsAlphaLife = vec4f(quadXY * -0.5 + 0.5, (alphaDiv * 2.0 - 1.0) * uniform.alphaDivMult * fract(rndFactor*1000.0), nlife);\n\t#else\n\t\toutput.texCoordsAlphaLife = vec4f(particle_uv, (alphaDiv * 2.0 - 1.0) * uniform.alphaDivMult * fract(rndFactor*1000.0), nlife);\n\t#endif\n\tvar particlePos = inPos;\n\tvar particlePosMoved = vec3f(0.0);\n\tvar rotMatrix: mat2x2f;\n`;var hU=`\n\tlet animFrame: f32 = min(floor(input.texCoordsAlphaLife.w * uniform.animTexParams.y) + uniform.animTexParams.x, uniform.animTexParams.z);\n`;var cU=`\n\tlet animFrame: f32 = floor((output.texCoordsAlphaLife.w * uniform.animTexParams.y + uniform.animTexParams.x) % (uniform.animTexParams.z + 1.0));\t\n`;var dU=`\n\tvar animationIndex: f32;\n\tif (uniform.animTexIndexParams.y == 1.0) {\n\t\tanimationIndex = floor((uniform.animTexParams.w + 1.0) * rndFactor3.z) * (uniform.animTexParams.z + 1.0);\n\t} else {\n\t\tanimationIndex = uniform.animTexIndexParams.x * (uniform.animTexParams.z + 1.0);\n\t}\n\tvar atlasX: f32 = (animationIndex + animFrame) * uniform.animTexTilesParams.x;\n\tlet atlasY: f32 = 1.0 - floor(atlasX + 1.0) * uniform.animTexTilesParams.y;\n\tatlasX = fract(atlasX);\n\tlet current_tcal_xy = output.texCoordsAlphaLife.xy;\n\tlet scaled_tcal_xy = current_tcal_xy * uniform.animTexTilesParams.xy;\n\tlet final_tcal_xy = scaled_tcal_xy + vec2f(atlasX, atlasY);\n\toutput.texCoordsAlphaLife = vec4f(final_tcal_xy, output.texCoordsAlphaLife.z, output.texCoordsAlphaLife.w);\n`;var uU=`\nfn readInput(uv: f32) {\n\tlet tex: vec4f = textureSampleLevel(particleTexIN, particleTexINSampler, vec2f(uv, 0.25), 0.0);\n\tlet tex2: vec4f = textureSampleLevel(particleTexIN, particleTexINSampler, vec2f(uv, 0.75), 0.0);\n\tinPos = tex.xyz;\n\tinVel = tex2.xyz;\n\tinAngle = abs(tex.w) - 1000.0;\n\tinShow = tex.w >= 0.0;\n\tinLife = tex2.w;\n}\n`;var fU=`\nconst PI2: f32 = 6.283185307179586;\nuniform inBoundsSize: vec3f;\nuniform inBoundsCenter: vec3f;\nuniform maxVel: f32;\nfn decodeFloatRG(rg: vec2f) -> f32 {\n\treturn rg.y * (1.0 / 255.0) + rg.x;\n}\nfn decodeFloatRGBA( rgba: vec4f ) -> f32 {\n\treturn dot(rgba, vec4f(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n}\nfn readInput(uv: f32) {\n\tlet tex0 = textureSampleLevel(particleTexIN, particleTexINSampler, vec2f(uv, 0.125), 0.0);\n\tlet tex1 = textureSampleLevel(particleTexIN, particleTexINSampler, vec2f(uv, 0.375), 0.0);\n\tlet tex2 = textureSampleLevel(particleTexIN, particleTexINSampler, vec2f(uv, 0.625), 0.0);\n\tlet tex3 = textureSampleLevel(particleTexIN, particleTexINSampler, vec2f(uv, 0.875), 0.0);\n\tinPos = vec3f(decodeFloatRG(tex0.rg), decodeFloatRG(tex0.ba), decodeFloatRG(tex1.rg));\n\tinPos = (inPos - vec3f(0.5)) * uniform.inBoundsSize + uniform.inBoundsCenter;\n\tinVel = tex2.xyz;\n\tinVel = (inVel - vec3f(0.5)) * uniform.maxVel;\n\tinAngle = decodeFloatRG(tex1.ba) * PI2;\n\tinShow = tex2.a > 0.5;\n\tlet life_decoded = decodeFloatRGBA(tex3);\n\tlet maxNegLife = max(uniform.lifetime, (uniform.numParticles - 1.0) * (uniform.rate + uniform.rateDiv));\n\tlet maxPosLife = uniform.lifetime + 1.0;\n\tinLife = life_decoded * (maxNegLife + maxPosLife) - maxNegLife;\n}`;var pU=`\nfn getOutput() -> vec4f {\n\tif (pcPosition.y < 1.0) {\n\t\treturn vec4f(outPos, (outAngle + 1000.0) * visMode);\n\t} else {\n\t\treturn vec4f(outVel, outLife);\n\t}\n}\n`;var mU=`\nuniform outBoundsMul: vec3f;\nuniform outBoundsAdd: vec3f;\nfn encodeFloatRG( v: f32 ) -> vec2f {\n\tvar enc: vec2f = vec2f(1.0, 255.0) * v;\n\tenc = fract(enc);\n\tenc = enc - enc.yy * (1.0 / 255.0);\n\treturn enc;\n}\nfn encodeFloatRGBA( v: f32 ) -> vec4f {\n\tlet factors = vec4f(1.0, 255.0, 65025.0, 160581375.0);\n\tvar enc: vec4f = factors * v;\n\tenc = fract(enc);\n\tenc = enc - enc.yzww * vec4f(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n\treturn enc;\n}\nfn getOutput() -> vec4f {\n\toutPos = outPos * uniform.outBoundsMul + uniform.outBoundsAdd;\n\toutAngle = fract(outAngle / PI2);\n\toutVel = (outVel / uniform.maxVel) + vec3f(0.5);\n\tlet maxNegLife = max(uniform.lifetime, (uniform.numParticles - 1.0) * (uniform.rate + uniform.rateDiv));\n\tlet maxPosLife = uniform.lifetime + 1.0;\n\toutLife = (outLife + maxNegLife) / (maxNegLife + maxPosLife);\n\tif (pcPosition.y < 1.0) {\n\t\treturn vec4f(encodeFloatRG(outPos.x), encodeFloatRG(outPos.y));\n\t} else if (pcPosition.y < 2.0) {\n\t\treturn vec4f(encodeFloatRG(outPos.z), encodeFloatRG(outAngle));\n\t} else if (pcPosition.y < 3.0) {\n\t\treturn vec4f(outVel, visMode * 0.5 + 0.5);\n\t} else {\n\t\treturn encodeFloatRGBA(outLife);\n\t}\n}\n`;var _U=`\nuniform spawnBounds: mat3x3f;\nuniform spawnPosInnerRatio: vec3f;\nfn calcSpawnPosition(inBounds: vec3f, rndFactor: f32) -> vec3f {\n\tvar pos = inBounds - vec3f(0.5);\n\tlet posAbs = abs(pos);\n\tlet maxComp = max(posAbs.x, max(posAbs.y, posAbs.z));\n\tlet maxPos = vec3f(maxComp);\n\tlet edge = maxPos + (vec3f(0.5) - maxPos) * uniform.spawnPosInnerRatio;\n\tpos.x = edge.x * select(2.0 * pos.x, sign(pos.x), maxPos.x == posAbs.x);\n\tpos.y = edge.y * select(2.0 * pos.y, sign(pos.y), maxPos.y == posAbs.y);\n\tpos.z = edge.z * select(2.0 * pos.z, sign(pos.z), maxPos.z == posAbs.z);\n\t#ifndef LOCAL_SPACE\n\t\treturn uniform.emitterPos + uniform.spawnBounds * pos;\n\t#else\n\t\treturn uniform.spawnBounds * pos;\n\t#endif\n}\nfn addInitialVelocity(localVelocity: ptr<function, vec3f>, inBounds: vec3f) {\n\t*localVelocity = *localVelocity - vec3f(0.0, 0.0, uniform.initialVelocity);\n}\n`;var gU=`\n\toutput.color = getOutput();\n\treturn output;\n}\n`;var vU=`\nvarying vUv0: vec2f;\nvar particleTexIN: texture_2d<f32>;\nvar particleTexINSampler: sampler;\nvar internalTex0: texture_2d<f32>;\nvar internalTex0Sampler: sampler;\nvar internalTex1: texture_2d<f32>;\nvar internalTex1Sampler: sampler;\nvar internalTex2: texture_2d<f32>;\nvar internalTex2Sampler: sampler;\nvar internalTex3: texture_2d<f32>;\nvar internalTex3Sampler: sampler;\nuniform emitterMatrix: mat3x3f;\nuniform emitterMatrixInv: mat3x3f;\nuniform emitterScale: vec3f;\nuniform emitterPos: vec3f;\nuniform frameRandom: vec3f;\nuniform localVelocityDivMult: vec3f;\nuniform velocityDivMult: vec3f;\nuniform delta: f32;\nuniform rate: f32;\nuniform rateDiv: f32;\nuniform lifetime: f32;\nuniform numParticles: f32;\nuniform rotSpeedDivMult: f32;\nuniform radialSpeedDivMult: f32;\nuniform seed: f32;\nuniform startAngle: f32;\nuniform startAngle2: f32;\nuniform initialVelocity: f32;\nuniform graphSampleSize: f32;\nuniform graphNumSamples: f32;\nvar<private> inPos: vec3f;\nvar<private> inVel: vec3f;\nvar<private> inAngle: f32;\nvar<private> inShow: bool;\nvar<private> inLife: f32;\nvar<private> visMode: f32;\nvar<private> outPos: vec3f;\nvar<private> outVel: vec3f;\nvar<private> outAngle: f32;\nvar<private> outShow: bool;\nvar<private> outLife: f32;\n`;var yU=`\n\tif (outLife >= uniform.lifetime) {\n\t\toutLife = outLife - max(uniform.lifetime, (uniform.numParticles - 1.0) * particleRate);\n\t\tvisMode = -1.0;\n\t}\n`;var SU=`\n\tvisMode = select(visMode, -1.0, outLife < 0.0);\n`;var xU=`\n\tif (outLife >= uniform.lifetime) {\n\t\tlet subtractAmount = max(uniform.lifetime, (uniform.numParticles - 1.0) * particleRate);\n\t\toutLife = outLife - subtractAmount;\n\t\tvisMode = 1.0;\n\t}\n\tvisMode = select(visMode, 1.0, outLife < 0.0);\n`;var TU=`\nuniform spawnBoundsSphere: f32;\nuniform spawnBoundsSphereInnerRatio: f32;\nfn calcSpawnPosition(inBounds: vec3f, rndFactor: f32) -> vec3f {\n\tlet rnd4: f32 = fract(rndFactor * 1000.0);\n\tlet norm: vec3f = normalize(inBounds.xyz - vec3f(0.5));\n\tlet r: f32 = rnd4 * (1.0 - uniform.spawnBoundsSphereInnerRatio) + uniform.spawnBoundsSphereInnerRatio;\n\t#ifndef LOCAL_SPACE\n\t\treturn uniform.emitterPos + norm * r * uniform.spawnBoundsSphere;\n\t#else\n\t\treturn norm * r * uniform.spawnBoundsSphere;\n\t#endif\n}\nfn addInitialVelocity(localVelocity: ptr<function, vec3f>, inBounds: vec3f) {\n\tlet initialVelOffset: vec3f = normalize(inBounds - vec3f(0.5)) * uniform.initialVelocity;\n\t*localVelocity = *localVelocity + initialVelOffset;\n}\n`;var wU=`\nfn saturate(x: f32) -> f32 {\n\treturn clamp(x, 0.0, 1.0);\n}\nfn unpack3NFloats(src: f32) -> vec3f {\n\tlet r = fract(src);\n\tlet g = fract(src * 256.0);\n\tlet b = fract(src * 65536.0);\n\treturn vec3f(r, g, b);\n}\nstruct TexLerpUnpackResult {\n\tresult: vec3f,\n\tunpacked: vec3f\n}\nfn tex1Dlod_lerp(tex: texture_2d<f32>, texSampler: sampler, tc: vec2f) -> TexLerpUnpackResult {\n\tlet tc_next = tc + vec2f(uniform.graphSampleSize);\n\tlet a = textureSampleLevel(tex, texSampler, tc, 0.0);\n\tlet b = textureSampleLevel(tex, texSampler, tc_next, 0.0);\n\tlet c = fract(tc.x * uniform.graphNumSamples);\n\tlet unpackedA = unpack3NFloats(a.w);\n\tlet unpackedB = unpack3NFloats(b.w);\n\tlet w_out = mix(unpackedA, unpackedB, c);\n\treturn TexLerpUnpackResult(mix(a.xyz, b.xyz, c), w_out);\n}\nconst HASHSCALE4: vec4f = vec4f(1031.0, 0.1030, 0.0973, 0.1099);\nfn hash41(p: f32) -> vec4f {\n\tvar p4 = fract(vec4f(p) * HASHSCALE4);\n\tp4 = p4 + dot(p4, p4.wzxy + 19.19);\n\treturn fract(vec4f((p4.x + p4.y)*p4.z, (p4.x + p4.z)*p4.y, (p4.y + p4.z)*p4.w, (p4.z + p4.w)*p4.x));\n}\n@fragment\nfn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tif (pcPosition.x > uniform.numParticles) {\n\t\tdiscard;\n\t\treturn output;\n\t}\n\treadInput(input.vUv0.x);\n\tvisMode = select(-1.0, 1.0, inShow);\n\tlet rndFactor = hash41(pcPosition.x + uniform.seed);\n\tlet particleRate = uniform.rate + uniform.rateDiv * rndFactor.x;\n\toutLife = inLife + uniform.delta;\n\tlet nlife = clamp(outLife / uniform.lifetime, 0.0, 1.0);\n\tlet lerpResult0 = tex1Dlod_lerp(internalTex0, internalTex0Sampler, vec2f(nlife, 0.0));\n\tvar localVelocity = lerpResult0.result;\n\tlet localVelocityDiv = lerpResult0.unpacked;\n\tlet lerpResult1 = tex1Dlod_lerp(internalTex1, internalTex1Sampler, vec2f(nlife, 0.0));\n\tvar velocity = lerpResult1.result;\n\tlet velocityDiv = lerpResult1.unpacked;\n\tlet lerpResult2 = tex1Dlod_lerp(internalTex2, internalTex2Sampler, vec2f(nlife, 0.0));\n\tlet params = lerpResult2.result;\n\tlet paramDiv = lerpResult2.unpacked;\n\tvar rotSpeed = params.x;\n\tlet rotSpeedDiv = paramDiv.y;\n\tlet lerpResult3 = tex1Dlod_lerp(internalTex3, internalTex3Sampler, vec2f(nlife, 0.0));\n\tlet radialParams = lerpResult3.result;\n\tlet radialParamDiv = lerpResult3.unpacked;\n\tlet radialSpeed = radialParams.x;\n\tlet radialSpeedDiv = radialParamDiv.y;\n\tlet respawn = inLife <= 0.0 || outLife >= uniform.lifetime;\n\tinPos = select(inPos, calcSpawnPosition(rndFactor.xyz, rndFactor.x), respawn);\n\tinAngle = select(inAngle, mix(uniform.startAngle, uniform.startAngle2, rndFactor.x), respawn);\n\t#ifndef LOCAL_SPACE\n\t\tvar radialVel: vec3f = inPos - uniform.emitterPos;\n\t#else\n\t\tvar radialVel: vec3f = inPos;\n\t#endif\n\tradialVel = select(vec3f(0.0), radialSpeed * normalize(radialVel), dot(radialVel, radialVel) > 1.0E-8);\n\tradialVel = radialVel + (radialSpeedDiv * vec3f(2.0) - vec3f(1.0)) * uniform.radialSpeedDivMult * rndFactor.xyz;\n\tlocalVelocity = localVelocity + (localVelocityDiv * vec3f(2.0) - vec3f(1.0)) * uniform.localVelocityDivMult * rndFactor.xyz;\n\tvelocity = velocity + (velocityDiv * vec3f(2.0) - vec3f(1.0)) * uniform.velocityDivMult * rndFactor.xyz;\n\trotSpeed = rotSpeed + (rotSpeedDiv * 2.0 - 1.0) * uniform.rotSpeedDivMult * rndFactor.y;\n\taddInitialVelocity(&localVelocity, rndFactor.xyz);\n\t#ifndef LOCAL_SPACE\n\t\toutVel = uniform.emitterMatrix * localVelocity + (radialVel + velocity) * uniform.emitterScale;\n\t#else\n\t\toutVel = (localVelocity + radialVel) / uniform.emitterScale + uniform.emitterMatrixInv * velocity;\n\t#endif\n\toutPos = inPos + outVel * uniform.delta;\n\toutAngle = inAngle + rotSpeed * uniform.delta;\n`;var bU=`\n\tlet rotationResult = rotateWithMatrix(quadXY, inAngle);\n\tlet rotatedQuadXY = rotationResult.rotatedVec;\n\trotMatrix = rotationResult.matrix;\n\tvar localPos = billboard(particlePos, rotatedQuadXY);\n`;var EU=`\n\tdBlendModeFogFactor = 0.0;\n\trgb = rgb * saturate(gammaCorrectInput(max(a, 0.0)));\n\tif ((rgb.r + rgb.g + rgb.b) < 0.000001) {\n\t\tdiscard;\n\t}\t\n`;var AU=`\n\trgb = mix(vec3f(1.0), rgb, a);\n\tif ((rgb.r + rgb.g + rgb.b) > 2.99) {\n\t\tdiscard;\n\t}\n`;var CU=`\n\tif (a < 0.01) {\n\t\tdiscard;\n\t}\n`;var PU=`\nattribute particle_vertexData: vec4f;\nattribute particle_vertexData2: vec4f;\nattribute particle_vertexData3: vec4f;\nattribute particle_vertexData4: f32;\n#ifndef USE_MESH\n\tattribute particle_vertexData5: vec2f;\n#else\n\tattribute particle_vertexData5: vec4f;\n#endif\nuniform matrix_viewProjection: mat4x4f;\nuniform matrix_model: mat4x4f;\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform matrix_view: mat4x4f;\n#endif\nuniform matrix_normal: mat3x3f;\nuniform matrix_viewInverse: mat4x4f;\nuniform numParticles: f32;\nuniform lifetime: f32;\nuniform stretch: f32;\nuniform seed: f32;\nuniform wrapBounds: vec3f;\nuniform emitterScale: vec3f;\nuniform faceTangent: vec3f;\nuniform faceBinorm: vec3f;\n#ifdef PARTICLE_GPU\n\tvar internalTex0: texture_2d<f32>;\n\tvar internalTex0Sampler: sampler;\n\tvar internalTex1: texture_2d<f32>;\n\tvar internalTex1Sampler: sampler;\n\tvar internalTex2: texture_2d<f32>;\n\tvar internalTex2Sampler: sampler;\n#endif\nuniform emitterPos: vec3f;\nvarying texCoordsAlphaLife: vec4f;\nstruct RotateResult {\n\trotatedVec: vec2f,\n\tmatrix: mat2x2f\n}\nfn rotateWithMatrix(quadXY: vec2f, pRotation: f32) -> RotateResult {\n\tlet c = cos(pRotation);\n\tlet s = sin(pRotation);\n\tlet m = mat2x2f(vec2f(c, s), vec2f(-s, c));\n\treturn RotateResult(m * quadXY, m);\n}\nfn billboard(InstanceCoords: vec3f, quadXY: vec2f) -> vec3f {\n\tlet pos = -uniform.matrix_viewInverse[0].xyz * quadXY.x + -uniform.matrix_viewInverse[1].xyz * quadXY.y;\n\treturn pos;\n}\nfn customFace(InstanceCoords: vec3f, quadXY: vec2f) -> vec3f {\n\tlet pos = uniform.faceTangent * quadXY.x + uniform.faceBinorm * quadXY.y;\n\treturn pos;\n}\nfn safeNormalize(v: vec2f) -> vec2f {\n\tlet l = length(v);\n\treturn select(v, v / l, l > 1e-06);\n}\n@vertex\nfn vertexMain(input: VertexInput) -> VertexOutput {\n\tvar output: VertexOutput;\n\tvar particlePos = input.particle_vertexData.xyz;\n\tlet inPos = particlePos;\n\tlet vertPos = input.particle_vertexData3.xyz;\n\tvar inVel = vec3f(input.particle_vertexData2.w, input.particle_vertexData3.w, input.particle_vertexData5.x);\n\tlet id = floor(input.particle_vertexData4);\n\tlet rndFactor = fract(sin(id + 1.0 + uniform.seed));\n\tlet rndFactor3 = vec3f(rndFactor, fract(rndFactor*10.0), fract(rndFactor*100.0));\n\t#ifdef LOCAL_SPACE\n\t\tlet modelRotation = mat3x3f(uniform.matrix_model[0].xyz, uniform.matrix_model[1].xyz, uniform.matrix_model[2].xyz);\n\t\tinVel = modelRotation * inVel;\n\t#endif\n\tlet velocityV = safeNormalize((mat3x3f(uniform.matrix_view[0].xyz, uniform.matrix_view[1].xyz, uniform.matrix_view[2].xyz) * inVel).xy);\n\tlet quadXY = vertPos.xy;\n\t#ifdef USE_MESH\n\t\toutput.texCoordsAlphaLife = vec4f(input.particle_vertexData5.zw, input.particle_vertexData2.z, input.particle_vertexData.w);\n\t#else\n\t\toutput.texCoordsAlphaLife = vec4f(quadXY * -0.5 + 0.5, input.particle_vertexData2.z, input.particle_vertexData.w);\n\t#endif\n\tvar rotMatrix: mat2x2f;\n\tvar inAngle = input.particle_vertexData2.x;\n\tvar particlePosMoved = vec3f(0.0);\n\tlet meshLocalPos = input.particle_vertexData3.xyz;\n`;var LU=`\n\tlocalPos = localPos * input.particle_vertexData2.y * uniform.emitterScale;\n\tlocalPos = localPos + particlePos;\n\toutput.position = uniform.matrix_viewProjection * vec4f(localPos, 1.0);\n`;var DU=`\n\tlet rotationResult = rotateWithMatrix(quadXY, inAngle);\n\tlet rotatedQuadXY = rotationResult.rotatedVec;\n\trotMatrix = rotationResult.matrix;\n\tvar localPos = customFace(particlePos, rotatedQuadXY);\n`;var MU=`\n\trgb = addFog(rgb);\n\trgb = toneMap(rgb);\n\trgb = gammaCorrectOutput(rgb);\n\toutput.color = vec4f(rgb, a);\n\treturn output;\n}\n`;var IU=`\n\tlocalPos = localPos * scale * uniform.emitterScale;\n\tlocalPos = localPos + particlePos;\n\t#ifdef SCREEN_SPACE\n\t\toutput.position = vec4f(localPos.x, localPos.y, 0.0, 1.0);\n\t#else\n\t\toutput.position = uniform.matrix_viewProjection * vec4f(localPos.xyz, 1.0);\n\t#endif\n`;var RU=`\n\tvar negNormal: vec3f = normal * 0.5 + 0.5;\n\tvar posNormal: vec3f = -normal * 0.5 + 0.5;\n\tnegNormal = negNormal * negNormal;\n\tposNormal = posNormal * posNormal;\n`;var OU=`\nattribute particle_vertexData: vec4f;\n#if defined(USE_MESH)\n\t#if defined(USE_MESH_UV)\n\t\tattribute particle_uv: vec2f;\n\t#else\n\t\tvar<private> particle_uv: vec2f = vec2f(0.0, 0.0);\n\t#endif\n#endif\nuniform matrix_viewProjection: mat4x4f;\nuniform matrix_model: mat4x4f;\nuniform matrix_normal: mat3x3f;\nuniform matrix_viewInverse: mat4x4f;\n#ifndef VIEWMATRIX\n\t#define VIEWMATRIX\n\tuniform matrix_view: mat4x4f;\n#endif\nuniform numParticles: f32;\nuniform numParticlesPot: f32;\nuniform graphSampleSize: f32;\nuniform graphNumSamples: f32;\nuniform stretch: f32;\nuniform wrapBounds: vec3f;\nuniform emitterScale: vec3f;\nuniform emitterPos: vec3f;\nuniform faceTangent: vec3f;\nuniform faceBinorm: vec3f;\nuniform rate: f32;\nuniform rateDiv: f32;\nuniform lifetime: f32;\nuniform deltaRandomnessStatic: f32;\nuniform scaleDivMult: f32;\nuniform alphaDivMult: f32;\nuniform seed: f32;\nuniform delta: f32;\nvar particleTexOUT: texture_2d<f32>;\nvar particleTexOUTSampler: sampler;\nvar particleTexIN: texture_2d<f32>;\nvar particleTexINSampler: sampler;\n#ifdef PARTICLE_GPU\n\tvar internalTex0: texture_2d<f32>;\n\tvar internalTex0Sampler: sampler;\n\tvar internalTex1: texture_2d<f32>;\n\tvar internalTex1Sampler: sampler;\n\tvar internalTex2: texture_2d<f32>;\n\tvar internalTex2Sampler: sampler;\n#endif\n#ifndef CAMERAPLANES\n\t#define CAMERAPLANES\n\tuniform camera_params: vec4f;\n#endif\nvarying texCoordsAlphaLife: vec4f;\nvar<private> inPos: vec3f;\nvar<private> inVel: vec3f;\nvar<private> inAngle: f32;\nvar<private> inShow: bool;\nvar<private> inLife: f32;\n`;var FU=`\n\tvar negNormal: vec3f = max(normal, vec3(0.0));\n\tvar posNormal: vec3f = max(-normal, vec3(0.0));\n`;var NU=`\n\tlet light: vec3f = negNormal.x * uniform.lightCube[0] + posNormal.x * uniform.lightCube[1] +\n\t\t\t\t\t   negNormal.y * uniform.lightCube[2] + posNormal.y * uniform.lightCube[3] +\n\t\t\t\t\t   negNormal.z * uniform.lightCube[4] + posNormal.z * uniform.lightCube[5];\n\trgb = rgb * light;\n`;var kU=`\nparticlePos = (uniform.matrix_model * vec4f(particlePos, 1.0)).xyz;\n`;var BU=`\nvar localPos = meshLocalPos;\nlet rotResultXY = rotateWithMatrix(localPos.xy, inAngle);\nlocalPos = vec3f(rotResultXY.rotatedVec, localPos.z);\nrotMatrix = rotResultXY.matrix;\nlet rotResultYZ = rotateWithMatrix(localPos.yz, inAngle);\nlocalPos = vec3f(localPos.x, rotResultYZ.rotatedVec);\nrotMatrix = rotResultYZ.matrix;\nbillboard(particlePos, quadXY);\n`;var UU=`\noutput.Normal = normalize(localPos + uniform.matrix_viewInverse[2].xyz);\n`;var zU=`\n\tlet sampledNormal: vec4f = textureSample(normalMap, normalMapSampler, vec2f(input.texCoordsAlphaLife.x, 1.0 - input.texCoordsAlphaLife.y));\n\tlet normalMap: vec3f = normalize(sampledNormal.xyz * 2.0 - 1.0);\n\tlet ParticleMat = mat3x3<f32>(ParticleMat0, ParticleMat1, ParticleMat2);\n\tlet normal: vec3f = ParticleMat * normalMap;\n`;var VU=`\n\tinAngle = atan2(velocityV.x, velocityV.y);\n`;var GU=`\n\t#include "particleUpdaterInitPS"\n\t#ifdef PACK8\n\t\t#include "particleInputRgba8PS"\n\t\t#include "particleOutputRgba8PS"\n\t#else\n\t\t#include "particleInputFloatPS"\n\t\t#include "particleOutputFloatPS"\n\t#endif\n\t#ifdef EMITTERSHAPE_BOX\n\t\t#include "particleUpdaterAABBPS"\n\t#else\n\t\t#include "particleUpdaterSpherePS"\n\t#endif\n\t#include "particleUpdaterStartPS"\n\t#ifdef RESPAWN\n\t\t#include "particleUpdaterRespawnPS"\n\t#endif\n\t#ifdef NO_RESPAWN\n\t\t#include "particleUpdaterNoRespawnPS"\n\t#endif\n\t#ifdef ON_STOP\n\t\t#include "particleUpdaterOnStopPS"\n\t#endif\n\t#include "particleUpdaterEndPS"\n`;var HU=`\n\t#if NORMAL != NONE\n\t\t#if NORMAL == VERTEX\n\t\t\tvarying Normal: vec3f;\n\t\t#endif\n\t\t#if NORMAL == MAP\n\t\t\tvarying ParticleMat0: vec3f;\n\t\t\tvarying ParticleMat1: vec3f;\n\t\t\tvarying ParticleMat2: vec3f;\n\t\t#endif\n\t\tuniform lightCube: array<vec3f, 6>;\n\t#endif\n\t#ifdef SOFT\n\t\tvarying vDepth: f32;\n\t\t#include "screenDepthPS"\n\t#endif\n\t#include "gammaPS"\n\t#include "tonemappingPS"\n\t#include "fogPS"\n\t#if NORMAL == MAP\n\t\tvar normalMap: texture_2d<f32>;\n\t\tvar normalMapSampler: sampler;\n\t#endif\n\t#include "particlePS"\n\t#ifdef SOFT\n\t\t#include "particle_softPS"\n\t#endif\n\t#if NORMAL == VERTEX\n\t\tvar normal: vec3f = Normal;\n\t#endif\n\t#if NORMAL == MAP\n\t\t#include "particle_normalMapPS"\n\t#endif\n\t#if NORMAL != NONE\n\t\t#ifdef HALF_LAMBERT\n\t\t\t#include "particle_halflambertPS"\n\t\t#else\n\t\t\t#include "particle_lambertPS"\n\t\t#endif\n\t\t#include "particle_lightingPS"\n\t#endif\n\t#if BLEND == NORMAL\n\t\t#include "particle_blendNormalPS"\n\t#elif BLEND == ADDITIVE\n\t\t#include "particle_blendAddPS"\n\t#elif BLEND == MULTIPLICATIVE\n\t\t#include "particle_blendMultiplyPS"\n\t#endif\n\t#include "particle_endPS"\n`;var WU=`\n\t#ifdef ANIMTEX\n\t\tuniform animTexTilesParams: vec2f;\n\t\tuniform animTexParams: vec4f;\n\t\tuniform animTexIndexParams: vec2f;\n\t#endif\n\t#if NORMAL == MAP\n\t\tvarying ParticleMat0: vec3f;\n\t\tvarying ParticleMat1: vec3f;\n\t\tvarying ParticleMat2: vec3f;\n\t#endif\n\t#if NORMAL == VERTEX\n\t\tvarying Normal: vec3f;\n\t#endif\n\t#ifdef SOFT\n\t\tvarying vDepth: f32;\n\t#endif\n\t#ifdef PARTICLE_GPU\n\t\t#include "particle_initVS"\n\t\t#ifdef PACK8\n\t\t\t#include "particleInputRgba8PS"\n\t\t#else\n\t\t\t#include  "particleInputFloatPS"\n\t\t#endif\n\t\t#ifdef SOFT\n\t\t\t#include "screenDepthPS"\n\t\t#endif\n\t\t#include "particleVS"\n\t#else\n\t\t#ifdef SOFT\n\t\t\t#include "screenDepthPS"\n\t\t#endif\n\t\t#include "particle_cpuVS"\n\t#endif\n\t#ifdef LOCAL_SPACE\n\t\t#include "particle_localShiftVS"\n\t#endif\n\t#ifdef ANIMTEX\n\t\t#ifdef ANIMTEX_LOOP\n\t\t\t#include "particleAnimFrameLoopVS"\n\t\t#else\n\t\t\t#include "particleAnimFrameClampVS"\n\t\t#endif\n\t\t#include "particleAnimTexVS"\n\t#endif\n\t#ifdef PARTICLE_GPU\n\t\t#ifdef WRAP\n\t\t\t#include "particle_wrapVS"\n\t\t#endif\n\t#endif\n\t#ifdef ALIGN_TO_MOTION\n\t\t#include "particle_pointAlongVS"\n\t#endif\n\t#ifdef USE_MESH\n\t\t#include "particle_meshVS"\n\t#else\n\t\t#ifdef CUSTOM_FACE\n\t\t\t#include "particle_customFaceVS"\n\t\t#else\n\t\t\t#include "particle_billboardVS"\n\t\t#endif\n\t#endif\n\t#if NORMAL == VERTEX\n\t\t#include "particle_normalVS"\n\t#endif\n\t#if NORMAL == MAP\n\t\t#include "particle_TBNVS"\n\t#endif\n\t#ifdef STRETCH\n\t\t#include "particle_stretchVS"\n\t#endif\n\t#ifdef PARTICLE_GPU\n\t\t#include "particle_endVS"\n\t#else\n\t\t#include "particle_cpu_endVS"\n\t#endif\n\t#ifdef SOFT\n\t\t#include "particle_softVS"\n\t#endif\n\treturn output;\n}\n`;var XU=`\n\tvar depth: f32 = getLinearScreenDepthFrag();\n\tvar particleDepth: f32 = vDepth;\n\tvar depthDiff: f32 = saturate(abs(particleDepth - depth) * uniform.softening);\n\ta = a * depthDiff;\n`;var qU=`\n\toutput.vDepth = getLinearDepth(localPos);\n`;var $U=`\n\tlet moveDir: vec3f = inVel * uniform.stretch;\n\tvar posPrev: vec3f = particlePos - moveDir;\n\tposPrev = posPrev + particlePosMoved;\n\tlet viewRotationTemp: mat3x3f = mat3x3f(uniform.matrix_view[0].xyz, uniform.matrix_view[1].xyz, uniform.matrix_view[2].xyz);\n\tlet centerToVertexV: vec2f = normalize((viewRotationTemp * localPos).xy);\n\tlet interpolation: f32 = dot(-velocityV, centerToVertexV) * 0.5 + 0.5;\n\tparticlePos = mix(particlePos, posPrev, interpolation);\n`;var jU=`\n\tlet rot3 = mat3x3f(\n\t\tvec3f(rotMatrix[0][0], rotMatrix[1][0], 0.0),\n\t\tvec3f(rotMatrix[0][1], rotMatrix[1][1], 0.0),\n\t\tvec3f(0.0, 0.0, 1.0)\n\t);\n\tlet viewBasis = mat3x3f(\n\t\t-uniform.matrix_viewInverse[0].xyz,\n\t\t-uniform.matrix_viewInverse[1].xyz,\n\t\tuniform.matrix_viewInverse[2].xyz\n\t);\n\tlet tempMat = viewBasis * rot3;\n\toutput.ParticleMat0 = tempMat[0];\n\toutput.ParticleMat1 = tempMat[1];\n\toutput.ParticleMat2 = tempMat[2];\n`;var YU=`\n\tlet origParticlePos: vec3f = particlePos;\n\tparticlePos = particlePos - uniform.matrix_model[3].xyz;\n\tparticlePos = (particlePos % uniform.wrapBounds) - uniform.wrapBounds * 0.5;\n\tparticlePos = particlePos + uniform.matrix_model[3].xyz;\n\tparticlePosMoved = particlePos - origParticlePos;\n`;const KU={particlePS:oU,particleVS:lU,particleAnimFrameClampVS:hU,particleAnimFrameLoopVS:cU,particleAnimTexVS:dU,particleInputFloatPS:uU,particleInputRgba8PS:fU,particleOutputFloatPS:pU,particleOutputRgba8PS:mU,particleUpdaterAABBPS:_U,particleUpdaterEndPS:gU,particleUpdaterInitPS:vU,particleUpdaterNoRespawnPS:yU,particleUpdaterOnStopPS:SU,particleUpdaterRespawnPS:xU,particleUpdaterSpherePS:TU,particleUpdaterStartPS:wU,particle_billboardVS:bU,particle_blendAddPS:EU,particle_blendMultiplyPS:AU,particle_blendNormalPS:CU,particle_cpuVS:PU,particle_cpu_endVS:LU,particle_customFaceVS:DU,particle_endPS:MU,particle_endVS:IU,particle_halflambertPS:RU,particle_initVS:OU,particle_lambertPS:FU,particle_lightingPS:NU,particle_localShiftVS:kU,particle_meshVS:BU,particle_normalVS:UU,particle_normalMapPS:zU,particle_pointAlongVS:VU,particle_simulationPS:GU,particle_shaderPS:HU,particle_shaderVS:WU,particle_softPS:XU,particle_softVS:qU,particle_stretchVS:$U,particle_TBNVS:jU,particle_wrapVS:YU};const ZU=["enabled","autoPlay","numParticles","lifetime","rate","rate2","startAngle","startAngle2","loop","preWarm","lighting","halfLambert","intensity","depthWrite","noFog","depthSoftening","sort","blendType","stretch","alignToMotion","emitterShape","emitterExtents","emitterExtentsInner","emitterRadius","emitterRadiusInner","initialVelocity","wrap","wrapBounds","localSpace","screenSpace","colorMapAsset","normalMapAsset","mesh","meshAsset","renderAsset","orientation","particleNormal","localVelocityGraph","localVelocityGraph2","velocityGraph","velocityGraph2","rotationSpeedGraph","rotationSpeedGraph2","radialSpeedGraph","radialSpeedGraph2","scaleGraph","scaleGraph2","colorGraph","colorGraph2","alphaGraph","alphaGraph2","colorMap","normalMap","animTilesX","animTilesY","animStartFrame","animNumFrames","animNumAnimations","animIndex","randomizeAnimIndex","animSpeed","animLoop","layers"];class QU extends $R{constructor(t){super(t);this.id="particlesystem";this.ComponentType=mB;this.DataType=_B;this.schema=ZU;this.propertyTypes={emitterExtents:"vec3",emitterExtentsInner:"vec3",particleNormal:"vec3",wrapBounds:"vec3",localVelocityGraph:"curveset",localVelocityGraph2:"curveset",velocityGraph:"curveset",velocityGraph2:"curveset",colorGraph:"curveset",colorGraph2:"curveset",alphaGraph:"curve",alphaGraph2:"curve",rotationSpeedGraph:"curve",rotationSpeedGraph2:"curve",radialSpeedGraph:"curve",radialSpeedGraph2:"curve",scaleGraph:"curve",scaleGraph2:"curve"};this.on("beforeremove",this.onBeforeRemove,this);this.app.systems.on("update",this.onUpdate,this);yv.get(t.graphicsDevice,cr).add(aU);yv.get(t.graphicsDevice,dr).add(KU)}initializeComponentData(t,e,s){const i={};s=[];const n=this.propertyTypes;if(e.mesh instanceof qA||typeof e.mesh==="number"){e.meshAsset=e.mesh;delete e.mesh}for(const t in e){if(e.hasOwnProperty(t)){s.push(t);i[t]=e[t]}if(n[t]==="vec3"){if(Array.isArray(i[t])){i[t]=new It(i[t][0],i[t][1],i[t][2])}}else if(n[t]==="curve"){if(!(i[t]instanceof At)){const e=i[t].type;i[t]=new At(i[t].keys);i[t].type=e}}else if(n[t]==="curveset"){if(!(i[t]instanceof Ct)){const e=i[t].type;i[t]=new Ct(i[t].keys);i[t].type=e}}if(i.layers&&Array.isArray(i.layers)){i.layers=i.layers.slice(0)}}super.initializeComponentData(t,i,s)}cloneComponent(t,e){const s=t.particlesystem.data;const i=this.schema;const n={};for(let t=0,e=i.length;t<e;t++){const e=i[t];let r=s[e];if(r instanceof It||r instanceof At||r instanceof Ct){r=r.clone();n[e]=r}else if(e==="layers"){n.layers=s.layers.slice(0)}else{if(r!==null&&r!==undefined){n[e]=r}}}return this.addComponent(e,n)}onUpdate(t){const e=this.store;const s=this.app.stats.particles;const i=this.app.scene.layers;for(let t=0;t<i.layerList.length;t++){i.layerList[t].requiresLightCube=false}for(const n in e){if(e.hasOwnProperty(n)){const r=e[n];const a=r.entity;const o=r.data;if(o.enabled&&a.enabled){const e=a.particlesystem.emitter;if(!e?.meshInstance.visible)continue;if(e.lighting){const t=o.layers;for(let e=0;e<t.length;e++){const s=i.getLayerById(t[e]);if(s){s.requiresLightCube=true}}}if(!o.paused){let i=0;e.simTime+=t;if(e.simTime>=e.fixedTimeStep){i=Math.floor(e.simTime/e.fixedTimeStep);e.simTime-=i*e.fixedTimeStep}if(i){i=Math.min(i,e.maxSubSteps);for(let t=0;t<i;t++){e.addTime(e.fixedTimeStep,false)}s._updatesPerFrame+=i;s._frameTime+=e._addTimeTime;e._addTimeTime=0}e.finishFrame()}}}}}onBeforeRemove(t,e){e.onBeforeRemove()}destroy(){super.destroy();this.app.systems.off("update",this.onUpdate,this)}}class JU extends Pl{constructor(t,e){super();this.skin=t;this.skinInstance=e}}class tz{static{this._skinInstanceCache=new Map}static createCachedSkinInstance(t,e,s){let i=tz.getCachedSkinInstance(t,e);if(!i){i=new Nv(t);i.resolve(e,s);tz.addCachedSkinInstance(t,e,i)}return i}static getCachedSkinInstance(t,e){let s=null;const i=tz._skinInstanceCache.get(e);if(i){const e=i.find((e=>e.skin===t));if(e){e.incRefCount();s=e.skinInstance}}return s}static addCachedSkinInstance(t,e,s){let i=tz._skinInstanceCache.get(e);if(!i){i=[];tz._skinInstanceCache.set(e,i)}let n=i.find((e=>e.skin===t));if(!n){n=new JU(t,s);i.push(n)}n.incRefCount()}static removeCachedSkinInstance(t){if(t){const e=t.rootBone;if(e){const s=tz._skinInstanceCache.get(e);if(s){const i=s.findIndex((e=>e.skinInstance===t));if(i>=0){const n=s[i];n.decRefCount();if(n.refCount===0){s.splice(i,1);if(!s.length){tz._skinInstanceCache.delete(e)}if(t){t.destroy();n.skinInstance=null}}}}}}}}class ez{constructor(t,e,s,i,n){this._evtLoadById=null;this._evtUnloadById=null;this._evtAddById=null;this._evtRemoveById=null;this._evtLoadByUrl=null;this._evtAddByUrl=null;this._evtRemoveByUrl=null;this.propertyName=t;this.parent=e;this._scope=n;this._registry=s;this.id=null;this.url=null;this.asset=null;this._onAssetLoad=i.load;this._onAssetAdd=i.add;this._onAssetRemove=i.remove;this._onAssetUnload=i.unload}set id(t){if(this.url)throw Error("Can't set id and url");this._unbind();this._id=t;this.asset=this._registry.get(this._id);this._bind()}get id(){return this._id}set url(t){if(this.id)throw Error("Can't set id and url");this._unbind();this._url=t;this.asset=this._registry.getByUrl(this._url);this._bind()}get url(){return this._url}_bind(){if(this.id){if(this._onAssetLoad)this._evtLoadById=this._registry.on(`load:${this.id}`,this._onLoad,this);if(this._onAssetAdd)this._evtAddById=this._registry.once(`add:${this.id}`,this._onAdd,this);if(this._onAssetRemove)this._evtRemoveById=this._registry.on(`remove:${this.id}`,this._onRemove,this);if(this._onAssetUnload)this._evtUnloadById=this._registry.on(`unload:${this.id}`,this._onUnload,this)}if(this.url){if(this._onAssetLoad)this._evtLoadByUrl=this._registry.on(`load:url:${this.url}`,this._onLoad,this);if(this._onAssetAdd)this._evtAddByUrl=this._registry.once(`add:url:${this.url}`,this._onAdd,this);if(this._onAssetRemove)this._evtRemoveByUrl=this._registry.on(`remove:url:${this.url}`,this._onRemove,this)}}_unbind(){if(this.id){this._evtLoadById?.off();this._evtLoadById=null;this._evtAddById?.off();this._evtAddById=null;this._evtRemoveById?.off();this._evtRemoveById=null;this._evtUnloadById?.off();this._evtUnloadById=null}if(this.url){this._evtLoadByUrl?.off();this._evtLoadByUrl=null;this._evtAddByUrl?.off();this._evtAddByUrl=null;this._evtRemoveByUrl?.off();this._evtRemoveByUrl=null}}_onLoad(t){this._onAssetLoad.call(this._scope,this.propertyName,this.parent,t)}_onAdd(t){this.asset=t;this._onAssetAdd.call(this._scope,this.propertyName,this.parent,t)}_onRemove(t){this._onAssetRemove.call(this._scope,this.propertyName,this.parent,t);this.asset=null}_onUnload(t){this._onAssetUnload.call(this._scope,this.propertyName,this.parent,t)}}class sz extends qR{constructor(t,e){super(t,e),this._type="asset",this._castShadows=true,this._receiveShadows=true,this._castShadowsLightmap=true,this._lightmapped=false,this._lightmapSizeMultiplier=1,this.isStatic=false,this._batchGroupId=-1,this._layers=[hm],this._renderStyle=c_,this._meshInstances=[],this._customAabb=null,this._area=null,this._materialReferences=[],this._rootBone=null,this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null,this._evtSetMeshes=null;this._assetReference=new ez("asset",this,t.app.assets,{add:this._onRenderAssetAdded,load:this._onRenderAssetLoad,remove:this._onRenderAssetRemove,unload:this._onRenderAssetUnload},this);this._material=t.defaultMaterial;e.on("remove",this.onRemoveChild,this);e.on("removehierarchy",this.onRemoveChild,this);e.on("insert",this.onInsertChild,this);e.on("inserthierarchy",this.onInsertChild,this)}set renderStyle(t){if(this._renderStyle!==t){this._renderStyle=t;sy._prepareRenderStyleForArray(this._meshInstances,t)}}get renderStyle(){return this._renderStyle}set customAabb(t){this._customAabb=t;const e=this._meshInstances;if(e){for(let t=0;t<e.length;t++){e[t].setCustomAabb(this._customAabb)}}}get customAabb(){return this._customAabb}set type(t){if(this._type!==t){this._area=null;this._type=t;this.destroyMeshInstances();if(t!=="asset"){let e=this._material;if(!e||e===this.system.defaultMaterial){e=this._materialReferences[0]&&this._materialReferences[0].asset&&this._materialReferences[0].asset.resource}const s=rB(this.system.app.graphicsDevice,t);this._area=s.area;this.meshInstances=[new sy(s.mesh,e||this.system.defaultMaterial,this.entity)]}}}get type(){return this._type}set meshInstances(t){this.destroyMeshInstances();this._meshInstances=t;if(this._meshInstances){const t=this._meshInstances;for(let e=0;e<t.length;e++){if(!t[e].node){t[e].node=this.entity}t[e].castShadow=this._castShadows;t[e].receiveShadow=this._receiveShadows;t[e].renderStyle=this._renderStyle;t[e].setLightmapped(this._lightmapped);t[e].setCustomAabb(this._customAabb)}if(this.enabled&&this.entity.enabled){this.addToLayers()}}}get meshInstances(){return this._meshInstances}set lightmapped(t){if(t!==this._lightmapped){this._lightmapped=t;const e=this._meshInstances;if(e){for(let s=0;s<e.length;s++){e[s].setLightmapped(t)}}}}get lightmapped(){return this._lightmapped}set castShadows(t){if(this._castShadows!==t){const e=this._meshInstances;if(e){const s=this.layers;const i=this.system.app.scene;if(this._castShadows&&!t){for(let t=0;t<s.length;t++){const s=i.layers.getLayerById(this.layers[t]);if(s){s.removeShadowCasters(e)}}}for(let s=0;s<e.length;s++){e[s].castShadow=t}if(!this._castShadows&&t){for(let t=0;t<s.length;t++){const n=i.layers.getLayerById(s[t]);if(n){n.addShadowCasters(e)}}}}this._castShadows=t}}get castShadows(){return this._castShadows}set receiveShadows(t){if(this._receiveShadows!==t){this._receiveShadows=t;const e=this._meshInstances;if(e){for(let s=0;s<e.length;s++){e[s].receiveShadow=t}}}}get receiveShadows(){return this._receiveShadows}set castShadowsLightmap(t){this._castShadowsLightmap=t}get castShadowsLightmap(){return this._castShadowsLightmap}set lightmapSizeMultiplier(t){this._lightmapSizeMultiplier=t}get lightmapSizeMultiplier(){return this._lightmapSizeMultiplier}set layers(t){const e=this.system.app.scene.layers;let s;if(this._meshInstances){for(let t=0;t<this._layers.length;t++){s=e.getLayerById(this._layers[t]);if(s){s.removeMeshInstances(this._meshInstances)}}}this._layers.length=0;for(let e=0;e<t.length;e++){this._layers[e]=t[e]}if(!this.enabled||!this.entity.enabled||!this._meshInstances)return;for(let t=0;t<this._layers.length;t++){s=e.getLayerById(this._layers[t]);if(s){s.addMeshInstances(this._meshInstances)}}}get layers(){return this._layers}set batchGroupId(t){if(this._batchGroupId!==t){if(this.entity.enabled&&this._batchGroupId>=0){this.system.app.batcher?.remove(Ov.RENDER,this.batchGroupId,this.entity)}if(this.entity.enabled&&t>=0){this.system.app.batcher?.insert(Ov.RENDER,t,this.entity)}if(t<0&&this._batchGroupId>=0&&this.enabled&&this.entity.enabled){this.addToLayers()}this._batchGroupId=t}}get batchGroupId(){return this._batchGroupId}set material(t){if(this._material!==t){this._material=t;if(this._meshInstances&&this._type!=="asset"){for(let e=0;e<this._meshInstances.length;e++){this._meshInstances[e].material=t}}}}get material(){return this._material}set materialAssets(t=[]){if(this._materialReferences.length>t.length){for(let e=t.length;e<this._materialReferences.length;e++){this._materialReferences[e].id=null}this._materialReferences.length=t.length}for(let e=0;e<t.length;e++){if(!this._materialReferences[e]){this._materialReferences.push(new ez(e,this,this.system.app.assets,{add:this._onMaterialAdded,load:this._onMaterialLoad,remove:this._onMaterialRemove,unload:this._onMaterialUnload},this))}if(t[e]){const s=t[e]instanceof qA?t[e].id:t[e];if(this._materialReferences[e].id!==s){this._materialReferences[e].id=s}if(this._materialReferences[e].asset){this._onMaterialAdded(e,this,this._materialReferences[e].asset)}}else{this._materialReferences[e].id=null;if(this._meshInstances[e]){this._meshInstances[e].material=this.system.defaultMaterial}}}}get materialAssets(){return this._materialReferences.map((t=>t.id))}set asset(t){const e=t instanceof qA?t.id:t;if(this._assetReference.id===e)return;if(this._assetReference.asset&&this._assetReference.asset.resource){this._onRenderAssetRemove()}this._assetReference.id=e;if(this._assetReference.asset){this._onRenderAssetAdded()}}get asset(){return this._assetReference.id}assignAsset(t){const e=t instanceof qA?t.id:t;this._assetReference.id=e}set rootBone(t){if(this._rootBone!==t){const e=typeof t==="string";if(this._rootBone&&e&&this._rootBone.getGuid()===t){return}if(this._rootBone){this._clearSkinInstances()}if(t instanceof By){this._rootBone=t}else if(e){this._rootBone=this.system.app.getEntityFromIndex(t)||null;if(!this._rootBone);}else{this._rootBone=null}if(this._rootBone){this._cloneSkinInstances()}}}get rootBone(){return this._rootBone}destroyMeshInstances(){const t=this._meshInstances;if(t){this.removeFromLayers();this._clearSkinInstances();for(let e=0;e<t.length;e++){t[e].destroy()}this._meshInstances.length=0}}addToLayers(){const t=this.system.app.scene.layers;for(let e=0;e<this._layers.length;e++){const s=t.getLayerById(this._layers[e]);if(s){s.addMeshInstances(this._meshInstances)}}}removeFromLayers(){if(this._meshInstances&&this._meshInstances.length){const t=this.system.app.scene.layers;for(let e=0;e<this._layers.length;e++){const s=t.getLayerById(this._layers[e]);if(s){s.removeMeshInstances(this._meshInstances)}}}}onRemoveChild(){this.removeFromLayers()}onInsertChild(){if(this._meshInstances&&this.enabled&&this.entity.enabled){this.addToLayers()}}onRemove(){this.destroyMeshInstances();this.asset=null;this.materialAsset=null;this._assetReference.id=null;for(let t=0;t<this._materialReferences.length;t++){this._materialReferences[t].id=null}this.entity.off("remove",this.onRemoveChild,this);this.entity.off("insert",this.onInsertChild,this)}onLayersChanged(t,e){this.addToLayers();t.off("add",this.onLayerAdded,this);t.off("remove",this.onLayerRemoved,this);e.on("add",this.onLayerAdded,this);e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){const e=this.layers.indexOf(t.id);if(e<0)return;t.addMeshInstances(this._meshInstances)}onLayerRemoved(t){const e=this.layers.indexOf(t.id);if(e<0)return;t.removeMeshInstances(this._meshInstances)}onEnable(){const t=this.system.app;const e=t.scene;const s=e.layers;if(this._rootBone){this._cloneSkinInstances()}this._evtLayersChanged=e.on("set:layers",this.onLayersChanged,this);if(s){this._evtLayerAdded=s.on("add",this.onLayerAdded,this);this._evtLayerRemoved=s.on("remove",this.onLayerRemoved,this)}const i=this._type==="asset";if(this._meshInstances&&this._meshInstances.length){this.addToLayers()}else if(i&&this.asset){this._onRenderAssetAdded()}for(let t=0;t<this._materialReferences.length;t++){if(this._materialReferences[t].asset){this.system.app.assets.load(this._materialReferences[t].asset)}}if(this._batchGroupId>=0){t.batcher?.insert(Ov.RENDER,this.batchGroupId,this.entity)}}onDisable(){const t=this.system.app;const e=t.scene;const s=e.layers;this._evtLayersChanged?.off();this._evtLayersChanged=null;if(this._rootBone){this._clearSkinInstances()}if(s){this._evtLayerAdded?.off();this._evtLayerAdded=null;this._evtLayerRemoved?.off();this._evtLayerRemoved=null}if(this._batchGroupId>=0){t.batcher?.remove(Ov.RENDER,this.batchGroupId,this.entity)}this.removeFromLayers()}hide(){if(this._meshInstances){for(let t=0;t<this._meshInstances.length;t++){this._meshInstances[t].visible=false}}}show(){if(this._meshInstances){for(let t=0;t<this._meshInstances.length;t++){this._meshInstances[t].visible=true}}}_onRenderAssetAdded(){if(!this._assetReference.asset)return;if(this._assetReference.asset.resource){this._onRenderAssetLoad()}else if(this.enabled&&this.entity.enabled){this.system.app.assets.load(this._assetReference.asset)}}_onRenderAssetLoad(){this.destroyMeshInstances();if(this._assetReference.asset){const t=this._assetReference.asset.resource;this._evtSetMeshes?.off();this._evtSetMeshes=t.on("set:meshes",this._onSetMeshes,this);if(t.meshes){this._onSetMeshes(t.meshes)}}}_onSetMeshes(t){this._cloneMeshes(t)}_clearSkinInstances(){for(let t=0;t<this._meshInstances.length;t++){const e=this._meshInstances[t];tz.removeCachedSkinInstance(e.skinInstance);e.skinInstance=null}}_cloneSkinInstances(){if(this._meshInstances.length&&this._rootBone instanceof By){for(let t=0;t<this._meshInstances.length;t++){const e=this._meshInstances[t];const s=e.mesh;if(s.skin&&!e.skinInstance){e.skinInstance=tz.createCachedSkinInstance(s.skin,this._rootBone,this.entity)}}}}_cloneMeshes(t){if(t&&t.length){const e=[];for(let s=0;s<t.length;s++){const i=t[s];const n=this._materialReferences[s]&&this._materialReferences[s].asset&&this._materialReferences[s].asset.resource;const r=new sy(i,n||this.system.defaultMaterial,this.entity);e.push(r);if(i.morph){r.morphInstance=new Qx(i.morph)}}this.meshInstances=e;this._cloneSkinInstances()}}_onRenderAssetUnload(){if(this._type==="asset"){this.destroyMeshInstances()}}_onRenderAssetRemove(){this._evtSetMeshes?.off();this._evtSetMeshes=null;this._onRenderAssetUnload()}_onMaterialAdded(t,e,s){if(s.resource){this._onMaterialLoad(t,e,s)}else{if(this.enabled&&this.entity.enabled){this.system.app.assets.load(s)}}}_updateMainMaterial(t,e){if(t===0){this.material=e}}_onMaterialLoad(t,e,s){if(this._meshInstances[t]){this._meshInstances[t].material=s.resource}this._updateMainMaterial(t,s.resource)}_onMaterialRemove(t,e,s){if(this._meshInstances[t]){this._meshInstances[t].material=this.system.defaultMaterial}this._updateMainMaterial(t,this.system.defaultMaterial)}_onMaterialUnload(t,e,s){if(this._meshInstances[t]){this._meshInstances[t].material=this.system.defaultMaterial}this._updateMainMaterial(t,this.system.defaultMaterial)}resolveDuplicatedEntityReferenceProperties(t,e){if(t.rootBone){this.rootBone=e[t.rootBone.getGuid()]}}}class iz{constructor(){this.enabled=true}}const nz=["enabled"];const rz=["material","meshInstances","asset","materialAssets","castShadows","receiveShadows","castShadowsLightmap","lightmapped","lightmapSizeMultiplier","renderStyle","type","layers","isStatic","batchGroupId","rootBone"];class az extends $R{constructor(t){super(t);this.id="render";this.ComponentType=sz;this.DataType=iz;this.schema=nz;this.defaultMaterial=Hv(t.graphicsDevice);this.on("beforeremove",this.onRemove,this)}initializeComponentData(t,e,s){if(e.batchGroupId===null||e.batchGroupId===undefined){e.batchGroupId=-1}if(e.layers&&e.layers.length){e.layers=e.layers.slice(0)}for(let s=0;s<rz.length;s++){if(e.hasOwnProperty(rz[s])){t[rz[s]]=e[rz[s]]}}if(e.aabbCenter&&e.aabbHalfExtents){t.customAabb=new jt(new It(e.aabbCenter),new It(e.aabbHalfExtents))}super.initializeComponentData(t,e,nz)}cloneComponent(t,e){const s={};for(let e=0;e<rz.length;e++){s[rz[e]]=t.render[rz[e]]}s.enabled=t.render.enabled;delete s.meshInstances;const i=this.addComponent(e,s);const n=t.render.meshInstances;const r=n.map((t=>t.mesh));i._onSetMeshes(r);for(let t=0;t<n.length;t++){i.meshInstances[t].material=n[t].material}if(t.render.customAabb){i.customAabb=t.render.customAabb.clone()}return i}onRemove(t,e){e.onRemove()}}qR._buildAccessors(sz.prototype,nz);class oz{constructor(t,e){this._pool=[];this._count=0;this._constructor=t;this._resize(e)}_resize(t){if(t>this._pool.length){for(let e=this._pool.length;e<t;e++){this._pool[e]=new this._constructor}}}allocate(){if(this._count>=this._pool.length){this._resize(this._pool.length*2)}return this._pool[this._count++]}freeAll(){this._count=0}}let lz;let hz,cz,dz;const uz=new Gt;const fz=new Gt;const pz=new It;class mz extends qR{static{this.EVENT_CONTACT="contact"}static{this.EVENT_COLLISIONSTART="collisionstart"}static{this.EVENT_COLLISIONEND="collisionend"}static{this.EVENT_TRIGGERENTER="triggerenter"}static{this.EVENT_TRIGGERLEAVE="triggerleave"}static{this.order=-1}static onLibraryLoaded(){if(typeof Ammo!=="undefined"){lz=new Ammo.btTransform;hz=new Ammo.btVector3;cz=new Ammo.btVector3;dz=new Ammo.btQuaternion}}static onAppDestroy(){Ammo.destroy(lz);Ammo.destroy(hz);Ammo.destroy(cz);Ammo.destroy(dz);lz=null;hz=null;cz=null;dz=null}set angularDamping(t){if(this._angularDamping!==t){this._angularDamping=t;if(this._body){this._body.setDamping(this._linearDamping,t)}}}get angularDamping(){return this._angularDamping}set angularFactor(t){if(!this._angularFactor.equals(t)){this._angularFactor.copy(t);if(this._body&&this._type===MF){hz.setValue(t.x,t.y,t.z);this._body.setAngularFactor(hz)}}}get angularFactor(){return this._angularFactor}set angularVelocity(t){if(this._body&&this._type===MF){this._body.activate();hz.setValue(t.x,t.y,t.z);this._body.setAngularVelocity(hz);this._angularVelocity.copy(t)}}get angularVelocity(){if(this._body&&this._type===MF){const t=this._body.getAngularVelocity();this._angularVelocity.set(t.x(),t.y(),t.z())}return this._angularVelocity}set body(t){if(this._body!==t){this._body=t;if(t&&this._simulationEnabled){t.activate()}}}get body(){return this._body}set friction(t){if(this._friction!==t){this._friction=t;if(this._body){this._body.setFriction(t)}}}get friction(){return this._friction}set group(t){if(this._group!==t){this._group=t;if(this.enabled&&this.entity.enabled){this.disableSimulation();this.enableSimulation()}}}get group(){return this._group}set linearDamping(t){if(this._linearDamping!==t){this._linearDamping=t;if(this._body){this._body.setDamping(t,this._angularDamping)}}}get linearDamping(){return this._linearDamping}set linearFactor(t){if(!this._linearFactor.equals(t)){this._linearFactor.copy(t);if(this._body&&this._type===MF){hz.setValue(t.x,t.y,t.z);this._body.setLinearFactor(hz)}}}get linearFactor(){return this._linearFactor}set linearVelocity(t){if(this._body&&this._type===MF){this._body.activate();hz.setValue(t.x,t.y,t.z);this._body.setLinearVelocity(hz);this._linearVelocity.copy(t)}}get linearVelocity(){if(this._body&&this._type===MF){const t=this._body.getLinearVelocity();this._linearVelocity.set(t.x(),t.y(),t.z())}return this._linearVelocity}set mask(t){if(this._mask!==t){this._mask=t;if(this.enabled&&this.entity.enabled){this.disableSimulation();this.enableSimulation()}}}get mask(){return this._mask}set mass(t){if(this._mass!==t){this._mass=t;if(this._body&&this._type===MF){const e=this.enabled&&this.entity.enabled;if(e){this.disableSimulation()}this._body.getCollisionShape().calculateLocalInertia(t,hz);this._body.setMassProps(t,hz);this._body.updateInertiaTensor();if(e){this.enableSimulation()}}}}get mass(){return this._mass}set restitution(t){if(this._restitution!==t){this._restitution=t;if(this._body){this._body.setRestitution(t)}}}get restitution(){return this._restitution}set rollingFriction(t){if(this._rollingFriction!==t){this._rollingFriction=t;if(this._body){this._body.setRollingFriction(t)}}}get rollingFriction(){return this._rollingFriction}set type(t){if(this._type!==t){this._type=t;this.disableSimulation();switch(t){case MF:this._group=HF;this._mask=rN;break;case IF:this._group=XF;this._mask=rN;break;case DF:default:this._group=WF;this._mask=oN;break}this.createBody()}}get type(){return this._type}createBody(){const t=this.entity;let e;if(t.collision){e=t.collision.shape;if(t.trigger){t.trigger.destroy();delete t.trigger}}if(e){if(this._body){this.system.removeBody(this._body);this.system.destroyBody(this._body);this._body=null}const s=this._type===MF?this._mass:0;this._getEntityTransform(lz);const i=this.system.createBody(s,e,lz);i.setRestitution(this._restitution);i.setFriction(this._friction);i.setRollingFriction(this._rollingFriction);i.setDamping(this._linearDamping,this._angularDamping);if(this._type===MF){const t=this._linearFactor;hz.setValue(t.x,t.y,t.z);i.setLinearFactor(hz);const e=this._angularFactor;hz.setValue(e.x,e.y,e.z);i.setAngularFactor(hz)}else if(this._type===IF){i.setCollisionFlags(i.getCollisionFlags()|OF);i.setActivationState(UF)}i.entity=t;this.body=i;if(this.enabled&&t.enabled){this.enableSimulation()}}}isActive(){return this._body?this._body.isActive():false}activate(){if(this._body){this._body.activate()}}enableSimulation(){const t=this.entity;if(t.collision&&t.collision.enabled&&!this._simulationEnabled){const e=this._body;if(e){this.system.addBody(e,this._group,this._mask);switch(this._type){case MF:this.system._dynamic.push(this);e.forceActivationState(NF);this.syncEntityToBody();break;case IF:this.system._kinematic.push(this);e.forceActivationState(UF);break;case DF:e.forceActivationState(NF);this.syncEntityToBody();break}if(t.collision.type==="compound"){this.system._compounds.push(t.collision)}e.activate();this._simulationEnabled=true}}}disableSimulation(){const t=this._body;if(t&&this._simulationEnabled){const e=this.system;let s=e._compounds.indexOf(this.entity.collision);if(s>-1){e._compounds.splice(s,1)}s=e._dynamic.indexOf(this);if(s>-1){e._dynamic.splice(s,1)}s=e._kinematic.indexOf(this);if(s>-1){e._kinematic.splice(s,1)}e.removeBody(t);t.forceActivationState(zF);this._simulationEnabled=false}}applyForce(t,e,s,i,n,r){const a=this._body;if(a){a.activate();if(t instanceof It){hz.setValue(t.x,t.y,t.z)}else{hz.setValue(t,e,s)}if(e instanceof It){cz.setValue(e.x,e.y,e.z)}else if(i!==undefined){cz.setValue(i,n,r)}else{cz.setValue(0,0,0)}a.applyForce(hz,cz)}}applyTorque(t,e,s){const i=this._body;if(i){i.activate();if(t instanceof It){hz.setValue(t.x,t.y,t.z)}else{hz.setValue(t,e,s)}i.applyTorque(hz)}}applyImpulse(t,e,s,i,n,r){const a=this._body;if(a){a.activate();if(t instanceof It){hz.setValue(t.x,t.y,t.z)}else{hz.setValue(t,e,s)}if(e instanceof It){cz.setValue(e.x,e.y,e.z)}else if(i!==undefined){cz.setValue(i,n,r)}else{cz.setValue(0,0,0)}a.applyImpulse(hz,cz)}}applyTorqueImpulse(t,e,s){const i=this._body;if(i){i.activate();if(t instanceof It){hz.setValue(t.x,t.y,t.z)}else{hz.setValue(t,e,s)}i.applyTorqueImpulse(hz)}}isStatic(){return this._type===DF}isStaticOrKinematic(){return this._type===DF||this._type===IF}isKinematic(){return this._type===IF}_getEntityTransform(t){const e=this.entity;const s=e.collision;if(s){const t=s.getShapePosition();const e=s.getShapeRotation();hz.setValue(t.x,t.y,t.z);dz.setValue(e.x,e.y,e.z,e.w)}else{const t=e.getPosition();const s=e.getRotation();hz.setValue(t.x,t.y,t.z);dz.setValue(s.x,s.y,s.z,s.w)}t.setOrigin(hz);t.setRotation(dz)}syncEntityToBody(){const t=this._body;if(t){this._getEntityTransform(lz);t.setWorldTransform(lz);if(this._type===IF){const e=t.getMotionState();if(e){e.setWorldTransform(lz)}}t.activate()}}_updateDynamic(){const t=this._body;if(t.isActive()){const e=t.getMotionState();if(e){const t=this.entity;e.getWorldTransform(lz);const s=lz.getOrigin();const i=lz.getRotation();const n=t.collision;if(n&&n._hasOffset){const e=n.data.linearOffset;const r=n.data.angularOffset;const a=fz.copy(r).invert();const o=uz.set(i.x(),i.y(),i.z(),i.w()).mul(a);o.transformVector(e,pz);t.setPosition(s.x()-pz.x,s.y()-pz.y,s.z()-pz.z);t.setRotation(o)}else{t.setPosition(s.x(),s.y(),s.z());t.setRotation(i.x(),i.y(),i.z(),i.w())}}}}_updateKinematic(){const t=this._body.getMotionState();if(t){this._getEntityTransform(lz);t.setWorldTransform(lz)}}teleport(t,e,s,i,n,r){if(t instanceof It){this.entity.setPosition(t)}else{this.entity.setPosition(t,e,s)}if(e instanceof Gt){this.entity.setRotation(e)}else if(e instanceof It){this.entity.setEulerAngles(e)}else if(i!==undefined){this.entity.setEulerAngles(i,n,r)}this.syncEntityToBody()}onEnable(){if(!this._body){this.createBody()}this.enableSimulation()}onDisable(){this.disableSimulation()}constructor(...t){super(...t),this._angularDamping=0,this._angularFactor=new It(1,1,1),this._angularVelocity=new It,this._body=null,this._friction=.5,this._group=WF,this._linearDamping=0,this._linearFactor=new It(1,1,1),this._linearVelocity=new It,this._mask=oN,this._mass=1,this._restitution=0,this._rollingFriction=0,this._simulationEnabled=false,this._type=DF}}class _z{constructor(){this.enabled=true}}let gz,vz;class yz{constructor(t,e,s,i){this.entity=t;this.point=e;this.normal=s;this.hitFraction=i}}class Sz{constructor(t,e,s){if(arguments.length!==0){this.a=t;this.b=e;this.impulse=s.impulse;this.localPointA=s.localPoint;this.localPointB=s.localPointOther;this.pointA=s.point;this.pointB=s.pointOther;this.normal=s.normal}else{this.a=null;this.b=null;this.impulse=0;this.localPointA=new It;this.localPointB=new It;this.pointA=new It;this.pointB=new It;this.normal=new It}}}class xz{constructor(t=new It,e=new It,s=new It,i=new It,n=new It,r=0){this.localPoint=t;this.localPointOther=e;this.point=s;this.pointOther=i;this.normal=n;this.impulse=r}}class Tz{constructor(t,e){this.other=t;this.contacts=e}}const wz=["enabled"];class bz extends $R{static{this.EVENT_CONTACT="contact"}constructor(t){super(t),this.maxSubSteps=10,this.fixedTimeStep=1/60,this.gravity=new It(0,-9.81,0),this._gravityFloat32=new Float32Array(3),this._dynamic=[],this._kinematic=[],this._triggers=[],this._compounds=[];this.id="rigidbody";this._stats=t.stats.frame;this.ComponentType=mz;this.DataType=_z;this.contactPointPool=null;this.contactResultPool=null;this.singleContactResultPool=null;this.schema=wz;this.collisions={};this.frameCollisions={};this.on("beforeremove",this.onBeforeRemove,this)}onLibraryLoaded(){if(typeof Ammo!=="undefined"){this.collisionConfiguration=new Ammo.btDefaultCollisionConfiguration;this.dispatcher=new Ammo.btCollisionDispatcher(this.collisionConfiguration);this.overlappingPairCache=new Ammo.btDbvtBroadphase;this.solver=new Ammo.btSequentialImpulseConstraintSolver;this.dynamicsWorld=new Ammo.btDiscreteDynamicsWorld(this.dispatcher,this.overlappingPairCache,this.solver,this.collisionConfiguration);if(this.dynamicsWorld.setInternalTickCallback){const t=Ammo.addFunction(this._checkForCollisions.bind(this),"vif");this.dynamicsWorld.setInternalTickCallback(t)}gz=new Ammo.btVector3;vz=new Ammo.btVector3;mz.onLibraryLoaded();this.contactPointPool=new oz(xz,1);this.contactResultPool=new oz(Tz,1);this.singleContactResultPool=new oz(Sz,1);this.app.systems.on("update",this.onUpdate,this)}else{this.app.systems.off("update",this.onUpdate,this)}}initializeComponentData(t,e,s){const i=["mass","linearDamping","angularDamping","linearFactor","angularFactor","friction","rollingFriction","restitution","type","group","mask"];for(const s of i){if(e.hasOwnProperty(s)){const i=e[s];if(Array.isArray(i)){t[s]=new It(i[0],i[1],i[2])}else{t[s]=i}}}super.initializeComponentData(t,e,["enabled"])}cloneComponent(t,e){const s=t.rigidbody;const i={enabled:s.enabled,mass:s.mass,linearDamping:s.linearDamping,angularDamping:s.angularDamping,linearFactor:[s.linearFactor.x,s.linearFactor.y,s.linearFactor.z],angularFactor:[s.angularFactor.x,s.angularFactor.y,s.angularFactor.z],friction:s.friction,rollingFriction:s.rollingFriction,restitution:s.restitution,type:s.type,group:s.group,mask:s.mask};return this.addComponent(e,i)}onBeforeRemove(t,e){if(e.enabled){e.enabled=false}if(e.body){this.destroyBody(e.body);e.body=null}}addBody(t,e,s){if(e!==undefined&&s!==undefined){this.dynamicsWorld.addRigidBody(t,e,s)}else{this.dynamicsWorld.addRigidBody(t)}}removeBody(t){this.dynamicsWorld.removeRigidBody(t)}createBody(t,e,s){const i=new Ammo.btVector3(0,0,0);if(t!==0){e.calculateLocalInertia(t,i)}const n=new Ammo.btDefaultMotionState(s);const r=new Ammo.btRigidBodyConstructionInfo(t,n,e,i);const a=new Ammo.btRigidBody(r);Ammo.destroy(r);Ammo.destroy(i);return a}destroyBody(t){const e=t.getMotionState();if(e){Ammo.destroy(e)}Ammo.destroy(t)}raycastFirst(t,e,s={}){if(s.filterTags||s.filterCallback){s.sort=true;return this.raycastAll(t,e,s)[0]||null}let i=null;gz.setValue(t.x,t.y,t.z);vz.setValue(e.x,e.y,e.z);const n=new Ammo.ClosestRayResultCallback(gz,vz);if(typeof s.filterCollisionGroup==="number"){n.set_m_collisionFilterGroup(s.filterCollisionGroup)}if(typeof s.filterCollisionMask==="number"){n.set_m_collisionFilterMask(s.filterCollisionMask)}this.dynamicsWorld.rayTest(gz,vz,n);if(n.hasHit()){const t=n.get_m_collisionObject();const e=Ammo.castObject(t,Ammo.btRigidBody);if(e){const t=n.get_m_hitPointWorld();const s=n.get_m_hitNormalWorld();i=new yz(e.entity,new It(t.x(),t.y(),t.z()),new It(s.x(),s.y(),s.z()),n.get_m_closestHitFraction())}}Ammo.destroy(n);return i}raycastAll(t,e,s={}){const i=[];gz.setValue(t.x,t.y,t.z);vz.setValue(e.x,e.y,e.z);const n=new Ammo.AllHitsRayResultCallback(gz,vz);if(typeof s.filterCollisionGroup==="number"){n.set_m_collisionFilterGroup(s.filterCollisionGroup)}if(typeof s.filterCollisionMask==="number"){n.set_m_collisionFilterMask(s.filterCollisionMask)}this.dynamicsWorld.rayTest(gz,vz,n);if(n.hasHit()){const t=n.get_m_collisionObjects();const e=n.get_m_hitPointWorld();const r=n.get_m_hitNormalWorld();const a=n.get_m_hitFractions();const o=t.size();for(let n=0;n<o;n++){const o=Ammo.castObject(t.at(n),Ammo.btRigidBody);if(o&&o.entity){if(s.filterTags&&!o.entity.tags.has(...s.filterTags)||s.filterCallback&&!s.filterCallback(o.entity)){continue}const t=e.at(n);const l=r.at(n);const h=new yz(o.entity,new It(t.x(),t.y(),t.z()),new It(l.x(),l.y(),l.z()),a.at(n));i.push(h)}}if(s.sort){i.sort(((t,e)=>t.hitFraction-e.hitFraction))}}Ammo.destroy(n);return i}_storeCollision(t,e){let s=false;const i=t.getGuid();this.collisions[i]=this.collisions[i]||{others:[],entity:t};if(this.collisions[i].others.indexOf(e)<0){this.collisions[i].others.push(e);s=true}this.frameCollisions[i]=this.frameCollisions[i]||{others:[],entity:t};this.frameCollisions[i].others.push(e);return s}_createContactPointFromAmmo(t){const e=t.get_m_localPointA();const s=t.get_m_localPointB();const i=t.getPositionWorldOnA();const n=t.getPositionWorldOnB();const r=t.get_m_normalWorldOnB();const a=this.contactPointPool.allocate();a.localPoint.set(e.x(),e.y(),e.z());a.localPointOther.set(s.x(),s.y(),s.z());a.point.set(i.x(),i.y(),i.z());a.pointOther.set(n.x(),n.y(),n.z());a.normal.set(r.x(),r.y(),r.z());a.impulse=t.getAppliedImpulse();return a}_createReverseContactPointFromAmmo(t){const e=t.get_m_localPointA();const s=t.get_m_localPointB();const i=t.getPositionWorldOnA();const n=t.getPositionWorldOnB();const r=t.get_m_normalWorldOnB();const a=this.contactPointPool.allocate();a.localPointOther.set(e.x(),e.y(),e.z());a.localPoint.set(s.x(),s.y(),s.z());a.pointOther.set(i.x(),i.y(),i.z());a.point.set(n.x(),n.y(),n.z());a.normal.set(r.x(),r.y(),r.z());a.impulse=t.getAppliedImpulse();return a}_createSingleContactResult(t,e,s){const i=this.singleContactResultPool.allocate();i.a=t;i.b=e;i.localPointA=s.localPoint;i.localPointB=s.localPointOther;i.pointA=s.point;i.pointB=s.pointOther;i.normal=s.normal;i.impulse=s.impulse;return i}_createContactResult(t,e){const s=this.contactResultPool.allocate();s.other=t;s.contacts=e;return s}_cleanOldCollisions(){for(const t in this.collisions){if(this.collisions.hasOwnProperty(t)){const e=this.frameCollisions[t];const s=this.collisions[t];const i=s.entity;const n=i.collision;const r=i.rigidbody;const a=s.others;const o=a.length;let l=o;while(l--){const t=a[l];if(!e||e.others.indexOf(t)<0){a.splice(l,1);if(i.trigger){if(n){n.fire("triggerleave",t)}if(t.rigidbody){t.rigidbody.fire("triggerleave",i)}}else if(!t.trigger){if(r){r.fire("collisionend",t)}if(n){n.fire("collisionend",t)}}}}if(a.length===0){delete this.collisions[t]}}}}_hasContactEvent(t){const e=t.collision;if(e&&(e.hasEvent("collisionstart")||e.hasEvent("collisionend")||e.hasEvent("contact"))){return true}const s=t.rigidbody;return s&&(s.hasEvent("collisionstart")||s.hasEvent("collisionend")||s.hasEvent("contact"))}_checkForCollisions(t,e){const s=Ammo.wrapPointer(t,Ammo.btDynamicsWorld);const i=s.getDispatcher();const n=i.getNumManifolds();this.frameCollisions={};for(let t=0;t<n;t++){const e=i.getManifoldByIndexInternal(t);const s=e.getBody0();const n=e.getBody1();const r=Ammo.castObject(s,Ammo.btRigidBody);const a=Ammo.castObject(n,Ammo.btRigidBody);const o=r.entity;const l=a.entity;if(!o||!l){continue}const h=r.getCollisionFlags();const c=a.getCollisionFlags();const d=e.getNumContacts();const u=[];const f=[];let p;if(d>0){if(h&FF||c&FF){const t=o.collision&&(o.collision.hasEvent("triggerenter")||o.collision.hasEvent("triggerleave"));const e=l.collision&&(l.collision.hasEvent("triggerenter")||l.collision.hasEvent("triggerleave"));const s=o.rigidbody&&(o.rigidbody.hasEvent("triggerenter")||o.rigidbody.hasEvent("triggerleave"));const i=l.rigidbody&&(l.rigidbody.hasEvent("triggerenter")||l.rigidbody.hasEvent("triggerleave"));if(t){p=this._storeCollision(o,l);if(p&&!(c&FF)){o.collision.fire("triggerenter",l)}}if(e){p=this._storeCollision(l,o);if(p&&!(h&FF)){l.collision.fire("triggerenter",o)}}if(s){if(!p){p=this._storeCollision(l,o)}if(p){o.rigidbody.fire("triggerenter",l)}}if(i){if(!p){p=this._storeCollision(o,l)}if(p){l.rigidbody.fire("triggerenter",o)}}}else{const t=this._hasContactEvent(o);const s=this._hasContactEvent(l);const i=this.hasEvent("contact");if(i||t||s){for(let n=0;n<d;n++){const r=e.getContactPoint(n);const a=this._createContactPointFromAmmo(r);if(t||s){u.push(a);const t=this._createReverseContactPointFromAmmo(r);f.push(t)}if(i){const t=this._createSingleContactResult(o,l,a);this.fire("contact",t)}}if(t){const t=this._createContactResult(l,u);p=this._storeCollision(o,l);if(o.collision){o.collision.fire("contact",t);if(p){o.collision.fire("collisionstart",t)}}if(o.rigidbody){o.rigidbody.fire("contact",t);if(p){o.rigidbody.fire("collisionstart",t)}}}if(s){const t=this._createContactResult(o,f);p=this._storeCollision(l,o);if(l.collision){l.collision.fire("contact",t);if(p){l.collision.fire("collisionstart",t)}}if(l.rigidbody){l.rigidbody.fire("contact",t);if(p){l.rigidbody.fire("collisionstart",t)}}}}}}}this._cleanOldCollisions();this.contactPointPool.freeAll();this.contactResultPool.freeAll();this.singleContactResultPool.freeAll()}onUpdate(t){let e,s;this._gravityFloat32[0]=this.gravity.x;this._gravityFloat32[1]=this.gravity.y;this._gravityFloat32[2]=this.gravity.z;const i=this.dynamicsWorld.getGravity();if(i.x()!==this._gravityFloat32[0]||i.y()!==this._gravityFloat32[1]||i.z()!==this._gravityFloat32[2]){i.setValue(this.gravity.x,this.gravity.y,this.gravity.z);this.dynamicsWorld.setGravity(i)}const n=this._triggers;for(e=0,s=n.length;e<s;e++){n[e].updateTransform()}const r=this._compounds;for(e=0,s=r.length;e<s;e++){r[e]._updateCompound()}const a=this._kinematic;for(e=0,s=a.length;e<s;e++){a[e]._updateKinematic()}this.dynamicsWorld.stepSimulation(t,this.maxSubSteps,this.fixedTimeStep);const o=this._dynamic;for(e=0,s=o.length;e<s;e++){o[e]._updateDynamic()}if(!this.dynamicsWorld.setInternalTickCallback){this._checkForCollisions(Ammo.getPointer(this.dynamicsWorld),t)}}destroy(){super.destroy();this.app.systems.off("update",this.onUpdate,this);if(typeof Ammo!=="undefined"){Ammo.destroy(this.dynamicsWorld);Ammo.destroy(this.solver);Ammo.destroy(this.overlappingPairCache);Ammo.destroy(this.dispatcher);Ammo.destroy(this.collisionConfiguration);Ammo.destroy(gz);Ammo.destroy(vz);this.dynamicsWorld=null;this.solver=null;this.overlappingPairCache=null;this.dispatcher=null;this.collisionConfiguration=null;gz=null;vz=null;mz.onAppDestroy()}}}qR._buildAccessors(mz.prototype,wz);const Ez="none";const Az="blend";const Cz=new Vt;class Pz extends qR{constructor(t,e){super(t,e);this._resolution=new Ot(640,320);this._referenceResolution=new Ot(640,320);this._scaleMode=Ez;this.scale=1;this._scaleBlend=.5;this._priority=0;this._screenSpace=false;this.cull=this._screenSpace;this._screenMatrix=new Vt;this._elements=new Set;t.app.graphicsDevice.on("resizecanvas",this._onResize,this)}syncDrawOrder(){this.system.queueDrawOrderSync(this.entity.getGuid(),this._processDrawOrderSync,this)}_recurseDrawOrderSync(t,e){if(!(t instanceof dC)){return e}if(t.element){const s=t.element.drawOrder;t.element.drawOrder=e++;if(t.element._batchGroupId>=0&&s!==t.element.drawOrder){this.system.app.batcher?.markGroupDirty(t.element._batchGroupId)}}if(t.particlesystem){t.particlesystem.drawOrder=e++}const s=t.children;for(let t=0;t<s.length;t++){e=this._recurseDrawOrderSync(s[t],e)}return e}_processDrawOrderSync(){const t=1;this._recurseDrawOrderSync(this.entity,t);this.fire("syncdraworder")}_calcProjectionMatrix(){const t=this._resolution.x/this.scale;const e=this._resolution.y/this.scale;const s=0;const i=t;const n=-e;const r=0;const a=1;const o=-1;this._screenMatrix.setOrtho(s,i,n,r,a,o);if(!this._screenSpace){Cz.setScale(.5*t,.5*e,1);this._screenMatrix.mul2(Cz,this._screenMatrix)}}_updateScale(){this.scale=this._calcScale(this._resolution,this.referenceResolution)}_calcScale(t,e){const s=Math.log2((t.x||1)/e.x);const i=Math.log2((t.y||1)/e.y);return Math.pow(2,s*(1-this._scaleBlend)+i*this._scaleBlend)}_onResize(t,e){if(this._screenSpace){this._resolution.set(t,e);this.resolution=this._resolution}}_bindElement(t){this._elements.add(t)}_unbindElement(t){this._elements.delete(t)}onRemove(){this.system.app.graphicsDevice.off("resizecanvas",this._onResize,this);this.fire("remove");this._elements.forEach((t=>t._onScreenRemove()));this._elements.clear();this.off()}set resolution(t){if(!this._screenSpace){this._resolution.set(t.x,t.y)}else{this._resolution.set(this.system.app.graphicsDevice.width,this.system.app.graphicsDevice.height)}this._updateScale();this._calcProjectionMatrix();if(!this.entity._dirtyLocal){this.entity._dirtifyLocal()}this.fire("set:resolution",this._resolution);this._elements.forEach((t=>t._onScreenResize(this._resolution)))}get resolution(){return this._resolution}set referenceResolution(t){this._referenceResolution.set(t.x,t.y);this._updateScale();this._calcProjectionMatrix();if(!this.entity._dirtyLocal){this.entity._dirtifyLocal()}this.fire("set:referenceresolution",this._resolution);this._elements.forEach((t=>t._onScreenResize(this._resolution)))}get referenceResolution(){if(this._scaleMode===Ez){return this._resolution}return this._referenceResolution}set screenSpace(t){this._screenSpace=t;if(this._screenSpace){this._resolution.set(this.system.app.graphicsDevice.width,this.system.app.graphicsDevice.height)}this.resolution=this._resolution;if(!this.entity._dirtyLocal){this.entity._dirtifyLocal()}this.fire("set:screenspace",this._screenSpace);this._elements.forEach((t=>t._onScreenSpaceChange()))}get screenSpace(){return this._screenSpace}set scaleMode(t){if(t!==Ez&&t!==Az){t=Ez}if(!this._screenSpace&&t!==Ez){t=Ez}this._scaleMode=t;this.resolution=this._resolution;this.fire("set:scalemode",this._scaleMode)}get scaleMode(){return this._scaleMode}set scaleBlend(t){this._scaleBlend=t;this._updateScale();this._calcProjectionMatrix();if(!this.entity._dirtyLocal){this.entity._dirtifyLocal()}this.fire("set:scaleblend",this._scaleBlend);this._elements.forEach((t=>t._onScreenResize(this._resolution)))}get scaleBlend(){return this._scaleBlend}set priority(t){if(t>255){t=255}if(this._priority===t){return}this._priority=t;this.syncDrawOrder()}get priority(){return this._priority}}class Lz{constructor(){this.enabled=true}}const Dz=["enabled"];class Mz extends $R{constructor(t){super(t);this.id="screen";this.ComponentType=Pz;this.DataType=Lz;this.schema=Dz;this.windowResolution=new Ot;this._drawOrderSyncQueue=new ot;this.app.graphicsDevice.on("resizecanvas",this._onResize,this);this.app.systems.on("update",this._onUpdate,this);this.on("beforeremove",this.onRemoveComponent,this)}initializeComponentData(t,e,s){if(e.priority!==undefined)t.priority=e.priority;if(e.screenSpace!==undefined)t.screenSpace=e.screenSpace;t.cull=t.screenSpace;if(e.scaleMode!==undefined)t.scaleMode=e.scaleMode;if(e.scaleBlend!==undefined)t.scaleBlend=e.scaleBlend;if(e.resolution!==undefined){if(e.resolution instanceof Ot){t._resolution.copy(e.resolution)}else{t._resolution.set(e.resolution[0],e.resolution[1])}t.resolution=t._resolution}if(e.referenceResolution!==undefined){if(e.referenceResolution instanceof Ot){t._referenceResolution.copy(e.referenceResolution)}else{t._referenceResolution.set(e.referenceResolution[0],e.referenceResolution[1])}t.referenceResolution=t._referenceResolution}t.syncDrawOrder();super.initializeComponentData(t,e,Dz)}destroy(){super.destroy();this.app.graphicsDevice.off("resizecanvas",this._onResize,this);this.app.systems.off("update",this._onUpdate,this)}_onUpdate(t){const e=this.store;for(const s in e){if(e[s].entity.screen.update)e[s].entity.screen.update(t)}}_onResize(t,e){this.windowResolution.x=t;this.windowResolution.y=e}cloneComponent(t,e){const s=t.screen;return this.addComponent(e,{enabled:s.enabled,screenSpace:s.screenSpace,scaleMode:s.scaleMode,resolution:s.resolution.clone(),referenceResolution:s.referenceResolution.clone()})}onRemoveComponent(t,e){e.onRemove()}processDrawOrderSyncQueue(){const t=this._drawOrderSyncQueue.list();for(let e=0;e<t.length;e++){const s=t[e];s.callback.call(s.scope)}this._drawOrderSyncQueue.clear()}queueDrawOrderSync(t,e,s){if(!this._drawOrderSyncQueue.list().length){this.app.once("prerender",this.processDrawOrderSyncQueue,this)}if(!this._drawOrderSyncQueue.has(t)){this._drawOrderSyncQueue.push(t,{callback:e,scope:s})}}}qR._buildAccessors(Pz.prototype,Dz);const Iz=new Ot;const Rz=new It;const Oz=new te;const Fz=new Qt;const Nz=new It;const kz=new It;const Bz=new Gt;const Uz={x:"y",y:"x"};class zz extends at{static{this.EVENT_DRAGSTART="drag:start"}static{this.EVENT_DRAGEND="drag:end"}static{this.EVENT_DRAGMOVE="drag:move"}constructor(t,e){super();if(!t||!(t instanceof xk)){throw new Error("Element was null or not an ElementComponent")}if(e&&e!=="x"&&e!=="y"){throw new Error(`Unrecognized axis: ${e}`)}this._element=t;this._app=t.system.app;this._axis=e||null;this._enabled=true;this._dragScale=new It;this._dragStartMousePosition=new It;this._dragStartHandlePosition=new It;this._deltaMousePosition=new It;this._deltaHandlePosition=new It;this._isDragging=false;this._toggleLifecycleListeners("on")}_toggleLifecycleListeners(t){this._element[t]("mousedown",this._onMouseDownOrTouchStart,this);this._element[t]("touchstart",this._onMouseDownOrTouchStart,this);this._element[t]("selectstart",this._onMouseDownOrTouchStart,this)}_toggleDragListeners(t){const e=t==="on";if(this._hasDragListeners&&e){return}if(this._app.mouse){this._element[t]("mousemove",this._onMove,this);this._element[t]("mouseup",this._onMouseUpOrTouchEnd,this)}if(B.touch){this._element[t]("touchmove",this._onMove,this);this._element[t]("touchend",this._onMouseUpOrTouchEnd,this);this._element[t]("touchcancel",this._onMouseUpOrTouchEnd,this)}this._element[t]("selectmove",this._onMove,this);this._element[t]("selectend",this._onMouseUpOrTouchEnd,this);this._hasDragListeners=e}_onMouseDownOrTouchStart(t){if(this._element&&!this._isDragging&&this.enabled){this._dragCamera=t.camera;this._calculateDragScale();const e=this._screenToLocal(t);if(e){this._toggleDragListeners("on");this._isDragging=true;this._dragStartMousePosition.copy(e);this._dragStartHandlePosition.copy(this._element.entity.getLocalPosition());this.fire("drag:start")}}}_onMouseUpOrTouchEnd(){if(this._isDragging){this._isDragging=false;this._toggleDragListeners("off");this.fire("drag:end")}}_screenToLocal(t){if(t.inputSource){Oz.set(t.inputSource.getOrigin(),t.inputSource.getDirection())}else{this._determineInputPosition(t);this._chooseRayOriginAndDirection()}Nz.copy(this._element.entity.forward).mulScalar(-1);Fz.setFromPointNormal(this._element.entity.getPosition(),Nz);if(Fz.intersectsRay(Oz,kz)){Bz.copy(this._element.entity.getRotation()).invert().transformVector(kz,kz);kz.mul(this._dragScale);return kz}return null}_determineInputPosition(t){const e=this._app.graphicsDevice.maxPixelRatio;if(typeof t.x!=="undefined"&&typeof t.y!=="undefined"){Iz.x=t.x*e;Iz.y=t.y*e}else if(t.changedTouches){Iz.x=t.changedTouches[0].x*e;Iz.y=t.changedTouches[0].y*e}else{console.warn("Could not determine position from input event")}}_chooseRayOriginAndDirection(){if(this._element.screen&&this._element.screen.screen.screenSpace){Oz.origin.set(Iz.x,-Iz.y,0);Oz.direction.copy(It.FORWARD)}else{Rz.copy(this._dragCamera.screenToWorld(Iz.x,Iz.y,1));Oz.origin.copy(this._dragCamera.entity.getPosition());Oz.direction.copy(Rz).sub(Oz.origin).normalize()}}_calculateDragScale(){let t=this._element.entity.parent;const e=this._element.screen&&this._element.screen.screen;const s=e&&e.screenSpace;const i=s?e.scale:1;const n=this._dragScale;n.set(i,i,i);while(t){n.mul(t.getLocalScale());t=t.parent;if(s&&t.screen){break}}n.x=1/n.x;n.y=1/n.y;n.z=0}_onMove(t){const{_element:e,_deltaMousePosition:s,_deltaHandlePosition:i,_axis:n}=this;if(e&&this._isDragging&&this.enabled&&e.enabled&&e.entity.enabled){const r=this._screenToLocal(t);if(r){s.sub2(r,this._dragStartMousePosition);i.add2(this._dragStartHandlePosition,s);if(n){const t=e.entity.getLocalPosition();const s=Uz[n];i[s]=t[s]}e.entity.setLocalPosition(i);this.fire("drag:move",i)}}}destroy(){this._toggleLifecycleListeners("off");this._toggleDragListeners("off")}set enabled(t){this._enabled=t}get enabled(){return this._enabled}get isDragging(){return this._isDragging}}const Vz=0;const Gz=1;const Hz=2;const Wz=0;const Xz=1;const qz=new Ot;class $z extends qR{static{this.EVENT_SETSCROLL="set:scroll"}constructor(t,e){super(t,e),this._viewportEntity=null,this._contentEntity=null,this._horizontalScrollbarEntity=null,this._verticalScrollbarEntity=null,this._evtElementRemove=null,this._evtViewportElementRemove=null,this._evtViewportResize=null,this._evtContentEntityElementAdd=null,this._evtContentElementRemove=null,this._evtContentResize=null,this._evtHorizontalScrollbarAdd=null,this._evtHorizontalScrollbarRemove=null,this._evtHorizontalScrollbarValue=null,this._evtVerticalScrollbarAdd=null,this._evtVerticalScrollbarRemove=null,this._evtVerticalScrollbarValue=null;this._scrollbarUpdateFlags={};this._scrollbarEntities={};this._prevContentSizes={};this._prevContentSizes[qg]=null;this._prevContentSizes[$g]=null;this._scroll=new Ot;this._velocity=new It;this._dragStartPosition=new It;this._disabledContentInput=false;this._disabledContentInputEntities=[];this._toggleLifecycleListeners("on");this._toggleElementListeners("on")}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){this._setValue("enabled",t)}get enabled(){return this.data.enabled}set horizontal(t){this._setValue("horizontal",t)}get horizontal(){return this.data.horizontal}set vertical(t){this._setValue("vertical",t)}get vertical(){return this.data.vertical}set scrollMode(t){this._setValue("scrollMode",t)}get scrollMode(){return this.data.scrollMode}set bounceAmount(t){this._setValue("bounceAmount",t)}get bounceAmount(){return this.data.bounceAmount}set friction(t){this._setValue("friction",t)}get friction(){return this.data.friction}set dragThreshold(t){this._setValue("dragThreshold",t)}get dragThreshold(){return this.data.dragThreshold}set useMouseWheel(t){this._setValue("useMouseWheel",t)}get useMouseWheel(){return this.data.useMouseWheel}set mouseWheelSensitivity(t){this._setValue("mouseWheelSensitivity",t)}get mouseWheelSensitivity(){return this.data.mouseWheelSensitivity}set horizontalScrollbarVisibility(t){this._setValue("horizontalScrollbarVisibility",t)}get horizontalScrollbarVisibility(){return this.data.horizontalScrollbarVisibility}set verticalScrollbarVisibility(t){this._setValue("verticalScrollbarVisibility",t)}get verticalScrollbarVisibility(){return this.data.verticalScrollbarVisibility}set viewportEntity(t){if(this._viewportEntity===t){return}const e=typeof t==="string";if(this._viewportEntity&&e&&this._viewportEntity.getGuid()===t){return}if(this._viewportEntity){this._viewportEntityUnsubscribe()}if(t instanceof By){this._viewportEntity=t}else if(e){this._viewportEntity=this.system.app.getEntityFromIndex(t)||null}else{this._viewportEntity=null}if(this._viewportEntity){this._viewportEntitySubscribe()}if(this._viewportEntity){this.data.viewportEntity=this._viewportEntity.getGuid()}else if(e&&t){this.data.viewportEntity=t}}get viewportEntity(){return this._viewportEntity}set contentEntity(t){if(this._contentEntity===t){return}const e=typeof t==="string";if(this._contentEntity&&e&&this._contentEntity.getGuid()===t){return}if(this._contentEntity){this._contentEntityUnsubscribe()}if(t instanceof By){this._contentEntity=t}else if(e){this._contentEntity=this.system.app.getEntityFromIndex(t)||null}else{this._contentEntity=null}if(this._contentEntity){this._contentEntitySubscribe()}if(this._contentEntity){this.data.contentEntity=this._contentEntity.getGuid()}else if(e&&t){this.data.contentEntity=t}}get contentEntity(){return this._contentEntity}set horizontalScrollbarEntity(t){if(this._horizontalScrollbarEntity===t){return}const e=typeof t==="string";if(this._horizontalScrollbarEntity&&e&&this._horizontalScrollbarEntity.getGuid()===t){return}if(this._horizontalScrollbarEntity){this._horizontalScrollbarEntityUnsubscribe()}if(t instanceof By){this._horizontalScrollbarEntity=t}else if(e){this._horizontalScrollbarEntity=this.system.app.getEntityFromIndex(t)||null}else{this._horizontalScrollbarEntity=null}this._scrollbarEntities[qg]=this._horizontalScrollbarEntity;if(this._horizontalScrollbarEntity){this._horizontalScrollbarEntitySubscribe()}if(this._horizontalScrollbarEntity){this.data.horizontalScrollbarEntity=this._horizontalScrollbarEntity.getGuid()}else if(e&&t){this.data.horizontalScrollbarEntity=t}}get horizontalScrollbarEntity(){return this._horizontalScrollbarEntity}set verticalScrollbarEntity(t){if(this._verticalScrollbarEntity===t){return}const e=typeof t==="string";if(this._verticalScrollbarEntity&&e&&this._verticalScrollbarEntity.getGuid()===t){return}if(this._verticalScrollbarEntity){this._verticalScrollbarEntityUnsubscribe()}if(t instanceof By){this._verticalScrollbarEntity=t}else if(e){this._verticalScrollbarEntity=this.system.app.getEntityFromIndex(t)||null}else{this._verticalScrollbarEntity=null}this._scrollbarEntities[$g]=this._verticalScrollbarEntity;if(this._verticalScrollbarEntity){this._verticalScrollbarEntitySubscribe()}if(this._verticalScrollbarEntity){this.data.verticalScrollbarEntity=this._verticalScrollbarEntity.getGuid()}else if(e&&t){this.data.verticalScrollbarEntity=t}}get verticalScrollbarEntity(){return this._verticalScrollbarEntity}set scroll(t){this._onSetScroll(t.x,t.y)}get scroll(){return this._scroll}_setValue(t,e){const s=this.data;const i=s[t];s[t]=e;this.fire("set",t,i,e)}_toggleLifecycleListeners(t){this[t]("set_horizontal",this._onSetHorizontalScrollingEnabled,this);this[t]("set_vertical",this._onSetVerticalScrollingEnabled,this);this.entity[t]("element:add",this._onElementComponentAdd,this)}_toggleElementListeners(t){if(this.entity.element){if(t==="on"&&this._hasElementListeners){return}this.entity.element[t]("resize",this._syncAll,this);this.entity.element[t]("mousewheel",this._onMouseWheel,this);this._hasElementListeners=t==="on"}}_onElementComponentAdd(t){this._evtElementRemove=this.entity.element.once("beforeremove",this._onElementComponentRemove,this);this._toggleElementListeners("on")}_onElementComponentRemove(t){this._evtElementRemove?.off();this._evtElementRemove=null;this._toggleElementListeners("off")}_viewportEntitySubscribe(){this._evtViewportEntityElementAdd=this._viewportEntity.on("element:add",this._onViewportElementGain,this);if(this._viewportEntity.element){this._onViewportElementGain()}}_viewportEntityUnsubscribe(){this._evtViewportEntityElementAdd?.off();this._evtViewportEntityElementAdd=null;if(this._viewportEntity?.element){this._onViewportElementLose()}}_viewportEntityElementSubscribe(){const t=this._viewportEntity.element;this._evtViewportElementRemove=t.once("beforeremove",this._onViewportElementLose,this);this._evtViewportResize=t.on("resize",this._syncAll,this)}_viewportEntityElementUnsubscribe(){this._evtViewportElementRemove?.off();this._evtViewportElementRemove=null;this._evtViewportResize?.off();this._evtViewportResize=null}_onViewportElementGain(){this._viewportEntityElementSubscribe();this._syncAll()}_onViewportElementLose(){this._viewportEntityElementUnsubscribe()}_contentEntitySubscribe(){this._evtContentEntityElementAdd=this._contentEntity.on("element:add",this._onContentElementGain,this);if(this._contentEntity.element){this._onContentElementGain()}}_contentEntityUnsubscribe(){this._evtContentEntityElementAdd?.off();this._evtContentEntityElementAdd=null;if(this._contentEntity?.element){this._onContentElementLose()}}_contentEntityElementSubscribe(){const t=this._contentEntity.element;this._evtContentElementRemove=t.once("beforeremove",this._onContentElementLose,this);this._evtContentResize=t.on("resize",this._syncAll,this)}_contentEntityElementUnsubscribe(){this._evtContentElementRemove?.off();this._evtContentElementRemove=null;this._evtContentResize?.off();this._evtContentResize=null}_onContentElementGain(){this._contentEntityElementSubscribe();this._destroyDragHelper();this._contentDragHelper=new zz(this._contentEntity.element);this._contentDragHelper.on("drag:start",this._onContentDragStart,this);this._contentDragHelper.on("drag:end",this._onContentDragEnd,this);this._contentDragHelper.on("drag:move",this._onContentDragMove,this);this._prevContentSizes[qg]=null;this._prevContentSizes[$g]=null;this._syncAll()}_onContentElementLose(){this._contentEntityElementUnsubscribe();this._destroyDragHelper()}_onContentDragStart(){if(this._contentEntity&&this.enabled&&this.entity.enabled){this._dragStartPosition.copy(this._contentEntity.getLocalPosition())}}_onContentDragEnd(){this._prevContentDragPosition=null;this._enableContentInput()}_onContentDragMove(t){if(this._contentEntity&&this.enabled&&this.entity.enabled){this._wasDragged=true;this._setScrollFromContentPosition(t);this._setVelocityFromContentPositionDelta(t);if(!this._disabledContentInput){const e=t.x-this._dragStartPosition.x;const s=t.y-this._dragStartPosition.y;if(Math.abs(e)>this.dragThreshold||Math.abs(s)>this.dragThreshold){this._disableContentInput()}}}}_horizontalScrollbarEntitySubscribe(){this._evtHorizontalScrollbarAdd=this._horizontalScrollbarEntity.on("scrollbar:add",this._onHorizontalScrollbarGain,this);if(this._horizontalScrollbarEntity.scrollbar){this._onHorizontalScrollbarGain()}}_verticalScrollbarEntitySubscribe(){this._evtVerticalScrollbarAdd=this._verticalScrollbarEntity.on("scrollbar:add",this._onVerticalScrollbarGain,this);if(this._verticalScrollbarEntity.scrollbar){this._onVerticalScrollbarGain()}}_horizontalScrollbarEntityUnsubscribe(){this._evtHorizontalScrollbarAdd?.off();this._evtHorizontalScrollbarAdd=null;if(this._horizontalScrollbarEntity.scrollbar){this._onHorizontalScrollbarLose()}}_verticalScrollbarEntityUnsubscribe(){this._evtVerticalScrollbarAdd?.off();this._evtVerticalScrollbarAdd=null;if(this._verticalScrollbarEntity.scrollbar){this._onVerticalScrollbarLose()}}_onSetHorizontalScrollbarValue(t){if(!this._scrollbarUpdateFlags[qg]&&this.enabled&&this.entity.enabled){this._onSetScroll(t,null)}}_onSetVerticalScrollbarValue(t){if(!this._scrollbarUpdateFlags[$g]&&this.enabled&&this.entity.enabled){this._onSetScroll(null,t)}}_onHorizontalScrollbarGain(){const t=this._horizontalScrollbarEntity?.scrollbar;this._evtHorizontalScrollbarRemove=t.on("beforeremove",this._onHorizontalScrollbarLose,this);this._evtHorizontalScrollbarValue=t.on("set:value",this._onSetHorizontalScrollbarValue,this);this._syncScrollbarEnabledState(qg);this._syncScrollbarPosition(qg)}_onVerticalScrollbarGain(){const t=this._verticalScrollbarEntity?.scrollbar;this._evtVerticalScrollbarRemove=t.on("beforeremove",this._onVerticalScrollbarLose,this);this._evtVerticalScrollbarValue=t.on("set:value",this._onSetVerticalScrollbarValue,this);this._syncScrollbarEnabledState($g);this._syncScrollbarPosition($g)}_onHorizontalScrollbarLose(){this._evtHorizontalScrollbarRemove?.off();this._evtHorizontalScrollbarRemove=null;this._evtHorizontalScrollbarValue?.off();this._evtHorizontalScrollbarValue=null}_onVerticalScrollbarLose(){this._evtVerticalScrollbarRemove?.off();this._evtVerticalScrollbarRemove=null;this._evtVerticalScrollbarValue?.off();this._evtVerticalScrollbarValue=null}_onSetHorizontalScrollingEnabled(){this._syncScrollbarEnabledState(qg)}_onSetVerticalScrollingEnabled(){this._syncScrollbarEnabledState($g)}_onSetScroll(t,e,s){if(s!==false){this._velocity.set(0,0,0)}const i=this._updateAxis(t,"x",qg);const n=this._updateAxis(e,"y",$g);if(i||n){this.fire("set:scroll",this._scroll)}}_updateAxis(t,e,s){const i=t!==null&&Math.abs(t-this._scroll[e])>1e-5;if(i||this._isDragging()||t===0){this._scroll[e]=this._determineNewScrollValue(t,e,s);this._syncContentPosition(s);this._syncScrollbarPosition(s)}return i}_determineNewScrollValue(t,e,s){if(!this._getScrollingEnabled(s)){return this._scroll[e]}switch(this.scrollMode){case Vz:return wt.clamp(t,0,this._getMaxScrollValue(s));case Gz:this._setVelocityFromOvershoot(t,e,s);return t;case Hz:return t;default:console.warn(`Unhandled scroll mode:${this.scrollMode}`);return t}}_syncAll(){this._syncContentPosition(qg);this._syncContentPosition($g);this._syncScrollbarPosition(qg);this._syncScrollbarPosition($g);this._syncScrollbarEnabledState(qg);this._syncScrollbarEnabledState($g)}_syncContentPosition(t){if(!this._contentEntity){return}const e=this._getAxis(t);const s=this._getSign(t);const i=this._prevContentSizes[t];const n=this._getContentSize(t);if(i!==null&&Math.abs(i-n)>1e-4){const s=this._getMaxOffset(t,i);const r=this._getMaxOffset(t,n);if(r===0){this._scroll[e]=1}else{this._scroll[e]=wt.clamp(this._scroll[e]*s/r,0,1)}}const r=this._scroll[e]*this._getMaxOffset(t);const a=this._contentEntity.getLocalPosition();a[e]=r*s;this._contentEntity.setLocalPosition(a);this._prevContentSizes[t]=n}_syncScrollbarPosition(t){const e=this._scrollbarEntities[t];if(!e?.scrollbar){return}const s=this._getAxis(t);this._scrollbarUpdateFlags[t]=true;e.scrollbar.value=this._scroll[s];e.scrollbar.handleSize=this._getScrollbarHandleSize(s,t);this._scrollbarUpdateFlags[t]=false}_syncScrollbarEnabledState(t){const e=this._scrollbarEntities[t];if(!e){return}const s=this._getScrollingEnabled(t);const i=this._getScrollbarVisibility(t);switch(i){case Wz:e.enabled=s;return;case Xz:e.enabled=s&&this._contentIsLargerThanViewport(t);return;default:console.warn(`Unhandled scrollbar visibility:${i}`);e.enabled=s}}_contentIsLargerThanViewport(t){return this._getContentSize(t)>this._getViewportSize(t)}_contentPositionToScrollValue(t){const e=this._getMaxOffset(qg);const s=this._getMaxOffset($g);if(e===0){qz.x=0}else{qz.x=t.x/e}if(s===0){qz.y=0}else{qz.y=t.y/-s}return qz}_getMaxOffset(t,e){e=e===undefined?this._getContentSize(t):e;const s=this._getViewportSize(t);if(e<s){return-this._getViewportSize(t)}return s-e}_getMaxScrollValue(t){return this._contentIsLargerThanViewport(t)?1:0}_getScrollbarHandleSize(t,e){const s=this._getViewportSize(e);const i=this._getContentSize(e);if(Math.abs(i)<.001){return 1}const n=Math.min(s/i,1);const r=this._toOvershoot(this._scroll[t],e);if(r===0){return n}return n/(1+Math.abs(r))}_getViewportSize(t){return this._getSize(t,this._viewportEntity)}_getContentSize(t){return this._getSize(t,this._contentEntity)}_getSize(t,e){if(e?.element){return e.element[this._getCalculatedDimension(t)]}return 0}_getScrollingEnabled(t){if(t===qg){return this.horizontal}else if(t===$g){return this.vertical}return undefined}_getScrollbarVisibility(t){if(t===qg){return this.horizontalScrollbarVisibility}else if(t===$g){return this.verticalScrollbarVisibility}return undefined}_getSign(t){return t===qg?1:-1}_getAxis(t){return t===qg?"x":"y"}_getCalculatedDimension(t){return t===qg?"calculatedWidth":"calculatedHeight"}_destroyDragHelper(){if(this._contentDragHelper){this._contentDragHelper.destroy()}}onUpdate(){if(this._contentEntity){this._updateVelocity();this._syncScrollbarEnabledState(qg);this._syncScrollbarEnabledState($g)}}_updateVelocity(){if(!this._isDragging()){if(this.scrollMode===Gz){if(this._hasOvershoot("x",qg)){this._setVelocityFromOvershoot(this.scroll.x,"x",qg)}if(this._hasOvershoot("y",$g)){this._setVelocityFromOvershoot(this.scroll.y,"y",$g)}}if(Math.abs(this._velocity.x)>1e-4||Math.abs(this._velocity.y)>1e-4){const t=this._contentEntity.getLocalPosition();t.x+=this._velocity.x;t.y+=this._velocity.y;this._contentEntity.setLocalPosition(t);this._setScrollFromContentPosition(t)}this._velocity.x*=1-this.friction;this._velocity.y*=1-this.friction}}_hasOvershoot(t,e){return Math.abs(this._toOvershoot(this.scroll[t],e))>.001}_toOvershoot(t,e){const s=this._getMaxScrollValue(e);if(t<0){return t}else if(t>s){return t-s}return 0}_setVelocityFromOvershoot(t,e,s){const i=this._toOvershoot(t,s);const n=i*this._getMaxOffset(s)*this._getSign(s);if(Math.abs(n)>0){this._velocity[e]=-n/(this.bounceAmount*50+1)}}_setVelocityFromContentPositionDelta(t){if(this._prevContentDragPosition){this._velocity.sub2(t,this._prevContentDragPosition);this._prevContentDragPosition.copy(t)}else{this._velocity.set(0,0,0);this._prevContentDragPosition=t.clone()}}_setScrollFromContentPosition(t){let e=this._contentPositionToScrollValue(t);if(this._isDragging()){e=this._applyScrollValueTension(e)}this._onSetScroll(e.x,e.y,false)}_applyScrollValueTension(t){const e=1;let s=this._getMaxScrollValue(qg);let i=this._toOvershoot(t.x,qg);if(i>0){t.x=s+e*Math.log10(1+i)}else if(i<0){t.x=-1*Math.log10(1-i)}s=this._getMaxScrollValue($g);i=this._toOvershoot(t.y,$g);if(i>0){t.y=s+e*Math.log10(1+i)}else if(i<0){t.y=-1*Math.log10(1-i)}return t}_isDragging(){return this._contentDragHelper&&this._contentDragHelper.isDragging}_setScrollbarComponentsEnabled(t){if(this._horizontalScrollbarEntity?.scrollbar){this._horizontalScrollbarEntity.scrollbar.enabled=t}if(this._verticalScrollbarEntity?.scrollbar){this._verticalScrollbarEntity.scrollbar.enabled=t}}_setContentDraggingEnabled(t){if(this._contentDragHelper){this._contentDragHelper.enabled=t}}_onMouseWheel(t){if(!this.useMouseWheel||!this._contentEntity?.element){return}const e=t.event;const s=e.deltaX/this._contentEntity.element.calculatedWidth*this.mouseWheelSensitivity.x;const i=e.deltaY/this._contentEntity.element.calculatedHeight*this.mouseWheelSensitivity.y;const n=wt.clamp(this._scroll.x+s,0,this._getMaxScrollValue(qg));const r=wt.clamp(this._scroll.y+i,0,this._getMaxScrollValue($g));this.scroll=new Ot(n,r)}_enableContentInput(){while(this._disabledContentInputEntities.length){const t=this._disabledContentInputEntities.pop();if(t.element){t.element.useInput=true}}this._disabledContentInput=false}_disableContentInput(){const t=e=>{if(e.element&&e.element.useInput){this._disabledContentInputEntities.push(e);e.element.useInput=false}const s=e.children;for(let e=0,i=s.length;e<i;e++){t(s[e])}};if(this._contentEntity){const e=this._contentEntity.children;for(let s=0,i=e.length;s<i;s++){t(e[s])}}this._disabledContentInput=true}onEnable(){this._setScrollbarComponentsEnabled(true);this._setContentDraggingEnabled(true);this._syncAll()}onDisable(){this._setScrollbarComponentsEnabled(false);this._setContentDraggingEnabled(false)}onRemove(){this._toggleLifecycleListeners("off");this._toggleElementListeners("off");this._destroyDragHelper()}resolveDuplicatedEntityReferenceProperties(t,e){if(t.viewportEntity){this.viewportEntity=e[t.viewportEntity.getGuid()]}if(t.contentEntity){this.contentEntity=e[t.contentEntity.getGuid()]}if(t.horizontalScrollbarEntity){this.horizontalScrollbarEntity=e[t.horizontalScrollbarEntity.getGuid()]}if(t.verticalScrollbarEntity){this.verticalScrollbarEntity=e[t.verticalScrollbarEntity.getGuid()]}}}const jz=10;class Yz{constructor(){this.enabled=true;this.dragThreshold=jz;this.useMouseWheel=true;this.mouseWheelSensitivity=new Ot(1,1);this.horizontalScrollbarVisibility=0;this.verticalScrollbarVisibility=0;this.viewportEntity=null;this.contentEntity=null;this.horizontalScrollbarEntity=null;this.verticalScrollbarEntity=null}}const Kz=[{name:"enabled",type:"boolean"},{name:"horizontal",type:"boolean"},{name:"vertical",type:"boolean"},{name:"scrollMode",type:"number"},{name:"bounceAmount",type:"number"},{name:"friction",type:"number"},{name:"dragThreshold",type:"number"},{name:"useMouseWheel",type:"boolean"},{name:"mouseWheelSensitivity",type:"vec2"},{name:"horizontalScrollbarVisibility",type:"number"},{name:"verticalScrollbarVisibility",type:"number"}];const Zz=10;class Qz extends $R{constructor(t){super(t);this.id="scrollview";this.ComponentType=$z;this.DataType=Yz;this.schema=Kz;this.on("beforeremove",this._onRemoveComponent,this);this.app.systems.on("update",this.onUpdate,this)}initializeComponentData(t,e,s){if(e.dragThreshold===undefined){e.dragThreshold=Zz}if(e.useMouseWheel===undefined){e.useMouseWheel=true}if(e.mouseWheelSensitivity===undefined){e.mouseWheelSensitivity=new Ot(1,1)}super.initializeComponentData(t,e,Kz);t.viewportEntity=e.viewportEntity;t.contentEntity=e.contentEntity;t.horizontalScrollbarEntity=e.horizontalScrollbarEntity;t.verticalScrollbarEntity=e.verticalScrollbarEntity}onUpdate(t){const e=this.store;for(const t in e){const s=e[t].entity;const i=s.scrollview;if(i.enabled&&s.enabled){i.onUpdate()}}}_onRemoveComponent(t,e){e.onRemove()}destroy(){super.destroy();this.app.systems.off("update",this.onUpdate,this)}}class Jz extends qR{static{this.EVENT_SETVALUE="set:value"}constructor(t,e){super(t,e),this._handleEntity=null,this._evtHandleEntityElementAdd=null,this._evtHandleEntityChanges=[];this._toggleLifecycleListeners("on")}get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){this._setValue("enabled",t)}get enabled(){return this.data.enabled}set orientation(t){this._setValue("orientation",t)}get orientation(){return this.data.orientation}set value(t){this._setValue("value",t)}get value(){return this.data.value}set handleSize(t){this._setValue("handleSize",t)}get handleSize(){return this.data.handleSize}set handleEntity(t){if(this._handleEntity===t){return}const e=typeof t==="string";if(this._handleEntity&&e&&this._handleEntity.getGuid()===t){return}if(this._handleEntity){this._handleEntityUnsubscribe()}if(t instanceof By){this._handleEntity=t}else if(e){this._handleEntity=this.system.app.getEntityFromIndex(t)||null}else{this._handleEntity=null}if(this._handleEntity){this._handleEntitySubscribe()}if(this._handleEntity){this.data.handleEntity=this._handleEntity.getGuid()}else if(e&&t){this.data.handleEntity=t}}get handleEntity(){return this._handleEntity}_setValue(t,e){const s=this.data;const i=s[t];s[t]=e;this.fire("set",t,i,e)}_toggleLifecycleListeners(t){this[t]("set_value",this._onSetValue,this);this[t]("set_handleSize",this._onSetHandleSize,this);this[t]("set_orientation",this._onSetOrientation,this)}_handleEntitySubscribe(){this._evtHandleEntityElementAdd=this._handleEntity.on("element:add",this._onHandleElementGain,this);if(this._handleEntity.element){this._onHandleElementGain()}}_handleEntityUnsubscribe(){this._evtHandleEntityElementAdd?.off();this._evtHandleEntityElementAdd=null;if(this._handleEntity?.element){this._onHandleElementLose()}}_handleEntityElementSubscribe(){const t=this._handleEntity.element;const e=this._evtHandleEntityChanges;e.push(t.once("beforeremove",this._onHandleElementLose,this));e.push(t.on("set:anchor",this._onSetHandleAlignment,this));e.push(t.on("set:margin",this._onSetHandleAlignment,this));e.push(t.on("set:pivot",this._onSetHandleAlignment,this))}_handleEntityElementUnsubscribe(){for(let t=0;t<this._evtHandleEntityChanges.length;t++){this._evtHandleEntityChanges[t].off()}this._evtHandleEntityChanges.length=0}_onHandleElementGain(){this._handleEntityElementSubscribe();this._destroyDragHelper();this._handleDragHelper=new zz(this._handleEntity.element,this._getAxis());this._handleDragHelper.on("drag:move",this._onHandleDrag,this);this._updateHandlePositionAndSize()}_onHandleElementLose(){this._handleEntityElementUnsubscribe();this._destroyDragHelper()}_onHandleDrag(t){if(this._handleEntity&&this.enabled&&this.entity.enabled){this.value=this._handlePositionToScrollValue(t[this._getAxis()])}}_onSetValue(t,e,s){if(Math.abs(s-e)>1e-5){this.data.value=wt.clamp(s,0,1);this._updateHandlePositionAndSize();this.fire("set:value",this.data.value)}}_onSetHandleSize(t,e,s){if(Math.abs(s-e)>1e-5){this.data.handleSize=wt.clamp(s,0,1);this._updateHandlePositionAndSize()}}_onSetHandleAlignment(){this._updateHandlePositionAndSize()}_onSetOrientation(t,e,s){if(s!==e&&this._handleEntity?.element){this._handleEntity.element[this._getOppositeDimension()]=0}}_updateHandlePositionAndSize(){const t=this._handleEntity;const e=t?.element;if(t){const e=t.getLocalPosition();e[this._getAxis()]=this._getHandlePosition();t.setLocalPosition(e)}if(e){e[this._getDimension()]=this._getHandleLength()}}_handlePositionToScrollValue(t){return t*this._getSign()/this._getUsableTrackLength()}_scrollValueToHandlePosition(t){return t*this._getSign()*this._getUsableTrackLength()}_getUsableTrackLength(){return Math.max(this._getTrackLength()-this._getHandleLength(),.001)}_getTrackLength(){if(this.entity.element){return this.orientation===qg?this.entity.element.calculatedWidth:this.entity.element.calculatedHeight}return 0}_getHandleLength(){return this._getTrackLength()*this.handleSize}_getHandlePosition(){return this._scrollValueToHandlePosition(this.value)}_getSign(){return this.orientation===qg?1:-1}_getAxis(){return this.orientation===qg?"x":"y"}_getDimension(){return this.orientation===qg?"width":"height"}_getOppositeDimension(){return this.orientation===qg?"height":"width"}_destroyDragHelper(){if(this._handleDragHelper){this._handleDragHelper.destroy()}}_setHandleDraggingEnabled(t){if(this._handleDragHelper){this._handleDragHelper.enabled=t}}onEnable(){this._setHandleDraggingEnabled(true)}onDisable(){this._setHandleDraggingEnabled(false)}onRemove(){this._destroyDragHelper();this._toggleLifecycleListeners("off")}resolveDuplicatedEntityReferenceProperties(t,e){if(t.handleEntity){this.handleEntity=e[t.handleEntity.getGuid()]}}}class tV{constructor(){this.enabled=true;this.orientation=qg;this.value=0;this.handleSize=0;this.handleEntity=null}}const eV=[{name:"enabled",type:"boolean"},{name:"orientation",type:"number"},{name:"value",type:"number"},{name:"handleSize",type:"number"}];class sV extends $R{constructor(t){super(t);this.id="scrollbar";this.ComponentType=Jz;this.DataType=tV;this.schema=eV;this.on("add",this._onAddComponent,this);this.on("beforeremove",this._onRemoveComponent,this)}initializeComponentData(t,e,s){super.initializeComponentData(t,e,eV);t.handleEntity=e.handleEntity}_onAddComponent(t){t.fire("scrollbar:add")}_onRemoveComponent(t,e){e.onRemove()}}const iV={volume:0,pitch:0,loop:false,startTime:0,duration:0,position:new It,maxDistance:0,refDistance:0,rollOffFactor:0,distanceModel:0,onPlay:null,onPause:null,onResume:null,onStop:null,onEnd:null};class nV extends at{static{this.EVENT_PLAY="play"}static{this.EVENT_PAUSE="pause"}static{this.EVENT_RESUME="resume"}static{this.EVENT_STOP="stop"}static{this.EVENT_END="end"}static{this.EVENT_LOAD="load"}constructor(t,e="Untitled",s={}){super(),this.instances=[];this._component=t;this._assets=t.system.app.assets;this._manager=t.system.manager;this.name=e;this._volume=s.volume!==undefined?wt.clamp(Number(s.volume)||0,0,1):1;this._pitch=s.pitch!==undefined?Math.max(.01,Number(s.pitch)||0):1;this._loop=!!(s.loop!==undefined?s.loop:false);this._duration=s.duration>0?s.duration:null;this._startTime=Math.max(0,Number(s.startTime)||0);this._overlap=!!s.overlap;this._autoPlay=!!s.autoPlay;this._firstNode=null;this._lastNode=null;this._asset=s.asset;if(this._asset instanceof qA){this._asset=this._asset.id}this._onInstancePlayHandler=this._onInstancePlay.bind(this);this._onInstancePauseHandler=this._onInstancePause.bind(this);this._onInstanceResumeHandler=this._onInstanceResume.bind(this);this._onInstanceStopHandler=this._onInstanceStop.bind(this);this._onInstanceEndHandler=this._onInstanceEnd.bind(this)}play(){if(!this.overlap){this.stop()}if(!this.isLoaded&&!this._hasAsset()){return undefined}const t=this._createInstance();this.instances.push(t);if(!this.isLoaded){const e=function(e){const s=t._playWhenLoaded;t.sound=e;if(s){t.play()}};this.off("load",e);this.once("load",e);this.load()}else{t.play()}return t}pause(){let t=false;const e=this.instances;for(let s=0,i=e.length;s<i;s++){if(e[s].pause()){t=true}}return t}resume(){let t=false;const e=this.instances;for(let s=0,i=e.length;s<i;s++){if(e[s].resume()){t=true}}return t}stop(){let t=false;const e=this.instances;let s=e.length;while(s--){e[s].stop();t=true}e.length=0;return t}load(){if(!this._hasAsset()){return}const t=this._assets.get(this._asset);if(!t){this._assets.off(`add:${this._asset}`,this._onAssetAdd,this);this._assets.once(`add:${this._asset}`,this._onAssetAdd,this);return}t.off("remove",this._onAssetRemoved,this);t.on("remove",this._onAssetRemoved,this);if(!t.resource){t.off("load",this._onAssetLoad,this);t.once("load",this._onAssetLoad,this);this._assets.load(t);return}this.fire("load",t.resource)}setExternalNodes(t,e){if(!t){console.error("The firstNode must have a valid AudioNode");return}if(!e){e=t}this._firstNode=t;this._lastNode=e;if(!this._overlap){const s=this.instances;for(let i=0,n=s.length;i<n;i++){s[i].setExternalNodes(t,e)}}}clearExternalNodes(){this._firstNode=null;this._lastNode=null;if(!this._overlap){const t=this.instances;for(let e=0,s=t.length;e<s;e++){t[e].clearExternalNodes()}}}getExternalNodes(){return[this._firstNode,this._lastNode]}_hasAsset(){return this._asset!=null}_createInstance(){let t=null;const e=this._component;let s=null;if(this._hasAsset()){const t=this._assets.get(this._asset);if(t){s=t.resource}}const i=iV;i.volume=this._volume*e.volume;i.pitch=this._pitch*e.pitch;i.loop=this._loop;i.startTime=this._startTime;i.duration=this._duration;i.onPlay=this._onInstancePlayHandler;i.onPause=this._onInstancePauseHandler;i.onResume=this._onInstanceResumeHandler;i.onStop=this._onInstanceStopHandler;i.onEnd=this._onInstanceEndHandler;if(e.positional){i.position.copy(e.entity.getPosition());i.maxDistance=e.maxDistance;i.refDistance=e.refDistance;i.rollOffFactor=e.rollOffFactor;i.distanceModel=e.distanceModel;t=new zp(this._manager,s,i)}else{t=new Bp(this._manager,s,i)}if(this._firstNode){t.setExternalNodes(this._firstNode,this._lastNode)}return t}_onInstancePlay(t){this.fire("play",t);this._component.fire("play",this,t)}_onInstancePause(t){this.fire("pause",t);this._component.fire("pause",this,t)}_onInstanceResume(t){this.fire("resume",t);this._component.fire("resume",this,t)}_onInstanceStop(t){const e=this.instances.indexOf(t);if(e!==-1){this.instances.splice(e,1)}this.fire("stop",t);this._component.fire("stop",this,t)}_onInstanceEnd(t){const e=this.instances.indexOf(t);if(e!==-1){this.instances.splice(e,1)}this.fire("end",t);this._component.fire("end",this,t)}_onAssetAdd(t){this.load()}_onAssetLoad(t){this.load()}_onAssetRemoved(t){t.off("remove",this._onAssetRemoved,this);this._assets.off(`add:${t.id}`,this._onAssetAdd,this);this.stop()}updatePosition(t){const e=this.instances;for(let s=0,i=e.length;s<i;s++){e[s].position=t}}set asset(t){const e=this._asset;if(e){this._assets.off(`add:${e}`,this._onAssetAdd,this);const t=this._assets.get(e);if(t){t.off("remove",this._onAssetRemoved,this)}}this._asset=t;if(this._asset instanceof qA){this._asset=this._asset.id}if(this._hasAsset()&&this._component.enabled&&this._component.entity.enabled){this.load()}}get asset(){return this._asset}set autoPlay(t){this._autoPlay=!!t}get autoPlay(){return this._autoPlay}set duration(t){this._duration=Math.max(0,Number(t)||0)||null;if(!this._overlap){const t=this.instances;for(let e=0,s=t.length;e<s;e++){t[e].duration=this._duration}}}get duration(){let t=0;if(this._hasAsset()){const e=this._assets.get(this._asset);t=e?.resource?e.resource.duration:0}if(this._duration!=null){return this._duration%(t||1)}return t}get isLoaded(){if(this._hasAsset()){const t=this._assets.get(this._asset);if(t){return!!t.resource}}return false}get isPaused(){const t=this.instances;const e=t.length;if(e===0){return false}for(let s=0;s<e;s++){if(!t[s].isPaused){return false}}return true}get isPlaying(){const t=this.instances;for(let e=0,s=t.length;e<s;e++){if(t[e].isPlaying){return true}}return false}get isStopped(){const t=this.instances;for(let e=0,s=t.length;e<s;e++){if(!t[e].isStopped){return false}}return true}set loop(t){this._loop=!!t;const e=this.instances;for(let t=0,s=e.length;t<s;t++){e[t].loop=this._loop}}get loop(){return this._loop}set overlap(t){this._overlap=!!t}get overlap(){return this._overlap}set pitch(t){this._pitch=Math.max(Number(t)||0,.01);if(!this._overlap){const t=this.instances;for(let e=0,s=t.length;e<s;e++){t[e].pitch=this.pitch*this._component.pitch}}}get pitch(){return this._pitch}set startTime(t){this._startTime=Math.max(0,Number(t)||0);if(!this._overlap){const t=this.instances;for(let e=0,s=t.length;e<s;e++){t[e].startTime=this._startTime}}}get startTime(){return this._startTime}set volume(t){this._volume=wt.clamp(Number(t)||0,0,1);if(!this._overlap){const t=this.instances;for(let e=0,s=t.length;e<s;e++){t[e].volume=this._volume*this._component.volume}}}get volume(){return this._volume}}class rV extends qR{static{this.EVENT_PLAY="play"}static{this.EVENT_PAUSE="pause"}static{this.EVENT_RESUME="resume"}static{this.EVENT_STOP="stop"}static{this.EVENT_END="end"}_updateSoundInstances(t,e,s){const i=this._slots;for(const n in i){const r=i[n];if(!r.overlap){const i=r.instances;for(let n=0,a=i.length;n<a;n++){i[n][t]=s?r[t]*e:e}}}}set distanceModel(t){this._distanceModel=t;this._updateSoundInstances("distanceModel",t,false)}get distanceModel(){return this._distanceModel}set maxDistance(t){this._maxDistance=t;this._updateSoundInstances("maxDistance",t,false)}get maxDistance(){return this._maxDistance}set refDistance(t){this._refDistance=t;this._updateSoundInstances("refDistance",t,false)}get refDistance(){return this._refDistance}set rollOffFactor(t){this._rollOffFactor=t;this._updateSoundInstances("rollOffFactor",t,false)}get rollOffFactor(){return this._rollOffFactor}set pitch(t){this._pitch=t;this._updateSoundInstances("pitch",t,true)}get pitch(){return this._pitch}set volume(t){this._volume=t;this._updateSoundInstances("volume",t,true)}get volume(){return this._volume}set positional(t){this._positional=t;const e=this._slots;for(const t in e){const s=e[t];if(!s.overlap){const t=s.instances;const e=t.length;for(let i=e-1;i>=0;i--){const e=t[i].isPlaying||t[i].isSuspended;const n=t[i].currentTime;if(e){t[i].stop()}const r=s._createInstance();if(e){r.play();r.currentTime=n}t.push(r)}}}}get positional(){return this._positional}set slots(t){const e=this._slots;if(e){for(const t in e){e[t].stop()}}const s={};for(const e in t){if(!(t[e]instanceof nV)){if(t[e].name){s[t[e].name]=new nV(this,t[e].name,t[e])}}else{s[t[e].name]=t[e]}}this._slots=s;if(this.enabled&&this.entity.enabled){this.onEnable()}}get slots(){return this._slots}onEnable(){if(this.system._inTools){return}const t=this._slots;const e=this._playingBeforeDisable;for(const s in t){const i=t[s];if(i.autoPlay&&i.isStopped){i.play()}else if(e[s]){i.resume()}else if(!i.isLoaded){i.load()}}}onDisable(){const t=this._slots;const e={};for(const s in t){if(!t[s].overlap){if(t[s].isPlaying){t[s].pause();e[s]=true}}}this._playingBeforeDisable=e}onRemove(){this.off()}addSlot(t,e){const s=this._slots;if(s[t]){return null}const i=new nV(this,t,e);s[t]=i;if(i.autoPlay&&this.enabled&&this.entity.enabled){i.play()}return i}removeSlot(t){const e=this._slots;if(e[t]){e[t].stop();delete e[t]}}slot(t){return this._slots[t]}_getSlotProperty(t,e){if(!this.enabled||!this.entity.enabled){return undefined}const s=this._slots[t];if(!s){return undefined}return s[e]}isPlaying(t){return this._getSlotProperty(t,"isPlaying")||false}isLoaded(t){return this._getSlotProperty(t,"isLoaded")||false}isPaused(t){return this._getSlotProperty(t,"isPaused")||false}isStopped(t){return this._getSlotProperty(t,"isStopped")||false}play(t){if(!this.enabled||!this.entity.enabled){return null}const e=this._slots[t];if(!e){return null}return e.play()}pause(t){const e=this._slots;if(t){const s=e[t];if(!s){return}s.pause()}else{for(const t in e){e[t].pause()}}}resume(t){const e=this._slots;if(t){const s=e[t];if(!s){return}if(s.isPaused){s.resume()}}else{for(const t in e){e[t].resume()}}}stop(t){const e=this._slots;if(t){const s=e[t];if(!s){return}s.stop()}else{for(const t in e){e[t].stop()}}}constructor(...t){super(...t),this._volume=1,this._pitch=1,this._positional=true,this._refDistance=1,this._maxDistance=1e4,this._rollOffFactor=1,this._distanceModel=Ep,this._slots={},this._playingBeforeDisable={}}}class aV{constructor(){this.enabled=true}}const oV=["enabled"];class lV extends $R{constructor(t){super(t);this.id="sound";this.ComponentType=rV;this.DataType=aV;this.schema=oV;this.manager=t.soundManager;this.app.systems.on("update",this.onUpdate,this);this.on("beforeremove",this.onBeforeRemove,this)}set volume(t){this.manager.volume=t}get volume(){return this.manager.volume}get context(){if(!Rp()){return null}return this.manager.context}initializeComponentData(t,e,s){s=["volume","pitch","positional","refDistance","maxDistance","rollOffFactor","distanceModel","slots"];for(let i=0;i<s.length;i++){if(e.hasOwnProperty(s[i])){t[s[i]]=e[s[i]]}}super.initializeComponentData(t,e,["enabled"])}cloneComponent(t,e){const s=t.sound;const i=s.slots;const n={};for(const t in i){const e=i[t];n[t]={name:e.name,volume:e.volume,pitch:e.pitch,loop:e.loop,duration:e.duration,startTime:e.startTime,overlap:e.overlap,autoPlay:e.autoPlay,asset:e.asset}}const r={distanceModel:s.distanceModel,enabled:s.enabled,maxDistance:s.maxDistance,pitch:s.pitch,positional:s.positional,refDistance:s.refDistance,rollOffFactor:s.rollOffFactor,slots:n,volume:s.volume};return this.addComponent(e,r)}onUpdate(t){const e=this.store;for(const t in e){if(e.hasOwnProperty(t)){const s=e[t];const i=s.entity;if(i.enabled){const t=i.sound;if(t.enabled&&t.positional){const e=i.getPosition();const s=t.slots;for(const t in s){s[t].updatePosition(e)}}}}}}onBeforeRemove(t,e){const s=e.slots;for(const t in s){if(!s[t].overlap){s[t].stop()}}e.onRemove()}destroy(){super.destroy();this.app.systems.off("update",this.onUpdate,this)}}qR._buildAccessors(rV.prototype,oV);const hV="simple";const cV="animated";class dV extends at{static{this.EVENT_PLAY="play"}static{this.EVENT_PAUSE="pause"}static{this.EVENT_RESUME="resume"}static{this.EVENT_STOP="stop"}static{this.EVENT_END="end"}static{this.EVENT_LOOP="loop"}constructor(t,e){super(),this._evtSetMeshes=null;this._component=t;this._frame=0;this._sprite=null;this._spriteAsset=null;this.spriteAsset=e.spriteAsset;this.name=e.name;this.fps=e.fps||0;this.loop=e.loop||false;this._playing=false;this._paused=false;this._time=0}get duration(){if(this._sprite){const t=this.fps||Number.MIN_VALUE;return this._sprite.frameKeys.length/Math.abs(t)}return 0}set frame(t){this._setFrame(t);const e=this.fps||Number.MIN_VALUE;this._setTime(this._frame/e)}get frame(){return this._frame}get isPaused(){return this._paused}get isPlaying(){return this._playing}set sprite(t){if(this._sprite){this._evtSetMeshes?.off();this._evtSetMeshes=null;this._sprite.off("set:pixelsPerUnit",this._onSpritePpuChanged,this);this._sprite.off("set:atlas",this._onSpriteMeshesChange,this);if(this._sprite.atlas){this._sprite.atlas.off("set:texture",this._onSpriteMeshesChange,this)}}this._sprite=t;if(this._sprite){this._evtSetMeshes=this._sprite.on("set:meshes",this._onSpriteMeshesChange,this);this._sprite.on("set:pixelsPerUnit",this._onSpritePpuChanged,this);this._sprite.on("set:atlas",this._onSpriteMeshesChange,this);if(this._sprite.atlas){this._sprite.atlas.on("set:texture",this._onSpriteMeshesChange,this)}}if(this._component.currentClip===this){let e;if(!t||!t.atlas){e=this._component._meshInstance;if(e){e.deleteParameter("texture_emissiveMap");e.deleteParameter("texture_opacityMap")}this._component._hideModel()}else{if(t.atlas.texture){e=this._component._meshInstance;if(e){e.setParameter("texture_emissiveMap",t.atlas.texture);e.setParameter("texture_opacityMap",t.atlas.texture)}if(this._component.enabled&&this._component.entity.enabled){this._component._showModel()}}if(this.time&&this.fps){this.time=this.time}else{this.frame=this.frame}}}}get sprite(){return this._sprite}set spriteAsset(t){const e=this._component.system.app.assets;let s=t;if(t instanceof qA){s=t.id}if(this._spriteAsset!==s){if(this._spriteAsset){const t=e.get(this._spriteAsset);if(t){this._unbindSpriteAsset(t)}}this._spriteAsset=s;if(this._spriteAsset){const t=e.get(this._spriteAsset);if(!t){this.sprite=null;e.on(`add:${this._spriteAsset}`,this._onSpriteAssetAdded,this)}else{this._bindSpriteAsset(t)}}else{this.sprite=null}}}get spriteAsset(){return this._spriteAsset}set time(t){this._setTime(t);if(this._sprite){this.frame=Math.min(this._sprite.frameKeys.length-1,Math.floor(this._time*Math.abs(this.fps)))}else{this.frame=0}}get time(){return this._time}_onSpriteAssetAdded(t){this._component.system.app.assets.off(`add:${t.id}`,this._onSpriteAssetAdded,this);if(this._spriteAsset===t.id){this._bindSpriteAsset(t)}}_bindSpriteAsset(t){t.on("load",this._onSpriteAssetLoad,this);t.on("remove",this._onSpriteAssetRemove,this);if(t.resource){this._onSpriteAssetLoad(t)}else{this._component.system.app.assets.load(t)}}_unbindSpriteAsset(t){if(!t){return}t.off("load",this._onSpriteAssetLoad,this);t.off("remove",this._onSpriteAssetRemove,this);if(t.resource&&!t.resource.atlas){this._component.system.app.assets.off(`load:${t.data.textureAtlasAsset}`,this._onTextureAtlasLoad,this)}}_onSpriteAssetLoad(t){if(!t.resource){this.sprite=null}else{if(!t.resource.atlas){const e=t.data.textureAtlasAsset;const s=this._component.system.app.assets;s.off(`load:${e}`,this._onTextureAtlasLoad,this);s.once(`load:${e}`,this._onTextureAtlasLoad,this)}else{this.sprite=t.resource}}}_onTextureAtlasLoad(t){const e=this._spriteAsset;if(e instanceof qA){this._onSpriteAssetLoad(e)}else{this._onSpriteAssetLoad(this._component.system.app.assets.get(e))}}_onSpriteAssetRemove(t){this.sprite=null}_onSpriteMeshesChange(){if(this._component.currentClip===this){this._component._showFrame(this.frame)}}_onSpritePpuChanged(){if(this._component.currentClip===this){if(this.sprite.renderMode!==Lg){this._component._showFrame(this.frame)}}}_update(t){if(this.fps===0)return;if(!this._playing||this._paused||!this._sprite)return;const e=this.fps<0?-1:1;const s=this._time+t*this._component.speed*e;const i=this.duration;const n=s>i||s<0;this._setTime(s);let r=this.frame;if(this._sprite){r=Math.floor(this._sprite.frameKeys.length*this._time/i)}else{r=0}if(r!==this._frame){this._setFrame(r)}if(n){if(this.loop){this.fire("loop");this._component.fire("loop",this)}else{this._playing=false;this._paused=false;this.fire("end");this._component.fire("end",this)}}}_setTime(t){this._time=t;const e=this.duration;if(this._time<0){if(this.loop){this._time=this._time%e+e}else{this._time=0}}else if(this._time>e){if(this.loop){this._time%=e}else{this._time=e}}}_setFrame(t){if(this._sprite){this._frame=wt.clamp(t,0,this._sprite.frameKeys.length-1)}else{this._frame=t}if(this._component.currentClip===this){this._component._showFrame(this._frame)}}_destroy(){if(this._spriteAsset){const t=this._component.system.app.assets;this._unbindSpriteAsset(t.get(this._spriteAsset))}if(this._sprite){this.sprite=null}if(this._spriteAsset){this.spriteAsset=null}}play(){if(this._playing){return}this._playing=true;this._paused=false;this.frame=0;this.fire("play");this._component.fire("play",this)}pause(){if(!this._playing||this._paused){return}this._paused=true;this.fire("pause");this._component.fire("pause",this)}resume(){if(!this._paused)return;this._paused=false;this.fire("resume");this._component.fire("resume",this)}stop(){if(!this._playing)return;this._playing=false;this._paused=false;this._time=0;this.frame=0;this.fire("stop");this._component.fire("stop",this)}}const uV="texture_emissiveMap";const fV="texture_opacityMap";const pV="material_emissive";const mV="material_opacity";const _V="innerOffset";const gV="outerScale";const vV="atlasRect";class yV extends qR{static{this.EVENT_PLAY="play"}static{this.EVENT_PAUSE="pause"}static{this.EVENT_RESUME="resume"}static{this.EVENT_STOP="stop"}static{this.EVENT_END="end"}static{this.EVENT_LOOP="loop"}constructor(t,e){super(t,e),this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null;this._type=hV;this._material=t.defaultMaterial;this._color=new bt(1,1,1,1);this._colorUniform=new Float32Array(3);this._speed=1;this._flipX=false;this._flipY=false;this._width=1;this._height=1;this._drawOrder=0;this._layers=[hm];this._outerScale=new Ot(1,1);this._outerScaleUniform=new Float32Array(2);this._innerOffset=new Ft;this._innerOffsetUniform=new Float32Array(4);this._atlasRect=new Ft;this._atlasRectUniform=new Float32Array(4);this._batchGroupId=-1;this._batchGroup=null;this._node=new By;this._model=new Jx;this._model.graph=this._node;this._meshInstance=null;e.addChild(this._model.graph);this._model._entity=e;this._updateAabbFunc=this._updateAabb.bind(this);this._addedModel=false;this._autoPlayClip=null;this._clips={};this._defaultClip=new dV(this,{name:this.entity.name,fps:0,loop:false,spriteAsset:null});this._currentClip=this._defaultClip}set type(t){if(this._type===t){return}this._type=t;if(this._type===hV){this.stop();this._currentClip=this._defaultClip;if(this.enabled&&this.entity.enabled){this._currentClip.frame=this.frame;if(this._currentClip.sprite){this._showModel()}else{this._hideModel()}}}else if(this._type===cV){this.stop();if(this._autoPlayClip){this._tryAutoPlay()}if(this._currentClip&&this._currentClip.isPlaying&&this.enabled&&this.entity.enabled){this._showModel()}else{this._hideModel()}}}get type(){return this._type}set frame(t){this._currentClip.frame=t}get frame(){return this._currentClip.frame}set spriteAsset(t){this._defaultClip.spriteAsset=t}get spriteAsset(){return this._defaultClip._spriteAsset}set sprite(t){this._currentClip.sprite=t}get sprite(){return this._currentClip.sprite}set material(t){this._material=t;if(this._meshInstance){this._meshInstance.material=t}}get material(){return this._material}set color(t){this._color.r=t.r;this._color.g=t.g;this._color.b=t.b;if(this._meshInstance){this._colorUniform[0]=this._color.r;this._colorUniform[1]=this._color.g;this._colorUniform[2]=this._color.b;this._meshInstance.setParameter(pV,this._colorUniform)}}get color(){return this._color}set opacity(t){this._color.a=t;if(this._meshInstance){this._meshInstance.setParameter(mV,t)}}get opacity(){return this._color.a}set clips(t){if(!t){for(const t in this._clips){this.removeClip(t)}return}for(const e in this._clips){let s=false;for(const i in t){if(t[i].name===e){s=true;this._clips[e].fps=t[i].fps;this._clips[e].loop=t[i].loop;if(t[i].hasOwnProperty("sprite")){this._clips[e].sprite=t[i].sprite}else if(t[i].hasOwnProperty("spriteAsset")){this._clips[e].spriteAsset=t[i].spriteAsset}break}}if(!s){this.removeClip(e)}}for(const e in t){if(this._clips[t[e].name])continue;this.addClip(t[e])}if(this._autoPlayClip){this._tryAutoPlay()}if(!this._currentClip||!this._currentClip.sprite){this._hideModel()}}get clips(){return this._clips}get currentClip(){return this._currentClip}set speed(t){this._speed=t}get speed(){return this._speed}set flipX(t){if(this._flipX===t)return;this._flipX=t;this._updateTransform()}get flipX(){return this._flipX}set flipY(t){if(this._flipY===t)return;this._flipY=t;this._updateTransform()}get flipY(){return this._flipY}set width(t){if(t===this._width)return;this._width=t;this._outerScale.x=this._width;if(this.sprite&&(this.sprite.renderMode===Mg||this.sprite.renderMode===Dg)){this._updateTransform()}}get width(){return this._width}set height(t){if(t===this._height)return;this._height=t;this._outerScale.y=this.height;if(this.sprite&&(this.sprite.renderMode===Mg||this.sprite.renderMode===Dg)){this._updateTransform()}}get height(){return this._height}set batchGroupId(t){if(this._batchGroupId===t){return}const e=this._batchGroupId;this._batchGroupId=t;if(this.entity.enabled&&e>=0){this.system.app.batcher?.remove(Ov.SPRITE,e,this.entity)}if(this.entity.enabled&&t>=0){this.system.app.batcher?.insert(Ov.SPRITE,t,this.entity)}else{if(e>=0){if(this._currentClip&&this._currentClip.sprite&&this.enabled&&this.entity.enabled){this._showModel()}}}}get batchGroupId(){return this._batchGroupId}set autoPlayClip(t){this._autoPlayClip=t instanceof dV?t.name:t;this._tryAutoPlay()}get autoPlayClip(){return this._autoPlayClip}set drawOrder(t){this._drawOrder=t;if(this._meshInstance){this._meshInstance.drawOrder=t}}get drawOrder(){return this._drawOrder}set layers(t){if(this._addedModel){this._hideModel()}this._layers=t;if(!this._meshInstance){return}if(this.enabled&&this.entity.enabled){this._showModel()}}get layers(){return this._layers}get aabb(){if(this._meshInstance){return this._meshInstance.aabb}return null}onEnable(){const t=this.system.app;const e=t.scene;const s=e.layers;this._evtLayersChanged=e.on("set:layers",this._onLayersChanged,this);if(s){this._evtLayerAdded=s.on("add",this._onLayerAdded,this);this._evtLayerRemoved=s.on("remove",this._onLayerRemoved,this)}this._showModel();if(this._autoPlayClip){this._tryAutoPlay()}if(this._batchGroupId>=0){t.batcher?.insert(Ov.SPRITE,this._batchGroupId,this.entity)}}onDisable(){const t=this.system.app;const e=t.scene;const s=e.layers;this._evtLayersChanged?.off();this._evtLayersChanged=null;if(s){this._evtLayerAdded?.off();this._evtLayerAdded=null;this._evtLayerRemoved?.off();this._evtLayerRemoved=null}this.stop();this._hideModel();if(this._batchGroupId>=0){t.batcher?.remove(Ov.SPRITE,this._batchGroupId,this.entity)}}onDestroy(){this._currentClip=null;if(this._defaultClip){this._defaultClip._destroy();this._defaultClip=null}for(const t in this._clips){this._clips[t]._destroy()}this._clips=null;this._hideModel();this._model=null;this._node?.remove();this._node=null;if(this._meshInstance){this._meshInstance.material=null;this._meshInstance.mesh=null;this._meshInstance=null}}_showModel(){if(this._addedModel)return;if(!this._meshInstance)return;const t=[this._meshInstance];for(let e=0,s=this._layers.length;e<s;e++){const s=this.system.app.scene.layers.getLayerById(this._layers[e]);if(s){s.addMeshInstances(t)}}this._addedModel=true}_hideModel(){if(!this._addedModel||!this._meshInstance)return;const t=[this._meshInstance];for(let e=0,s=this._layers.length;e<s;e++){const s=this.system.app.scene.layers.getLayerById(this._layers[e]);if(s){s.removeMeshInstances(t)}}this._addedModel=false}_showFrame(t){if(!this.sprite)return;const e=this.sprite.meshes[t];if(!e){if(this._meshInstance){this._meshInstance.mesh=null;this._meshInstance.visible=false}return}let s;if(this.sprite.renderMode===Dg){s=this.system.default9SlicedMaterialSlicedMode}else if(this.sprite.renderMode===Mg){s=this.system.default9SlicedMaterialTiledMode}else{s=this.system.defaultMaterial}if(!this._meshInstance){this._meshInstance=new sy(e,this._material,this._node);this._meshInstance.castShadow=false;this._meshInstance.receiveShadow=false;this._meshInstance.drawOrder=this._drawOrder;this._model.meshInstances.push(this._meshInstance);this._colorUniform[0]=this._color.r;this._colorUniform[1]=this._color.g;this._colorUniform[2]=this._color.b;this._meshInstance.setParameter(pV,this._colorUniform);this._meshInstance.setParameter(mV,this._color.a);if(this.enabled&&this.entity.enabled){this._showModel()}}if(this._meshInstance.material!==s){this._meshInstance.material=s}if(this._meshInstance.mesh!==e){this._meshInstance.mesh=e;this._meshInstance.visible=true;this._meshInstance._aabbVer=-1}if(this.sprite.atlas&&this.sprite.atlas.texture){this._meshInstance.setParameter(uV,this.sprite.atlas.texture);this._meshInstance.setParameter(fV,this.sprite.atlas.texture)}else{this._meshInstance.deleteParameter(uV);this._meshInstance.deleteParameter(fV)}if(this.sprite.atlas&&(this.sprite.renderMode===Dg||this.sprite.renderMode===Mg)){this._meshInstance._updateAabbFunc=this._updateAabbFunc;const e=this.sprite.atlas.frames[this.sprite.frameKeys[t]];if(e){const t=2/e.rect.z;const s=2/e.rect.w;this._innerOffset.set(e.border.x*t,e.border.y*s,e.border.z*t,e.border.w*s);const i=this.sprite.atlas.texture;this._atlasRect.set(e.rect.x/i.width,e.rect.y/i.height,e.rect.z/i.width,e.rect.w/i.height)}else{this._innerOffset.set(0,0,0,0)}this._innerOffsetUniform[0]=this._innerOffset.x;this._innerOffsetUniform[1]=this._innerOffset.y;this._innerOffsetUniform[2]=this._innerOffset.z;this._innerOffsetUniform[3]=this._innerOffset.w;this._meshInstance.setParameter(_V,this._innerOffsetUniform);this._atlasRectUniform[0]=this._atlasRect.x;this._atlasRectUniform[1]=this._atlasRect.y;this._atlasRectUniform[2]=this._atlasRect.z;this._atlasRectUniform[3]=this._atlasRect.w;this._meshInstance.setParameter(vV,this._atlasRectUniform)}else{this._meshInstance._updateAabbFunc=null}this._updateTransform()}_updateTransform(){let t=this.flipX?-1:1;let e=this.flipY?-1:1;let s=0;let i=0;if(this.sprite&&(this.sprite.renderMode===Dg||this.sprite.renderMode===Mg)){let n=1;let r=1;if(this.sprite.atlas){const t=this.sprite.atlas.frames[this.sprite.frameKeys[this.frame]];if(t){n=t.rect.z;r=t.rect.w;s=(.5-t.pivot.x)*this._width;i=(.5-t.pivot.y)*this._height}}const a=n/this.sprite.pixelsPerUnit;const o=r/this.sprite.pixelsPerUnit;this._outerScale.set(Math.max(this._width,this._innerOffset.x*a),Math.max(this._height,this._innerOffset.y*o));t*=a;e*=o;this._outerScale.x/=a;this._outerScale.y/=o;t*=wt.clamp(this._width/(this._innerOffset.x*a),1e-4,1);e*=wt.clamp(this._height/(this._innerOffset.y*o),1e-4,1);if(this._meshInstance){this._outerScaleUniform[0]=this._outerScale.x;this._outerScaleUniform[1]=this._outerScale.y;this._meshInstance.setParameter(gV,this._outerScaleUniform)}}this._node.setLocalScale(t,e,1);this._node.setLocalPosition(s,i,0)}_updateAabb(t){t.center.set(0,0,0);t.halfExtents.set(this._outerScale.x*.5,this._outerScale.y*.5,.001);t.setFromTransformedAabb(t,this._node.getWorldTransform());return t}_tryAutoPlay(){if(!this._autoPlayClip)return;if(this.type!==cV)return;const t=this._clips[this._autoPlayClip];if(t&&!t.isPlaying&&(!this._currentClip||!this._currentClip.isPlaying)){if(this.enabled&&this.entity.enabled){this.play(t.name)}}}_onLayersChanged(t,e){t.off("add",this.onLayerAdded,this);t.off("remove",this.onLayerRemoved,this);e.on("add",this.onLayerAdded,this);e.on("remove",this.onLayerRemoved,this);if(this.enabled&&this.entity.enabled){this._showModel()}}_onLayerAdded(t){const e=this.layers.indexOf(t.id);if(e<0)return;if(this._addedModel&&this.enabled&&this.entity.enabled&&this._meshInstance){t.addMeshInstances([this._meshInstance])}}_onLayerRemoved(t){if(!this._meshInstance)return;const e=this.layers.indexOf(t.id);if(e<0)return;t.removeMeshInstances([this._meshInstance])}removeModelFromLayers(){for(let t=0;t<this.layers.length;t++){const e=this.system.app.scene.layers.getLayerById(this.layers[t]);if(!e)continue;e.removeMeshInstances([this._meshInstance])}}addClip(t){const e=new dV(this,{name:t.name,fps:t.fps,loop:t.loop,spriteAsset:t.spriteAsset});this._clips[t.name]=e;if(e.name&&e.name===this._autoPlayClip){this._tryAutoPlay()}return e}removeClip(t){delete this._clips[t]}clip(t){return this._clips[t]}play(t){const e=this._clips[t];const s=this._currentClip;if(s&&s!==e){s._playing=false}this._currentClip=e;if(this._currentClip){this._currentClip=e;this._currentClip.play()}return e}pause(){if(this._currentClip===this._defaultClip)return;if(this._currentClip.isPlaying){this._currentClip.pause()}}resume(){if(this._currentClip===this._defaultClip)return;if(this._currentClip.isPaused){this._currentClip.resume()}}stop(){if(this._currentClip===this._defaultClip)return;this._currentClip.stop()}}class SV{constructor(){this.enabled=true}}const xV=["enabled"];class TV extends $R{constructor(t){super(t);this.id="sprite";this.ComponentType=yV;this.DataType=SV;this.schema=xV;this._defaultTexture=null;this._defaultMaterial=null;this._default9SlicedMaterialSlicedMode=null;this._default9SlicedMaterialTiledMode=null;this.app.systems.on("update",this.onUpdate,this);this.on("beforeremove",this.onBeforeRemove,this)}set defaultMaterial(t){this._defaultMaterial=t}get defaultMaterial(){if(!this._defaultMaterial){const t=new lo(this.app.graphicsDevice,{width:1,height:1,format:Hs,name:"sprite"});const e=new Uint8Array(t.lock());e[0]=e[1]=e[2]=e[3]=255;t.unlock();const s=new Qb;s.diffuse.set(0,0,0);s.emissive.set(1,1,1);s.emissiveMap=t;s.opacityMap=t;s.opacityMapChannel="a";s.useLighting=false;s.useTonemap=false;s.useFog=false;s.useSkybox=false;s.blendType=Xp;s.depthWrite=false;s.pixelSnap=false;s.cull=ss;s.update();this._defaultTexture=t;this._defaultMaterial=s}return this._defaultMaterial}set default9SlicedMaterialSlicedMode(t){this._default9SlicedMaterialSlicedMode=t}get default9SlicedMaterialSlicedMode(){if(!this._default9SlicedMaterialSlicedMode){const t=this.defaultMaterial.clone();t.nineSlicedMode=Dg;t.update();this._default9SlicedMaterialSlicedMode=t}return this._default9SlicedMaterialSlicedMode}set default9SlicedMaterialTiledMode(t){this._default9SlicedMaterialTiledMode=t}get default9SlicedMaterialTiledMode(){if(!this._default9SlicedMaterialTiledMode){const t=this.defaultMaterial.clone();t.nineSlicedMode=Mg;t.update();this._default9SlicedMaterialTiledMode=t}return this._default9SlicedMaterialTiledMode}destroy(){super.destroy();this.app.systems.off("update",this.onUpdate,this);if(this._defaultTexture){this._defaultTexture.destroy();this._defaultTexture=null}}initializeComponentData(t,e,s){if(e.enabled!==undefined){t.enabled=e.enabled}t.type=e.type;if(e.layers&&Array.isArray(e.layers)){t.layers=e.layers.slice(0)}if(e.drawOrder!==undefined){t.drawOrder=e.drawOrder}if(e.color!==undefined){if(e.color instanceof bt){t.color.set(e.color.r,e.color.g,e.color.b,e.opacity??1)}else{t.color.set(e.color[0],e.color[1],e.color[2],e.opacity??1)}t.color=t.color}if(e.opacity!==undefined){t.opacity=e.opacity}if(e.flipX!==undefined){t.flipX=e.flipX}if(e.flipY!==undefined){t.flipY=e.flipY}if(e.width!==undefined){t.width=e.width}if(e.height!==undefined){t.height=e.height}if(e.spriteAsset!==undefined){t.spriteAsset=e.spriteAsset}if(e.sprite){t.sprite=e.sprite}if(e.frame!==undefined){t.frame=e.frame}if(e.clips){for(const s in e.clips){t.addClip(e.clips[s])}}if(e.speed!==undefined){t.speed=e.speed}if(e.autoPlayClip){t.autoPlayClip=e.autoPlayClip}t.batchGroupId=e.batchGroupId===undefined||e.batchGroupId===null?-1:e.batchGroupId;super.initializeComponentData(t,e,s)}cloneComponent(t,e){const s=t.sprite;return this.addComponent(e,{enabled:s.enabled,type:s.type,spriteAsset:s.spriteAsset,sprite:s.sprite,width:s.width,height:s.height,frame:s.frame,color:s.color.clone(),opacity:s.opacity,flipX:s.flipX,flipY:s.flipY,speed:s.speed,clips:s.clips,autoPlayClip:s.autoPlayClip,batchGroupId:s.batchGroupId,drawOrder:s.drawOrder,layers:s.layers.slice(0)})}onUpdate(t){const e=this.store;for(const s in e){if(e.hasOwnProperty(s)){const i=e[s];if(i.data.enabled&&i.entity.enabled){const e=i.entity.sprite;if(e._currentClip){e._currentClip._update(t)}}}}}onBeforeRemove(t,e){e.onDestroy()}}qR._buildAccessors(yV.prototype,xV);class wV extends qR{static{this.EVENT_ENABLE="enable"}static{this.EVENT_DISABLE="disable"}static{this.EVENT_STATE="state"}static{this.EVENT_REMOVE="remove"}constructor(t,e){super(t,e);this._oldState=true;this._size=new It;this.on("set_enabled",this._onSetEnabled,this)}set size(t){if(t instanceof It){this._size.copy(t)}else if(t instanceof Array&&t.length>=3){this.size.set(t[0],t[1],t[2])}}get size(){return this._size}onEnable(){this._checkState()}onDisable(){this._checkState()}_onSetEnabled(t,e,s){this._checkState()}_checkState(){const t=this.enabled&&this.entity.enabled;if(t===this._oldState){return}this._oldState=t;this.fire("enable");this.fire("state",this.enabled)}_onBeforeRemove(){this.fire("remove")}}class bV{constructor(){this.enabled=true}}const EV=["enabled"];class AV extends $R{constructor(t){super(t);this.id="zone";this.ComponentType=wV;this.DataType=bV;this.schema=EV;this.on("beforeremove",this._onBeforeRemove,this)}initializeComponentData(t,e,s){t.enabled=e.hasOwnProperty("enabled")?!!e.enabled:true;if(e.size){if(e.size instanceof It){t.size.copy(e.size)}else if(e.size instanceof Array&&e.size.length>=3){t.size.set(e.size[0],e.size[1],e.size[2])}}}cloneComponent(t,e){const s={enabled:t.zone.enabled,size:t.zone.size};return this.addComponent(e,s)}_onBeforeRemove(t,e){e._onBeforeRemove()}}qR._buildAccessors(wV.prototype,EV);class CV{constructor(t,e){this.effect=t;this.inputTarget=e;this.outputTarget=null;this.name=t.constructor.name}}class PV{constructor(t,e){this.app=t;this.camera=e;this.destinationRenderTarget=null;this.effects=[];this.enabled=false;this.depthTarget=null;e.on("set:rect",this.onCameraRectChanged,this)}_allocateColorBuffer(t,e){const s=this.camera.rect;const i=this.destinationRenderTarget;const n=this.app.graphicsDevice;const r=Math.floor(s.z*(i?.width??n.width));const a=Math.floor(s.w*(i?.height??n.height));const o=new lo(n,{name:e,format:t,width:r,height:a,mipmaps:false,minFilter:as,magFilter:as,addressU:pe,addressV:pe});return o}_createOffscreenTarget(t,e){const s=this.app.graphicsDevice;const i=this.destinationRenderTarget??s.backBuffer;const n=i.isColorBufferSrgb(0);const r=(e&&s.getRenderableHdrFormat([Fs,ks],true))??(n?Hs:Ds);const a=`${this.camera.entity.name}-posteffect-${this.effects.length}`;const o=this._allocateColorBuffer(r,a);return new il({colorBuffer:o,depth:t,stencil:t&&this.app.graphicsDevice.supportsStencil,samples:t?s.samples:1})}_resizeOffscreenTarget(t){const e=t.colorBuffer.format;const s=t.colorBuffer.name;t.destroyFrameBuffers();t.destroyTextureBuffers();t._colorBuffer=this._allocateColorBuffer(e,s);t._colorBuffers=[t._colorBuffer]}_destroyOffscreenTarget(t){t.destroyTextureBuffers();t.destroy()}addEffect(t){const e=this.effects;const s=e.length===0;const i=this._createOffscreenTarget(s,t.hdr);const n=new CV(t,i);e.push(n);this._sourceTarget=n.inputTarget;if(e.length>1){e[e.length-2].outputTarget=n.inputTarget}this._newPostEffect=t;if(t.needsDepthBuffer){this._requestDepthMap()}this.enable();this._newPostEffect=undefined}removeEffect(t){let e=-1;for(let s=0,i=this.effects.length;s<i;s++){if(this.effects[s].effect===t){e=s;break}}if(e>=0){if(e>0){this.effects[e-1].outputTarget=e+1<this.effects.length?this.effects[e+1].inputTarget:null}else{if(this.effects.length>1){if(!this.effects[1].inputTarget._depth){this._destroyOffscreenTarget(this.effects[1].inputTarget);this.effects[1].inputTarget=this._createOffscreenTarget(true,this.effects[1].hdr);this._sourceTarget=this.effects[1].inputTarget}this.camera.renderTarget=this.effects[1].inputTarget}}this._destroyOffscreenTarget(this.effects[e].inputTarget);this.effects.splice(e,1)}if(this.enabled){if(t.needsDepthBuffer){this._releaseDepthMap()}}if(this.effects.length===0){this.disable()}}_requestDepthMaps(){for(let t=0,e=this.effects.length;t<e;t++){const e=this.effects[t].effect;if(this._newPostEffect===e){continue}if(e.needsDepthBuffer){this._requestDepthMap()}}}_releaseDepthMaps(){for(let t=0,e=this.effects.length;t<e;t++){const e=this.effects[t].effect;if(e.needsDepthBuffer){this._releaseDepthMap()}}}_requestDepthMap(){const t=this.app.scene.layers.getLayerById(cm);if(t){t.incrementCounter();this.camera.requestSceneDepthMap(true)}}_releaseDepthMap(){const t=this.app.scene.layers.getLayerById(cm);if(t){t.decrementCounter();this.camera.requestSceneDepthMap(false)}}destroy(){for(let t=0,e=this.effects.length;t<e;t++){this.effects[t].inputTarget.destroy()}this.effects.length=0;this.disable()}enable(){if(!this.enabled&&this.effects.length){this.enabled=true;this._requestDepthMaps();this.app.graphicsDevice.on("resizecanvas",this._onCanvasResized,this);this.destinationRenderTarget=this.camera.renderTarget;this.camera.renderTarget=this.effects[0].inputTarget;this.camera.onPostprocessing=()=>{if(this.enabled){let t=null;const e=this.effects.length;if(e){for(let s=0;s<e;s++){const i=this.effects[s];let n=i.outputTarget;if(s===e-1){t=this.camera.rect;if(this.destinationRenderTarget){n=this.destinationRenderTarget}}i.effect.render(i.inputTarget,n,t)}}}}}}disable(){if(this.enabled){this.enabled=false;this.app.graphicsDevice.off("resizecanvas",this._onCanvasResized,this);this._releaseDepthMaps();this._destroyOffscreenTarget(this._sourceTarget);this.camera.renderTarget=this.destinationRenderTarget;this.camera.onPostprocessing=null}}_onCanvasResized(t,e){const s=this.camera.rect;const i=this.destinationRenderTarget;t=i?.width??t;e=i?.height??e;this.camera.camera.aspectRatio=t*s.z/(e*s.w);this.resizeRenderTargets()}resizeRenderTargets(){const t=this.app.graphicsDevice;const e=this.destinationRenderTarget;const s=e?.width??t.width;const i=e?.height??t.height;const n=this.camera.rect;const r=Math.floor(n.z*s);const a=Math.floor(n.w*i);const o=this.effects;for(let t=0,e=o.length;t<e;t++){const e=o[t];if(e.inputTarget.width!==r||e.inputTarget.height!==a){this._resizeOffscreenTarget(e.inputTarget)}}}onCameraRectChanged(t,e,s){if(this.enabled){this.resizeRenderTargets()}}}class LV extends qR{constructor(t,e){super(t,e),this.onPostprocessing=null,this._renderSceneDepthMap=0,this._renderSceneColorMap=0,this._sceneDepthMapRequested=false,this._sceneColorMapRequested=false,this._priority=0,this._disablePostEffectsLayer=fm,this._camera=new Sy,this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null;this._camera.node=e;this._postEffects=new PV(t.app,this)}setShaderPass(t){const e=_v.get(this.system.app.graphicsDevice);const s=t?e.allocate(t,{isForward:true}):null;this._camera.shaderPassInfo=s;return s.index}getShaderPass(){return this._camera.shaderPassInfo?.name}set renderPasses(t){this._camera.renderPasses=t||[];this.dirtyLayerCompositionCameras();this.system.app.scene.updateShaders=true}get renderPasses(){return this._camera.renderPasses}get shaderParams(){return this._camera.shaderParams}set gammaCorrection(t){this.camera.shaderParams.gammaCorrection=t}get gammaCorrection(){return this.camera.shaderParams.gammaCorrection}set toneMapping(t){this.camera.shaderParams.toneMapping=t}get toneMapping(){return this.camera.shaderParams.toneMapping}set fog(t){this._camera.fogParams=t}get fog(){return this._camera.fogParams}set aperture(t){this._camera.aperture=t}get aperture(){return this._camera.aperture}set aspectRatio(t){this._camera.aspectRatio=t}get aspectRatio(){return this._camera.aspectRatio}set aspectRatioMode(t){this._camera.aspectRatioMode=t}get aspectRatioMode(){return this._camera.aspectRatioMode}set calculateProjection(t){this._camera.calculateProjection=t}get calculateProjection(){return this._camera.calculateProjection}set calculateTransform(t){this._camera.calculateTransform=t}get calculateTransform(){return this._camera.calculateTransform}get camera(){return this._camera}set clearColor(t){this._camera.clearColor=t}get clearColor(){return this._camera.clearColor}set clearColorBuffer(t){this._camera.clearColorBuffer=t;this.dirtyLayerCompositionCameras()}get clearColorBuffer(){return this._camera.clearColorBuffer}set clearDepthBuffer(t){this._camera.clearDepthBuffer=t;this.dirtyLayerCompositionCameras()}get clearDepthBuffer(){return this._camera.clearDepthBuffer}set clearStencilBuffer(t){this._camera.clearStencilBuffer=t;this.dirtyLayerCompositionCameras()}get clearStencilBuffer(){return this._camera.clearStencilBuffer}set cullFaces(t){this._camera.cullFaces=t}get cullFaces(){return this._camera.cullFaces}set disablePostEffectsLayer(t){this._disablePostEffectsLayer=t;this.dirtyLayerCompositionCameras()}get disablePostEffectsLayer(){return this._disablePostEffectsLayer}set farClip(t){this._camera.farClip=t}get farClip(){return this._camera.farClip}set flipFaces(t){this._camera.flipFaces=t}get flipFaces(){return this._camera.flipFaces}set fov(t){this._camera.fov=t}get fov(){return this._camera.fov}get frustum(){return this._camera.frustum}set frustumCulling(t){this._camera.frustumCulling=t}get frustumCulling(){return this._camera.frustumCulling}set horizontalFov(t){this._camera.horizontalFov=t}get horizontalFov(){return this._camera.horizontalFov}set layers(t){const e=this._camera.layers;const s=this.system.app.scene;e.forEach((t=>{const e=s.layers.getLayerById(t);e?.removeCamera(this)}));this._camera.layers=t;if(this.enabled&&this.entity.enabled){t.forEach((t=>{const e=s.layers.getLayerById(t);e?.addCamera(this)}))}this.fire("set:layers")}get layers(){return this._camera.layers}get layersSet(){return this._camera.layersSet}set jitter(t){this._camera.jitter=t}get jitter(){return this._camera.jitter}set nearClip(t){this._camera.nearClip=t}get nearClip(){return this._camera.nearClip}set orthoHeight(t){this._camera.orthoHeight=t}get orthoHeight(){return this._camera.orthoHeight}get postEffects(){return this._postEffects}get postEffectsEnabled(){return this._postEffects.enabled}set priority(t){this._priority=t;this.dirtyLayerCompositionCameras()}get priority(){return this._priority}set projection(t){this._camera.projection=t}get projection(){return this._camera.projection}get projectionMatrix(){return this._camera.projectionMatrix}set rect(t){this._camera.rect=t;this.fire("set:rect",this._camera.rect)}get rect(){return this._camera.rect}set renderSceneColorMap(t){if(t&&!this._sceneColorMapRequested){this.requestSceneColorMap(true);this._sceneColorMapRequested=true}else if(this._sceneColorMapRequested){this.requestSceneColorMap(false);this._sceneColorMapRequested=false}}get renderSceneColorMap(){return this._renderSceneColorMap>0}set renderSceneDepthMap(t){if(t&&!this._sceneDepthMapRequested){this.requestSceneDepthMap(true);this._sceneDepthMapRequested=true}else if(this._sceneDepthMapRequested){this.requestSceneDepthMap(false);this._sceneDepthMapRequested=false}}get renderSceneDepthMap(){return this._renderSceneDepthMap>0}set renderTarget(t){this._camera.renderTarget=t;this.dirtyLayerCompositionCameras()}get renderTarget(){return this._camera.renderTarget}set scissorRect(t){this._camera.scissorRect=t}get scissorRect(){return this._camera.scissorRect}set sensitivity(t){this._camera.sensitivity=t}get sensitivity(){return this._camera.sensitivity}set shutter(t){this._camera.shutter=t}get shutter(){return this._camera.shutter}get viewMatrix(){return this._camera.viewMatrix}_enableDepthLayer(t){const e=this.layers.find((t=>t===cm));if(e){const e=this.system.app.scene.layers.getLayerById(cm);if(t){e?.incrementCounter()}else{e?.decrementCounter()}}else if(t){return false}return true}requestSceneColorMap(t){this._renderSceneColorMap+=t?1:-1;this._enableDepthLayer(t);this.camera._enableRenderPassColorGrab(this.system.app.graphicsDevice,this.renderSceneColorMap);this.system.app.scene.layers.markDirty()}requestSceneDepthMap(t){this._renderSceneDepthMap+=t?1:-1;this._enableDepthLayer(t);this.camera._enableRenderPassDepthGrab(this.system.app.graphicsDevice,this.system.app.renderer,this.renderSceneDepthMap);this.system.app.scene.layers.markDirty()}dirtyLayerCompositionCameras(){const t=this.system.app.scene.layers;t._dirty=true}screenToWorld(t,e,s,i){const n=this.system.app.graphicsDevice;const{width:r,height:a}=n.clientRect;return this._camera.screenToWorld(t,e,s,r,a,i)}worldToScreen(t,e){const s=this.system.app.graphicsDevice;const{width:i,height:n}=s.clientRect;return this._camera.worldToScreen(t,i,n,e)}onAppPrerender(){this._camera._viewMatDirty=true;this._camera._viewProjMatDirty=true}addCameraToLayers(){const t=this.layers;for(let e=0;e<t.length;e++){const s=this.system.app.scene.layers.getLayerById(t[e]);if(s){s.addCamera(this)}}}removeCameraFromLayers(){const t=this.layers;for(let e=0;e<t.length;e++){const s=this.system.app.scene.layers.getLayerById(t[e]);if(s){s.removeCamera(this)}}}onLayersChanged(t,e){this.addCameraToLayers();t.off("add",this.onLayerAdded,this);t.off("remove",this.onLayerRemoved,this);e.on("add",this.onLayerAdded,this);e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){const e=this.layers.indexOf(t.id);if(e<0)return;t.addCamera(this)}onLayerRemoved(t){const e=this.layers.indexOf(t.id);if(e<0)return;t.removeCamera(this)}onEnable(){const t=this.system.app.scene;const e=t.layers;this.system.addCamera(this);this._evtLayersChanged?.off();this._evtLayersChanged=t.on("set:layers",this.onLayersChanged,this);if(e){this._evtLayerAdded?.off();this._evtLayerAdded=e.on("add",this.onLayerAdded,this);this._evtLayerRemoved?.off();this._evtLayerRemoved=e.on("remove",this.onLayerRemoved,this)}if(this.enabled&&this.entity.enabled){this.addCameraToLayers()}this.postEffects.enable()}onDisable(){const t=this.system.app.scene;const e=t.layers;this.postEffects.disable();this.removeCameraFromLayers();this._evtLayersChanged?.off();this._evtLayersChanged=null;if(e){this._evtLayerAdded?.off();this._evtLayerAdded=null;this._evtLayerRemoved?.off();this._evtLayerRemoved=null}this.system.removeCamera(this)}onRemove(){this.onDisable();this.off();this.camera.destroy()}calculateAspectRatio(t){const e=this.system.app.graphicsDevice;const s=t?t.width:e.width;const i=t?t.height:e.height;return s*this.rect.z/(i*this.rect.w)}frameUpdate(t){if(this.aspectRatioMode===Wg){this.aspectRatio=this.calculateAspectRatio(t)}}startXr(t,e,s){this.system.app.xr.start(this,t,e,s)}endXr(t){if(!this._camera.xr){if(t)t(new Error("Camera is not in XR"));return}this._camera.xr.end(t)}copy(t){this.aperture=t.aperture;this.aspectRatio=t.aspectRatio;this.aspectRatioMode=t.aspectRatioMode;this.calculateProjection=t.calculateProjection;this.calculateTransform=t.calculateTransform;this.clearColor=t.clearColor;this.clearColorBuffer=t.clearColorBuffer;this.clearDepthBuffer=t.clearDepthBuffer;this.clearStencilBuffer=t.clearStencilBuffer;this.cullFaces=t.cullFaces;this.disablePostEffectsLayer=t.disablePostEffectsLayer;this.farClip=t.farClip;this.flipFaces=t.flipFaces;this.fov=t.fov;this.frustumCulling=t.frustumCulling;this.horizontalFov=t.horizontalFov;this.layers=t.layers;this.nearClip=t.nearClip;this.orthoHeight=t.orthoHeight;this.priority=t.priority;this.projection=t.projection;this.rect=t.rect;this.renderTarget=t.renderTarget;this.scissorRect=t.scissorRect;this.sensitivity=t.sensitivity;this.shutter=t.shutter}}class DV{constructor(){this.enabled=true}}const MV=["enabled"];class IV extends $R{constructor(t){super(t),this.cameras=[];this.id="camera";this.ComponentType=LV;this.DataType=DV;this.schema=MV;this.on("beforeremove",this.onBeforeRemove,this);this.app.on("prerender",this.onAppPrerender,this)}initializeComponentData(t,e,s){s=["aspectRatio","aspectRatioMode","calculateProjection","calculateTransform","clearColor","clearColorBuffer","clearDepthBuffer","clearStencilBuffer","renderSceneColorMap","renderSceneDepthMap","cullFaces","farClip","flipFaces","fog","fov","frustumCulling","horizontalFov","layers","renderTarget","nearClip","orthoHeight","projection","priority","rect","scissorRect","aperture","shutter","sensitivity","gammaCorrection","toneMapping"];for(let i=0;i<s.length;i++){const n=s[i];if(e.hasOwnProperty(n)){const s=e[n];switch(n){case"rect":case"scissorRect":if(Array.isArray(s)){t[n]=new Ft(s[0],s[1],s[2],s[3])}else{t[n]=s}break;case"clearColor":if(Array.isArray(s)){t[n]=new bt(s[0],s[1],s[2],s[3])}else{t[n]=s}break;default:t[n]=s;break}}}super.initializeComponentData(t,e,["enabled"])}cloneComponent(t,e){const s=t.camera;return this.addComponent(e,{aspectRatio:s.aspectRatio,aspectRatioMode:s.aspectRatioMode,calculateProjection:s.calculateProjection,calculateTransform:s.calculateTransform,clearColor:s.clearColor,clearColorBuffer:s.clearColorBuffer,clearDepthBuffer:s.clearDepthBuffer,clearStencilBuffer:s.clearStencilBuffer,renderSceneDepthMap:s.renderSceneDepthMap,renderSceneColorMap:s.renderSceneColorMap,cullFaces:s.cullFaces,enabled:s.enabled,farClip:s.farClip,flipFaces:s.flipFaces,fov:s.fov,frustumCulling:s.frustumCulling,horizontalFov:s.horizontalFov,layers:s.layers,renderTarget:s.renderTarget,nearClip:s.nearClip,orthoHeight:s.orthoHeight,projection:s.projection,priority:s.priority,rect:s.rect,scissorRect:s.scissorRect,aperture:s.aperture,sensitivity:s.sensitivity,shutter:s.shutter,gammaCorrection:s.gammaCorrection,toneMapping:s.toneMapping})}onBeforeRemove(t,e){this.removeCamera(e);e.onRemove()}onAppPrerender(){for(let t=0,e=this.cameras.length;t<e;t++){this.cameras[t].onAppPrerender()}}addCamera(t){this.cameras.push(t);Ux(this.cameras)}removeCamera(t){const e=this.cameras.indexOf(t);if(e>=0){this.cameras.splice(e,1);Ux(this.cameras)}}destroy(){this.app.off("prerender",this.onAppPrerender,this);super.destroy()}}qR._buildAccessors(LV.prototype,MV);class RV{constructor(){this.enabled=true;this.type="directional";this.color=new bt(1,1,1);this.intensity=1;this.luminance=0;this.shape=xm;this.affectSpecularity=true;this.castShadows=false;this.shadowDistance=40;this.shadowIntensity=1;this.shadowResolution=1024;this.shadowBias=.05;this.numCascades=1;this.cascadeBlend=0;this.bakeNumSamples=1;this.bakeArea=0;this.cascadeDistribution=.5;this.normalOffsetBias=0;this.range=10;this.innerConeAngle=40;this.outerConeAngle=45;this.falloffMode=Am;this.shadowType=Lm;this.vsmBlurSize=11;this.vsmBlurMode=Km;this.vsmBias=.01*.25;this.cookieAsset=null;this.cookie=null;this.cookieIntensity=1;this.cookieFalloff=true;this.cookieChannel="rgb";this.cookieAngle=0;this.cookieScale=null;this.cookieOffset=null;this.shadowUpdateMode=cg;this.mask=1;this.affectDynamic=true;this.affectLightmapped=false;this.bake=false;this.bakeDir=true;this.isStatic=false;this.layers=[hm];this.penumbraSize=1;this.penumbraFalloff=1;this.shadowSamples=16;this.shadowBlockerSamples=16}}const OV=Object.keys(new RV);class FV extends qR{get data(){const t=this.system.store[this.entity.getGuid()];return t?t.data:null}set enabled(t){this._setValue("enabled",t,(function(t,e){this.onSetEnabled(null,e,t)}))}get enabled(){return this.data.enabled}set light(t){this._setValue("light",t)}get light(){return this.data.light}set type(t){this._setValue("type",t,(function(t,e){this.system.changeType(this,e,t);this.refreshProperties()}))}get type(){return this.data.type}set color(t){this._setValue("color",t,(function(t,e){this.light.setColor(t)}),true)}get color(){return this.data.color}set intensity(t){this._setValue("intensity",t,(function(t,e){this.light.intensity=t}))}get intensity(){return this.data.intensity}set luminance(t){this._setValue("luminance",t,(function(t,e){this.light.luminance=t}))}get luminance(){return this.data.luminance}set shape(t){this._setValue("shape",t,(function(t,e){this.light.shape=t}))}get shape(){return this.data.shape}set affectSpecularity(t){this._setValue("affectSpecularity",t,(function(t,e){this.light.affectSpecularity=t}))}get affectSpecularity(){return this.data.affectSpecularity}set castShadows(t){this._setValue("castShadows",t,(function(t,e){this.light.castShadows=t}))}get castShadows(){return this.data.castShadows}set shadowDistance(t){this._setValue("shadowDistance",t,(function(t,e){this.light.shadowDistance=t}))}get shadowDistance(){return this.data.shadowDistance}set shadowIntensity(t){this._setValue("shadowIntensity",t,(function(t,e){this.light.shadowIntensity=t}))}get shadowIntensity(){return this.data.shadowIntensity}set shadowResolution(t){this._setValue("shadowResolution",t,(function(t,e){this.light.shadowResolution=t}))}get shadowResolution(){return this.data.shadowResolution}set shadowBias(t){this._setValue("shadowBias",t,(function(t,e){this.light.shadowBias=-.01*wt.clamp(t,0,1)}))}get shadowBias(){return this.data.shadowBias}set numCascades(t){this._setValue("numCascades",t,(function(t,e){this.light.numCascades=wt.clamp(Math.floor(t),1,4)}))}get numCascades(){return this.data.numCascades}set cascadeBlend(t){this._setValue("cascadeBlend",t,(function(t,e){this.light.cascadeBlend=wt.clamp(t,0,1)}))}get cascadeBlend(){return this.data.cascadeBlend}set bakeNumSamples(t){this._setValue("bakeNumSamples",t,(function(t,e){this.light.bakeNumSamples=wt.clamp(Math.floor(t),1,255)}))}get bakeNumSamples(){return this.data.bakeNumSamples}set bakeArea(t){this._setValue("bakeArea",t,(function(t,e){this.light.bakeArea=wt.clamp(t,0,180)}))}get bakeArea(){return this.data.bakeArea}set cascadeDistribution(t){this._setValue("cascadeDistribution",t,(function(t,e){this.light.cascadeDistribution=wt.clamp(t,0,1)}))}get cascadeDistribution(){return this.data.cascadeDistribution}set normalOffsetBias(t){this._setValue("normalOffsetBias",t,(function(t,e){this.light.normalOffsetBias=wt.clamp(t,0,1)}))}get normalOffsetBias(){return this.data.normalOffsetBias}set range(t){this._setValue("range",t,(function(t,e){this.light.attenuationEnd=t}))}get range(){return this.data.range}set innerConeAngle(t){this._setValue("innerConeAngle",t,(function(t,e){this.light.innerConeAngle=t}))}get innerConeAngle(){return this.data.innerConeAngle}set outerConeAngle(t){this._setValue("outerConeAngle",t,(function(t,e){this.light.outerConeAngle=t}))}get outerConeAngle(){return this.data.outerConeAngle}set falloffMode(t){this._setValue("falloffMode",t,(function(t,e){this.light.falloffMode=t}))}get falloffMode(){return this.data.falloffMode}set shadowType(t){this._setValue("shadowType",t,(function(t,e){this.light.shadowType=t}))}get shadowType(){return this.data.shadowType}set vsmBlurSize(t){this._setValue("vsmBlurSize",t,(function(t,e){this.light.vsmBlurSize=t}))}get vsmBlurSize(){return this.data.vsmBlurSize}set vsmBlurMode(t){this._setValue("vsmBlurMode",t,(function(t,e){this.light.vsmBlurMode=t}))}get vsmBlurMode(){return this.data.vsmBlurMode}set vsmBias(t){this._setValue("vsmBias",t,(function(t,e){this.light.vsmBias=wt.clamp(t,0,1)}))}get vsmBias(){return this.data.vsmBias}set cookieAsset(t){this._setValue("cookieAsset",t,(function(t,e){if(this._cookieAssetId&&(t instanceof qA&&t.id===this._cookieAssetId||t===this._cookieAssetId)){return}this.onCookieAssetRemove();this._cookieAssetId=null;if(t instanceof qA){this.data.cookieAsset=t.id;this._cookieAssetId=t.id;this.onCookieAssetAdd(t)}else if(typeof t==="number"){this._cookieAssetId=t;const e=this.system.app.assets.get(t);if(e){this.onCookieAssetAdd(e)}else{this._cookieAssetAdd=true;this.system.app.assets.on(`add:${this._cookieAssetId}`,this.onCookieAssetAdd,this)}}}))}get cookieAsset(){return this.data.cookieAsset}set cookie(t){this._setValue("cookie",t,(function(t,e){this.light.cookie=t}))}get cookie(){return this.data.cookie}set cookieIntensity(t){this._setValue("cookieIntensity",t,(function(t,e){this.light.cookieIntensity=wt.clamp(t,0,1)}))}get cookieIntensity(){return this.data.cookieIntensity}set cookieFalloff(t){this._setValue("cookieFalloff",t,(function(t,e){this.light.cookieFalloff=t}))}get cookieFalloff(){return this.data.cookieFalloff}set cookieChannel(t){this._setValue("cookieChannel",t,(function(t,e){this.light.cookieChannel=t}))}get cookieChannel(){return this.data.cookieChannel}set cookieAngle(t){this._setValue("cookieAngle",t,(function(t,e){if(t!==0||this.cookieScale!==null){if(!this._cookieMatrix)this._cookieMatrix=new Ft;let e=1;let s=1;if(this.cookieScale){e=this.cookieScale.x;s=this.cookieScale.y}const i=Math.cos(t*wt.DEG_TO_RAD);const n=Math.sin(t*wt.DEG_TO_RAD);this._cookieMatrix.set(i/e,-n/e,n/s,i/s);this.light.cookieTransform=this._cookieMatrix}else{this.light.cookieTransform=null}}))}get cookieAngle(){return this.data.cookieAngle}set cookieScale(t){this._setValue("cookieScale",t,(function(t,e){if(t!==null||this.cookieAngle!==0){if(!this._cookieMatrix)this._cookieMatrix=new Ft;const e=t.x;const s=t.y;const i=Math.cos(this.cookieAngle*wt.DEG_TO_RAD);const n=Math.sin(this.cookieAngle*wt.DEG_TO_RAD);this._cookieMatrix.set(i/e,-n/e,n/s,i/s);this.light.cookieTransform=this._cookieMatrix}else{this.light.cookieTransform=null}}),true)}get cookieScale(){return this.data.cookieScale}set cookieOffset(t){this._setValue("cookieOffset",t,(function(t,e){this.light.cookieOffset=t}),true)}get cookieOffset(){return this.data.cookieOffset}set shadowUpdateMode(t){this._setValue("shadowUpdateMode",t,(function(t,e){this.light.shadowUpdateMode=t}),true)}get shadowUpdateMode(){return this.data.shadowUpdateMode}set mask(t){this._setValue("mask",t,(function(t,e){this.light.mask=t}))}get mask(){return this.data.mask}set affectDynamic(t){this._setValue("affectDynamic",t,(function(t,e){if(t){this.light.mask|=dg}else{this.light.mask&=-2}this.light.layersDirty()}))}get affectDynamic(){return this.data.affectDynamic}set affectLightmapped(t){this._setValue("affectLightmapped",t,(function(t,e){if(t){this.light.mask|=ug;if(this.bake)this.light.mask&=-5}else{this.light.mask&=-3;if(this.bake)this.light.mask|=fg}}))}get affectLightmapped(){return this.data.affectLightmapped}set bake(t){this._setValue("bake",t,(function(t,e){if(t){this.light.mask|=fg;if(this.affectLightmapped)this.light.mask&=-3}else{this.light.mask&=-5;if(this.affectLightmapped)this.light.mask|=ug}this.light.layersDirty()}))}get bake(){return this.data.bake}set bakeDir(t){this._setValue("bakeDir",t,(function(t,e){this.light.bakeDir=t}))}get bakeDir(){return this.data.bakeDir}set isStatic(t){this._setValue("isStatic",t,(function(t,e){this.light.isStatic=t}))}get isStatic(){return this.data.isStatic}set layers(t){this._setValue("layers",t,(function(t,e){for(let t=0;t<e.length;t++){const s=this.system.app.scene.layers.getLayerById(e[t]);if(!s)continue;s.removeLight(this);this.light.removeLayer(s)}for(let e=0;e<t.length;e++){const s=this.system.app.scene.layers.getLayerById(t[e]);if(!s)continue;if(this.enabled&&this.entity.enabled){s.addLight(this);this.light.addLayer(s)}}}))}get layers(){return this.data.layers}set shadowUpdateOverrides(t){this.light.shadowUpdateOverrides=t}get shadowUpdateOverrides(){return this.light.shadowUpdateOverrides}set shadowSamples(t){this.light.shadowSamples=t}get shadowSamples(){return this.light.shadowSamples}set shadowBlockerSamples(t){this.light.shadowBlockerSamples=t}get shadowBlockerSamples(){return this.light.shadowBlockerSamples}set penumbraSize(t){this.light.penumbraSize=t}get penumbraSize(){return this.light.penumbraSize}set penumbraFalloff(t){this.light.penumbraFalloff=t}get penumbraFalloff(){return this.light.penumbraFalloff}_setValue(t,e,s,i){const n=this.data;const r=n[t];if(!i&&r===e)return;n[t]=e;if(s)s.call(this,e,r)}addLightToLayers(){for(let t=0;t<this.layers.length;t++){const e=this.system.app.scene.layers.getLayerById(this.layers[t]);if(e){e.addLight(this);this.light.addLayer(e)}}}removeLightFromLayers(){for(let t=0;t<this.layers.length;t++){const e=this.system.app.scene.layers.getLayerById(this.layers[t]);if(e){e.removeLight(this);this.light.removeLayer(e)}}}onLayersChanged(t,e){if(this.enabled&&this.entity.enabled){this.addLightToLayers()}t.off("add",this.onLayerAdded,this);t.off("remove",this.onLayerRemoved,this);e.on("add",this.onLayerAdded,this);e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){const e=this.layers.indexOf(t.id);if(e>=0&&this.enabled&&this.entity.enabled){t.addLight(this);this.light.addLayer(t)}}onLayerRemoved(t){const e=this.layers.indexOf(t.id);if(e>=0){t.removeLight(this);this.light.removeLayer(t)}}refreshProperties(){for(let t=0;t<OV.length;t++){const e=OV[t];this[e]=this[e]}if(this.enabled&&this.entity.enabled){this.onEnable()}}onCookieAssetSet(){let t=false;if(this._cookieAsset.type==="cubemap"&&!this._cookieAsset.loadFaces){this._cookieAsset.loadFaces=true;t=true}if(!this._cookieAsset.resource||t)this.system.app.assets.load(this._cookieAsset);if(this._cookieAsset.resource){this.onCookieAssetLoad()}}onCookieAssetAdd(t){if(this._cookieAssetId!==t.id)return;this._cookieAsset=t;if(this.light.enabled){this.onCookieAssetSet()}this._cookieAsset.on("load",this.onCookieAssetLoad,this);this._cookieAsset.on("remove",this.onCookieAssetRemove,this)}onCookieAssetLoad(){if(!this._cookieAsset||!this._cookieAsset.resource){return}this.cookie=this._cookieAsset.resource}onCookieAssetRemove(){if(!this._cookieAssetId){return}if(this._cookieAssetAdd){this.system.app.assets.off(`add:${this._cookieAssetId}`,this.onCookieAssetAdd,this);this._cookieAssetAdd=false}if(this._cookieAsset){this._cookieAsset.off("load",this.onCookieAssetLoad,this);this._cookieAsset.off("remove",this.onCookieAssetRemove,this);this._cookieAsset=null}this.cookie=null}onEnable(){const t=this.system.app.scene;const e=t.layers;this.light.enabled=true;this._evtLayersChanged=t.on("set:layers",this.onLayersChanged,this);if(e){this._evtLayerAdded=e.on("add",this.onLayerAdded,this);this._evtLayerRemoved=e.on("remove",this.onLayerRemoved,this)}if(this.enabled&&this.entity.enabled){this.addLightToLayers()}if(this._cookieAsset&&!this.cookie){this.onCookieAssetSet()}}onDisable(){const t=this.system.app.scene;const e=t.layers;this.light.enabled=false;this._evtLayersChanged?.off();this._evtLayersChanged=null;if(e){this._evtLayerAdded?.off();this._evtLayerAdded=null;this._evtLayerRemoved?.off();this._evtLayerRemoved=null}this.removeLightFromLayers()}onRemove(){this.onDisable();this.light.destroy();this.cookieAsset=null}constructor(...t){super(...t),this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null,this._cookieAsset=null,this._cookieAssetId=null,this._cookieAssetAdd=false,this._cookieMatrix=null}}class NV extends $R{constructor(t){super(t);this.id="light";this.ComponentType=FV;this.DataType=RV;this.on("beforeremove",this._onRemoveComponent,this)}initializeComponentData(t,e){const s={...e};if(!s.type){s.type=t.data.type}t.data.type=s.type;if(s.layers&&Array.isArray(s.layers)){s.layers=s.layers.slice(0)}if(s.color&&Array.isArray(s.color)){s.color=new bt(s.color[0],s.color[1],s.color[2])}if(s.cookieOffset&&s.cookieOffset instanceof Array){s.cookieOffset=new Ot(s.cookieOffset[0],s.cookieOffset[1])}if(s.cookieScale&&s.cookieScale instanceof Array){s.cookieScale=new Ot(s.cookieScale[0],s.cookieScale[1])}if(s.enable){console.warn("WARNING: enable: Property is deprecated. Set enabled property instead.");s.enabled=s.enable}if(!s.shape){s.shape=xm}const i=new Kx(this.app.graphicsDevice,this.app.scene.clusteredLightingEnabled);i.type=Xx[s.type];i._node=t.entity;t.data.light=i;super.initializeComponentData(t,s,OV)}_onRemoveComponent(t,e){e.onRemove()}cloneComponent(t,e){const s=t.light;const i=[];let n;for(let t=0;t<OV.length;t++){n=OV[t];if(n==="light"){continue}if(s[n]&&s[n].clone){i[n]=s[n].clone()}else{i[n]=s[n]}}return this.addComponent(e,i)}changeType(t,e,s){if(e!==s){t.light.type=Xx[s]}}}const kV=["x","y","z","w"];const BV=[undefined,undefined,Ot,It,Ft];function UV(t,e,s,i){switch(e.type){case"boolean":return!!s;case"number":if(typeof s==="number"){return s}else if(typeof s==="string"){const t=parseInt(s,10);if(isNaN(t))return null;return t}else if(typeof s==="boolean"){return 0+s}return null;case"json":{const i={};if(Array.isArray(e.schema)){if(!s||typeof s!=="object"){s={}}for(let n=0;n<e.schema.length;n++){const r=e.schema[n];if(!r.name)continue;if(r.array){i[r.name]=[];const e=Array.isArray(s[r.name])?s[r.name]:[];for(let s=0;s<e.length;s++){i[r.name].push(UV(t,r,e[s]))}}else{const e=s.hasOwnProperty(r.name)?s[r.name]:r.default;i[r.name]=UV(t,r,e)}}}return i}case"asset":if(s instanceof qA){return s}else if(typeof s==="number"){return t.assets.get(s)||null}else if(typeof s==="string"){return t.assets.get(parseInt(s,10))||null}return null;case"entity":if(s instanceof By){return s}else if(typeof s==="string"){return t.getEntityFromIndex(s)}return null;case"rgb":case"rgba":if(s instanceof bt){if(i instanceof bt){i.copy(s);return i}return s.clone()}else if(s instanceof Array&&s.length>=3&&s.length<=4){for(let t=0;t<s.length;t++){if(typeof s[t]!=="number"){return null}}if(!i)i=new bt;i.r=s[0];i.g=s[1];i.b=s[2];i.a=s.length===3?1:s[3];return i}else if(typeof s==="string"&&/#(?:[0-9a-f]{2}){3,4}/i.test(s)){if(!i){i=new bt}i.fromString(s);return i}return null;case"vec2":case"vec3":case"vec4":{const t=parseInt(e.type.slice(3),10);const n=BV[t];if(s instanceof n){if(i instanceof n){i.copy(s);return i}return s.clone()}else if(s instanceof Array&&s.length===t){for(let t=0;t<s.length;t++){if(typeof s[t]!=="number"){return null}}if(!i)i=new n;for(let e=0;e<t;e++){i[kV[e]]=s[e]}return i}return null}case"curve":if(s){let t;if(s instanceof At||s instanceof Ct){t=s.clone()}else{const e=s.keys[0]instanceof Array?Ct:At;t=new e(s.keys);t.type=s.type}return t}break}return s}function zV(t,e,s,i){if(e.array){return s.map(((s,n)=>UV(t,e,s,i?i[n]:null)))}return UV(t,e,s,i)}function VV(t,e,s,i){if(!s)return;for(const n in e){const r=e[n];const a=s[n];if(a===undefined)continue;i[n]=zV(t,r,a,i[n])}}class GV{static{this.assignAttributesToScript=VV}static{this.attributeToValue=zV}constructor(t){this.scriptType=t;this.index={}}static{this.reservedNames=new Set(["app","entity","enabled","_enabled","_enabledOld","_destroyed","__attributes","__attributesRaw","__scriptType","__executionOrder","_callbacks","_callbackActive","has","get","on","off","fire","once","hasEvent"])}add(t,e){if(this.index[t]){return}else if(GV.reservedNames.has(t)){return}this.index[t]=e;Object.defineProperty(this.scriptType.prototype,t,{get:function(){return this.__attributes[t]},set:function(s){const i="attr";const n=`attr:${t}`;const r=this.__attributes[t];let a=r;if(r&&e.type!=="json"&&e.type!=="entity"&&r.clone){if(this.hasEvent(i)||this.hasEvent(n)){a=r.clone()}}if(e.array){this.__attributes[t]=[];if(s){for(let i=0,n=s.length;i<n;i++){this.__attributes[t].push(UV(this.app,e,s[i],r?r[i]:null))}}}else{this.__attributes[t]=UV(this.app,e,s,r)}this.fire(i,t,this.__attributes[t],a);this.fire(n,this.__attributes[t],a)}})}remove(t){if(!this.index[t]){return false}delete this.index[t];delete this.scriptType.prototype[t];return true}has(t){return!!this.index[t]}get(t){return this.index[t]||null}}const HV="initialize";const WV="postInitialize";const XV="update";const qV="postUpdate";const $V="swap";class jV extends at{static{this.EVENT_ENABLE="enable"}static{this.EVENT_DISABLE="disable"}static{this.EVENT_STATE="state"}static{this.EVENT_DESTROY="destroy"}static{this.EVENT_ATTR="attr"}static{this.EVENT_ERROR="error"}constructor(t){super();this.initScript(t)}set enabled(t){this._enabled=!!t;if(this.enabled===this._enabledOld)return;this._enabledOld=this.enabled;this.fire(this.enabled?"enable":"disable");this.fire("state",this.enabled);if(!this._initialized&&this.enabled){this._initialized=true;this.fire("preInitialize");if(this.initialize){this.entity.script._scriptMethod(this,HV)}}if(this._initialized&&!this._postInitialized&&this.enabled&&!this.entity.script._beingEnabled){this._postInitialized=true;if(this.postInitialize){this.entity.script._scriptMethod(this,WV)}}}get enabled(){return this._enabled&&!this._destroyed&&this.entity.script.enabled&&this.entity.enabled}initScript(t){const e=this.constructor;this.app=t.app;this.entity=t.entity;this._enabled=typeof t.enabled==="boolean"?t.enabled:true;this._enabledOld=this.enabled;this.__destroyed=false;this.__scriptType=e;this.__executionOrder=-1}static{this.__name=null}static{this.__getScriptName=KV}static get scriptName(){return this.__name}}const YV=/^\s*function(?:\s|\s*\/\*.*\*\/\s*)+([^(\s\/]*)\s*/;function KV(t){if(typeof t!=="function")return undefined;if(t.scriptName)return t.scriptName;if("name"in Function.prototype)return t.name;if(t===Function||t===Function.prototype.constructor)return"Function";const e=`${t}`.match(YV);return e?e[1]:undefined}class ZV extends jV{constructor(t){super(t);this.initScriptType(t)}static get attributes(){if(!this.hasOwnProperty("__attributes"))this.__attributes=new GV(this);return this.__attributes}initScript(t){jV.prototype.initScript.call(this,t);this.__attributes={};this.__attributesRaw=t.attributes||{}}initScriptType(t){this.initScript(t)}__initializeAttributes(t){if(!t&&!this.__attributesRaw){return}for(const t in this.__scriptType.attributes.index){if(this.__attributesRaw&&this.__attributesRaw.hasOwnProperty(t)){this[t]=this.__attributesRaw[t]}else if(!this.__attributes.hasOwnProperty(t)){if(this.__scriptType.attributes.index[t].hasOwnProperty("default")){this[t]=this.__scriptType.attributes.index[t].default}else{this[t]=null}}}this.__attributesRaw=null}static extend(t){for(const e in t){if(!t.hasOwnProperty(e)){continue}this.prototype[e]=t[e]}}}const QV=t=>t[0].toLowerCase()+t.substring(1);class JV extends qR{static{this.EVENT_CREATE="create"}static{this.EVENT_DESTROY="destroy"}static{this.EVENT_ENABLE="enable"}static{this.EVENT_DISABLE="disable"}static{this.EVENT_REMOVE="remove"}static{this.EVENT_STATE="state"}static{this.EVENT_MOVE="move"}static{this.EVENT_ERROR="error"}constructor(t,e){super(t,e),this._attributeDataMap=new Map;this._scripts=[];this._updateList=new ut({sortBy:"__executionOrder"});this._postUpdateList=new ut({sortBy:"__executionOrder"});this._scriptsIndex={};this._destroyedScripts=[];this._destroyed=false;this._scriptsData=null;this._oldState=true;this._enabled=true;this._beingEnabled=false;this._isLoopingThroughScripts=false;this._executionOrder=-1;this.on("set_enabled",this._onSetEnabled,this)}set scripts(t){this._scriptsData=t;for(const e in t){if(!t.hasOwnProperty(e)){continue}const s=this._scriptsIndex[e];if(s){if(typeof t[e].enabled==="boolean"){s.once("preInitialize",(()=>{this.initializeAttributes(s)}));s.enabled=!!t[e].enabled}if(typeof t[e].attributes==="object"){for(const i in t[e].attributes){if(GV.reservedNames.has(i)){continue}if(!s.__attributes.hasOwnProperty(i)){const t=this.system.app.scripts.get(e);if(t){t.attributes.add(i,{})}}s[i]=t[e].attributes[i]}}}else{console.log(this.order)}}}get scripts(){return this._scripts}set enabled(t){const e=this._enabled;this._enabled=t;this.fire("set","enabled",e,t)}get enabled(){return this._enabled}onEnable(){this._beingEnabled=true;this._checkState();if(!this.entity._beingEnabled){this.onPostStateChange()}this._beingEnabled=false}onDisable(){this._checkState()}onPostStateChange(){const t=this._beginLooping();for(let t=0,e=this.scripts.length;t<e;t++){const e=this.scripts[t];if(e._initialized&&!e._postInitialized&&e.enabled){e._postInitialized=true;if(e.postInitialize){this._scriptMethod(e,WV)}}}this._endLooping(t)}_beginLooping(){const t=this._isLoopingThroughScripts;this._isLoopingThroughScripts=true;return t}_endLooping(t){this._isLoopingThroughScripts=t;if(!this._isLoopingThroughScripts){this._removeDestroyedScripts()}}_onSetEnabled(t,e,s){this._beingEnabled=true;this._checkState();this._beingEnabled=false}_checkState(){const t=this.enabled&&this.entity.enabled;if(t===this._oldState){return}this._oldState=t;this.fire(t?"enable":"disable");this.fire("state",t);if(t){this.system._addComponentToEnabled(this)}else{this.system._removeComponentFromEnabled(this)}const e=this._beginLooping();for(let t=0,e=this.scripts.length;t<e;t++){const e=this.scripts[t];e.once("preInitialize",(()=>{this.initializeAttributes(e)}));e.enabled=e._enabled}this._endLooping(e)}_onBeforeRemove(){this.fire("remove");const t=this._beginLooping();for(let t=0;t<this.scripts.length;t++){const e=this.scripts[t];if(!e)continue;this.destroy(e.__scriptType.__name)}this._endLooping(t)}_removeDestroyedScripts(){const t=this._destroyedScripts.length;if(!t)return;for(let e=0;e<t;e++){const t=this._destroyedScripts[e];this._removeScriptInstance(t)}this._destroyedScripts.length=0;this._resetExecutionOrder(0,this._scripts.length)}_onInitializeAttributes(){for(let t=0,e=this.scripts.length;t<e;t++){const e=this.scripts[t];this.initializeAttributes(e)}}initializeAttributes(t){if(t instanceof ZV){t.__initializeAttributes()}else{const e=t.__scriptType.__name;const s=this._attributeDataMap.get(e);if(!s){return}const i=this.system.app.scripts?.getSchema(e);VV(this.system.app,i.attributes,s,t)}}_scriptMethod(t,e,s){t[e](s)}_onInitialize(){const t=this._scripts;const e=this._beginLooping();for(let e=0,s=t.length;e<s;e++){const s=t[e];if(!s._initialized&&s.enabled){s._initialized=true;if(s.initialize){this._scriptMethod(s,HV)}}}this._endLooping(e)}_onPostInitialize(){this.onPostStateChange()}_onUpdate(t){const e=this._updateList;if(!e.length)return;const s=this._beginLooping();for(e.loopIndex=0;e.loopIndex<e.length;e.loopIndex++){const s=e.items[e.loopIndex];if(s.enabled){this._scriptMethod(s,XV,t)}}this._endLooping(s)}_onPostUpdate(t){const e=this._postUpdateList;if(!e.length)return;const s=this._beginLooping();for(e.loopIndex=0;e.loopIndex<e.length;e.loopIndex++){const s=e.items[e.loopIndex];if(s.enabled){this._scriptMethod(s,qV,t)}}this._endLooping(s)}_insertScriptInstance(t,e,s){if(e===-1){this._scripts.push(t);t.__executionOrder=s;if(t.update){this._updateList.append(t)}if(t.postUpdate){this._postUpdateList.append(t)}}else{this._scripts.splice(e,0,t);t.__executionOrder=e;this._resetExecutionOrder(e+1,s+1);if(t.update){this._updateList.insert(t)}if(t.postUpdate){this._postUpdateList.insert(t)}}}_removeScriptInstance(t){const e=this._scripts.indexOf(t);if(e===-1)return e;this._scripts.splice(e,1);if(t.update){this._updateList.remove(t)}if(t.postUpdate){this._postUpdateList.remove(t)}return e}_resetExecutionOrder(t,e){for(let s=t;s<e;s++){this._scripts[s].__executionOrder=s}}_resolveEntityScriptAttribute(t,e,s,i,n,r){if(t.array){const t=s.length;if(!t){return}const a=s.slice();for(let e=0;e<t;e++){const t=a[e]instanceof dC?a[e].getGuid():a[e];if(r[t]){a[e]=i?r[t].getGuid():r[t]}}n[e]=a}else{if(s instanceof dC){s=s.getGuid()}else if(typeof s!=="string"){return}if(r[s]){n[e]=r[s]}}}has(t){if(typeof t==="string"){return!!this._scriptsIndex[t]}if(!t)return false;const e=t;const s=e.__name;const i=this._scriptsIndex[s];const n=i&&i.instance;return n instanceof e}get(t){if(typeof t==="string"){const e=this._scriptsIndex[t];return e?e.instance:null}if(!t)return null;const e=t;const s=e.__name;const i=this._scriptsIndex[s];const n=i&&i.instance;return n instanceof e?n:null}create(t,e={}){const s=this;let i=t;let n=t;if(typeof i==="string"){i=this.system.app.scripts.get(i)}else if(i){const t=KV(i);const e=QV(t);if(!(i.prototype instanceof ZV)&&!i.scriptName);i.__name??=i.scriptName??e;n=i.__name}if(i){if(!this._scriptsIndex[n]||!this._scriptsIndex[n].instance){const t=new i({app:this.system.app,entity:this.entity,enabled:e.hasOwnProperty("enabled")?e.enabled:true,attributes:e.attributes||{}});if(e.properties&&typeof e.properties==="object"){Object.assign(t,e.properties)}if(!(t instanceof ZV)){this._attributeDataMap.set(n,e.attributes)}const r=this._scripts.length;let a=-1;if(typeof e.ind==="number"&&e.ind!==-1&&r>e.ind){a=e.ind}this._insertScriptInstance(t,a,r);this._scriptsIndex[n]={instance:t,onSwap:function(){s.swap(n)}};this[n]=t;if(!e.preloading){this.initializeAttributes(t)}this.fire("create",n,t);this.fire(`create:${n}`,t);this.system.app.scripts.on(`swap:${n}`,this._scriptsIndex[n].onSwap);if(!e.preloading){if(t.enabled&&!t._initialized){t._initialized=true;if(t.initialize){this._scriptMethod(t,HV)}}if(t.enabled&&!t._postInitialized){t._postInitialized=true;if(t.postInitialize){this._scriptMethod(t,WV)}}}return t}}else{this._scriptsIndex[n]={awaiting:true,ind:this._scripts.length}}return null}destroy(t){let e=t;let s=t;if(typeof s==="string"){s=this.system.app.scripts.get(s)}else if(s){e=s.__name}const i=this._scriptsIndex[e];delete this._scriptsIndex[e];if(!i)return false;this._attributeDataMap.delete(e);const n=i.instance;if(n&&!n._destroyed){n.enabled=false;n._destroyed=true;if(!this._isLoopingThroughScripts){const t=this._removeScriptInstance(n);if(t>=0){this._resetExecutionOrder(t,this._scripts.length)}}else{this._destroyedScripts.push(n)}}this.system.app.scripts.off(`swap:${e}`,i.onSwap);delete this[e];this.fire("destroy",e,n||null);this.fire(`destroy:${e}`,n||null);if(n){n.fire("destroy")}return true}swap(t){let e=t;let s=t;if(typeof s==="string"){s=this.system.app.scripts.get(s)}else if(s){e=s.__name}const i=this._scriptsIndex[e];if(!i||!i.instance)return false;const n=i.instance;const r=this._scripts.indexOf(n);const a=new s({app:this.system.app,entity:this.entity,enabled:n.enabled,attributes:n.__attributes});if(!a.swap){return false}this.initializeAttributes(a);this._scripts[r]=a;this._scriptsIndex[e].instance=a;this[e]=a;a.__executionOrder=r;if(n.update){this._updateList.remove(n)}if(n.postUpdate){this._postUpdateList.remove(n)}if(a.update){this._updateList.insert(a)}if(a.postUpdate){this._postUpdateList.insert(a)}this._scriptMethod(a,$V,n);this.fire("swap",e,a);this.fire(`swap:${e}`,a);return true}resolveDuplicatedEntityReferenceProperties(t,e){const s=this.entity.script;for(const i in t._scriptsIndex){const n=this.system.app.scripts.get(i);if(!n){continue}const r=t._scriptsIndex[i];if(!r||!r.instance){continue}const a=s[i].__attributesRaw??s._attributeDataMap.get(i);const o=s[i].__attributes;if(!a&&!o){continue}const l=!!a;const h=r.instance.__attributes??s._attributeDataMap.get(i);for(const t in h){if(!h[t]){continue}const s=n.attributes?.get(t)??this.system.app.scripts.getSchema(i)?.attributes?.[t];if(!s){continue}if(s.type==="entity"){this._resolveEntityScriptAttribute(s,t,h[t],l,a||o,e)}else if(s.type==="json"&&Array.isArray(s.schema)){const i=h[t];const n=a?a[t]:o[t];for(let t=0;t<s.schema.length;t++){const r=s.schema[t];if(r.type!=="entity"){continue}if(s.array){for(let t=0;t<i.length;t++){this._resolveEntityScriptAttribute(r,r.name,i[t][r.name],l,n[t],e)}}else{this._resolveEntityScriptAttribute(r,r.name,i[r.name],l,n,e)}}}}}}move(t,e){const s=this._scripts.length;if(e>=s||e<0){return false}let i=t;let n=t;if(typeof n!=="string"){n=t.__name}else{i=null}const r=this._scriptsIndex[n];if(!r||!r.instance){return false}const a=r.instance;if(i&&!(a instanceof i)){return false}const o=this._scripts.indexOf(a);if(o===-1||o===e){return false}this._scripts.splice(e,0,this._scripts.splice(o,1)[0]);this._resetExecutionOrder(0,s);this._updateList.sort();this._postUpdateList.sort();this.fire("move",n,a,e,o);this.fire(`move:${n}`,a,e,o);return true}}class tG{constructor(){this.enabled=true}}const eG="_onInitializeAttributes";const sG="_onInitialize";const iG="_onPostInitialize";const nG="_onUpdate";const rG="_onPostUpdate";let aG=0;class oG extends $R{constructor(t){super(t);this.id="script";this.ComponentType=JV;this.DataType=tG;this._components=new ut({sortBy:"_executionOrder"});this._enabledComponents=new ut({sortBy:"_executionOrder"});this.preloading=true;this.on("beforeremove",this._onBeforeRemove,this);this.app.systems.on("initialize",this._onInitialize,this);this.app.systems.on("postInitialize",this._onPostInitialize,this);this.app.systems.on("update",this._onUpdate,this);this.app.systems.on("postUpdate",this._onPostUpdate,this)}initializeComponentData(t,e){t._executionOrder=aG++;this._components.append(t);if(aG>Number.MAX_SAFE_INTEGER){this._resetExecutionOrder()}t.enabled=e.hasOwnProperty("enabled")?!!e.enabled:true;if(t.enabled&&t.entity.enabled){this._enabledComponents.append(t)}if(e.hasOwnProperty("order")&&e.hasOwnProperty("scripts")){t._scriptsData=e.scripts;for(let s=0;s<e.order.length;s++){t.create(e.order[s],{enabled:e.scripts[e.order[s]].enabled,attributes:e.scripts[e.order[s]].attributes,preloading:this.preloading})}}}cloneComponent(t,e){const s=[];const i={};for(let e=0;e<t.script._scripts.length;e++){const n=t.script._scripts[e];const r=n.__scriptType.__name;s.push(r);const a=t.script._attributeDataMap?.get(r)||{};for(const t in n.__attributes){a[t]=n.__attributes[t]}i[r]={enabled:n._enabled,attributes:a}}for(const e in t.script._scriptsIndex){if(e.awaiting){s.splice(e.ind,0,e)}}const n={enabled:t.script.enabled,order:s,scripts:i};return this.addComponent(e,n)}_resetExecutionOrder(){aG=0;for(let t=0,e=this._components.length;t<e;t++){this._components.items[t]._executionOrder=aG++}}_callComponentMethod(t,e,s){for(t.loopIndex=0;t.loopIndex<t.length;t.loopIndex++){t.items[t.loopIndex][e](s)}}_onInitialize(){this.preloading=false;this._callComponentMethod(this._components,eG);this._callComponentMethod(this._enabledComponents,sG)}_onPostInitialize(){this._callComponentMethod(this._enabledComponents,iG)}_onUpdate(t){this._callComponentMethod(this._enabledComponents,nG,t)}_onPostUpdate(t){this._callComponentMethod(this._enabledComponents,rG,t)}_addComponentToEnabled(t){this._enabledComponents.insert(t)}_removeComponentFromEnabled(t){this._enabledComponents.remove(t)}_onBeforeRemove(t,e){const s=this._components.items.indexOf(e);if(s>=0){e._onBeforeRemove()}this._removeComponentFromEnabled(e);this._components.remove(e)}destroy(){super.destroy();this.app.systems.off("initialize",this._onInitialize,this);this.app.systems.off("postInitialize",this._onPostInitialize,this);this.app.systems.off("update",this._onUpdate,this);this.app.systems.off("postUpdate",this._onPostUpdate,this)}}class lG extends qR{constructor(t,e){super(t,e),this._layers=[hm],this._instance=null,this._materialTmp=null,this._highQualitySH=true,this._customAabb=null,this._evtLayersChanged=null,this._evtLayerAdded=null,this._evtLayerRemoved=null,this._castShadows=false;this._assetReference=new ez("asset",this,t.app.assets,{add:this._onGSplatAssetAdded,load:this._onGSplatAssetLoad,remove:this._onGSplatAssetRemove,unload:this._onGSplatAssetUnload},this);e.on("remove",this.onRemoveChild,this);e.on("removehierarchy",this.onRemoveChild,this);e.on("insert",this.onInsertChild,this);e.on("inserthierarchy",this.onInsertChild,this)}set customAabb(t){this._customAabb=t;this._instance?.meshInstance?.setCustomAabb(this._customAabb)}get customAabb(){return this._customAabb}set instance(t){this.destroyInstance();this._instance=t;if(this._instance){const t=this._instance.meshInstance;if(!t.node){t.node=this.entity}t.castShadow=this._castShadows;t.setCustomAabb(this._customAabb);if(this.enabled&&this.entity.enabled){this.addToLayers()}}}get instance(){return this._instance}set material(t){if(this._instance){this._instance.material=t}else{this._materialTmp=t}}get material(){return this._instance?.material??this._materialTmp??null}set highQualitySH(t){if(t!==this._highQualitySH){this._highQualitySH=t;if(this._instance){this._instance.setHighQualitySH(t)}}}get highQualitySH(){return this._highQualitySH}set castShadows(t){if(this._castShadows!==t){const e=this.instance?.meshInstance;if(e){const s=this.layers;const i=this.system.app.scene;if(this._castShadows&&!t){for(let t=0;t<s.length;t++){const s=i.layers.getLayerById(this.layers[t]);if(s){s.removeShadowCasters([e])}}}e.castShadow=t;if(!this._castShadows&&t){for(let t=0;t<s.length;t++){const n=i.layers.getLayerById(s[t]);if(n){n.addShadowCasters([e])}}}}this._castShadows=t}}get castShadows(){return this._castShadows}set layers(t){this.removeFromLayers();this._layers.length=0;for(let e=0;e<t.length;e++){this._layers[e]=t[e]}if(!this.enabled||!this.entity.enabled){return}this.addToLayers()}get layers(){return this._layers}set asset(t){const e=t instanceof qA?t.id:t;if(this._assetReference.id===e)return;if(this._assetReference.asset&&this._assetReference.asset.resource){this._onGSplatAssetRemove()}this._assetReference.id=e;if(this._assetReference.asset){this._onGSplatAssetAdded()}}get asset(){return this._assetReference.id}destroyInstance(){if(this._instance){this.removeFromLayers();this._instance?.destroy();this._instance=null}}addToLayers(){const t=this.instance?.meshInstance;if(t){const e=this.system.app.scene.layers;for(let s=0;s<this._layers.length;s++){e.getLayerById(this._layers[s])?.addMeshInstances([t])}}}removeFromLayers(){const t=this.instance?.meshInstance;if(t){const e=this.system.app.scene.layers;for(let s=0;s<this._layers.length;s++){e.getLayerById(this._layers[s])?.removeMeshInstances([t])}}}onRemoveChild(){this.removeFromLayers()}onInsertChild(){if(this._instance&&this.enabled&&this.entity.enabled){this.addToLayers()}}onRemove(){this.destroyInstance();this.asset=null;this._assetReference.id=null;this.entity.off("remove",this.onRemoveChild,this);this.entity.off("insert",this.onInsertChild,this)}onLayersChanged(t,e){this.addToLayers();t.off("add",this.onLayerAdded,this);t.off("remove",this.onLayerRemoved,this);e.on("add",this.onLayerAdded,this);e.on("remove",this.onLayerRemoved,this)}onLayerAdded(t){const e=this.layers.indexOf(t.id);if(e<0)return;if(this._instance){t.addMeshInstances(this._instance.meshInstance)}}onLayerRemoved(t){const e=this.layers.indexOf(t.id);if(e<0)return;if(this._instance){t.removeMeshInstances(this._instance.meshInstance)}}onEnable(){const t=this.system.app.scene;const e=t.layers;this._evtLayersChanged=t.on("set:layers",this.onLayersChanged,this);if(e){this._evtLayerAdded=e.on("add",this.onLayerAdded,this);this._evtLayerRemoved=e.on("remove",this.onLayerRemoved,this)}if(this._instance){this.addToLayers()}else if(this.asset){this._onGSplatAssetAdded()}}onDisable(){const t=this.system.app.scene;const e=t.layers;this._evtLayersChanged?.off();this._evtLayersChanged=null;if(e){this._evtLayerAdded?.off();this._evtLayerAdded=null;this._evtLayerRemoved?.off();this._evtLayerRemoved=null}this.removeFromLayers()}hide(){if(this._instance){this._instance.meshInstance.visible=false}}show(){if(this._instance){this._instance.meshInstance.visible=true}}_onGSplatAssetAdded(){if(!this._assetReference.asset){return}if(this._assetReference.asset.resource){this._onGSplatAssetLoad()}else if(this.enabled&&this.entity.enabled){this.system.app.assets.load(this._assetReference.asset)}}_onGSplatAssetLoad(){this.destroyInstance();const t=this._assetReference.asset;if(t){this.instance=new eA(t.resource,{material:this._materialTmp,highQualitySH:this._highQualitySH});this._materialTmp=null;this.customAabb=this.instance.resource.aabb.clone()}}_onGSplatAssetUnload(){this.destroyInstance()}_onGSplatAssetRemove(){this._onGSplatAssetUnload()}}class hG{constructor(){this.enabled=true}}const cG=["enabled"];const dG=["castShadows","material","highQualitySH","asset","layers"];class uG extends $R{constructor(t){super(t);this.id="gsplat";this.ComponentType=lG;this.DataType=hG;this.schema=cG;this.on("beforeremove",this.onRemove,this)}initializeComponentData(t,e,s){if(e.layers&&e.layers.length){e.layers=e.layers.slice(0)}for(let s=0;s<dG.length;s++){if(e.hasOwnProperty(dG[s])){t[dG[s]]=e[dG[s]]}}if(e.aabbCenter&&e.aabbHalfExtents){t.customAabb=new jt(new It(e.aabbCenter),new It(e.aabbHalfExtents))}super.initializeComponentData(t,e,cG)}cloneComponent(t,e){const s=t.gsplat;const i={};dG.forEach((t=>{if(t==="material"){i[t]=s[t].clone()}else{i[t]=s[t]}}));i.enabled=s.enabled;const n=this.addComponent(e,i);if(s.customAabb){n.customAabb=s.customAabb.clone()}return n}onRemove(t,e){e.onRemove()}}qR._buildAccessors(lG.prototype,cG);class fG extends at{static{this.EVENT_SETMESHES="set:meshes"}set meshes(t){this.decRefMeshes();this._meshes=t;this.incRefMeshes();this.fire("set:meshes",t)}get meshes(){return this._meshes}destroy(){this.meshes=null}decRefMeshes(){this._meshes?.forEach(((t,e)=>{if(t){t.decRefCount();if(t.refCount<1){t.destroy();this._meshes[e]=null}}}))}incRefMeshes(){this._meshes?.forEach((t=>{t?.incRefCount()}))}constructor(...t){super(...t),this._meshes=null}}function pG(t){const e=this;if(!e.resource)return;const s=t.resource;const i=s.renders&&s.renders[e.data.renderIndex];if(i){e.resource.meshes=i.resource.meshes}}function mG(t){const e=this;e.registry.off(`load:${t.id}`,pG,e);e.registry.on(`load:${t.id}`,pG,e);e.registry.off(`remove:${t.id}`,_G,e);e.registry.once(`remove:${t.id}`,_G,e);if(!t.resource){e.registry.load(t)}else{pG.call(e,t)}}function _G(t){const e=this;e.registry.off(`load:${t.id}`,pG,e);if(e.resource){e.resource.destroy()}}class gG extends JA{constructor(t){super(t,"render");this._registry=t.assets}open(t,e){return new fG}patch(t,e){if(!t.data.containerAsset){return}const s=e.get(t.data.containerAsset);if(!s){e.once(`add:${t.data.containerAsset}`,mG,t);return}mG.call(t,s)}}class vG{constructor(t,e,s,i){this._paths=t;this._input=e;this._output=s;this._interpolation=i}get paths(){return this._paths}get input(){return this._input}get output(){return this._output}get interpolation(){return this._interpolation}}class yG{constructor(t,e){this._components=t;this._data=e}get components(){return this._components}get data(){return this._data}}function SG(t,e){let s;const i=0;const n=1;const r=(t,e)=>{switch(e){case s.DT_INT8:return new Int8Array(t.buffer,t.byteOffset,t.byteLength);case s.DT_INT16:return new Int16Array(t.buffer,t.byteOffset,t.byteLength/2);case s.DT_INT32:return new Int32Array(t.buffer,t.byteOffset,t.byteLength/4);case s.DT_UINT8:return new Uint8Array(t.buffer,t.byteOffset,t.byteLength);case s.DT_UINT16:return new Uint16Array(t.buffer,t.byteOffset,t.byteLength/2);case s.DT_UINT32:return new Uint32Array(t.buffer,t.byteOffset,t.byteLength/4);case s.DT_FLOAT32:return new Float32Array(t.buffer,t.byteOffset,t.byteLength/4)}return null};const a=t=>{switch(t){case s.DT_INT8:return 1;case s.DT_INT16:return 2;case s.DT_INT32:return 4;case s.DT_UINT8:return 1;case s.DT_UINT16:return 2;case s.DT_UINT32:return 4;case s.DT_FLOAT32:return 4}return 1};const o=t=>t.num_components()*a(t.data_type());const l={0:0,1:1,5:2,2:3,7:4,8:5,4:6,3:7};const h=(t,e)=>{const s=(t,e,s)=>{t[0]=e[0]-s[0];t[1]=e[1]-s[1];t[2]=e[2]-s[2]};const i=(t,e,s)=>{t[0]=e[1]*s[2]-s[1]*e[2];t[1]=e[2]*s[0]-s[2]*e[0];t[2]=e[0]*s[1]-s[0]*e[1]};const n=(t,e)=>{const s=t[e+0];const i=t[e+1];const n=t[e+2];const r=1/Math.sqrt(s*s+i*i+n*n);t[e+0]*=r;t[e+1]*=r;t[e+2]*=r};const r=(t,e,s)=>{for(let i=0;i<3;++i){t[i]=e[s+i]}};const a=e.length/3;const o=t.length/3;const l=new Float32Array(t.length);const h=[0,0,0],c=[0,0,0],d=[0,0,0],u=[0,0,0],f=[0,0,0],p=[0,0,0];for(let o=0;o<a;++o){const a=e[o*3+0]*3;const m=e[o*3+1]*3;const _=e[o*3+2]*3;r(h,t,a);r(c,t,m);r(d,t,_);s(u,c,h);s(f,d,h);i(p,u,f);n(p,0);for(let t=0;t<3;++t){l[a+t]+=p[t];l[m+t]+=p[t];l[_+t]+=p[t]}}for(let t=0;t<o;++t){n(l,t*3)}return new Uint8Array(l.buffer)};const c=t=>{const e={};const a=new s.DecoderBuffer;a.Init(t,t.length);const c=new s.Decoder;if(c.GetEncodedGeometryType(a)!==s.TRIANGULAR_MESH){e.error="Failed to decode draco mesh: not a mesh";return e}const d=new s.Mesh;const u=c.DecodeBufferToMesh(a,d);if(!u||!u.ok()||s.getPointer(d)===0){e.error="Failed to decode draco asset";return e}const f=d.num_faces()*3;const p=d.num_points()<=65535;const m=f*(p?2:4);const _=s._malloc(m);if(p){c.GetTrianglesUInt16Array(d,m,_);e.indices=new Uint16Array(s.HEAPU16.buffer,_,f).slice().buffer}else{c.GetTrianglesUInt32Array(d,m,_);e.indices=new Uint32Array(s.HEAPU32.buffer,_,f).slice().buffer}s._free(_);const g=[];for(let t=0;t<d.num_attributes();++t){g.push(c.GetAttribute(d,t))}g.sort(((t,e)=>(l[t.attribute_type()]??l.length)-(l[e.attribute_type()]??l.length)));e.attributes=g.map((t=>t.unique_id()));let v=0;const y=g.map((t=>{const e=v;v+=Math.ceil(o(t)/4)*4;return e}));const S=g.some((t=>t.attribute_type()===n));const x=y[1];if(!S){for(let t=1;t<y.length;++t){y[t]+=12}v+=12}e.vertices=new ArrayBuffer(d.num_points()*v);const T=new Uint8Array(e.vertices);for(let t=0;t<d.num_attributes();++t){const n=g[t];const a=o(n);const l=d.num_points()*a;const u=s._malloc(l);c.GetAttributeDataArrayForAllPoints(d,n,n.data_type(),l,u);const f=new Uint8Array(s.HEAPU8.buffer,u,l);for(let e=0;e<d.num_points();++e){for(let s=0;s<a;++s){T[e*v+y[t]+s]=f[e*a+s]}}if(!S&&n.attribute_type()===i){const t=h(r(f,n.data_type()),p?new Uint16Array(e.indices):new Uint32Array(e.indices));for(let e=0;e<d.num_points();++e){for(let s=0;s<12;++s){T[e*v+x+s]=t[e*12+s]}}}s._free(u)}s.destroy(d);s.destroy(c);s.destroy(a);return e};const d=t=>{const e=c(new Uint8Array(t.buffer));self.postMessage({jobId:t.jobId,error:e.error,indices:e.indices,vertices:e.vertices,attributes:e.attributes},[e.indices,e.vertices].filter((t=>t!=null)))};const u=[];self.onmessage=t=>{const e=t.data;switch(e.type){case"init":self.DracoDecoderModule({instantiateWasm:(t,s)=>{WebAssembly.instantiate(e.module,t).then((t=>s(t))).catch((t=>console.error(`instantiate failed + ${t}`)));return{}}}).then((t=>{s=t;u.forEach((t=>d(t)))}));break;case"decodeMesh":if(s){d(e)}else{u.push(e)}break}}}const xG=3;class TG{constructor(){this.workers=[[],[],[]];this.jobId=0;this.jobQueue=[];this.jobCallbacks=new Map;this.run=(t,e)=>{t.postMessage({type:"decodeMesh",jobId:e.jobId,buffer:e.buffer},[e.buffer])}}init(t){t.forEach((t=>{t.addEventListener("message",(e=>{const s=e.data;const i=this.jobCallbacks.get(s.jobId);if(i){i(s.error,{indices:s.indices,vertices:s.vertices,attributes:s.attributes})}this.jobCallbacks.delete(s.jobId);if(this.jobQueue.length>0){const e=this.jobQueue.shift();this.run(t,e)}else{const e=this.workers[2].indexOf(t);if(e!==-1){this.workers[2].splice(e,1);this.workers[1].push(t)}else{const e=this.workers[1].indexOf(t);if(e!==-1){this.workers[1].splice(e,1);this.workers[0].push(t)}}}}))}));this.workers[0]=t;while(this.jobQueue.length&&(this.workers[0].length||this.workers[1].length)){const t=this.jobQueue.shift();if(this.workers[0].length>0){const e=this.workers[0].shift();this.workers[1].push(e);this.run(e,t)}else{const e=this.workers[1].shift();this.workers[2].push(e);this.run(e,t)}}}enqueueJob(t,e){const s={jobId:this.jobId++,buffer:t};this.jobCallbacks.set(s.jobId,e);if(this.workers[0].length>0){const t=this.workers[0].shift();this.workers[1].push(t);this.run(t,s)}else if(this.workers[1].length>0){const t=this.workers[1].shift();this.workers[2].push(t);this.run(t,s)}else{this.jobQueue.push(s)}}}const wG=t=>new Promise(((e,s)=>{const i={cache:true,responseType:"text",retry:xG>0,maxRetries:xG};bp.get(t,i,((t,i)=>{if(t){s(t)}else{e(i)}}))}));const bG=t=>{const e=()=>fetch(t).then((t=>t.arrayBuffer())).then((t=>WebAssembly.compile(t)));const s=()=>WebAssembly.compileStreaming(fetch(t)).catch((t=>e()));return WebAssembly.compileStreaming?s():e()};const EG=1;let AG;let CG;const PG=t=>{if(AG){return true}if(!t){if(CG){t=CG}else{const e=ct.getConfig("DracoDecoderModule");if(e){t={jsUrl:e.glueUrl,wasmUrl:e.wasmUrl,numWorkers:e.numWorkers}}else{t={jsUrl:"draco.wasm.js",wasmUrl:"draco.wasm.wasm",numWorkers:EG}}}}if(!t.jsUrl||!t.wasmUrl){return false}AG=new TG;Promise.all([wG(t.jsUrl),bG(t.wasmUrl)]).then((([e,s])=>{const i=["/* draco */",e,"/* worker */",`(\n${SG.toString()}\n)()\n\n`].join("\n");const n=new Blob([i],{type:"application/javascript"});const r=URL.createObjectURL(n);const a=Math.max(1,Math.min(16,t.numWorkers||EG));const o=[];for(let t=0;t<a;++t){const t=new Worker(r);t.postMessage({type:"init",module:s});o.push(t)}AG.init(o)}));return true};const LG=t=>{if(t?.lazyInit){CG=t}else{PG(t)}};const DG=(t,e)=>{if(!PG()){return false}AG.enqueueJob(t,e);return true};class MG{destroy(){if(this.renders){this.renders.forEach((t=>{t.meshes=null}))}}}const IG=t=>/^data:[^\n\r,\u2028\u2029]*,.*$/i.test(t);const RG=t=>t.substring(t.indexOf(":")+1,t.indexOf(";"));const OG=t=>{switch(t){case"SCALAR":return 1;case"VEC2":return 2;case"VEC3":return 3;case"VEC4":return 4;case"MAT2":return 4;case"MAT3":return 9;case"MAT4":return 16;default:return 3}};const FG=t=>{switch(t){case 5120:return ur;case 5121:return fr;case 5122:return pr;case 5123:return mr;case 5124:return _r;case 5125:return gr;case 5126:return vr;default:return 0}};const NG=t=>{switch(t){case 5120:return 1;case 5121:return 1;case 5122:return 2;case 5123:return 2;case 5124:return 4;case 5125:return 4;case 5126:return 4;default:return 0}};const kG=t=>{switch(t){case 5120:return Int8Array;case 5121:return Uint8Array;case 5122:return Int16Array;case 5123:return Uint16Array;case 5124:return Int32Array;case 5125:return Uint32Array;case 5126:return Float32Array;default:return null}};const BG={POSITION:Ki,NORMAL:Zi,TANGENT:Qi,COLOR_0:en,JOINTS_0:tn,WEIGHTS_0:Ji,TEXCOORD_0:nn,TEXCOORD_1:rn,TEXCOORD_2:an,TEXCOORD_3:on,TEXCOORD_4:ln,TEXCOORD_5:hn,TEXCOORD_6:cn,TEXCOORD_7:dn};const UG={[Ki]:0,[Zi]:1,[Qi]:2,[en]:3,[tn]:4,[Ji]:5,[nn]:6,[rn]:7,[an]:8,[on]:9,[ln]:10,[hn]:11,[cn]:12,[dn]:13};const zG=t=>{switch(t){case ur:return t=>Math.max(t/127,-1);case fr:return t=>t/255;case pr:return t=>Math.max(t/32767,-1);case mr:return t=>t/65535;default:return t=>t}};const VG=(t,e,s)=>{const i=zG(s);const n=e.length;for(let s=0;s<n;++s){t[s]=i(e[s])}return t};const GG=(t,e,s=false)=>{const i=OG(t.type);const n=kG(t.componentType);if(!n){return null}let r;if(t.sparse){const s=t.sparse;const a={count:s.count,type:"SCALAR"};const o=GG(Object.assign(a,s.indices),e,true);const l={count:s.count,type:t.type,componentType:t.componentType};const h=GG(Object.assign(l,s.values),e,true);if(t.hasOwnProperty("bufferView")){const s={bufferView:t.bufferView,byteOffset:t.byteOffset,componentType:t.componentType,count:t.count,type:t.type};r=GG(s,e,true).slice()}else{r=new n(t.count*i)}for(let t=0;t<s.count;++t){const e=o[t];for(let s=0;s<i;++s){r[e*i+s]=h[t*i+s]}}}else{if(t.hasOwnProperty("bufferView")){const a=e[t.bufferView];if(s&&a.hasOwnProperty("byteStride")){const e=i*n.BYTES_PER_ELEMENT;const s=new ArrayBuffer(t.count*e);const o=new Uint8Array(s);let l=0;for(let s=0;s<t.count;++s){let i=(t.byteOffset||0)+s*a.byteStride;for(let t=0;t<e;++t){o[l++]=a[i++]}}r=new n(s)}else{r=new n(a.buffer,a.byteOffset+(t.byteOffset||0),t.count*i)}}else{r=new n(t.count*i)}}return r};const HG=(t,e)=>{const s=GG(t,e,true);if(s instanceof Float32Array||!t.normalized){return s}const i=new Float32Array(s.length);VG(i,s,FG(t.componentType));return i};const WG=t=>{let e=t.min;let s=t.max;if(!e||!s){return null}if(t.normalized){const i=FG(t.componentType);e=VG([],e,i);s=VG([],s,i)}return new jt(new It((s[0]+e[0])*.5,(s[1]+e[1])*.5,(s[2]+e[2])*.5),new It((s[0]-e[0])*.5,(s[1]-e[1])*.5,(s[2]-e[2])*.5))};const XG=t=>{if(!t.hasOwnProperty("mode")){return $i}switch(t.mode){case 0:return Hi;case 1:return Wi;case 2:return Xi;case 3:return qi;case 4:return $i;case 5:return ji;case 6:return Yi;default:return $i}};const qG=t=>{const e=new Uint16Array(t);for(let s=0;s<t;s++){e[s]=s}return e};const $G=(t,e)=>{const s=t[Ki];if(!s||s.components!==3){return}let i;if(s.size!==s.stride){const t=s.stride/Xa[s.type];const e=new Wa[s.type](s.buffer,s.offset,s.count*t);i=new Wa[s.type](s.count*3);for(let n=0;n<s.count;++n){i[n*3+0]=e[n*t+0];i[n*3+1]=e[n*t+1];i[n*3+2]=e[n*t+2]}}else{i=new Wa[s.type](s.buffer,s.offset,s.count*3)}const n=s.count;if(!e){e=qG(n)}const r=mw(i,e);const a=new Float32Array(r.length);a.set(r);t[Zi]={buffer:a.buffer,size:12,offset:0,stride:12,count:n,components:3,type:vr}};const jG=t=>{const e=t=>{const e=[];for(let s=0;s<t._levels.length;++s){let i=[];if(t.cubemap){for(let e=0;e<6;++e){i.push(t._levels[s][e])}}else{i=t._levels[s]}e.push(i)}return e};const s=new lo(t.device,t);s._levels=e(t);return s};const YG=t=>{const e=new qA(`${t.name}_clone`,t.type,t.file,t.data,t.options);e.loaded=true;e.resource=jG(t.resource);t.registry.add(e);return e};const KG=(t,e)=>{const s=e[Ki];if(!s){return null}const i=s.count;const n=[];for(const s in e){if(e.hasOwnProperty(s)){const i={semantic:s,components:e[s].components,type:e[s].type,normalize:!!e[s].normalize};if(!Qo.isElementValid(t,i)){i.components++}n.push(i)}}n.sort(((t,e)=>UG[t.semantic]-UG[e.semantic]));let r,a,o;let l,h,c;const d=new Qo(t,n);let u=true;for(r=0;r<d.elements.length;++r){h=d.elements[r];l=e[h.name];c=l.offset-s.offset;if(l.buffer!==s.buffer||l.stride!==h.stride||l.size!==h.size||c!==h.offset){u=false;break}}const f=new qo(t,d,i);const p=f.lock();const m=new Uint32Array(p);let _;if(u){_=new Uint32Array(s.buffer,s.offset,i*f.format.size/4);m.set(_)}else{let t,s;for(r=0;r<f.format.elements.length;++r){h=f.format.elements[r];t=h.stride/4;l=e[h.name];s=l.stride/4;_=new Uint32Array(l.buffer,l.offset,(l.count-1)*s+(l.size+3)/4);let n=0;let c=h.offset/4;const d=Math.floor((l.size+3)/4);for(a=0;a<i;++a){for(o=0;o<d;++o){m[c+o]=_[n+o]}n+=s;c+=t}}}f.unlock();return f};const ZG=(t,e,s,i,n,r)=>{const a={};const o=[];for(const t in e){if(e.hasOwnProperty(t)&&BG.hasOwnProperty(t)){a[t]=e[t];o.push(`${t}:${e[t]}`)}}o.sort();const l=o.join();let h=r[l];if(!h){const o={};for(const t in a){const s=i[e[t]];const r=GG(s,n);const a=n[s.bufferView];const l=BG[t];const h=OG(s.type)*NG(s.componentType);const c=a&&a.hasOwnProperty("byteStride")?a.byteStride:h;o[l]={buffer:r.buffer,size:h,offset:r.byteOffset,stride:c,count:s.count,components:OG(s.type),type:FG(s.componentType),normalize:s.normalized}}if(!o.hasOwnProperty(Zi)){$G(o,s)}h=KG(t,o);r[l]=h}return h};const QG=(t,e,s,i,n,r)=>{let a,o,l;const h=e.joints;const c=h.length;const d=[];if(e.hasOwnProperty("inverseBindMatrices")){const t=e.inverseBindMatrices;const n=GG(s[t],i,true);const r=[];for(a=0;a<c;a++){for(o=0;o<16;o++){r[o]=n[a*16+o]}l=new Vt;l.set(r);d.push(l)}}else{for(a=0;a<c;a++){l=new Vt;d.push(l)}}const u=[];for(a=0;a<c;a++){u[a]=n[h[a]].name}const f=u.join("#");let p=r.get(f);if(!p){p=new cb(t,d,u);r.set(f,p)}return p};const JG=(t,e,s,i,n,r,a)=>{const o=new Vv(t);o.aabb=WG(s[e.attributes.POSITION]);const l=[];for(const[t,i]of Object.entries(e.attributes)){const e=s[i];const n=BG[t];const r=FG(e.componentType);l.push({semantic:n,components:OG(e.type),type:r,normalize:e.normalized??(n===en&&(r===fr||r===mr))})}a.push(new Promise(((s,n)=>{const r=e.extensions.KHR_draco_mesh_compression;DG(i[r.bufferView].slice().buffer,((i,a)=>{if(i){console.log(i);n(i)}else{const i={};for(const[t,e]of Object.entries(r.attributes)){i[BG[t]]=a.attributes.indexOf(e)}l.sort(((t,e)=>i[t.semantic]-i[e.semantic]));if(!e.attributes?.NORMAL){l.splice(1,0,{semantic:"NORMAL",components:3,type:vr})}const n=new Qo(t,l);const h=a.vertices.byteLength/n.size;const c=h<=65535?xs:Ts;const d=a.indices.byteLength/(h<=65535?2:4);const u=new qo(t,n,h,{data:a.vertices});const f=new qc(t,c,d,He,a.indices);o.vertexBuffer=u;o.indexBuffer[0]=f;o.primitive[0].type=XG(e);o.primitive[0].base=0;o.primitive[0].count=f?d:h;o.primitive[0].indexed=!!f;s()}}))})));if(e?.extensions?.KHR_materials_variants){const t=e.extensions.KHR_materials_variants;const s={};t.mappings.forEach((t=>{t.variants.forEach((e=>{s[e]=t.material}))}));n[o.id]=s}r[o.id]=e.material;return o};const tH=(t,e,s,i,n,r,a,o,l)=>{const h=[];e.primitives.forEach((c=>{if(c.extensions?.KHR_draco_mesh_compression){h.push(JG(t,c,s,i,r,a,l))}else{let l=c.hasOwnProperty("indices")?GG(s[c.indices],i,true):null;const d=ZG(t,c.attributes,l,s,i,n);const u=XG(c);const f=new Vv(t);f.vertexBuffer=d;f.primitive[0].type=u;f.primitive[0].base=0;f.primitive[0].indexed=l!==null;if(l!==null){let e;if(l instanceof Uint8Array){e=Ss}else if(l instanceof Uint16Array){e=xs}else{e=Ts}if(e===Ss&&t.isWebGPU){e=xs;l=new Uint16Array(l)}const s=new qc(t,e,l.length,He,l);f.indexBuffer[0]=s;f.primitive[0].count=l.length}else{f.primitive[0].count=d.numVertices}if(c.hasOwnProperty("extensions")&&c.extensions.hasOwnProperty("KHR_materials_variants")){const t=c.extensions.KHR_materials_variants;const e={};t.mappings.forEach((t=>{t.variants.forEach((s=>{e[s]=t.material}))}));r[f.id]=e}a[f.id]=c.material;let p=s[c.attributes.POSITION];f.aabb=WG(p);if(c.hasOwnProperty("targets")){const n=[];c.targets.forEach(((t,r)=>{const a={};if(t.hasOwnProperty("POSITION")){p=s[t.POSITION];a.deltaPositions=HG(p,i);a.aabb=WG(p)}if(t.hasOwnProperty("NORMAL")){p=s[t.NORMAL];a.deltaNormals=HG(p,i)}if(e.hasOwnProperty("extras")&&e.extras.hasOwnProperty("targetNames")){a.name=e.extras.targetNames[r]}else{a.name=r.toString(10)}if(e.hasOwnProperty("weights")){a.defaultWeight=e.weights[r]}a.preserveData=o.morphPreserveData;n.push(new eT(a))}));f.morph=new tT(n,t,{preferHighPrecision:o.morphPreferHighPrecision})}h.push(f)}}));return h};const eH=(t,e,s)=>{let i;const n=t.texCoord;if(n){for(i=0;i<s.length;++i){e[`${s[i]}MapUv`]=n}}const r=[0,0];const a=[1,1];const o=t.extensions?.KHR_texture_transform;if(o){const t=o.offset||r;const n=o.scale||a;const l=o.rotation?-o.rotation*wt.RAD_TO_DEG:0;const h=new Ot(n[0],n[1]);const c=new Ot(t[0],1-n[1]-t[1]);for(i=0;i<s.length;++i){e[`${s[i]}MapTiling`]=h;e[`${s[i]}MapOffset`]=c;e[`${s[i]}MapRotation`]=l}}};const sH=(t,e,s)=>{let i,n;if(t.hasOwnProperty("diffuseFactor")){i=t.diffuseFactor;e.diffuse.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2));e.opacity=i[3]}else{e.diffuse.set(1,1,1);e.opacity=1}if(t.hasOwnProperty("diffuseTexture")){const i=t.diffuseTexture;n=s[i.index];e.diffuseMap=n;e.diffuseMapChannel="rgb";e.opacityMap=n;e.opacityMapChannel="a";eH(i,e,["diffuse","opacity"])}e.useMetalness=false;if(t.hasOwnProperty("specularFactor")){i=t.specularFactor;e.specular.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2))}else{e.specular.set(1,1,1)}if(t.hasOwnProperty("glossinessFactor")){e.gloss=t.glossinessFactor}else{e.gloss=1}if(t.hasOwnProperty("specularGlossinessTexture")){const i=t.specularGlossinessTexture;e.specularMap=e.glossMap=s[i.index];e.specularMapChannel="rgb";e.glossMapChannel="a";eH(i,e,["gloss","metalness"])}};const iH=(t,e,s)=>{if(t.hasOwnProperty("clearcoatFactor")){e.clearCoat=t.clearcoatFactor*.25}else{e.clearCoat=0}if(t.hasOwnProperty("clearcoatTexture")){const i=t.clearcoatTexture;e.clearCoatMap=s[i.index];e.clearCoatMapChannel="r";eH(i,e,["clearCoat"])}if(t.hasOwnProperty("clearcoatRoughnessFactor")){e.clearCoatGloss=t.clearcoatRoughnessFactor}else{e.clearCoatGloss=0}if(t.hasOwnProperty("clearcoatRoughnessTexture")){const i=t.clearcoatRoughnessTexture;e.clearCoatGlossMap=s[i.index];e.clearCoatGlossMapChannel="g";eH(i,e,["clearCoatGloss"])}if(t.hasOwnProperty("clearcoatNormalTexture")){const i=t.clearcoatNormalTexture;e.clearCoatNormalMap=s[i.index];eH(i,e,["clearCoatNormal"]);if(i.hasOwnProperty("scale")){e.clearCoatBumpiness=i.scale}else{e.clearCoatBumpiness=1}}e.clearCoatGlossInvert=true};const nH=(t,e,s)=>{e.useLighting=false;e.emissive.copy(e.diffuse);e.emissiveMap=e.diffuseMap;e.emissiveMapUv=e.diffuseMapUv;e.emissiveMapTiling.copy(e.diffuseMapTiling);e.emissiveMapOffset.copy(e.diffuseMapOffset);e.emissiveMapRotation=e.diffuseMapRotation;e.emissiveMapChannel=e.diffuseMapChannel;e.emissiveVertexColor=e.diffuseVertexColor;e.emissiveVertexColorChannel=e.diffuseVertexColorChannel;e.useLighting=false;e.useSkybox=false;e.diffuse.set(1,1,1);e.diffuseMap=null;e.diffuseVertexColor=false};const rH=(t,e,s)=>{e.useMetalnessSpecularColor=true;if(t.hasOwnProperty("specularColorTexture")){e.specularMap=s[t.specularColorTexture.index];e.specularMapChannel="rgb";eH(t.specularColorTexture,e,["specular"])}if(t.hasOwnProperty("specularColorFactor")){const s=t.specularColorFactor;e.specular.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2))}else{e.specular.set(1,1,1)}if(t.hasOwnProperty("specularFactor")){e.specularityFactor=t.specularFactor}else{e.specularityFactor=1}if(t.hasOwnProperty("specularTexture")){e.specularityFactorMapChannel="a";e.specularityFactorMap=s[t.specularTexture.index];eH(t.specularTexture,e,["specularityFactor"])}};const aH=(t,e,s)=>{if(t.hasOwnProperty("ior")){e.refractionIndex=1/t.ior}};const oH=(t,e,s)=>{if(t.hasOwnProperty("dispersion")){e.dispersion=t.dispersion}};const lH=(t,e,s)=>{e.blendType=Hp;e.useDynamicRefraction=true;if(t.hasOwnProperty("transmissionFactor")){e.refraction=t.transmissionFactor}if(t.hasOwnProperty("transmissionTexture")){e.refractionMapChannel="r";e.refractionMap=s[t.transmissionTexture.index];eH(t.transmissionTexture,e,["refraction"])}};const hH=(t,e,s)=>{e.useSheen=true;if(t.hasOwnProperty("sheenColorFactor")){const s=t.sheenColorFactor;e.sheen.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2))}else{e.sheen.set(1,1,1)}if(t.hasOwnProperty("sheenColorTexture")){e.sheenMap=s[t.sheenColorTexture.index];eH(t.sheenColorTexture,e,["sheen"])}e.sheenGloss=t.hasOwnProperty("sheenRoughnessFactor")?t.sheenRoughnessFactor:0;if(t.hasOwnProperty("sheenRoughnessTexture")){e.sheenGlossMap=s[t.sheenRoughnessTexture.index];e.sheenGlossMapChannel="a";eH(t.sheenRoughnessTexture,e,["sheenGloss"])}e.sheenGlossInvert=true};const cH=(t,e,s)=>{e.blendType=Hp;e.useDynamicRefraction=true;if(t.hasOwnProperty("thicknessFactor")){e.thickness=t.thicknessFactor}if(t.hasOwnProperty("thicknessTexture")){e.thicknessMap=s[t.thicknessTexture.index];e.thicknessMapChannel="g";eH(t.thicknessTexture,e,["thickness"])}if(t.hasOwnProperty("attenuationDistance")){e.attenuationDistance=t.attenuationDistance}if(t.hasOwnProperty("attenuationColor")){const s=t.attenuationColor;e.attenuation.set(Math.pow(s[0],1/2.2),Math.pow(s[1],1/2.2),Math.pow(s[2],1/2.2))}};const dH=(t,e,s)=>{if(t.hasOwnProperty("emissiveStrength")){e.emissiveIntensity=t.emissiveStrength}};const uH=(t,e,s)=>{e.useIridescence=true;if(t.hasOwnProperty("iridescenceFactor")){e.iridescence=t.iridescenceFactor}if(t.hasOwnProperty("iridescenceTexture")){e.iridescenceMapChannel="r";e.iridescenceMap=s[t.iridescenceTexture.index];eH(t.iridescenceTexture,e,["iridescence"])}if(t.hasOwnProperty("iridescenceIor")){e.iridescenceRefractionIndex=t.iridescenceIor}if(t.hasOwnProperty("iridescenceThicknessMinimum")){e.iridescenceThicknessMin=t.iridescenceThicknessMinimum}if(t.hasOwnProperty("iridescenceThicknessMaximum")){e.iridescenceThicknessMax=t.iridescenceThicknessMaximum}if(t.hasOwnProperty("iridescenceThicknessTexture")){e.iridescenceThicknessMapChannel="g";e.iridescenceThicknessMap=s[t.iridescenceThicknessTexture.index];eH(t.iridescenceThicknessTexture,e,["iridescenceThickness"])}};const fH=(t,e,s)=>{e.enableGGXSpecular=true;if(t.hasOwnProperty("anisotropyStrength")){e.anisotropyIntensity=t.anisotropyStrength}else{e.anisotropyIntensity=0}if(t.hasOwnProperty("anisotropyTexture")){const i=t.anisotropyTexture;e.anisotropyMap=s[i.index];eH(i,e,["anisotropy"])}if(t.hasOwnProperty("anisotropyRotation")){e.anisotropyRotation=t.anisotropyRotation*wt.RAD_TO_DEG}else{e.anisotropyRotation=0}};const pH=(t,e)=>{const s=new Qb;if(t.hasOwnProperty("name")){s.name=t.name}s.occludeSpecular=O_;s.diffuseVertexColor=true;s.specularTint=true;s.specularVertexColor=true;s.specular.set(1,1,1);s.gloss=1;s.glossInvert=true;s.useMetalness=true;let i,n;if(t.hasOwnProperty("pbrMetallicRoughness")){const r=t.pbrMetallicRoughness;if(r.hasOwnProperty("baseColorFactor")){i=r.baseColorFactor;s.diffuse.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2));s.opacity=i[3]}if(r.hasOwnProperty("baseColorTexture")){const t=r.baseColorTexture;n=e[t.index];s.diffuseMap=n;s.diffuseMapChannel="rgb";s.opacityMap=n;s.opacityMapChannel="a";eH(t,s,["diffuse","opacity"])}if(r.hasOwnProperty("metallicFactor")){s.metalness=r.metallicFactor}if(r.hasOwnProperty("roughnessFactor")){s.gloss=r.roughnessFactor}if(r.hasOwnProperty("metallicRoughnessTexture")){const t=r.metallicRoughnessTexture;s.metalnessMap=s.glossMap=e[t.index];s.metalnessMapChannel="b";s.glossMapChannel="g";eH(t,s,["gloss","metalness"])}}if(t.hasOwnProperty("normalTexture")){const i=t.normalTexture;s.normalMap=e[i.index];eH(i,s,["normal"]);if(i.hasOwnProperty("scale")){s.bumpiness=i.scale}}if(t.hasOwnProperty("occlusionTexture")){const i=t.occlusionTexture;s.aoMap=e[i.index];s.aoMapChannel="r";eH(i,s,["ao"])}if(t.hasOwnProperty("emissiveFactor")){i=t.emissiveFactor;s.emissive.set(Math.pow(i[0],1/2.2),Math.pow(i[1],1/2.2),Math.pow(i[2],1/2.2))}if(t.hasOwnProperty("emissiveTexture")){const i=t.emissiveTexture;s.emissiveMap=e[i.index];eH(i,s,["emissive"])}if(t.hasOwnProperty("alphaMode")){switch(t.alphaMode){case"MASK":s.blendType=Wp;if(t.hasOwnProperty("alphaCutoff")){s.alphaTest=t.alphaCutoff}else{s.alphaTest=.5}break;case"BLEND":s.blendType=Hp;s.depthWrite=false;break;default:case"OPAQUE":s.blendType=Wp;break}}else{s.blendType=Wp}if(t.hasOwnProperty("doubleSided")){s.twoSidedLighting=t.doubleSided;s.cull=t.doubleSided?ss:is}else{s.twoSidedLighting=false;s.cull=is}const r={KHR_materials_clearcoat:iH,KHR_materials_emissive_strength:dH,KHR_materials_ior:aH,KHR_materials_dispersion:oH,KHR_materials_iridescence:uH,KHR_materials_pbrSpecularGlossiness:sH,KHR_materials_sheen:hH,KHR_materials_specular:rH,KHR_materials_transmission:lH,KHR_materials_unlit:nH,KHR_materials_volume:cH,KHR_materials_anisotropy:fH};if(t.hasOwnProperty("extensions")){for(const i in t.extensions){const n=r[i];if(n!==undefined){n(t.extensions[i],s,e)}}}s.update();return s};const mH=(t,e,s,i,n,r,a)=>{const o=t=>new yG(OG(t.type),HG(t,i));const l={STEP:YR,LINEAR:KR,CUBICSPLINE:ZR};const h={};const c={};const d={};let u=1;let f;for(f=0;f<t.samplers.length;++f){const e=t.samplers[f];if(!h.hasOwnProperty(e.input)){h[e.input]=o(s[e.input])}if(!c.hasOwnProperty(e.output)){c[e.output]=o(s[e.output])}const i=e.hasOwnProperty("interpolation")&&l.hasOwnProperty(e.interpolation)?l[e.interpolation]:KR;const n={paths:[],input:e.input,output:e.output,interpolation:i};d[f]=n}const p=[];const m={translation:"localPosition",rotation:"localRotation",scale:"localScale"};const _=t=>{const e=[];while(t){e.unshift(t.name);t=t.parent}return e};const g=(t,e,s)=>{const i=c[t.output];if(!i){return}let n;if(r&&r[e.mesh]){const t=r[e.mesh];if(t.hasOwnProperty("extras")&&t.extras.hasOwnProperty("targetNames")){n=t.extras.targetNames}}const a=i.data;const o=a.length/h[t.input].data.length;const l=a.length/o;const p=l*4;const m=new ArrayBuffer(p*o);for(let e=0;e<o;e++){const i=new Float32Array(m,p*e,l);for(let t=0;t<l;t++){i[t]=a[t*o+e]}const r=new yG(1,i);const h=n?.[e]?`name.${n[e]}`:e;c[-u]=r;const _={paths:[{entityPath:s,component:"graph",propertyPath:[`weight.${h}`]}],input:t.input,output:-u,interpolation:t.interpolation};u++;d[`morphCurve-${f}-${e}`]=_}};for(f=0;f<t.channels.length;++f){const e=t.channels[f];const s=e.target;const i=d[e.sampler];const r=n[s.node];const o=a[s.node];const l=_(r);if(s.path.startsWith("weights")){g(i,o,l);d[e.sampler].morphCurve=true}else{i.paths.push({entityPath:l,component:"graph",propertyPath:[m[s.path]]})}}const v=[];const y=[];const S=[];for(const t in h){v.push(h[t]);h[t]=v.length-1}for(const t in c){y.push(c[t]);c[t]=y.length-1}for(const t in d){const e=d[t];if(e.morphCurve){continue}S.push(new vG(e.paths,h[e.input],c[e.output],e.interpolation));if(e.paths.length>0&&e.paths[0].propertyPath[0]==="localRotation"&&e.interpolation!==ZR){p.push(S[S.length-1].output)}}p.sort();let x=null;let T;for(f=0;f<p.length;++f){const t=p[f];if(f===0||t!==x){T=y[t];if(T.components===4){const t=T.data;const e=t.length-4;for(let s=0;s<e;s+=4){const e=t[s+0]*t[s+4]+t[s+1]*t[s+5]+t[s+2]*t[s+6]+t[s+3]*t[s+7];if(e<0){t[s+4]*=-1;t[s+5]*=-1;t[s+6]*=-1;t[s+7]*=-1}}}x=t}}let w=0;for(f=0;f<v.length;f++){T=v[f]._data;w=Math.max(w,T.length===0?0:T[T.length-1])}return new DO(t.hasOwnProperty("name")?t.name:`animation_${e}`,w,v,y,S)};const _H=new Vt;const gH=new It;const vH=(t,e,s)=>{const i=new By;if(t.hasOwnProperty("name")&&t.name.length>0){i.name=t.name}else{i.name=`node_${e}`}if(t.hasOwnProperty("matrix")){_H.data.set(t.matrix);_H.getTranslation(gH);i.setLocalPosition(gH);_H.getEulerAngles(gH);i.setLocalEulerAngles(gH);_H.getScale(gH);i.setLocalScale(gH)}if(t.hasOwnProperty("rotation")){const e=t.rotation;i.setLocalRotation(e[0],e[1],e[2],e[3])}if(t.hasOwnProperty("translation")){const e=t.translation;i.setLocalPosition(e[0],e[1],e[2])}if(t.hasOwnProperty("scale")){const e=t.scale;i.setLocalScale(e[0],e[1],e[2])}if(t.hasOwnProperty("extensions")&&t.extensions.EXT_mesh_gpu_instancing){s.set(t,{ext:t.extensions.EXT_mesh_gpu_instancing})}return i};const yH=(t,e)=>{const s=t.type==="orthographic"?h_:l_;const i=s===h_?t.orthographic:t.perspective;const n={enabled:false,projection:s,nearClip:i.znear,aspectRatioMode:Wg};if(i.zfar){n.farClip=i.zfar}if(s===h_){n.orthoHeight=.5*i.ymag;if(i.ymag){n.aspectRatioMode=Xg;n.aspectRatio=i.xmag/i.ymag}}else{n.fov=i.yfov*wt.RAD_TO_DEG;if(i.aspectRatio){n.aspectRatioMode=Xg;n.aspectRatio=i.aspectRatio}}const r=new dC(t.name);r.addComponent("camera",n);return r};const SH=(t,e)=>{const s={enabled:false,type:t.type==="point"?"omni":t.type,color:t.hasOwnProperty("color")?new bt(t.color):bt.WHITE,range:t.hasOwnProperty("range")?t.range:9999,falloffMode:Cm,intensity:t.hasOwnProperty("intensity")?wt.clamp(t.intensity,0,2):1};if(t.hasOwnProperty("spot")){s.innerConeAngle=t.spot.hasOwnProperty("innerConeAngle")?t.spot.innerConeAngle*wt.RAD_TO_DEG:0;s.outerConeAngle=t.spot.hasOwnProperty("outerConeAngle")?t.spot.outerConeAngle*wt.RAD_TO_DEG:Math.PI/4}if(t.hasOwnProperty("intensity")){s.luminance=t.intensity*Kx.getLightUnitConversion(Xx[s.type],s.outerConeAngle,s.innerConeAngle)}const i=new dC(e.name);i.rotateLocal(90,0,0);i.addComponent("light",s);return i};const xH=(t,e,s,i)=>{if(!e.hasOwnProperty("skins")||e.skins.length===0){return[]}const n=new Map;return e.skins.map((r=>QG(t,r,e.accessors,i,s,n)))};const TH=(t,e,s,i)=>{const n={};const r={};const a={};const o=[];const l=!i.skipMeshes&&e?.meshes?.length&&e?.accessors?.length&&e?.bufferViews?.length;const h=l?e.meshes.map((l=>tH(t,l,e.accessors,s,n,r,a,i,o))):[];return{meshes:h,meshVariants:r,meshDefaultMaterials:a,promises:o}};const wH=(t,e,s)=>{if(!t.hasOwnProperty("materials")||t.materials.length===0){return[]}const i=s?.material?.preprocess;const n=s?.material?.process??pH;const r=s?.material?.postprocess;return t.materials.map((t=>{if(i){i(t)}const s=n(t,e);if(r){r(t,s)}return s}))};const bH=t=>{if(!t.hasOwnProperty("extensions")||!t.extensions.hasOwnProperty("KHR_materials_variants")){return null}const e=t.extensions.KHR_materials_variants.variants;const s={};for(let t=0;t<e.length;t++){s[e[t].name]=t}return s};const EH=(t,e,s,i)=>{if(!t.hasOwnProperty("animations")||t.animations.length===0){return[]}const n=i?.animation?.preprocess;const r=i?.animation?.postprocess;return t.animations.map(((i,a)=>{if(n){n(i)}const o=mH(i,a,t.accessors,s,e,t.meshes,t.nodes);if(r){r(i,o)}return o}))};const AH=(t,e,s,i)=>{const n=e.accessors;s.forEach(((t,e)=>{const s=t.ext.attributes;let r;if(s.hasOwnProperty("TRANSLATION")){const t=n[s.TRANSLATION];r=HG(t,i)}let a;if(s.hasOwnProperty("ROTATION")){const t=n[s.ROTATION];a=HG(t,i)}let o;if(s.hasOwnProperty("SCALE")){const t=n[s.SCALE];o=HG(t,i)}const l=(r?r.length/3:0)||(a?a.length/4:0)||(o?o.length/3:0);if(l){const e=new Float32Array(l*16);const s=new It;const i=new Gt;const n=new It(1,1,1);const h=new Vt;let c=0;for(let t=0;t<l;t++){const l=t*3;if(r){s.set(r[l],r[l+1],r[l+2])}if(a){const e=t*4;i.set(a[e],a[e+1],a[e+2],a[e+3])}if(o){n.set(o[l],o[l+1],o[l+2])}h.setTRS(s,i,n);for(let t=0;t<16;t++){e[c++]=h.data[t]}}t.matrices=e}}))};const CH=(t,e,s)=>{if(!t.hasOwnProperty("nodes")||t.nodes.length===0){return[]}const i=e?.node?.preprocess;const n=e?.node?.process??vH;const r=e?.node?.postprocess;const a=t.nodes.map(((t,e)=>{if(i){i(t)}const a=n(t,e,s);if(r){r(t,a)}return a}));for(let e=0;e<t.nodes.length;++e){const s=t.nodes[e];if(s.hasOwnProperty("children")){const t=a[e];const i={};for(let e=0;e<s.children.length;++e){const n=a[s.children[e]];if(!n.parent){if(i.hasOwnProperty(n.name)){n.name+=i[n.name]++}else{i[n.name]=1}t.addChild(n)}}}}return a};const PH=(t,e)=>{const s=[];const i=t.scenes.length;if(i===1&&t.scenes[0].nodes?.length===1){const i=t.scenes[0].nodes[0];s.push(e[i])}else{for(let n=0;n<i;n++){const i=t.scenes[n];if(i.nodes){const t=new By(i.name);for(let s=0;s<i.nodes.length;s++){const n=e[i.nodes[s]];t.addChild(n)}s.push(t)}}}return s};const LH=(t,e,s)=>{let i=null;if(t.hasOwnProperty("nodes")&&t.hasOwnProperty("cameras")&&t.cameras.length>0){const n=s?.camera?.preprocess;const r=s?.camera?.process??yH;const a=s?.camera?.postprocess;t.nodes.forEach(((s,o)=>{if(s.hasOwnProperty("camera")){const l=t.cameras[s.camera];if(l){if(n){n(l)}const t=r(l,e[o]);if(a){a(l,t)}if(t){if(!i)i=new Map;i.set(s,t)}}}}))}return i};const DH=(t,e,s)=>{let i=null;if(t.hasOwnProperty("nodes")&&t.hasOwnProperty("extensions")&&t.extensions.hasOwnProperty("KHR_lights_punctual")&&t.extensions.KHR_lights_punctual.hasOwnProperty("lights")){const n=t.extensions.KHR_lights_punctual.lights;if(n.length){const r=s?.light?.preprocess;const a=s?.light?.process??SH;const o=s?.light?.postprocess;t.nodes.forEach(((t,s)=>{if(t.hasOwnProperty("extensions")&&t.extensions.hasOwnProperty("KHR_lights_punctual")&&t.extensions.KHR_lights_punctual.hasOwnProperty("light")){const l=t.extensions.KHR_lights_punctual.light;const h=n[l];if(h){if(r){r(h)}const n=a(h,e[s]);if(o){o(h,n)}if(n){if(!i)i=new Map;i.set(t,n)}}}}))}}return i};const MH=(t,e,s)=>{t.nodes.forEach((t=>{if(t.hasOwnProperty("mesh")&&t.hasOwnProperty("skin")){const i=e[t.mesh].meshes;i.forEach((e=>{e.skin=s[t.skin]}))}}))};const IH=async(t,e,s,i,n)=>{const r=n?.global?.preprocess;const a=n?.global?.postprocess;if(r){r(e)}if(e.asset&&e.asset.generator==="PlayCanvas");const o=new Map;const l=CH(e,n,o);const h=PH(e,l);const c=DH(e,l,n);const d=LH(e,l,n);const u=bH(e);const f=await Promise.all(s);const{meshes:p,meshVariants:m,meshDefaultMaterials:_,promises:g}=TH(t,e,f,n);const v=EH(e,l,f,n);AH(t,e,o,f);const y=await Promise.all(i);const S=y.map((t=>t.resource));const x=wH(e,S,n);const T=xH(t,e,l,f);const w=[];for(let t=0;t<p.length;t++){w[t]=new fG;w[t].meshes=p[t]}MH(e,w,T);const b=new MG;b.gltf=e;b.nodes=l;b.scenes=h;b.animations=v;b.textures=y;b.materials=x;b.variants=u;b.meshVariants=m;b.meshDefaultMaterials=_;b.renders=w;b.skins=T;b.lights=c;b.cameras=d;b.nodeInstancingMap=o;if(a){a(e,b)}await Promise.all(g);return b};const RH=(t,e)=>{const s=(t,e)=>{switch(t){case 9728:return as;case 9729:return os;case 9984:return ls;case 9985:return cs;case 9986:return hs;case 9987:return ds;default:return e}};const i=(t,e)=>{switch(t){case 33071:return pe;case 33648:return me;case 10497:return fe;default:return e}};if(t){e=e??{};t.minFilter=s(e.minFilter,ds);t.magFilter=s(e.magFilter,os);t.addressU=i(e.wrapS,fe);t.addressV=i(e.wrapT,fe)}};let OH=0;const FH=t=>t.extensions?.KHR_texture_basisu?.source??t.extensions?.EXT_texture_webp?.source??t.source;const NH=(t,e,s,i,n)=>{if(!t.images||t.images.length===0){return[]}const r=n?.image?.preprocess;const a=n?.image?.processAsync;const o=n?.image?.postprocess;const l={"image/png":"png","image/jpeg":"jpg","image/basis":"basis","image/ktx":"ktx","image/ktx2":"ktx2","image/vnd-ms.dds":"dds"};const h=t=>{const e=new Set;if(t.hasOwnProperty("materials")){t.materials.forEach((s=>{if(s.hasOwnProperty("pbrMetallicRoughness")){const i=s.pbrMetallicRoughness;if(i.hasOwnProperty("baseColorTexture")){const s=t.textures[i.baseColorTexture.index];e.add(FH(s))}}if(s.hasOwnProperty("emissiveTexture")){const i=t.textures[s.emissiveTexture.index];e.add(FH(i))}if(s.hasOwnProperty("extensions")){const i=s.extensions.KHR_materials_sheen;if(i){if(i.hasOwnProperty("sheenColorTexture")){const s=t.textures[i.sheenColorTexture.index];e.add(FH(s))}}const n=s.extensions.KHR_materials_pbrSpecularGlossiness;if(n){if(n.hasOwnProperty("specularGlossinessTexture")){const s=t.textures[n.specularGlossinessTexture.index];e.add(FH(s))}}const r=s.extensions.KHR_materials_specular;if(r){if(r.hasOwnProperty("specularColorTexture")){const s=t.textures[r.specularColorTexture.index];e.add(FH(s))}}}}))}return e};const c=(t,e,s,n,r,a)=>new Promise(((o,h)=>{const c=s=>{const c=`${t.name||"gltf-texture"}-${OH++}`;const d={url:e||c};if(s){d.contents=s.slice(0).buffer}if(n){const t=l[n];if(t){d.filename=`${d.url}.${t}`}}const u={srgb:a};const f=new qA(c,"texture",d,u,r);f.on("load",(t=>o(t)));f.on("error",(t=>h(t)));i.add(f);i.load(f)};if(s){s.then((t=>c(t)))}else{c(null)}}));const d=h(t);return t.images.map(((t,i)=>{if(r){r(t)}let n;if(a){n=new Promise(((e,s)=>{a(t,((t,i)=>{if(t){s(t)}else{e(i)}}))}))}else{n=new Promise((t=>{t(null)}))}n=n.then((n=>{const r=d.has(i);if(n){return n}else if(t.hasOwnProperty("uri")){if(IG(t.uri)){return c(t,t.uri,null,RG(t.uri),null,r)}return c(t,AA.test(t.uri)?t.uri:A.join(s,t.uri),null,null,{crossOrigin:"anonymous"},r)}else if(t.hasOwnProperty("bufferView")&&t.hasOwnProperty("mimeType")){return c(t,null,e[t.bufferView],t.mimeType,null,r)}return Promise.reject(new Error(`Invalid image found in gltf (neither uri or bufferView found). index=${i}`))}));if(o){n=n.then((e=>{o(t,e);return e}))}return n}))};const kH=(t,e,s)=>{if(!t?.images?.length||!t?.textures?.length){return[]}const i=s?.texture?.preprocess;const n=s?.texture?.processAsync;const r=s?.texture?.postprocess;const a=new Set;return t.textures.map((s=>{if(i){i(s)}let o;if(n){o=new Promise(((e,i)=>{n(s,t.images,((t,s)=>{if(t){i(t)}else{e(s)}}))}))}else{o=new Promise((t=>{t(null)}))}o=o.then((i=>{i=i??FH(s);const n=a.has(i);a.add(i);return e[i].then((e=>{const i=n?YG(e):e;RH(i.resource,(t.samplers??[])[s.sampler]);return i}))}));if(r){o=o.then((t=>{r(s,t);return t}))}return o}))};const BH=(t,e,s,i)=>{if(!t.buffers||t.buffers.length===0){return[]}const n=i?.buffer?.preprocess;const r=i?.buffer?.processAsync;const a=i?.buffer?.postprocess;return t.buffers.map(((i,o)=>{if(n){n(i)}let l;if(r){l=new Promise(((t,e)=>{r(i,((s,i)=>{if(s){e(s)}else{t(i)}}))}))}else{l=new Promise((t=>{t(null)}))}l=l.then((t=>{if(t){return t}else if(i.hasOwnProperty("uri")){if(IG(i.uri)){const t=atob(i.uri.split(",")[1]);const e=new Uint8Array(t.length);for(let s=0;s<t.length;s++){e[s]=t.charCodeAt(s)}return e}return new Promise(((t,e)=>{bp.get(AA.test(i.uri)?i.uri:A.join(s,i.uri),{cache:true,responseType:"arraybuffer",retry:false},((s,i)=>{if(s){e(s)}else{t(new Uint8Array(i))}}))}))}return e}));if(a){l=l.then((e=>{a(t.buffers[o],e);return e}))}return l}))};const UH=(t,e)=>{const s=t=>{if(typeof TextDecoder!=="undefined"){return(new TextDecoder).decode(t)}let e="";for(let s=0;s<t.length;s++){e+=String.fromCharCode(t[s])}return decodeURIComponent(escape(e))};const i=JSON.parse(s(t));if(i.asset&&i.asset.version&&parseFloat(i.asset.version)<2){e(`Invalid gltf version. Expected version 2.0 or above but found version '${i.asset.version}'.`);return}e(null,i)};const zH=(t,e)=>{const s=t instanceof ArrayBuffer?new DataView(t):new DataView(t.buffer,t.byteOffset,t.byteLength);const i=s.getUint32(0,true);const n=s.getUint32(4,true);const r=s.getUint32(8,true);if(i!==1179937895){e(`Invalid magic number found in glb header. Expected 0x46546C67, found 0x${i.toString(16)}`);return}if(n!==2){e(`Invalid version number found in glb header. Expected 2, found ${n}`);return}if(r<=0||r>s.byteLength){e(`Invalid length found in glb header. Found ${r}`);return}const a=[];let o=12;while(o<r){const t=s.getUint32(o,true);if(o+t+8>s.byteLength){e(`Invalid chunk length found in glb. Found ${t}`)}const i=s.getUint32(o+4,true);const n=new Uint8Array(s.buffer,s.byteOffset+o+8,t);a.push({length:t,type:i,data:n});o+=t+8}if(a.length!==1&&a.length!==2){e("Invalid number of chunks found in glb file.");return}if(a[0].type!==1313821514){e(`Invalid chunk type found in glb file. Expected 0x4E4F534A, found 0x${a[0].type.toString(16)}`);return}if(a.length>1&&a[1].type!==5130562){e(`Invalid chunk type found in glb file. Expected 0x004E4942, found 0x${a[1].type.toString(16)}`);return}e(null,{gltfChunk:a[0].data,binaryChunk:a.length===2?a[1].data:null})};const VH=(t,e,s)=>{const i=()=>{const t=new Uint8Array(e);return t[0]===103&&t[1]===108&&t[2]===84&&t[3]===70};if(t&&t.toLowerCase().endsWith(".glb")||i()){zH(e,s)}else{s(null,{gltfChunk:e,binaryChunk:null})}};const GH=(t,e,s)=>{const i=[];const n=s?.bufferView?.preprocess;const r=s?.bufferView?.processAsync;const a=s?.bufferView?.postprocess;if(!t.bufferViews?.length){return i}for(let s=0;s<t.bufferViews.length;++s){const o=t.bufferViews[s];if(n){n(o)}let l;if(r){l=new Promise(((t,s)=>{r(o,e,((e,i)=>{if(e){s(e)}else{t(i)}}))}))}else{l=new Promise((t=>{t(null)}))}l=l.then((t=>{if(t){return t}return e[o.buffer].then((t=>new Uint8Array(t.buffer,t.byteOffset+(o.byteOffset||0),o.byteLength)))}));if(o.hasOwnProperty("byteStride")){l=l.then((t=>{t.byteStride=o.byteStride;return t}))}if(a){l=l.then((t=>{a(o,t);return t}))}i.push(l)}return i};class HH{static parse(t,e,s,i,n,r,a){VH(t,s,((t,s)=>{if(t){a(t);return}UH(s.gltfChunk,((t,o)=>{if(t){a(t);return}const l=BH(o,s.binaryChunk,e,r);const h=GH(o,l,r);const c=NH(o,h,e,n,r);const d=kH(o,c,r);IH(i,o,h,d,r).then((t=>a(null,t))).catch((t=>a(t)))}))}))}static createDefaultMaterial(){return pH({name:"defaultGlbMaterial"},[])}}class WH extends JA{constructor(t){super(t,"animation");this.device=t.graphicsDevice;this.assets=t.assets}load(t,e,s){if(typeof t==="string"){t={load:t,original:t}}const i={retry:this.maxRetries>0,maxRetries:this.maxRetries};if(t.load.startsWith("blob:")||t.load.startsWith("data:")){if(A.getExtension(t.original).toLowerCase()===".glb"){i.responseType=wp.ResponseType.ARRAY_BUFFER}else{i.responseType=wp.ResponseType.JSON}}bp.get(t.load,i,((i,n)=>{if(i){e(`Error loading animation resource: ${t.original} [${i}]`)}else{if(A.getExtension(t.original).toLowerCase()===".glb"){HH.parse("filename.glb","",n,this.device,this.assets,s?.options??{},((t,i)=>{if(t){e(t)}else{const t=i.animations;if(s?.data?.events){for(let e=0;e<t.length;e++){t[e].events=new LO(Object.values(s.data.events))}}i.destroy();e(null,t)}}))}else{e(null,this[`_parseAnimationV${n.animation.version}`](n))}}}))}open(t,e,s){return e}_parseAnimationV3(t){const e=t.animation;const s=new gb;s.name=e.name;s.duration=e.duration;for(let t=0;t<e.nodes.length;t++){const i=new _b;const n=e.nodes[t];i._name=n.name;for(let t=0;t<n.keys.length;t++){const e=n.keys[t];const s=e.time;const r=e.pos;const a=e.rot;const o=e.scale;const l=new It(r[0],r[1],r[2]);const h=(new Gt).setFromEulerAngles(a[0],a[1],a[2]);const c=new It(o[0],o[1],o[2]);const d=new mb(s,l,h,c);i._keys.push(d)}s.addNode(i)}return s}_parseAnimationV4(t){const e=t.animation;const s=new gb;s.name=e.name;s.duration=e.duration;for(let t=0;t<e.nodes.length;t++){const i=new _b;const n=e.nodes[t];i._name=n.name;const r=n.defaults.p;const a=n.defaults.r;const o=n.defaults.s;for(let t=0;t<n.keys.length;t++){const e=n.keys[t];const s=e.t;const l=r?r:e.p;const h=a?a:e.r;const c=o?o:e.s;const d=new It(l[0],l[1],l[2]);const u=(new Gt).setFromEulerAngles(h[0],h[1],h[2]);const f=new It(c[0],c[1],c[2]);const p=new mb(s,d,u,f);i._keys.push(p)}s.addNode(i)}return s}}class XH extends JA{constructor(t){super(t,"animclip")}load(t,e){if(typeof t==="string"){t={load:t,original:t}}const s={retry:this.maxRetries>0,maxRetries:this.maxRetries};if(t.load.startsWith("blob:")){s.responseType=wp.ResponseType.JSON}bp.get(t.load,s,((s,i)=>{if(s){e(`Error loading animation clip resource: ${t.original} [${s}]`)}else{e(null,i)}}))}open(t,e){const s=e.name;const i=e.duration;const n=e.inputs.map((t=>new yG(1,t)));const r=e.outputs.map((t=>new yG(t.components,t.data)));const a=e.curves.map((t=>new vG([t.path],t.inputIndex,t.outputIndex,t.interpolation)));return new DO(s,i,n,r,a)}}class qH extends JA{constructor(t){super(t,"animstategraph")}load(t,e){if(typeof t==="string"){t={load:t,original:t}}const s={retry:this.maxRetries>0,maxRetries:this.maxRetries};if(t.load.startsWith("blob:")){s.responseType=wp.ResponseType.JSON}bp.get(t.load,s,((s,i)=>{if(s){e(`Error loading animation state graph resource: ${t.original} [${s}]`)}else{e(null,i)}}))}open(t,e){return new tF(e)}}const $H=function(){if(typeof window==="undefined"){return false}const t=window.navigator.userAgent;const e=t.indexOf("MSIE ");if(e>0){return parseInt(t.substring(e+5,t.indexOf(".",e)),10)}const s=t.indexOf("Trident/");if(s>0){const e=t.indexOf("rv:");return parseInt(t.substring(e+3,t.indexOf(".",e)),10)}return false}();const jH=[".ogg",".mp3",".wav",".mp4a",".m4a",".mp4",".aac",".opus"];class YH extends JA{constructor(t){super(t,"audio");this.manager=t.soundManager}_isSupported(t){const e=A.getExtension(t);return jH.indexOf(e)>-1}load(t,e){if(typeof t==="string"){t={load:t,original:t}}const s=function(t){e(null,new Ip(t))};const i=function(s){let i=`Error loading audio url: ${t.original}`;if(s){i+=`: ${s.message||s}`}console.warn(i);e(i)};if(this._createSound){if(!this._isSupported(t.original)){i(`Audio format for ${t.original} not supported`);return}this._createSound(t.load,s,i)}else{i(null)}}_createSound(t,e,s){if(Rp()){const i=this.manager;if(!i.context){s("Audio manager has no audio context");return}const n={retry:this.maxRetries>0,maxRetries:this.maxRetries};if(t.startsWith("blob:")||t.startsWith("data:")){n.responseType=wp.ResponseType.ARRAY_BUFFER}bp.get(t,n,((t,n)=>{if(t){s(t);return}i.context.decodeAudioData(n,e,s)}))}else{let i=null;try{i=new Audio}catch(t){s("No support for Audio element");return}if($H){document.body.appendChild(i)}const n=function(){i.removeEventListener("canplaythrough",n);if($H){document.body.removeChild(i)}e(i)};i.onerror=function(){i.onerror=null;if($H){document.body.removeChild(i)}s()};i.addEventListener("canplaythrough",n);i.src=t}}}class KH extends JA{constructor(t){super(t,"binary")}load(t,e){if(typeof t==="string"){t={load:t,original:t}}bp.get(t.load,{responseType:wp.ResponseType.ARRAY_BUFFER,retry:this.maxRetries>0,maxRetries:this.maxRetries},((s,i)=>{if(!s){e(null,i)}else{e(`Error loading binary resource: ${t.original} [${s}]`)}}))}openBinary(t){return t.buffer}}class ZH{constructor(t,e,s,i){const n=function(t,i,n){const r=ZH.createAsset(e.name,t,i,n);s.add(r);return r};const r=[];for(let e=0;e<t.renders.length;++e){r.push(n("render",t.renders[e],e))}const a=[];for(let e=0;e<t.materials.length;++e){a.push(n("material",t.materials[e],e))}const o=[];for(let e=0;e<t.animations.length;++e){o.push(n("animation",t.animations[e],e))}this.data=t;this._model=null;this._assetName=e.name;this._assets=s;this._defaultMaterial=i;this.renders=r;this.materials=a;this.textures=t.textures;this.animations=o}get model(){if(!this._model){const t=ZH.createModel(this.data,this._defaultMaterial);const e=ZH.createAsset(this._assetName,"model",t,0);this._assets.add(e);this._model=e}return this._model}static createAsset(t,e,s,i){const n=new qA(`${t}/${e}/${i}`,e,{url:""});n.resource=s;n.loaded=true;return n}instantiateModelEntity(t){const e=new dC(undefined,this._assets._loader._app);e.addComponent("model",Object.assign({type:"asset",asset:this.model},t));return e}instantiateRenderEntity(t){const e=this._defaultMaterial;const s=[];const i=function(t,i,n,r,a,o,l,h){const c=a[n.id];const d=c===undefined?e:r[c];const u=new sy(n,d);if(n.morph){u.morphInstance=new Qx(n.morph)}if(l.hasOwnProperty("skin")){s.push({meshInstance:u,rootBone:t,entity:i})}const f=h.get(l);if(f){const t=f.matrices;const e=Qo.getDefaultInstancingFormat(n.device);const s=new qo(n.device,e,t.length/16,{data:t});u.setInstancing(s);u.instancingData._destroyVertexBuffer=true}return u};const n=(e,s,r)=>{const a=new dC(undefined,this._assets._loader._app);s._cloneInternal(a);if(!e)e=a;let o=null;let l=null;for(let t=0;t<r.nodes.length;t++){const n=r.nodes[t];if(n===s){const s=r.gltf.nodes[t];if(s.hasOwnProperty("mesh")){const t=r.renders[s.mesh].meshes;l=this.renders[s.mesh];for(let n=0;n<t.length;n++){const l=t[n];if(l){const t=i(e,a,l,r.materials,r.meshDefaultMaterials,r.skins,s,r.nodeInstancingMap);if(!o){o=[]}o.push(t)}}}if(r.lights){const t=r.lights.get(s);if(t){a.addChild(t.clone())}}if(r.cameras){const t=r.cameras.get(s);if(t){t.camera.system.cloneComponent(t,a)}}}}if(o){a.addComponent("render",Object.assign({type:"asset",meshInstances:o},t));a.render.assignAsset(l)}const h=s.children;for(let t=0;t<h.length;t++){const s=n(e,h[t],r);a.addChild(s)}return a};const r=[];for(const t of this.data.scenes){r.push(n(null,t,this.data))}s.forEach((t=>{t.meshInstance.skinInstance=tz.createCachedSkinInstance(t.meshInstance.mesh.skin,t.rootBone,t.entity);t.meshInstance.node.render.rootBone=t.rootBone}));return ZH.createSceneHierarchy(r,dC)}getMaterialVariants(){return this.data.variants?Object.keys(this.data.variants):[]}applyMaterialVariant(t,e){const s=e?this.data.variants[e]:null;if(s===undefined){return}const i=t.findComponents("render");for(let t=0;t<i.length;t++){const e=i[t];this._applyMaterialVariant(s,e.meshInstances)}}applyMaterialVariantInstances(t,e){const s=e?this.data.variants[e]:null;if(s===undefined){return}this._applyMaterialVariant(s,t)}_applyMaterialVariant(t,e){e.forEach((e=>{if(t===null){e.material=this._defaultMaterial}else{const s=this.data.meshVariants[e.mesh.id];if(s){e.material=this.data.materials[s[t]]}}}))}static createSceneHierarchy(t,e){let s=null;if(t.length===1){s=t[0]}else{s=new e("SceneGroup");for(const e of t){s.addChild(e)}}return s}static createModel(t,e){const s=function(s,i,n,r,a,o,l){const h=t.meshDefaultMaterials[i.id];const c=h===undefined?e:a[h];const d=new sy(i,c,o);if(i.morph){const t=new Qx(i.morph);d.morphInstance=t;s.morphInstances.push(t)}if(l.hasOwnProperty("skin")){const t=l.skin;const e=n[t];i.skin=e;const a=r[t];d.skinInstance=a;s.skinInstances.push(a)}s.meshInstances.push(d)};const i=new Jx;const n=[];for(const e of t.skins){const t=new Nv(e);t.bones=e.bones;n.push(t)}i.graph=ZH.createSceneHierarchy(t.scenes,By);for(let e=0;e<t.nodes.length;e++){const r=t.nodes[e];if(r.root===i.graph){const a=t.gltf.nodes[e];if(a.hasOwnProperty("mesh")){const e=t.renders[a.mesh].meshes;for(let o=0;o<e.length;o++){const l=e[o];if(l){s(i,l,t.skins,n,t.materials,r,a)}}}}}return i}destroy(){const t=this._assets;const e=function(e){t.remove(e);e.unload()};const s=function(t){t.forEach((t=>{e(t)}))};if(this.animations){s(this.animations);this.animations=null}if(this.textures){s(this.textures);this.textures=null}if(this.materials){s(this.materials);this.materials=null}if(this.renders){s(this.renders);this.renders=null}if(this._model){e(this._model);this._model=null}this.data=null;this.assets=null}}class QH{constructor(t,e,s){this._device=t;this._assets=e;this._defaultMaterial=HH.createDefaultMaterial();this.maxRetries=s}_getUrlWithoutParams(t){return t.indexOf("?")>=0?t.split("?")[0]:t}load(t,e,s){qA.fetchArrayBuffer(t.load,((i,n)=>{if(i){e(i)}else{HH.parse(this._getUrlWithoutParams(t.original),A.extractPath(t.load),n,this._device,s.registry,s.options,((t,i)=>{if(t){e(t)}else{e(null,new ZH(i,s,this._assets,this._defaultMaterial))}}))}}),s,this.maxRetries)}open(t,e,s){return e}patch(t,e){}}class JH{instantiateModelEntity(t){return null}instantiateRenderEntity(t){return null}getMaterialVariants(){return null}applyMaterialVariant(t,e){}applyMaterialVariantInstances(t,e){}}class tW extends JA{constructor(t){super(t,"container");this.glbContainerParser=new QH(t.graphicsDevice,t.assets,0);this.parsers={}}set maxRetries(t){this.glbContainerParser.maxRetries=t;for(const e in this.parsers){if(this.parsers.hasOwnProperty(e)){this.parsers[e].maxRetries=t}}}get maxRetries(){return this.glbContainerParser.maxRetries}_getUrlWithoutParams(t){return t.indexOf("?")>=0?t.split("?")[0]:t}_getParser(t){const e=t?A.getExtension(this._getUrlWithoutParams(t)).toLowerCase().replace(".",""):null;return this.parsers[e]||this.glbContainerParser}load(t,e,s){if(typeof t==="string"){t={load:t,original:t}}this._getParser(t.original).load(t,e,s)}open(t,e,s){return this._getParser(t).open(t,e,s)}}class eW extends JA{constructor(t){super(t,"css"),this.decoder=null}load(t,e){if(typeof t==="string"){t={load:t,original:t}}bp.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},((s,i)=>{if(!s){e(null,i)}else{e(`Error loading css resource: ${t.original} [${s}]`)}}))}openBinary(t){this.decoder??=new TextDecoder("utf-8");return this.decoder.decode(t)}}class sW extends JA{constructor(t){super(t,"cubemap");this._device=t.graphicsDevice;this._registry=t.assets;this._loader=t.loader}load(t,e,s){this.loadAssets(s,e)}open(t,e,s){return s?s.resource:null}patch(t,e){this.loadAssets(t,((s,i)=>{if(s){e.fire("error",t);e.fire(`error:${t.id}`,s,t);t.fire("error",t)}}))}getAssetIds(t){const e=[];e[0]=t.file;if((t.loadFaces||!t.file)&&t.data&&t.data.textures){for(let s=0;s<6;++s){e[s+1]=t.data.textures[s]}}else{e[1]=e[2]=e[3]=e[4]=e[5]=e[6]=null}return e}compareAssetIds(t,e){if(t&&e){if(parseInt(t,10)===t||typeof t==="string"){return t===e}return t.url===e.url}return t!==null===(e!==null)}update(t,e,s){const i=t.data||{};const n=t._handlerState.assets;const r=t._resources;let a,o,l;const h=[null,null,null,null,null,null,null];const c=function(){if(i.hasOwnProperty("type")){return i.type}if(i.hasOwnProperty("rgbm")){return i.rgbm?Vn:zn}return null};if(!t.loaded||s[0]!==n[0]){if(s[0]){a=s[0].resource;if(a.cubemap){for(l=0;l<6;++l){h[l+1]=new lo(this._device,{name:`${t.name}_prelitCubemap${a.width>>l}`,cubemap:true,type:c()||a.type,width:a.width>>l,height:a.height>>l,format:a.format,levels:[a._levels[l]],addressU:pe,addressV:pe,mipmaps:l===0})}}else{h[1]=a}}}else{h[1]=r[1]||null;h[2]=r[2]||null;h[3]=r[3]||null;h[4]=r[4]||null;h[5]=r[5]||null;h[6]=r[6]||null}const d=s.slice(1);if(!t.loaded||!this.cmpArrays(d,n.slice(1))){if(d.indexOf(null)===-1){const e=d.map((t=>t.resource));const s=[];for(o=0;o<e[0]._levels.length;++o){s.push(e.map((t=>t._levels[o])))}const n=e[0].format;const r=new lo(this._device,{name:`${t.name}_faces`,cubemap:true,type:c()||e[0].type,width:e[0].width,height:e[0].height,format:n===Ls?Ds:n,mipmaps:i.mipmaps??true,levels:s,minFilter:i.hasOwnProperty("minFilter")?i.minFilter:e[0].minFilter,magFilter:i.hasOwnProperty("magFilter")?i.magFilter:e[0].magFilter,anisotropy:i.hasOwnProperty("anisotropy")?i.anisotropy:1,addressU:pe,addressV:pe});h[0]=r}}else{h[0]=r[0]||null}if(!this.cmpArrays(h,r)){t.resources=h;t._handlerState.assetIds=e;t._handlerState.assets=s;for(l=0;l<r.length;++l){if(r[l]!==null&&h.indexOf(r[l])===-1){r[l].destroy()}}}for(l=0;l<n.length;++l){if(n[l]!==null&&s.indexOf(n[l])===-1){n[l].unload()}}}cmpArrays(t,e){if(t.length!==e.length){return false}for(let s=0;s<t.length;++s){if(t[s]!==e[s]){return false}}return true}resolveId(t){const e=parseInt(t,10);return e===t||e.toString()===t?e:t}loadAssets(t,e){if(!t.hasOwnProperty("_handlerState")){t._handlerState={assetIds:[null,null,null,null,null,null,null],assets:[null,null,null,null,null,null,null]}}const s=this;const i=s.getAssetIds(t);const n=[null,null,null,null,null,null,null];const r=t._handlerState.assetIds;const a=t._handlerState.assets;const o=s._registry;let l=7;const h=function(r,a){n[r]=a;l--;if(l===0){s.update(t,i,n);e(null,t.resources)}};const c=function(t,s,i){e(s)};const d=function(t,e){if(e.loaded){h(t,e)}else{o.once(`load:${e.id}`,h.bind(s,t));o.once(`error:${e.id}`,c.bind(s,t));if(!e.loading){o.load(e)}}};let u;for(let e=0;e<7;++e){const n=this.resolveId(i[e]);if(!n){h(e,null)}else if(s.compareAssetIds(n,r[e])){d(e,a[e])}else if(parseInt(n,10)===n){u=o.get(n);if(u){d(e,u)}else{setTimeout(((t,e)=>{const s=o.get(e);if(s){d(t,s)}else{c(t,`failed to find dependent cubemap asset=${e}`)}}).bind(null,e,n))}}else{const s=typeof n==="string"?{url:n,filename:n}:n;const i=s.url.search(".dds")===-1?{type:"rgbp",addressu:"clamp",addressv:"clamp",mipmaps:false}:null;u=new qA(`${t.name}_part_${e}`,"texture",s,i);o.add(u);d(e,u)}}}}class iW extends JA{constructor(t){super(t,"folder")}load(t,e){e(null,null)}}class nW{constructor(t,e){this.type=e?e.type||RN:RN;this.em=1;this.textures=t;this.intensity=0;this._data=null;this.data=e}set data(t){this._data=t;if(!t){return}if(this._data.intensity!==undefined){this.intensity=this._data.intensity}if(!this._data.info){this._data.info={}}if(!this._data.version||this._data.version<2){this._data.info.maps=[{width:this._data.info.width,height:this._data.info.height}];if(this._data.chars){for(const t in this._data.chars){this._data.chars[t].map=0}}}}get data(){return this._data}}function rW(t){if(t.version<3){if(t.version<2){t.info.maps=t.info.maps||[{width:t.info.width,height:t.info.height}]}t.chars=Object.keys(t.chars||{}).reduce(((e,s)=>{const i=t.chars[s];const n=i.letter!==undefined?i.letter:nt.fromCodePoint(s);if(t.version<2){i.map=i.map||0}e[n]=i;return e}),{});t.version=3}return t}class aW extends JA{constructor(t){super(t,"font");this._loader=t.loader;this.maxRetries=0}load(t,e,s){if(typeof t==="string"){t={load:t,original:t}}const i=this;if(A.getExtension(t.original)===".json"){bp.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},((s,n)=>{if(!s){const s=rW(n);i._loadTextures(t.load.replace(".json",".png"),s,((t,i)=>{if(t){e(t)}else{e(null,{data:s,textures:i})}}))}else{e(`Error loading font resource: ${t.original} [${s}]`)}}))}else{if(s&&s.data){s.data=rW(s.data)}this._loadTextures(t.load,s&&s.data,e)}}_loadTextures(t,e,s){const i=e.info.maps.length;let n=0;let r=null;const a=new Array(i);const o=this._loader;const l=function(e){const l=function(t,o){if(r)return;if(t){r=t;s(t);return}o.upload();a[e]=o;n++;if(n===i){s(null,a)}};if(e===0){o.load(t,"texture",l)}else{o.load(t.replace(".png",`${e}.png`),"texture",l)}};for(let t=0;t<i;t++){l(t)}}open(t,e,s){let i;if(e.textures){i=new nW(e.textures,e.data)}else{i=new nW(e,null)}return i}patch(t,e){const s=t.resource;if(!s.data&&t.data){s.data=t.data}else if(!t.data&&s.data){t.data=s.data}if(t.data){t.data=rW(t.data)}}}const oW=.28209479177387814;class lW{constructor(t,e,s,i,n,r){const a=(t,e)=>{const s=(1<<e)-1;return(t&s)/s};const o=(t,e)=>{t.x=a(e>>>21,11);t.y=a(e>>>11,10);t.z=a(e,11)};const l=(t,e)=>{t.x=a(e>>>24,8);t.y=a(e>>>16,8);t.z=a(e>>>8,8);t.w=a(e,8)};const h=(t,e)=>{const s=1/(Math.sqrt(2)*.5);const i=(a(e>>>20,10)-.5)*s;const n=(a(e>>>10,10)-.5)*s;const r=(a(e,10)-.5)*s;const o=Math.sqrt(1-(i*i+n*n+r*r));switch(e>>>30){case 0:t.set(i,n,r,o);break;case 1:t.set(o,n,r,i);break;case 2:t.set(n,o,r,i);break;case 3:t.set(n,r,o,i);break}};const c=(t,e,s)=>t*(1-s)+e*s;const{chunkData:d,chunkSize:u,vertexData:f,shData0:p,shData1:m,shData2:_,shBands:g}=t;const v=[3,8,15][g-1];this.read=t=>{const a=Math.floor(t/256)*u;if(e){o(e,f[t*4+0]);e.x=c(d[a+0],d[a+3],e.x);e.y=c(d[a+1],d[a+4],e.y);e.z=c(d[a+2],d[a+5],e.z)}if(s){h(s,f[t*4+1])}if(i){o(i,f[t*4+2]);i.x=c(d[a+6],d[a+9],i.x);i.y=c(d[a+7],d[a+10],i.y);i.z=c(d[a+8],d[a+11],i.z)}if(n){l(n,f[t*4+3]);if(u>12){n.x=c(d[a+12],d[a+15],n.x);n.y=c(d[a+13],d[a+16],n.y);n.z=c(d[a+14],d[a+17],n.z)}}if(r&&g>0){const e=[p,m,_];for(let s=0;s<3;++s){for(let i=0;i<15;++i){r[s*15+i]=i<v?e[s][t*16+i]*(8/255)-4:0}}}}}}class hW{createIter(t,e,s,i,n){return new lW(this,t,e,s,i,n)}calcAabb(t){const{chunkData:e,numChunks:s,chunkSize:i}=this;let n=Math.exp(Math.max(e[9],e[10],e[11]));let r=e[0]-n;let a=e[1]-n;let o=e[2]-n;let l=e[3]+n;let h=e[4]+n;let c=e[5]+n;for(let t=1;t<s;++t){const s=t*i;n=Math.exp(Math.max(e[s+9],e[s+10],e[s+11]));r=Math.min(r,e[s+0]-n);a=Math.min(a,e[s+1]-n);o=Math.min(o,e[s+2]-n);l=Math.max(l,e[s+3]+n);h=Math.max(h,e[s+4]+n);c=Math.max(c,e[s+5]+n)}t.center.set((r+l)*.5,(a+h)*.5,(o+c)*.5);t.halfExtents.set((l-r)*.5,(h-a)*.5,(c-o)*.5);return true}getCenters(t){const{vertexData:e,chunkData:s,numChunks:i,chunkSize:n}=this;let r,a,o,l,h,c;for(let d=0;d<i;++d){const i=d*n;r=s[i+0];a=s[i+1];o=s[i+2];l=s[i+3];h=s[i+4];c=s[i+5];const u=Math.min(this.numSplats,(d+1)*256);for(let s=d*256;s<u;++s){const i=e[s*4];const n=(i>>>21)/2047;const d=(i>>>11&1023)/1023;const u=(i&2047)/2047;t[s*3+0]=(1-n)*r+n*l;t[s*3+1]=(1-d)*a+d*h;t[s*3+2]=(1-u)*o+u*c}}}getChunks(t){const{chunkData:e,numChunks:s,chunkSize:i}=this;let n,r,a,o,l,h;for(let c=0;c<s;++c){const s=c*i;n=e[s+0];r=e[s+1];a=e[s+2];o=e[s+3];l=e[s+4];h=e[s+5];t[c*6+0]=n;t[c*6+1]=r;t[c*6+2]=a;t[c*6+3]=o;t[c*6+4]=l;t[c*6+5]=h}}calcFocalPoint(t){const{chunkData:e,numChunks:s,chunkSize:i}=this;t.x=0;t.y=0;t.z=0;for(let n=0;n<s;++n){const s=n*i;t.x+=e[s+0]+e[s+3];t.y+=e[s+1]+e[s+4];t.z+=e[s+2]+e[s+5]}t.mulScalar(.5/s)}get isCompressed(){return true}get numChunks(){return Math.ceil(this.numSplats/256)}get chunkSize(){return this.chunkData.length/this.numChunks}decompress(){const t=["x","y","z","f_dc_0","f_dc_1","f_dc_2","opacity","scale_0","scale_1","scale_2","rot_0","rot_1","rot_2","rot_3"];const{shBands:e}=this;if(e>0){const e=[];for(let t=0;t<45;++t){e.push(`f_rest_${t}`)}t.splice(t.indexOf("f_dc_0")+1,0,...e)}const s={};t.forEach((t=>{s[t]=new Float32Array(this.numSplats)}));const i=new It;const n=new Gt;const r=new It;const a=new Ft;const o=e>0?new Float32Array(45):null;const l=this.createIter(i,n,r,a,o);for(let t=0;t<this.numSplats;++t){l.read(t);s.x[t]=i.x;s.y[t]=i.y;s.z[t]=i.z;s.rot_1[t]=n.x;s.rot_2[t]=n.y;s.rot_3[t]=n.z;s.rot_0[t]=n.w;s.scale_0[t]=r.x;s.scale_1[t]=r.y;s.scale_2[t]=r.z;s.f_dc_0[t]=(a.x-.5)/oW;s.f_dc_1[t]=(a.y-.5)/oW;s.f_dc_2[t]=(a.z-.5)/oW;s.opacity[t]=a.w<=0?-40:a.w>=1?40:-Math.log(1/a.w-1);if(o){for(let e=0;e<45;++e){s[`f_rest_${e}`][t]=o[e]}}}return new CE([{name:"vertex",count:this.numSplats,properties:t.map((t=>({name:t,type:"float",byteSize:4,storage:s[t]})))}],this.comments)}}const cW=(t,e,s,i,n)=>{for(let r=0;r<n;++r){for(let n=0;n<i;++n){t[r*e+n]=s[r*i+n]}}};class dW extends PE{constructor(t,e){super(t,e);const{chunkData:s,chunkSize:i,numChunks:n,numSplats:r,vertexData:a,shBands:o}=e;this.chunks=new Float32Array(n*6);e.getChunks(this.chunks);this.packedTexture=this.createTexture("packedData",vi,this.evalTextureSize(r),a);const l=this.evalTextureSize(n);l.x*=5;this.chunkTexture=this.createTexture("chunkData",ks,l);const h=this.chunkTexture.lock();cW(h,20,s,i,n);if(i===12){for(let t=0;t<n;++t){h[t*20+15]=1;h[t*20+16]=1;h[t*20+17]=1}}this.chunkTexture.unlock();if(o>0){const t=this.evalTextureSize(r);this.shTexture0=this.createTexture("shTexture0",vi,t,new Uint32Array(e.shData0.buffer));this.shTexture1=this.createTexture("shTexture1",vi,t,new Uint32Array(e.shData1.buffer));this.shTexture2=this.createTexture("shTexture2",vi,t,new Uint32Array(e.shData2.buffer))}else{this.shTexture0=null;this.shTexture1=null;this.shTexture2=null}}destroy(){this.packedTexture?.destroy();this.chunkTexture?.destroy();this.shTexture0?.destroy();this.shTexture1?.destroy();this.shTexture2?.destroy();super.destroy()}configureMaterial(t){t.setDefine("GSPLAT_COMPRESSED_DATA",true);t.setParameter("packedTexture",this.packedTexture);t.setParameter("chunkTexture",this.chunkTexture);if(this.shTexture0){t.setDefine("SH_BANDS",3);t.setParameter("shTexture0",this.shTexture0);t.setParameter("shTexture1",this.shTexture1);t.setParameter("shTexture2",this.shTexture2)}else{t.setDefine("SH_BANDS",0)}}evalTextureSize(t){const e=Math.ceil(Math.sqrt(t));const s=Math.ceil(t/e);return new Ot(e,s)}}const uW=new Uint8Array([112,108,121,10]);const fW=new Uint8Array([10,101,110,100,95,104,101,97,100,101,114,10]);const pW=new Map([["char",Int8Array],["uchar",Uint8Array],["short",Int16Array],["ushort",Uint16Array],["int",Int32Array],["uint",Uint32Array],["float",Float32Array],["double",Float64Array]]);class mW{constructor(t,e){this.head=0;this.tail=0;this.reader=t;this.progressFunc=e}async read(){const{value:t,done:e}=await this.reader.read();if(e){throw new Error("Stream finished before end of header")}this.push(t);this.progressFunc?.(t.byteLength)}push(t){if(!this.data){this.data=t;this.view=new DataView(this.data.buffer);this.tail=t.length}else{const e=this.tail-this.head;const s=e+t.length;if(this.data.length>=s){if(this.head>0){this.data.copyWithin(0,this.head,this.tail);this.data.set(t,e);this.head=0;this.tail=s}else{this.data.set(t,this.tail);this.tail+=t.length}}else{const i=new Uint8Array(s);if(this.head>0||this.tail<this.data.length){i.set(this.data.subarray(this.head,this.tail),0)}else{i.set(this.data,0)}i.set(t,e);this.data=i;this.view=new DataView(this.data.buffer);this.head=0;this.tail=s}}}compact(){if(this.head>0){this.data.copyWithin(0,this.head,this.tail);this.tail-=this.head;this.head=0}}get remaining(){return this.tail-this.head}getInt8(){const t=this.view.getInt8(this.head);this.head++;return t}getUint8(){const t=this.view.getUint8(this.head);this.head++;return t}getInt16(){const t=this.view.getInt16(this.head,true);this.head+=2;return t}getUint16(){const t=this.view.getUint16(this.head,true);this.head+=2;return t}getInt32(){const t=this.view.getInt32(this.head,true);this.head+=4;return t}getUint32(){const t=this.view.getUint32(this.head,true);this.head+=4;return t}getFloat32(){const t=this.view.getFloat32(this.head,true);this.head+=4;return t}getFloat64(){const t=this.view.getFloat64(this.head,true);this.head+=8;return t}}const _W=t=>{const e=[];const s=[];let i;for(let n=1;n<t.length;++n){const r=t[n].split(" ");switch(r[0]){case"comment":s.push(r.slice(1).join(" "));break;case"format":i=r[1];break;case"element":e.push({name:r[1],count:parseInt(r[2],10),properties:[]});break;case"property":{if(!pW.has(r[1])){throw new Error(`Unrecognized property data type '${r[1]}' in ply header`)}const t=e[e.length-1];t.properties.push({type:r[1],name:r[2],storage:null,byteSize:pW.get(r[1]).BYTES_PER_ELEMENT});break}default:throw new Error(`Unrecognized header value '${r[0]}' in ply header`)}}return{elements:e,format:i,comments:s}};const gW=t=>{const e=["min_x","min_y","min_z","max_x","max_y","max_z","min_scale_x","min_scale_y","min_scale_z","max_scale_x","max_scale_y","max_scale_z","min_r","min_g","min_b","max_r","max_g","max_b"];const s=["packed_position","packed_rotation","packed_scale","packed_color"];const i=new Array(45).fill("").map(((t,e)=>`f_rest_${e}`));const n=()=>t[0].name==="chunk"&&t[0].properties.every(((t,s)=>t.name===e[s]&&t.type==="float"))&&t[1].name==="vertex"&&t[1].properties.every(((t,e)=>t.name===s[e]&&t.type==="uint"));const r=()=>t[2].name==="sh"&&[9,24,45].indexOf(t[2].properties.length)!==-1&&t[2].properties.every(((t,e)=>t.name===i[e]&&t.type==="uchar"));return t.length===2&&n()||t.length===3&&n()&&r()};const vW=t=>t.length===1&&t[0].name==="vertex"&&t[0].properties.every((t=>t.type==="float"));const yW=async(t,e,s)=>{const i=new hW;i.comments=s;const n=e[0].count;const r=e[0].properties.length;const a=e[1].count;const o=t=>{const e=Math.ceil(Math.sqrt(t));const s=Math.ceil(t/e);return e*s};const l=o(a);i.numSplats=a;i.chunkData=new Float32Array(n*r);i.vertexData=new Uint32Array(l*4);const h=async(e,s)=>{const i=new Uint8Array(e);let n=0;while(n<s){while(t.remaining===0){await t.read()}const e=Math.min(s-n,t.remaining);const r=t.data;for(let s=0;s<e;++s){i[n++]=r[t.head++]}}};await h(i.chunkData.buffer,n*r*4);await h(i.vertexData.buffer,a*4*4);if(e.length===3){const t=l*16;const s=new Uint8Array(t);const n=new Uint8Array(t);const r=new Uint8Array(t);const a=1024;const o=e[2].properties.length/3;const c=new Uint8Array(a*o*3);for(let t=0;t<i.numSplats;t+=a){const e=Math.min(a,i.numSplats-t);await h(c.buffer,e*o*3);for(let i=0;i<e;++i){for(let e=0;e<15;++e){const a=(t+i)*16+e;if(e<o){s[a]=c[(i*3+0)*o+e];n[a]=c[(i*3+1)*o+e];r[a]=c[(i*3+2)*o+e]}else{s[a]=127;n[a]=127;r[a]=127}}}}i.shData0=s;i.shData1=n;i.shData2=r;i.shBands={3:1,8:2,15:3}[o]}else{i.shBands=0}return i};const SW=async(t,e,s)=>{const i=e[0];const n=i.properties;const r=n.length;const a=n.map((t=>t.storage));const o=n.reduce(((t,e)=>t+e.byteSize),0);let l=0;let h;const c=()=>{const e=t.data.buffer;if(h?.buffer!==e){h=new Float32Array(e,0,e.byteLength/4)}};c();while(l<i.count){while(t.remaining<o){await t.read();c()}const e=Math.min(i.count-l,Math.floor(t.remaining/o));for(let t=0;t<r;++t){const s=a[t];for(let i=0;i<e;++i){s[i+l]=h[i*r+t]}}l+=e;t.head+=e*o}return new CE(e,s)};const xW=async(t,e,s)=>{for(let s=0;s<e.length;++s){const i=e[s];const n=i.properties.reduce(((t,e)=>t+e.byteSize),0);const r=i.properties.map((t=>{if(t.storage){switch(t.type){case"char":return(e,s)=>{t.storage[s]=e.getInt8()};case"uchar":return(e,s)=>{t.storage[s]=e.getUint8()};case"short":return(e,s)=>{t.storage[s]=e.getInt16()};case"ushort":return(e,s)=>{t.storage[s]=e.getUint16()};case"int":return(e,s)=>{t.storage[s]=e.getInt32()};case"uint":return(e,s)=>{t.storage[s]=e.getUint32()};case"float":return(e,s)=>{t.storage[s]=e.getFloat32()};case"double":return(e,s)=>{t.storage[s]=e.getFloat64()};default:throw new Error(`Unsupported property data type '${t.type}' in ply header`)}}else{return e=>{e.head+=t.byteSize}}}));let a=0;while(a<i.count){while(t.remaining<n){await t.read()}const e=Math.min(i.count-a,Math.floor(t.remaining/n));for(let s=0;s<e;++s){for(let e=0;e<i.properties.length;++e){r[e](t,a)}a++}}}return new CE(e,s)};const TW=async(t,e=null,s=null)=>{const i=(t,e)=>{const s=t.length-e.length;let i,n;for(i=0;i<=s;++i){for(n=0;n<e.length;++n){if(t[i+n]!==e[n]){break}}if(n===e.length){return i}}return-1};const n=(t,e)=>{if(t.length<e.length){return false}for(let s=0;s<e.length;++s){if(t[s]!==e[s]){return false}}return true};const r=new mW(t,s);let a;while(true){await r.read();if(r.tail>=uW.length&&!n(r.data,uW)){throw new Error("Invalid ply header")}a=i(r.data,fW);if(a!==-1){break}}const o=new TextDecoder("ascii").decode(r.data.subarray(0,a)).split("\n");const{elements:l,format:h,comments:c}=_W(o);if(h!=="binary_little_endian"){throw new Error("Unsupported ply format")}r.head=a+fW.length;r.compact();const d=async()=>{if(gW(l)){return await yW(r,l,c)}l.forEach((t=>{t.properties.forEach((s=>{const i=pW.get(s.type);if(i){const n=!e||e(s.name)?new i(t.count):null;s.storage=n}}))}));if(vW(l)){return await SW(r,l,c)}return await xW(r,l,c)};return await d()};const wW=t=>true;class bW{constructor(t,e){this.app=t;this.maxRetries=e}async load(t,e,s){try{const i=await(s.file?.contents??fetch(t.load));if(!i||!i.body){e("Error loading resource",null)}else{const t=parseInt(i.headers.get("content-length")??"0",10);let n=0;const r=await TW(i.body.getReader(),s.data.elementFilter??wW,(e=>{n+=e;if(s){s.fire("progress",n,t)}}));s.fire("load:data",r);if(!r.isCompressed){if(s.data.reorder??true){r.reorderData()}}const a=r.isCompressed&&!s.data.decompress?new dW(this.app.graphicsDevice,r):new DE(this.app.graphicsDevice,r.isCompressed?r.decompress():r);e(null,a)}}catch(t){e(t,null)}}open(t,e){return e}}const EW=(t,e)=>{const s=new Map;const i=()=>{let e=0;let i=0;s.forEach((t=>{e+=t.loaded;i+=t.total}));t.fire("progress",e,i)};e.forEach((t=>{const e=(e,n)=>{s.set(t,{loaded:e,total:n});i()};const n=()=>{t.off("progress",e);t.off("load",n);t.off("error",n)};t.on("progress",e);t.on("load",n);t.on("error",n)}))};class AW{constructor(t,e){this.app=t;this.maxRetries=e}async loadTextures(t,e,s,i){const{assets:n}=this.app;const r=["means","quats","scales","sh0","shN"];const a={};const o=[];r.forEach((e=>{const r=i[e]?.files??[];a[e]=r.map((e=>{const i=new qA(e,"texture",{url:s.options?.mapUrl?.(e)??new URL(e,new URL(t.load,window.location.href).toString()).toString(),filename:e},{mipmaps:false});const r=new Promise(((t,e)=>{i.on("load",(()=>t(null)));i.on("error",(t=>e(t)))}));n.add(i);o.push(r);return i}))}));const l=r.map((t=>a[t])).flat();EW(s,l);l.forEach((t=>n.load(t)));await Promise.allSettled(o);const h=new KE;h.meta=i;h.numSplats=i.means.shape[0];h.means_l=a.means[0].resource;h.means_u=a.means[1].resource;h.quats=a.quats[0].resource;h.scales=a.scales[0].resource;h.sh0=a.sh0[0].resource;h.sh_centroids=a.shN?.[0]?.resource;h.sh_labels=a.shN?.[1]?.resource;const c=s.data?.decompress;if(!c){await h.prepareGpuData()}const d=c?new DE(this.app.graphicsDevice,await h.decompress()):new sA(this.app.graphicsDevice,h);e(null,d)}load(t,e,s){if(s.data?.means){this.loadTextures(t,e,s,s.data)}else{if(typeof t==="string"){t={load:t,original:t}}const i={retry:this.maxRetries>0,maxRetries:this.maxRetries,responseType:wp.ResponseType.JSON};bp.get(t.load,i,((i,n)=>{if(!i){this.loadTextures(t,e,s,n)}else{e(`Error loading gsplat meta: ${t.original} [${i}]`)}}))}}}class CW extends JA{constructor(t){super(t,"gsplat");this.parsers={ply:new bW(t,3),json:new AW(t,3)}}_getUrlWithoutParams(t){return t.indexOf("?")>=0?t.split("?")[0]:t}_getParser(t){const e=A.getExtension(this._getUrlWithoutParams(t)).toLowerCase().replace(".","");return this.parsers[e]||this.parsers.ply}load(t,e,s){if(typeof t==="string"){t={load:t,original:t}}this._getParser(t.original).load(t,e,s)}open(t,e,s){return e}}class PW{static setCompressedPRS(t,e,s){const i=s.singleVecs;let n,r;const a=e.___1;if(!a){n=s.tripleVecs;r=e.___2}let o=a?a[0]:n[r];t.setLocalPosition(i[o],i[o+1],i[o+2]);o=a?a[1]:n[r+1];t.setLocalEulerAngles(i[o],i[o+1],i[o+2]);o=a?a[2]:n[r+2];t.setLocalScale(i[o],i[o+1],i[o+2])}static oneCharToKey(t,e){const s=t.charCodeAt(0)-e.fieldFirstCode;return e.fieldArray[s]}static multCharToKey(t,e){let s=0;for(let i=0;i<t.length;i++){s=s*e.fieldCodeBase+t.charCodeAt(i)-e.fieldFirstCode}return e.fieldArray[s]}}class LW{constructor(t,e){this._node=t;this._data=e}run(){const t=Object.prototype.toString.call(this._node);if(t==="[object Object]"){this._handleMap()}else if(t==="[object Array]"){this._handleArray()}else{this._result=this._node}return this._result}_handleMap(){this._result={};const t=Object.keys(this._node);t.forEach(this._handleKey,this)}_handleKey(t){let e=t;const s=t.length;if(s===1){e=PW.oneCharToKey(t,this._data)}else if(s===2){e=PW.multCharToKey(t,this._data)}this._result[e]=new LW(this._node[t],this._data).run()}_handleArray(){this._result=[];this._node.forEach(this._handleArElt,this)}_handleArElt(t){const e=new LW(t,this._data).run();this._result.push(e)}}class DW{constructor(t,e){this._app=t;this._isTemplate=e}parse(t){const e={};let s=null;const i=t.compressedFormat;if(i&&!t.entDecompressed){t.entDecompressed=true;t.entities=new LW(t.entities,i).run()}for(const n in t.entities){const r=t.entities[n];const a=this._createEntity(r,i);e[n]=a;if(r.parent===null){s=a}}for(const s in t.entities){const i=e[s];const n=t.entities[s].children;const r=n.length;for(let t=0;t<r;t++){const s=e[n[t]];if(s){i.addChild(s)}}}this._openComponentData(s,t.entities);return s}_createEntity(t,e){const s=new dC(t.name,this._app);s.setGuid(t.resource_id);this._setPosRotScale(s,t,e);s._enabled=t.enabled??true;if(this._isTemplate){s._template=true}else{s._enabledInHierarchy=s._enabled}s.template=t.template;if(t.tags){for(let e=0;e<t.tags.length;e++){s.tags.add(t.tags[e])}}return s}_setPosRotScale(t,e,s){if(s){PW.setCompressedPRS(t,e,s)}else{const s=e.position;const i=e.rotation;const n=e.scale;t.setLocalPosition(s[0],s[1],s[2]);t.setLocalEulerAngles(i[0],i[1],i[2]);t.setLocalScale(n[0],n[1],n[2])}}_openComponentData(t,e){const s=this._app.systems.list;let i=s.length;const n=e[t.getGuid()];for(let e=0;e<i;e++){const i=s[e];const r=n.components[i.id];if(r){i.addComponent(t,r)}}i=n.children.length;const r=t._children;for(let t=0;t<i;t++){if(r[t]){r[t]=this._openComponentData(r[t],e)}}return t}}class MW{static load(t,e,s){if(typeof t==="string"){t={load:t,original:t}}bp.get(t.load,{retry:e>0,maxRetries:e},((e,i)=>{if(!e){s(e,i)}else{let i=`Error while loading scene JSON ${t.original}`;if(e.message){i+=`: ${e.message}`;if(e.stack){i+=`\n${e.stack}`}}else{i+=`: ${e}`}s(i)}}))}}class IW extends JA{constructor(t){super(t,"hierarchy")}load(t,e){MW.load(t,this.maxRetries,e)}open(t,e){this._app.systems.script.preloading=true;const s=new DW(this._app,false);const i=s.parse(e);this._app.systems.script.preloading=false;return i}}class RW extends JA{constructor(t){super(t,"html"),this.decoder=null}load(t,e){if(typeof t==="string"){t={load:t,original:t}}bp.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},((s,i)=>{if(!s){e(null,i)}else{e(`Error loading html resource: ${t.original} [${s}]`)}}))}openBinary(t){this.decoder??=new TextDecoder("utf-8");return this.decoder.decode(t)}}class OW extends JA{constructor(t){super(t,"json"),this.decoder=null}load(t,e){if(typeof t==="string"){t={load:t,original:t}}const s={retry:this.maxRetries>0,maxRetries:this.maxRetries};if(t.load.startsWith("blob:")){s.responseType=wp.ResponseType.JSON}bp.get(t.load,s,((s,i)=>{if(!s){e(null,i)}else{e(`Error loading JSON resource: ${t.original} [${s}]`)}}))}openBinary(t){this.decoder??=new TextDecoder("utf-8");return JSON.parse(this.decoder.decode(t))}}class FW{constructor(){this.removeInvalid=true;this.valid=true;this.enumValidators={occludeSpecular:this._createEnumValidator([R_,O_,F_]),cull:this._createEnumValidator([ss,is,ns,rs]),blendType:this._createEnumValidator([Vp,Gp,Hp,Wp,Xp,qp,$p,jp,Yp,Kp,Zp]),depthFunc:this._createEnumValidator([us,fs,ps,ms,_s,gs,vs,ys])}}setInvalid(t,e){this.valid=false;if(this.removeInvalid){delete e[t]}}validate(t){const e=Wb;const s=$b;const i=t.mappingFormat==="path";for(const n in t){const r=e[n];if(!r){if(s[n]){delete t[n]}else{this.valid=false}continue}if(r.startsWith("enum")){const e=r.split(":")[1];if(this.enumValidators[e]){if(!this.enumValidators[e](t[n])){this.setInvalid(n,t)}}}else if(r==="number"){if(typeof t[n]!=="number"){this.setInvalid(n,t)}}else if(r==="boolean"){if(typeof t[n]!=="boolean"){this.setInvalid(n,t)}}else if(r==="string"){if(typeof t[n]!=="string"){this.setInvalid(n,t)}}else if(r==="vec2"){if(!(t[n]instanceof Array&&t[n].length===2)){this.setInvalid(n,t)}}else if(r==="rgb"){if(!(t[n]instanceof Array&&t[n].length===3)){this.setInvalid(n,t)}}else if(r==="texture"){if(!i){if(!(typeof t[n]==="number"||t[n]===null)){if(!(t[n]instanceof lo)){this.setInvalid(n,t)}}}else{if(!(typeof t[n]==="string"||t[n]===null)){if(!(t[n]instanceof lo)){this.setInvalid(n,t)}}}}else if(r==="boundingbox"){if(!(t[n].center&&t[n].center instanceof Array&&t[n].center.length===3)){this.setInvalid(n,t)}if(!(t[n].halfExtents&&t[n].halfExtents instanceof Array&&t[n].halfExtents.length===3)){this.setInvalid(n,t)}}else if(r==="cubemap"){if(!(typeof t[n]==="number"||t[n]===null||t[n]===undefined)){if(!(t[n]instanceof lo&&t[n].cubemap)){this.setInvalid(n,t)}}}else if(r==="chunks"){const e=Object.keys(t[n]);for(let s=0;s<e.length;s++){if(typeof t[n][e[s]]!=="string"){this.setInvalid(e[s],t[n])}}}else{console.error(`Unknown material type: ${r}`)}}t.validated=true;return this.valid}_createEnumValidator(t){return function(e){return t.indexOf(e)>=0}}}class NW{constructor(){this._validator=null}parse(t){const e=this.migrate(t);const s=this._validate(e);const i=new Qb;this.initialize(i,s);return i}initialize(t,e){if(!e.validated){e=this._validate(e)}if(e.chunks){if(e.chunks&&Object.keys(e.chunks).length>0){const s=t.shaderChunks.glsl;Object.entries(e.chunks).forEach((([t,e])=>s.set(t,e)))}}for(const s in e){const i=Wb[s];const n=e[s];if(i==="vec2"){t[s]=new Ot(n[0],n[1])}else if(i==="rgb"){t[s]=new bt(n[0],n[1],n[2])}else if(i==="texture"){if(n instanceof lo){t[s]=n}else if(!(t[s]instanceof lo&&typeof n==="number"&&n>0)){t[s]=null}}else if(i==="cubemap"){if(n instanceof lo){t[s]=n}else if(!(t[s]instanceof lo&&typeof n==="number"&&n>0)){t[s]=null}if(s==="cubeMap"&&!n){t.prefilteredCubemaps=null}}else if(i==="boundingbox"){const e=new It(n.center[0],n.center[1],n.center[2]);const i=new It(n.halfExtents[0],n.halfExtents[1],n.halfExtents[2]);t[s]=new jt(e,i)}else{t[s]=e[s]}}t.update()}migrate(t){if(t.shader)delete t.shader;if(t.mapping_format){t.mappingFormat=t.mapping_format;delete t.mapping_format}let e;const s=[["bumpMapFactor","bumpiness"],["aoUvSet","aoMapUv"],["aoMapVertexColor","aoVertexColor"],["diffuseMapVertexColor","diffuseVertexColor"],["emissiveMapVertexColor","emissiveVertexColor"],["specularMapVertexColor","specularVertexColor"],["metalnessMapVertexColor","metalnessVertexColor"],["opacityMapVertexColor","opacityVertexColor"],["glossMapVertexColor","glossVertexColor"],["lightMapVertexColor","lightVertexColor"],["specularMapTint","specularTint"],["metalnessMapTint","metalnessTint"],["clearCoatGlossiness","clearCoatGloss"]];for(e=0;e<s.length;e++){const i=s[e][0];const n=s[e][1];if(t[i]!==undefined){if(t[n]===undefined){t[n]=t[i]}delete t[i]}}const i=["fresnelFactor","shadowSampleType"];for(e=0;e<i.length;e++){const s=i[e];if(t.hasOwnProperty(s)){delete t[s]}}return t}_validate(t){if(!t.validated){if(!this._validator){this._validator=new FW}this._validator.validate(t)}return t}}const kW={aoMap:"white",aoDetailMap:"white",diffuseMap:"gray",diffuseDetailMap:"gray",specularMap:"gray",specularityFactorMap:"white",metalnessMap:"black",glossMap:"gray",sheenMap:"black",sheenGlossMap:"gray",clearCoatMap:"black",clearCoatGlossMap:"gray",clearCoatNormalMap:"normal",refractionMap:"white",emissiveMap:"gray",normalMap:"normal",normalDetailMap:"normal",heightMap:"gray",opacityMap:"gray",sphereMap:"gray",lightMap:"white",thicknessMap:"black",iridescenceMap:"black",iridescenceThicknessMap:"black",envAtlas:"black",anisotropyMap:"black"};class BW extends JA{constructor(t){super(t,"material");this._assets=t.assets;this._device=t.graphicsDevice;this._parser=new NW}load(t,e){if(typeof t==="string"){t={load:t,original:t}}bp.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},((s,i)=>{if(!s){if(e){i._engine=true;e(null,i)}}else{if(e){e(`Error loading material: ${t.original} [${s}]`)}}}))}open(t,e){const s=this._parser.parse(e);if(e._engine){s._data=e;delete e._engine}return s}patch(t,e){if(t.resource._data){t._data=t.resource._data;delete t.resource._data}t.data.name=t.name;t.resource.name=t.name;this._bindAndAssignAssets(t,e);t.off("unload",this._onAssetUnload,this);t.on("unload",this._onAssetUnload,this)}_onAssetUnload(t){delete t.data.parameters;delete t.data.chunks;delete t.data.name}_assignTexture(t,e,s){e.resource[t]=s}_getPlaceholderTexture(t){const e=kW[t];return fo(this._device,e)}_assignPlaceholderTexture(t,e){e.resource[t]=this._getPlaceholderTexture(t)}_onTextureLoad(t,e,s){this._assignTexture(t,e,s.resource);e.resource.update()}_onTextureAdd(t,e,s){this._assets.load(s)}_onTextureRemoveOrUnload(t,e,s){const i=e.resource;if(i){if(e.resource[t]===s.resource){this._assignPlaceholderTexture(t,e);i.update()}}}_assignCubemap(t,e,s){e.resource[t]=s[0];if(t==="cubeMap"){const t=s.slice(1);if(t.every((t=>t))){e.resource.prefilteredCubemaps=t}else if(t[0]){e.resource.envAtlas=t[0]}}}_onCubemapLoad(t,e,s){this._assignCubemap(t,e,s.resources);this._parser.initialize(e.resource,e.data)}_onCubemapAdd(t,e,s){this._assets.load(s)}_onCubemapRemoveOrUnload(t,e,s){const i=e.resource;if(e.data.prefilteredCubeMap128===s.resources[1]){this._assignCubemap(t,e,[null,null,null,null,null,null,null]);i.update()}}_bindAndAssignAssets(t,e){const s=this._parser.migrate(t.data);const i=t.resource;const n=s.mappingFormat==="path";const r=Xb;let a,o,l;for(a=0;a<r.length;a++){o=r[a];l=i._assetReferences[o];const h=s[o];const c=i[o];const d=c===this._getPlaceholderTexture(o);const u=s.validated;if(h&&(!c||!u||d)){if(!l){l=new ez(o,t,e,{load:this._onTextureLoad,add:this._onTextureAdd,remove:this._onTextureRemoveOrUnload,unload:this._onTextureRemoveOrUnload},this);i._assetReferences[o]=l}if(n){l.url=t.getAbsoluteUrl(h)}else{l.id=h}if(l.asset){if(l.asset.resource){this._assignTexture(o,t,l.asset.resource)}else{this._assignPlaceholderTexture(o,t)}e.load(l.asset)}}else{if(l){if(n){l.url=null}else{l.id=null}}}}const h=qb;for(a=0;a<h.length;a++){o=h[a];l=i._assetReferences[o];if(s[o]&&!t.data.prefilteredCubeMap128){if(!l){l=new ez(o,t,e,{load:this._onCubemapLoad,add:this._onCubemapAdd,remove:this._onCubemapRemoveOrUnload,unload:this._onCubemapRemoveOrUnload},this);i._assetReferences[o]=l}if(n){l.url=s[o]}else{l.id=s[o]}if(l.asset){if(l.asset.loaded){this._assignCubemap(o,t,l.asset.resources)}e.load(l.asset)}}}this._parser.initialize(i,s)}}class UW{constructor(t){this._device=t.device;this._defaultMaterial=t.defaultMaterial;this._assets=t.assets}parse(t,e,s){HH.parse("filename.glb","",t,this._device,this._assets,s?.options??{},((t,s)=>{if(t){e(t)}else{const t=ZH.createModel(s,this._defaultMaterial);s.destroy();e(null,t)}}))}}const zW={points:Hi,lines:Wi,lineloop:Xi,linestrip:qi,triangles:$i,trianglestrip:ji,trianglefan:Yi};const VW={int8:ur,uint8:fr,int16:pr,uint16:mr,int32:_r,uint32:gr,float32:vr};class GW{constructor(t){this._device=t.device;this._defaultMaterial=t.defaultMaterial}parse(t,e){const s=t.model;if(!s){e(null,null);return}if(s.version<=1){e("JsonModelParser#parse: Trying to parse unsupported model format.");return}const i=this._parseNodes(t);const n=this._parseSkins(t,i);const r=this._parseVertexBuffers(t);const a=this._parseIndexBuffers(t,r);const o=this._parseMorphs(t,i,r);const l=this._parseMeshes(t,n.skins,o.morphs,r,a.buffer,a.data);const h=this._parseMeshInstances(t,i,l,n.skins,n.instances,o.morphs,o.instances);const c=new Jx;c.graph=i[0];c.meshInstances=h;c.skinInstances=n.instances;c.morphInstances=o.instances;c.getGraph().syncHierarchy();e(null,c)}_parseNodes(t){const e=t.model;const s=[];let i;for(i=0;i<e.nodes.length;i++){const t=e.nodes[i];const n=new By(t.name);n.setLocalPosition(t.position[0],t.position[1],t.position[2]);n.setLocalEulerAngles(t.rotation[0],t.rotation[1],t.rotation[2]);n.setLocalScale(t.scale[0],t.scale[1],t.scale[2]);n.scaleCompensation=!!t.scaleCompensation;s.push(n)}for(i=1;i<e.parents.length;i++){s[e.parents[i]].addChild(s[i])}return s}_parseSkins(t,e){const s=t.model;const i=[];const n=[];let r,a;for(r=0;r<s.skins.length;r++){const t=s.skins[r];const o=[];for(a=0;a<t.inverseBindMatrices.length;a++){const e=t.inverseBindMatrices[a];o[a]=(new Vt).set(e)}const l=new cb(this._device,o,t.boneNames);i.push(l);const h=new Nv(l);const c=[];for(a=0;a<l.boneNames.length;a++){const t=l.boneNames[a];const s=e[0].findByName(t);c.push(s)}h.bones=c;n.push(h)}return{skins:i,instances:n}}_getMorphVertexCount(t,e,s){for(let i=0;i<t.meshes.length;i++){const n=t.meshes[i];if(n.morph===e){const t=s[n.vertices];return t.numVertices}}return undefined}_parseMorphs(t,e,s){const i=t.model;const n=[];const r=[];let a,o,l;let h,c,d;if(i.morphs){const t=function(t,e,s){const i=new Float32Array(s*3);for(let s=0;s<e.length;s++){const n=e[s]*3;i[n]=t[s*3];i[n+1]=t[s*3+1];i[n+2]=t[s*3+2]}return i};for(a=0;a<i.morphs.length;a++){h=i.morphs[a].targets;d=[];l=this._getMorphVertexCount(i,a,s);for(o=0;o<h.length;o++){const e=h[o].aabb;const s=e.min;const i=e.max;const n=new jt(new It((i[0]+s[0])*.5,(i[1]+s[1])*.5,(i[2]+s[2])*.5),new It((i[0]-s[0])*.5,(i[1]-s[1])*.5,(i[2]-s[2])*.5));const r=h[o].indices;let a=h[o].deltaPositions;let u=h[o].deltaNormals;if(r){a=t(a,r,l);u=t(u,r,l)}c=new eT({deltaPositions:a,deltaNormals:u,name:h[o].name,aabb:n});d.push(c)}const e=new tT(d,this._device);n.push(e);const u=new Qx(e);r.push(u)}}return{morphs:n,instances:r}}_parseVertexBuffers(t){const e=t.model;const s=[];const i={position:Ki,normal:Zi,tangent:Qi,blendWeight:Ji,blendIndices:tn,color:en,texCoord0:nn,texCoord1:rn,texCoord2:an,texCoord3:on,texCoord4:ln,texCoord5:hn,texCoord6:cn,texCoord7:dn};for(let t=0;t<e.vertices.length;t++){const n=e.vertices[t];const r=[];for(const t in n){const e=n[t];r.push({semantic:i[t],components:e.components,type:VW[e.type],normalize:i[t]===en})}const a=new Qo(this._device,r);const o=n.position.data.length/n.position.components;const l=new qo(this._device,a,o);const h=new cd(l);for(let t=0;t<o;t++){for(const e in n){const s=n[e];switch(s.components){case 1:h.element[i[e]].set(s.data[t]);break;case 2:h.element[i[e]].set(s.data[t*2],1-s.data[t*2+1]);break;case 3:h.element[i[e]].set(s.data[t*3],s.data[t*3+1],s.data[t*3+2]);break;case 4:h.element[i[e]].set(s.data[t*4],s.data[t*4+1],s.data[t*4+2],s.data[t*4+3]);break}}h.next()}h.end();s.push(l)}return s}_parseIndexBuffers(t,e){const s=t.model;let i=null;let n=null;let r;let a=0;for(r=0;r<s.meshes.length;r++){const t=s.meshes[r];if(t.indices!==undefined){a+=t.indices.length}}let o=0;for(r=0;r<e.length;r++){o=Math.max(o,e[r].numVertices)}if(a>0){if(o>65535){i=new qc(this._device,Ts,a);n=new Uint32Array(i.lock())}else{i=new qc(this._device,xs,a);n=new Uint16Array(i.lock())}}return{buffer:i,data:n}}_parseMeshes(t,e,s,i,n,r){const a=t.model;const o=[];let l=0;for(let t=0;t<a.meshes.length;t++){const h=a.meshes[t];const c=h.aabb;const d=c.min;const u=c.max;const f=new jt(new It((u[0]+d[0])*.5,(u[1]+d[1])*.5,(u[2]+d[2])*.5),new It((u[0]-d[0])*.5,(u[1]-d[1])*.5,(u[2]-d[2])*.5));const p=h.indices!==undefined;const m=new Vv(this._device);m.vertexBuffer=i[h.vertices];m.indexBuffer[0]=p?n:null;m.primitive[0].type=zW[h.type];m.primitive[0].base=p?h.base+l:h.base;m.primitive[0].count=h.count;m.primitive[0].indexed=p;m.skin=h.skin!==undefined?e[h.skin]:null;m.morph=h.morph!==undefined?s[h.morph]:null;m.aabb=f;if(p){r.set(h.indices,l);l+=h.indices.length}o.push(m)}if(n!==null){n.unlock()}return o}_parseMeshInstances(t,e,s,i,n,r,a){const o=t.model;const l=[];let h;for(h=0;h<o.meshInstances.length;h++){const t=o.meshInstances[h];const c=e[t.node];const d=s[t.mesh];const u=new sy(d,this._defaultMaterial,c);if(d.skin){const t=i.indexOf(d.skin);u.skinInstance=n[t]}if(d.morph){const t=r.indexOf(d.morph);u.morphInstance=a[t]}l.push(u)}return l}}class HW extends JA{constructor(t){super(t,"model");this._parsers=[];this.device=t.graphicsDevice;this.assets=t.assets;this.defaultMaterial=Hv(this.device);this.addParser(new GW(this),((t,e)=>A.getExtension(t)===".json"));this.addParser(new UW(this),((t,e)=>A.getExtension(t)===".glb"))}load(t,e,s){if(typeof t==="string"){t={load:t,original:t}}const i={retry:this.maxRetries>0,maxRetries:this.maxRetries};if(t.load.startsWith("blob:")||t.load.startsWith("data:")){if(A.getExtension(t.original).toLowerCase()===".glb"){i.responseType=wp.ResponseType.ARRAY_BUFFER}else{i.responseType=wp.ResponseType.JSON}}bp.get(t.load,i,((i,n)=>{if(!e){return}if(!i){for(let i=0;i<this._parsers.length;i++){const r=this._parsers[i];if(r.decider(t.original,n)){r.parser.parse(n,((t,s)=>{if(t){e(t)}else{e(null,s)}}),s);return}}e("No parsers found")}else{e(`Error loading model: ${t.original} [${i}]`)}}))}open(t,e){return e}patch(t,e){if(!t.resource){return}const s=t.data;const i=this;t.resource.meshInstances.forEach(((n,r)=>{if(s.mapping){const a=function(t){if(t.resource){n.material=t.resource}else{t.once("load",a);e.load(t)}t.once("remove",(t=>{if(n.material===t.resource){n.material=i.defaultMaterial}}))};if(!s.mapping[r]){n.material=i.defaultMaterial;return}const o=s.mapping[r].material;const l=s.mapping[r].path;let h;if(o!==undefined){if(!o){n.material=i.defaultMaterial}else{h=e.get(o);if(h){a(h)}else{e.once(`add:${o}`,a)}}}else if(l){const i=t.getAbsoluteUrl(s.mapping[r].path);h=e.getByUrl(i);if(h){a(h)}else{e.once(`add:url:${i}`,a)}}}}))}addParser(t,e){this._parsers.push({parser:t,decider:e})}}class WW extends JA{constructor(t){super(t,"scene")}load(t,e){MW.load(t,this.maxRetries,e)}open(t,e){this._app.systems.script.preloading=true;const s=new DW(this._app,false);const i=s.parse(e);const n=this._app.scene;n.root=i;this._app.applySceneSettings(e.settings);this._app.systems.script.preloading=false;return n}}class XW{static{this._types=[]}static push(t){XW._types.push(t)}}const qW=new Set(["system","entity","create","destroy","swap","move","data","scripts","_scripts","_scriptsIndex","_scriptsData","enabled","_oldState","onEnable","onDisable","onPostStateChange","_onSetEnabled","_checkState","_onBeforeRemove","_onInitializeAttributes","_onInitialize","_onPostInitialize","_onUpdate","_onPostUpdate","_callbacks","_callbackActive","has","get","on","off","fire","once","hasEvent"]);function $W(){return qW}function jW(t,e){if(qW.has(t)){throw new Error(`Script name '${t}' is reserved, please rename the script`)}const s=function(t){at.prototype.initEventHandler.call(this);ZV.prototype.initScriptType.call(this,t)};s.prototype=Object.create(ZV.prototype);s.prototype.constructor=s;s.extend=ZV.extend;s.attributes=new GV(s);KW(s,t,e);return s}const YW={};GV.reservedNames.forEach(((t,e,s)=>{YW[t]=1}));jW.reservedAttributes=YW;function KW(t,e,s){if(typeof t!=="function"){throw new Error(`script class: '${t}' must be a constructor function (i.e. class).`)}if(!(t.prototype instanceof jV)){throw new Error(`script class: '${ZV.__getScriptName(t)}' does not extend pc.Script.`)}e=e||t.__name||ZV.__getScriptName(t);if(qW.has(e)){throw new Error(`script name: '${e}' is reserved, please change script name`)}t.__name=e;const i=s?s.scripts:TR.getApplication().scripts;i.add(t);XW.push(t)}const ZW=t=>t[0].toLowerCase()+t.substring(1);class QW extends JA{constructor(t){super(t,"script");this._scripts={};this._cache={}}clearCache(){for(const t in this._cache){const e=this._cache[t];const s=e.parentNode;if(s){s.removeChild(e)}}this._cache={}}load(t,e){if(typeof t==="string"){t={load:t,original:t}}const s=this;uA.app=this._app;const i=(t.load,(t,i,n)=>{if(!t){const t={};for(let e=0;e<XW._types.length;e++){t[XW._types[e].name]=XW._types[e]}XW._types.length=0;e(null,t,n);const r=i.split("&hash=")[0];delete s._loader._cache[eC.makeKey(r,"script")]}else{e(t)}});const[n]=t.load.split("?");const r=n.endsWith(".mjs");if(r){this._loadModule(n,i)}else{this._loadScript(t.load,i)}}open(t,e){return e}patch(t,e){}_loadScript(t,e){const s=document.head;const i=document.createElement("script");this._cache[t]=i;i.async=false;i.addEventListener("error",(t=>{e(`Script: ${t.target.src} failed to load`)}),false);let n=false;i.onload=i.onreadystatechange=function(){if(!n&&(!this.readyState||this.readyState==="loaded"||this.readyState==="complete")){n=true;e(null,t,i)}};i.src=t;s.appendChild(i)}_loadModule(t,e){const s=B.browser&&window.location.origin!=="null";const i=s?window.location.origin+window.location.pathname:import.meta.url;const n=new URL(t,i);import(n.toString()).then((s=>{const i=n.pathname.split("/").pop();const r=this._app.assets.find(i,"script")?.data?.scripts;for(const t in s){const e=s[t];const i=e.prototype instanceof jV;if(i){const t=ZW(e.name);if(!e.scriptName);const s=e.scriptName??t;KW(e,s);if(r)this._app.scripts.addSchema(s,r[s])}}e(null,t,null)})).catch((t=>{e(t)}))}}class JW extends JA{constructor(t){super(t,"shader"),this.decoder=null}load(t,e){if(typeof t==="string"){t={load:t,original:t}}bp.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},((s,i)=>{if(!s){e(null,i)}else{e(`Error loading shader resource: ${t.original} [${s}]`)}}))}openBinary(t){this.decoder??=new TextDecoder("utf-8");return this.decoder.decode(t)}}function tX(t){const e=this;if(e.resource){e.resource.atlas=t.resource}}function eX(t){const e=this;e.registry.load(t)}class sX extends JA{constructor(t){super(t,"sprite");this._assets=t.assets;this._device=t.graphicsDevice}load(t,e){if(typeof t==="string"){t={load:t,original:t}}if(A.getExtension(t.original)===".json"){bp.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},((t,s)=>{if(!t){e(null,s)}else{e(t)}}))}}open(t,e){const s=new fb(this._device);if(t){s.__data=e}return s}patch(t,e){const s=t.resource;if(s.__data){t.data.pixelsPerUnit=s.__data.pixelsPerUnit;t.data.renderMode=s.__data.renderMode;t.data.frameKeys=s.__data.frameKeys;if(s.__data.textureAtlasAsset){const i=e.getByUrl(s.__data.textureAtlasAsset);if(i){t.data.textureAtlasAsset=i.id}else{console.warn(`Could not find textureatlas with url: ${s.__data.textureAtlasAsset}`)}}}s.startUpdate();s.renderMode=t.data.renderMode;s.pixelsPerUnit=t.data.pixelsPerUnit;s.frameKeys=t.data.frameKeys;this._updateAtlas(t);s.endUpdate();t.off("change",this._onAssetChange,this);t.on("change",this._onAssetChange,this)}_updateAtlas(t){const e=t.resource;if(!t.data.textureAtlasAsset){e.atlas=null;return}this._assets.off(`load:${t.data.textureAtlasAsset}`,tX,t);this._assets.on(`load:${t.data.textureAtlasAsset}`,tX,t);const s=this._assets.get(t.data.textureAtlasAsset);if(s&&s.resource){e.atlas=s.resource}else{if(!s){this._assets.off(`add:${t.data.textureAtlasAsset}`,eX,t);this._assets.on(`add:${t.data.textureAtlasAsset}`,eX,t)}else{this._assets.load(s)}}}_onAssetChange(t,e,s,i){if(e==="data"){if(s&&s.textureAtlasAsset&&i&&s.textureAtlasAsset!==i.textureAtlasAsset){this._assets.off(`load:${i.textureAtlasAsset}`,tX,t);this._assets.off(`add:${i.textureAtlasAsset}`,eX,t)}}}}class iX{constructor(t,e){this._templateRoot=null;this._app=t;this._data=e}instantiate(){if(!this._templateRoot){this._parseTemplate()}return this._templateRoot.clone()}_parseTemplate(){const t=new DW(this._app,true);this._templateRoot=t.parse(this._data)}}class nX extends JA{constructor(t){super(t,"template"),this.decoder=null}load(t,e){if(typeof t==="string"){t={load:t,original:t}}const s={retry:this.maxRetries>0,maxRetries:this.maxRetries};bp.get(t.load,s,((s,i)=>{if(s){e(`Error requesting template: ${t.original}`)}else{e(s,i)}}))}open(t,e){return new iX(this._app,e)}openBinary(t){this.decoder??=new TextDecoder("utf-8");return new iX(this._app,JSON.parse(this.decoder.decode(t)))}}class rX extends JA{constructor(t){super(t,"text"),this.decoder=null}load(t,e){if(typeof t==="string"){t={load:t,original:t}}bp.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},((s,i)=>{if(!s){e(null,i)}else{e(`Error loading text resource: ${t.original} [${s}]`)}}))}openBinary(t){this.decoder??=new TextDecoder("utf-8");return this.decoder.decode(t)}}const aX={repeat:fe,clamp:pe,mirror:me};const oX={nearest:as,linear:os,nearest_mip_nearest:ls,linear_mip_nearest:cs,nearest_mip_linear:hs,linear_mip_linear:ds};const lX=/^data\.frames\.(\d+)$/;class hX extends JA{constructor(t){super(t,"textureatlas");this._loader=t.loader}load(t,e){if(typeof t==="string"){t={load:t,original:t}}const s=this;const i=this._loader.getHandler("texture");if(A.getExtension(t.original)===".json"){bp.get(t.load,{retry:this.maxRetries>0,maxRetries:this.maxRetries},((i,n)=>{if(!i){const i=t.original.replace(".json",".png");s._loader.load(i,"texture",((t,s)=>{if(t){e(t)}else{e(null,{data:n,texture:s})}}))}else{e(i)}}))}else{i.load(t,e)}}open(t,e,s){const i=new pb;if(e.texture&&e.data){i.texture=e.texture;i.__data=e.data}else{const n=this._loader.getHandler("texture");const r=n.open(t,e,s);if(!r)return null;i.texture=r}return i}patch(t,e){if(!t.resource){return}if(t.resource.__data){if(t.resource.__data.minfilter!==undefined)t.data.minfilter=t.resource.__data.minfilter;if(t.resource.__data.magfilter!==undefined)t.data.magfilter=t.resource.__data.magfilter;if(t.resource.__data.addressu!==undefined)t.data.addressu=t.resource.__data.addressu;if(t.resource.__data.addressv!==undefined)t.data.addressv=t.resource.__data.addressv;if(t.resource.__data.mipmaps!==undefined)t.data.mipmaps=t.resource.__data.mipmaps;if(t.resource.__data.anisotropy!==undefined)t.data.anisotropy=t.resource.__data.anisotropy;if(t.resource.__data.rgbm!==undefined)t.data.rgbm=!!t.resource.__data.rgbm;t.data.frames=t.resource.__data.frames;delete t.resource.__data}const s=t.resource.texture;if(s){s.name=t.name;if(t.data.hasOwnProperty("minfilter")&&s.minFilter!==oX[t.data.minfilter]){s.minFilter=oX[t.data.minfilter]}if(t.data.hasOwnProperty("magfilter")&&s.magFilter!==oX[t.data.magfilter]){s.magFilter=oX[t.data.magfilter]}if(t.data.hasOwnProperty("addressu")&&s.addressU!==aX[t.data.addressu]){s.addressU=aX[t.data.addressu]}if(t.data.hasOwnProperty("addressv")&&s.addressV!==aX[t.data.addressv]){s.addressV=aX[t.data.addressv]}if(t.data.hasOwnProperty("mipmaps")&&s.mipmaps!==t.data.mipmaps){s.mipmaps=t.data.mipmaps}if(t.data.hasOwnProperty("anisotropy")&&s.anisotropy!==t.data.anisotropy){s.anisotropy=t.data.anisotropy}if(t.data.hasOwnProperty("rgbm")){const e=t.data.rgbm?Vn:zn;if(s.type!==e){s.type=e}}}t.resource.texture=s;const i={};for(const e in t.data.frames){const s=t.data.frames[e];i[e]={rect:new Ft(s.rect),pivot:new Ot(s.pivot),border:new Ft(s.border)}}t.resource.frames=i;t.off("change",this._onAssetChange,this);t.on("change",this._onAssetChange,this)}_onAssetChange(t,e,s){let i;if(e==="data"||e==="data.frames"){const e={};for(const t in s.frames){i=s.frames[t];e[t]={rect:new Ft(i.rect),pivot:new Ot(i.pivot),border:new Ft(i.border)}}t.resource.frames=e}else{const n=e.match(lX);if(n){const e=n[1];if(s){if(!t.resource.frames[e]){t.resource.frames[e]={rect:new Ft(s.rect),pivot:new Ot(s.pivot),border:new Ft(s.border)}}else{i=t.resource.frames[e];i.rect.set(s.rect[0],s.rect[1],s.rect[2],s.rect[3]);i.pivot.set(s.pivot[0],s.pivot[1]);i.border.set(s.border[0],s.border[1],s.border[2],s.border[3])}t.resource.fire("set:frame",e,t.resource.frames[e])}else{if(t.resource.frames[e]){delete t.resource.frames[e];t.resource.fire("remove:frame",e)}}}}}}function cX(){const t={cTFETC1:0,cTFETC2:1,cTFBC1:2,cTFBC3:3,cTFPVRTC1_4_RGB:8,cTFPVRTC1_4_RGBA:9,cTFASTC_4x4:10,cTFATC_RGB:11,cTFATC_RGBA_INTERPOLATED_ALPHA:12,cTFRGBA32:13,cTFRGB565:14,cTFRGBA4444:16};const e={astc:t.cTFASTC_4x4,dxt:t.cTFBC1,etc1:t.cTFETC1,etc2:t.cTFETC1,pvr:t.cTFPVRTC1_4_RGB,atc:t.cTFATC_RGB,none:t.cTFRGB565};const s={astc:t.cTFASTC_4x4,dxt:t.cTFBC3,etc1:t.cTFRGBA4444,etc2:t.cTFETC2,pvr:t.cTFPVRTC1_4_RGBA,atc:t.cTFATC_RGBA_INTERPOLATED_ALPHA,none:t.cTFRGBA4444};const i={ETC1:21,ETC2_RGB:22,ETC2_RGBA:23,DXT1:8,DXT5:10,PVRTC_4BPP_RGB_1:26,PVRTC_4BPP_RGBA_1:27,ASTC_4x4:28,ATC_RGB:29,ATC_RGBA:30,R8_G8_B8_A8:7,R5_G6_B5:3,R4_G4_B4_A4:5};const n=(e,s)=>{switch(e){case t.cTFETC1:return s.formats.etc2?i.ETC2_RGB:i.ETC1;case t.cTFETC2:return i.ETC2_RGBA;case t.cTFBC1:return i.DXT1;case t.cTFBC3:return i.DXT5;case t.cTFPVRTC1_4_RGB:return i.PVRTC_4BPP_RGB_1;case t.cTFPVRTC1_4_RGBA:return i.PVRTC_4BPP_RGBA_1;case t.cTFASTC_4x4:return i.ASTC_4x4;case t.cTFATC_RGB:return i.ATC_RGB;case t.cTFATC_RGBA_INTERPOLATED_ALPHA:return i.ATC_RGBA;case t.cTFRGBA32:return i.R8_G8_B8_A8;case t.cTFRGB565:return i.R5_G6_B5;case t.cTFRGBA4444:return i.R4_G4_B4_A4}};const r=t=>{const e=function(t,e){const s=t*(2/255)-1;const i=e*(2/255)-1;const n=Math.sqrt(1-Math.min(1,s*s+i*i));return Math.max(0,Math.min(255,Math.floor((n+1)*.5*255)))};for(let s=0;s<t.length;s+=4){const i=t[s+3];const n=t[s+1];t[s+0]=i;t[s+2]=e(i,n);t[s+3]=255}return t};const a=t=>{const e=new Uint16Array(t.length/4);for(let s=0;s<t.length;s+=4){const i=t[s+0];const n=t[s+1];const r=t[s+2];e[s/4]=(i&248)<<8|(n&252)<<3|r>>3}return e};const o=(t,e)=>(t&t-1)===0&&(e&e-1)===0;const l=()=>typeof performance!=="undefined"?performance.now():0;let h;let c;let d;const u=(t,e,s)=>{if(s){if(t.formats.astc){return"astc"}}else{if(e){if(t.formats.etc2){return"etc2"}}else{if(t.formats.etc2){return"etc2"}if(t.formats.etc1){return"etc1"}}}const i=e=>{for(let s=0;s<e.length;++s){const i=e[s];if(t.formats[i]){return i}}return"none"};return i(e?d:c)};const f=(e,s,i)=>{switch(i){case t.cTFETC1:case t.cTFETC2:return true;case t.cTFBC1:case t.cTFBC3:return(e&3)===0&&(s&3)===0;case t.cTFPVRTC1_4_RGB:case t.cTFPVRTC1_4_RGBA:return o(e,s);case t.cTFASTC_4x4:return true;case t.cTFATC_RGB:case t.cTFATC_RGBA_INTERPOLATED_ALPHA:return true}return false};const p=(i,o,c)=>{if(!h.KTX2File){throw new Error("Basis transcoder module does not include support for KTX2.")}const d=l();const p=new h.KTX2File(new Uint8Array(o));const m=p.getWidth();const _=p.getHeight();const g=p.getLevels();const v=!!p.getHasAlpha();const y=p.isUASTC&&p.isUASTC();if(!m||!_||!g){p.close();p.delete();throw new Error(`Invalid image dimensions url=${i} width=${m} height=${_} levels=${g}`)}const S=u(c.deviceDetails,v,y);const x=!!c.isGGGR&&S==="pvr";let T;if(x){T=t.cTFRGBA32}else{T=v?s[S]:e[S];if(!f(m,_,T)){T=v?t.cTFRGBA32:t.cTFRGB565}}if(!p.startTranscoding()){p.close();p.delete();throw new Error(`Failed to start transcoding url=${i}`)}let w;const b=[];for(let e=0;e<g;++e){const s=p.getImageTranscodedSizeInBytes(e,0,0,T);const n=new Uint8Array(s);if(!p.transcodeImage(n,e,0,0,T,0,-1,-1)){p.close();p.delete();throw new Error(`Failed to transcode image url=${i}`)}const r=T===t.cTFRGB565||T===t.cTFRGBA4444;b.push(r?new Uint16Array(n.buffer):n)}p.close();p.delete();if(x){T=t.cTFRGB565;for(w=0;w<b.length;++w){b[w]=a(r(b[w]))}}return{format:n(T,c.deviceDetails),width:m,height:_,levels:b,cubemap:false,transcodeTime:l()-d,url:i,unswizzledGGGR:x}};const m=(i,o,c)=>{const d=l();const p=new h.BasisFile(new Uint8Array(o));const m=p.getImageWidth(0,0);const _=p.getImageHeight(0,0);const g=p.getNumImages();const v=p.getNumLevels(0);const y=!!p.getHasAlpha();const S=p.isUASTC&&p.isUASTC();if(!m||!_||!g||!v){p.close();p.delete();throw new Error(`Invalid image dimensions url=${i} width=${m} height=${_} images=${g} levels=${v}`)}const x=u(c.deviceDetails,y,S);const T=!!c.isGGGR&&x==="pvr";let w;if(T){w=t.cTFRGBA32}else{w=y?s[x]:e[x];if(!f(m,_,w)){w=y?t.cTFRGBA32:t.cTFRGB565}}if(!p.startTranscoding()){p.close();p.delete();throw new Error(`Failed to start transcoding url=${i}`)}let b;const E=[];for(let e=0;e<v;++e){const s=p.getImageTranscodedSizeInBytes(0,e,w);const n=new Uint8Array(s);if(!p.transcodeImage(n,0,e,w,0,0)){if(e===v-1&&s===E[e-1].buffer.byteLength){n.set(new Uint8Array(E[e-1].buffer));console.warn(`Failed to transcode last mipmap level, using previous level instead url=${i}`)}else{p.close();p.delete();throw new Error(`Failed to transcode image url=${i}`)}}const r=w===t.cTFRGB565||w===t.cTFRGBA4444;E.push(r?new Uint16Array(n.buffer):n)}p.close();p.delete();if(T){w=t.cTFRGB565;for(b=0;b<E.length;++b){E[b]=a(r(E[b]))}}return{format:n(w,c.deviceDetails),width:m,height:_,levels:E,cubemap:false,transcodeTime:l()-d,url:i,unswizzledGGGR:T}};const _=(t,e,s)=>s.isKTX2?p(t,e,s):m(t,e,s);const g=(t,e,s)=>{try{const i=_(t,e,s);i.levels=i.levels.map((t=>t.buffer));self.postMessage({url:t,data:i},i.levels)}catch(e){self.postMessage({url:t,err:e},null)}};const v=(t,e)=>{const s=(e,s)=>{WebAssembly.instantiate(t.module,e).then((t=>{s(t)})).catch((t=>{console.error(`instantiate failed + ${t}`)}));return{}};self.BASIS(t.module?{instantiateWasm:s}:null).then((s=>{s.initializeBasis();h=s;c=t.rgbPriority;d=t.rgbaPriority;e(null)}))};const y=[];self.onmessage=t=>{const e=t.data;switch(e.type){case"init":v(e.config,(()=>{for(let t=0;t<y.length;++t){g(y[t].url,y[t].data,y[t].options)}y.length=0}));break;case"transcode":if(h){g(e.url,e.data,e.options)}else{y.push(e)}break}}}const dX=t=>({astc:!!t.extCompressedTextureASTC,atc:!!t.extCompressedTextureATC,dxt:!!t.extCompressedTextureS3TC,etc1:!!t.extCompressedTextureETC1,etc2:!!t.extCompressedTextureETC,pvr:!!t.extCompressedTexturePVRTC});const uX=(t,e)=>{const s=t=>{const e=["/* basis */",t,"",`(${cX.toString()})()\n\n`].join("\n");return new Blob([e],{type:"application/javascript"})};const i=()=>{try{if(typeof WebAssembly==="object"&&typeof WebAssembly.instantiate==="function"){const t=new WebAssembly.Module(Uint8Array.of(0,97,115,109,1,0,0,0));if(t instanceof WebAssembly.Module){return new WebAssembly.Instance(t)instanceof WebAssembly.Instance}}}catch(t){}return false};const n=(i,n)=>{e(null,{workerUrl:URL.createObjectURL(s(i)),module:n,rgbPriority:t.rgbPriority,rgbaPriority:t.rgbaPriority})};const r={cache:true,responseType:"text",retry:t.maxRetries>0,maxRetries:t.maxRetries};if(t.glueUrl&&t.wasmUrl&&i()){let s=null;let i=null;bp.get(t.glueUrl,r,((t,r)=>{if(t){e(t)}else{if(i){n(r,i)}else{s=r}}}));const a=fetch(t.wasmUrl);const o=()=>{a.then((t=>t.arrayBuffer())).then((t=>WebAssembly.compile(t))).then((t=>{if(s){n(s,t)}else{i=t}})).catch((t=>{e(t,null)}))};if(WebAssembly.compileStreaming){WebAssembly.compileStreaming(a).then((t=>{if(s){n(s,t)}else{i=t}})).catch((t=>{o()}))}else{o()}}else{bp.get(t.fallbackUrl,r,((t,s)=>{if(t){e(t,null)}else{n(s,null)}}))}};class fX{constructor(){this.callbacks={};this.queue=[];this.clients=[]}enqueueJob(t,e,s,i){if(this.callbacks.hasOwnProperty(t)){this.callbacks[t].push(s)}else{this.callbacks[t]=[s];const n={url:t,data:e,options:i};if(this.clients.length>0){this.clients.shift().run(n)}else{this.queue.push(n)}}}enqueueClient(t){if(this.queue.length>0){t.run(this.queue.shift())}else{this.clients.push(t)}}handleResponse(t,e,s){const i=this.callbacks[t];if(e){for(let t=0;t<i.length;++t){i[t](e)}}else{if(s.format===As||s.format===Ps){s.levels=s.levels.map((t=>new Uint16Array(t)))}else{s.levels=s.levels.map((t=>new Uint8Array(t)))}for(let t=0;t<i.length;++t){i[t](null,s)}}delete this.callbacks[t]}}class pX{constructor(t,e,s){this.queue=t;this.worker=new Worker(e.workerUrl);this.worker.addEventListener("message",(t=>{const e=t.data;this.queue.handleResponse(e.url,e.err,e.data);if(!this.eager){this.queue.enqueueClient(this)}}));this.worker.postMessage({type:"init",config:e});this.eager=s}run(t){const e=[];if(t.data instanceof ArrayBuffer){e.push(t.data)}this.worker.postMessage({type:"transcode",url:t.url,format:t.format,data:t.data,options:t.options},e);if(this.eager){this.queue.enqueueClient(this)}}}const mX=1;const _X=["etc2","etc1","astc","dxt","pvr","atc"];const gX=["astc","dxt","etc2","pvr","atc"];const vX=5;const yX=new fX;let SX=null;let xX=false;function TX(t){if(xX){return}if(!t){t=SX||{}}else if(t.lazyInit){SX=t;return}if(!t.glueUrl||!t.wasmUrl||!t.fallbackUrl){const e=ct.getConfig("BASIS");if(e){t={glueUrl:e.glueUrl,wasmUrl:e.wasmUrl,fallbackUrl:e.fallbackUrl,numWorkers:e.numWorkers}}}if(t.glueUrl||t.wasmUrl||t.fallbackUrl){xX=true;const e=Math.max(1,Math.min(16,t.numWorkers||mX));const s=t.numWorkers===1||(t.hasOwnProperty("eagerWorkers")?t.eagerWorkers:true);t.rgbPriority=t.rgbPriority||_X;t.rgbaPriority=t.rgbaPriority||gX;t.maxRetries=t.hasOwnProperty("maxRetries")?t.maxRetries:vX;uX(t,((t,i)=>{if(t){console.error(`failed to initialize basis worker: ${t}`)}else{for(let t=0;t<e;++t){yX.enqueueClient(new pX(yX,i,s))}}}))}}let wX=null;function bX(t,e,s,i,n){TX();if(!wX){wX={formats:dX(t)}}yX.enqueueJob(e,s,i,{deviceDetails:wX,isGGGR:!!n?.isGGGR,isKTX2:!!n?.isKTX2});return xX}class EX{load(t,e,s){throw new Error("not implemented")}open(t,e,s){throw new Error("not implemented")}}class AX extends EX{constructor(t,e){super();this.device=e;this.maxRetries=0}load(t,e,s){const i=this.device;const n=n=>{const r=bX(i,t.load,n,e,{isGGGR:(s?.file?.variants?.basis?.opt&8)!==0});if(!r){e(`Basis module not found. Asset [${s.name}](${s.getFileUrl()}) basis texture variant will not be loaded.`)}};qA.fetchArrayBuffer(t.load,((t,s)=>{if(t){e(t)}else{n(s)}}),s,this.maxRetries)}open(t,e,s,i={}){const n=i.srgb?Ui(e.format):e.format;const r=new lo(s,{name:t,addressU:e.cubemap?pe:fe,addressV:e.cubemap?pe:fe,width:e.width,height:e.height,format:n,cubemap:e.cubemap,levels:e.levels,...i});r.upload();return r}}class CX extends EX{constructor(t,e){super();this.crossOrigin=t.prefix?"anonymous":null;this.maxRetries=0;this.device=e}load(t,e,s){const i=!!s?.file?.contents;if(i){if(this.device.supportsImageBitmap){this._loadImageBitmapFromBlob(new Blob([s.file.contents]),e);return}t={load:URL.createObjectURL(new Blob([s.file.contents])),original:t.original}}const n=(s,n)=>{if(i){URL.revokeObjectURL(t.load)}e(s,n)};let r;if(s&&s.options&&s.options.hasOwnProperty("crossOrigin")){r=s.options.crossOrigin}else if(AA.test(t.load)){r=this.crossOrigin}if(this.device.supportsImageBitmap){this._loadImageBitmap(t.load,t.original,r,n,s)}else{this._loadImage(t.load,t.original,r,n,s)}}open(t,e,s,i={}){const n=new lo(s,{name:t,width:e.width,height:e.height,format:i.srgb?Hs:Ds,...i});n.setSource(e);return n}_loadImage(t,e,s,i,n){const r=new Image;if(s){r.crossOrigin=s}let a=0;const o=this.maxRetries;let l;const h=1024*1024;n?.fire("progress",0,h);r.onload=function(){n?.fire("progress",h,h);i(null,r)};r.onerror=function(){if(l)return;if(o>0&&++a<=o){const s=Math.pow(2,a)*100;console.log(`Error loading Texture from: '${e}' - Retrying in ${s}ms...`);const i=t.indexOf("?");const n=i>=0?"&":"?";l=setTimeout((()=>{r.src=`${t+n}retry=${Date.now()}`;l=null}),s)}else{i(`Error loading Texture from: '${e}'`)}};r.src=t}_loadImageBitmap(t,e,s,i,n){const r={cache:true,responseType:"blob",retry:this.maxRetries>0,maxRetries:this.maxRetries,progress:n};bp.get(t,r,((t,e)=>{if(t){i(t)}else{this._loadImageBitmapFromBlob(e,i)}}))}_loadImageBitmapFromBlob(t,e){createImageBitmap(t,{premultiplyAlpha:"none",colorSpaceConversion:"none"}).then((t=>e(null,t))).catch((t=>e(t)))}}const PX=[1481919403,3140563232,169478669];const LX={33776:Ms,33778:Is,33779:Rs,36196:Ws,37492:Xs,37496:qs,35840:Ys,35841:$s,35842:Ks,35843:js,32849:Ls,32856:Ds,35905:Gs,35907:Hs,35898:Vs,34843:Os,34842:Fs};function DX(t,e,s,i){return t===Vs?new Uint32Array(e,s,i/4):new Uint8Array(e,s,i)}class MX extends EX{constructor(t){super();this.maxRetries=0}load(t,e,s){qA.fetchArrayBuffer(t.load,e,s,this.maxRetries)}open(t,e,s,i={}){const n=this.parse(e);if(!n){return null}const r=i.srgb?Ui(n.format):n.format;const a=new lo(s,{name:t,addressU:n.cubemap?pe:fe,addressV:n.cubemap?pe:fe,width:n.width,height:n.height,format:r,cubemap:n.cubemap,levels:n.levels,...i});a.upload();return a}parse(t){const e=new Uint32Array(t);if(PX[0]!==e[0]||PX[1]!==e[1]||PX[2]!==e[2]){return null}const s={endianness:e[3],glType:e[4],glTypeSize:e[5],glFormat:e[6],glInternalFormat:e[7],glBaseInternalFormat:e[8],pixelWidth:e[9],pixelHeight:e[10],pixelDepth:e[11],numberOfArrayElements:e[12],numberOfFaces:e[13],numberOfMipmapLevels:e[14],bytesOfKeyValueData:e[15]};if(s.pixelDepth>1){return null}if(s.numberOfArrayElements!==0){return null}const i=LX[s.glInternalFormat];if(i===undefined){return null}let n=16+s.bytesOfKeyValueData/4;const r=s.numberOfFaces>1;const a=[];for(let o=0;o<(s.numberOfMipmapLevels||1);o++){const s=e[n++];if(r){a.push([])}const l=r?a[o]:a;for(let e=0;e<(r?6:1);++e){l.push(DX(i,t,n*4,s));n+=s+3>>2}}return{format:i,width:s.pixelWidth,height:s.pixelHeight,levels:a,cubemap:r}}}const IX={KHR_DF_MODEL_UASTC:166};class RX extends EX{constructor(t,e){super();this.maxRetries=0;this.device=e}load(t,e,s){qA.fetchArrayBuffer(t.load,((i,n)=>{if(i){e(i,n)}else{this.parse(n,t,e,s)}}),s,this.maxRetries)}open(t,e,s,i={}){const n=i.srgb?Ui(e.format):e.format;const r=new lo(s,{name:t,addressU:e.cubemap?pe:fe,addressV:e.cubemap?pe:fe,width:e.width,height:e.height,format:n,cubemap:e.cubemap,levels:e.levels,...i});r.upload();return r}parse(t,e,s,i){const n=new dt(t);const r=[n.readU32be(),n.readU32be(),n.readU32be()];if(r[0]!==2873840728||r[1]!==540160187||r[2]!==218765834){return null}const a={vkFormat:n.readU32(),typeSize:n.readU32(),pixelWidth:n.readU32(),pixelHeight:n.readU32(),pixelDepth:n.readU32(),layerCount:n.readU32(),faceCount:n.readU32(),levelCount:n.readU32(),supercompressionScheme:n.readU32()};const o={dfdByteOffset:n.readU32(),dfdByteLength:n.readU32(),kvdByteOffset:n.readU32(),kvdByteLength:n.readU32(),sgdByteOffset:n.readU64(),sgdByteLength:n.readU64()};const l=[];for(let t=0;t<Math.max(1,a.levelCount);++t){l.push({byteOffset:n.readU64(),byteLength:n.readU64(),uncompressedByteLength:n.readU64()})}const h=n.readU32();if(h!==o.kvdByteOffset-o.dfdByteOffset){return null}n.skip(8);const c=n.readU8();n.skip(o.dfdByteLength-9);n.skip(o.kvdByteLength);if(a.supercompressionScheme===1||c===IX.KHR_DF_MODEL_UASTC){const n=bX(this.device,e.load,t,s,{isGGGR:(i?.file?.variants?.basis?.opt&8)!==0,isKTX2:true});if(!n){s(`Basis module not found. Asset [${i.name}](${i.getFileUrl()}) basis texture variant will not be loaded.`)}}else{s("unsupported KTX2 pixel format")}}}class OX extends EX{constructor(t){super();this.maxRetries=0}load(t,e,s){qA.fetchArrayBuffer(t.load,e,s,this.maxRetries)}open(t,e,s,i={}){const n=new Uint32Array(e,0,128/4);const r=n[4];const a=n[3];const o=Math.max(n[7],1);const l=n[20]===4;const h=n[21];const c=n[22];const d=n[28]===65024;const u=827611204;const f=894720068;const p=113;const m=116;const _=826496069;const g=825438800;const v=825504336;const y=825439312;const S=825504848;let x=false;let T=false;let w=false;let b=false;let E=null;let A=1;let C;if(l){if(h===u){E=Ms;x=true}else if(h===f){E=Rs;x=true}else if(h===p){E=Fs;A=2}else if(h===m){E=ks;A=4}else if(h===_){E=Ws;x=true;T=true}else if(h===g||h===v){E=h===g?$s:js;x=true;w=true}else if(h===y||h===S){E=h===y?Ys:Ks;x=true;b=true}}else{if(c===32){E=Ds}}if(!E){C=new lo(s,{width:4,height:4,format:Ls,name:"dds-legacy-empty"});return C}C=new lo(s,{name:t,addressU:d?pe:fe,addressV:d?pe:fe,width:r,height:a,format:E,cubemap:d,mipmaps:o>1,...i});let P=128;const L=d?6:1;let D;const M=4;const I=4;const R=h===u?8:16;let O,F,N;for(let t=0;t<L;t++){let s=r;let i=a;for(let n=0;n<o;n++){if(x){if(T){D=Math.floor((s+3)/4)*Math.floor((i+3)/4)*8}else if(w){D=Math.max(s,16)*Math.max(i,8)/4}else if(b){D=Math.max(s,8)*Math.max(i,8)/2}else{O=Math.floor((s+M-1)/M);F=Math.floor((i+I-1)/I);N=O*F;D=N*R}}else{D=s*i*4}const r=E===ks?new Float32Array(e,P,D):E===Fs?new Uint16Array(e,P,D):new Uint8Array(e,P,D);if(!d){C._levels[n]=r}else{if(!C._levels[n])C._levels[n]=[];C._levels[n][t]=r}P+=D*A;s=Math.max(s*.5,1);i=Math.max(i*.5,1)}}C.upload();return C}}class FX extends EX{constructor(t){super();this.maxRetries=0}load(t,e,s){qA.fetchArrayBuffer(t.load,e,s,this.maxRetries);if(s.data&&!s.data.type){s.data.type=Gn}}open(t,e,s,i={}){const n=this.parse(e);if(!n){return null}const r=new lo(s,{name:t,addressU:fe,addressV:pe,minFilter:as,magFilter:as,width:n.width,height:n.height,levels:n.levels,format:Ds,type:Gn,mipmaps:false,...i});r.upload();return r}parse(t){const e=new dt(t);const s=e.readLine();if(!s.startsWith("#?RADIANCE")){return null}const i={};while(true){const t=e.readLine();if(t.length===0){break}else{const e=t.split("=");if(e.length===2){i[e[0]]=e[1]}}}if(!i.hasOwnProperty("FORMAT")){return null}const n=e.readLine().split(" ");if(n.length!==4){return null}const r=parseInt(n[1],10);const a=parseInt(n[3],10);const o=this._readPixels(e,a,r,n[0]==="-Y");if(!o){return null}return{width:a,height:r,levels:[o]}}_readPixels(t,e,s,i){if(e<8||e>32767){return this._readPixelsFlat(t,e,s)}const n=[0,0,0,0];t.readArray(n);if(n[0]!==2||n[1]!==2||(n[2]&128)!==0){t.skip(-4);return this._readPixelsFlat(t,e,s)}const r=new ArrayBuffer(e*s*4);const a=new Uint8Array(r);let o=i?0:e*4*(s-1);let l,h,c,d,u,f;for(h=0;h<s;++h){if(h){t.readArray(n)}if((n[2]<<8)+n[3]!==e){return null}for(d=0;d<4;++d){l=0;while(l<e){u=t.readU8();if(u>128){u-=128;if(l+u>e){return null}f=t.readU8();for(c=0;c<u;++c){a[o+d+4*l++]=f}}else{if(u===0||l+u>e){return null}for(c=0;c<u;++c){a[o+d+4*l++]=t.readU8()}}}}o+=e*4*(i?1:-1)}return a}_readPixelsFlat(t,e,s){return t.remainingBytes===e*s*4?new Uint8Array(t.arraybuffer,t.offset):null}}const NX={repeat:fe,clamp:pe,mirror:me};const kX={nearest:as,linear:os,nearest_mip_nearest:ls,linear_mip_nearest:cs,nearest_mip_linear:hs,linear_mip_linear:ds};const BX={default:zn,rgbm:Vn,rgbe:Gn,rgbp:Hn,swizzleGGGR:Wn};const UX=function(t){const e=ao.calcMipLevelsCount(t._width,t._height);const s=function(t){return t instanceof HTMLCanvasElement||t instanceof HTMLImageElement||t instanceof HTMLVideoElement};if(!(t._format===Ds||t._format===ks)||t._volume||t._compressed||t._levels.length===1||t._levels.length===e||s(t._cubemap?t._levels[0][0]:t._levels[0])){return}const i=function(t,e,s){const i=Math.max(1,t>>1);const n=Math.max(1,e>>1);const r=new s.constructor(i*n*4);const a=Math.floor(t/i);const o=Math.floor(e/n);const l=a*o;for(let e=0;e<n;++e){for(let n=0;n<i;++n){for(let h=0;h<4;++h){let c=0;for(let i=0;i<o;++i){for(let r=0;r<a;++r){c+=s[(n*a+r+(e*o+i)*t)*4+h]}}r[(n+e*i)*4+h]=c/l}}}return r};for(let s=t._levels.length;s<e;++s){const e=Math.max(1,t._width>>s-1);const n=Math.max(1,t._height>>s-1);if(t._cubemap){const r=[];for(let a=0;a<6;++a){r.push(i(e,n,t._levels[s-1][a]))}t._levels.push(r)}else{t._levels.push(i(e,n,t._levels[s-1]))}}t._levelsUpdated=t._cubemap?[[true,true,true,true,true,true]]:[true]};class zX extends JA{constructor(t){super(t,"texture");const e=t.assets;const s=t.graphicsDevice;this._device=s;this._assets=e;this.imgParser=new CX(e,s);this.parsers={dds:new OX(e),ktx:new MX(e),ktx2:new RX(e,s),basis:new AX(e,s),hdr:new FX(e)}}set crossOrigin(t){this.imgParser.crossOrigin=t}get crossOrigin(){return this.imgParser.crossOrigin}set maxRetries(t){this.imgParser.maxRetries=t;for(const e in this.parsers){if(this.parsers.hasOwnProperty(e)){this.parsers[e].maxRetries=t}}}get maxRetries(){return this.imgParser.maxRetries}_getUrlWithoutParams(t){return t.indexOf("?")>=0?t.split("?")[0]:t}_getParser(t){const e=A.getExtension(this._getUrlWithoutParams(t)).toLowerCase().replace(".","");return this.parsers[e]||this.imgParser}_getTextureOptions(t){const e={};if(t){if(t.name?.length>0){e.name=t.name}const s=t.data;if(s.hasOwnProperty("minfilter")){e.minFilter=kX[s.minfilter]}if(s.hasOwnProperty("magfilter")){e.magFilter=kX[s.magfilter]}if(s.hasOwnProperty("addressu")){e.addressU=NX[s.addressu]}if(s.hasOwnProperty("addressv")){e.addressV=NX[s.addressv]}if(s.hasOwnProperty("mipmaps")){e.mipmaps=s.mipmaps}if(s.hasOwnProperty("anisotropy")){e.anisotropy=s.anisotropy}if(s.hasOwnProperty("flipY")){e.flipY=!!s.flipY}if(s.hasOwnProperty("srgb")){e.srgb=!!s.srgb}e.type=zn;if(s.hasOwnProperty("type")){e.type=BX[s.type]}else if(s.hasOwnProperty("rgbm")&&s.rgbm){e.type=Vn}else if(t.file&&(t.file.opt&8)!==0){e.type=Wn}}return e}load(t,e,s){if(typeof t==="string"){t={load:t,original:t}}this._getParser(t.original).load(t,e,s)}open(t,e,s){if(!t){return undefined}const i=this._getTextureOptions(s);let n=this._getParser(t).open(t,e,this._device,i);if(n===null){n=new lo(this._device,{width:4,height:4,format:Ls})}else{UX(n);if(e.unswizzledGGGR){s.file.variants.basis.opt&=-9}}return n}patch(t,e){const s=t.resource;if(!s){return}const i=this._getTextureOptions(t);for(const t of Object.keys(i)){s[t]=i[t]}}}const VX="inline";const GX="immersive-vr";const HX="immersive-ar";const WX="viewer";const XX="local";const qX="local-floor";const $X="bounded-floor";const jX="unbounded";const YX="gaze";const KX="screen";const ZX="tracked-pointer";const QX="none";const JX="left";const tq="right";const eq="none";const sq="left";const iq="right";const nq="point";const rq="plane";const aq="mesh";const oq="cpu-optimized";const lq="gpu-optimized";const hq="luminance-alpha";const cq="unsigned-short";const dq="float32";class uq{constructor(t){this._supported=B.browser&&!!window.XRDOMOverlayState;this._root=null;this._manager=t}get supported(){return this._supported}get available(){return this._supported&&this._manager.active&&this._manager._session.domOverlayState!==null}get state(){if(!this._supported||!this._manager.active||!this._manager._session.domOverlayState){return null}return this._manager._session.domOverlayState.type}set root(t){if(!this._supported||this._manager.active){return}this._root=t}get root(){return this._root}}const fq=[];const pq=[];class mq extends at{static{this.EVENT_REMOVE="remove"}static{this.EVENT_RESULT="result"}constructor(t,e,s,i=null){super();this.manager=t;this._xrHitTestSource=e;this._transient=s;this._inputSource=i}remove(){if(!this._xrHitTestSource){return}const t=this.manager.hitTest.sources;const e=t.indexOf(this);if(e!==-1)t.splice(e,1);this.onStop()}onStop(){this._xrHitTestSource.cancel();this._xrHitTestSource=null;this.fire("remove");this.manager.hitTest.fire("remove",this)}update(t){if(this._transient){const e=t.getHitTestResultsForTransientInput(this._xrHitTestSource);for(let t=0;t<e.length;t++){const s=e[t];if(!s.results.length){continue}let i;if(s.inputSource){i=this.manager.input._getByInputSource(s.inputSource)}this.updateHitResults(s.results,i)}}else{const e=t.getHitTestResults(this._xrHitTestSource);if(!e.length){return}this.updateHitResults(e)}}updateHitResults(t,e){if(this._inputSource&&this._inputSource!==e){return}const s=fq.pop()??new It;if(e){s.copy(e.getOrigin())}else{s.copy(this.manager.camera.getPosition())}let i=Infinity;let n=null;const r=fq.pop()??new It;const a=pq.pop()??new Gt;for(let e=0;e<t.length;e++){const o=t[e].getPose(this.manager._referenceSpace);const l=s.distance(o.transform.position);if(l>=i){continue}i=l;n=t[e];r.copy(o.transform.position);a.copy(o.transform.orientation)}this.fire("result",r,a,e||this._inputSource,n);this.manager.hitTest.fire("result",this,r,a,e||this._inputSource,n);fq.push(s);fq.push(r);pq.push(a)}}class _q extends at{static{this.EVENT_AVAILABLE="available"}static{this.EVENT_UNAVAILABLE="unavailable"}static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}static{this.EVENT_RESULT="result"}static{this.EVENT_ERROR="error"}constructor(t){super(),this._supported=B.browser&&!!(window.XRSession&&window.XRSession.prototype.requestHitTestSource),this._available=false,this._checkingAvailability=false,this.sources=[];this.manager=t;if(this._supported){this.manager.on("start",this._onSessionStart,this);this.manager.on("end",this._onSessionEnd,this)}}_onSessionStart(){if(this.manager.session.enabledFeatures){const t=this.manager.session.enabledFeatures.indexOf("hit-test")!==-1;if(!t)return;this._available=t;this.fire("available")}else if(!this._checkingAvailability){this._checkingAvailability=true;this.manager.session.requestReferenceSpace(WX).then((t=>{this.manager.session.requestHitTestSource({space:t}).then((t=>{t.cancel();if(this.manager.active){this._available=true;this.fire("available")}})).catch((()=>{}))})).catch((()=>{}))}}_onSessionEnd(){if(!this._available)return;this._available=false;for(let t=0;t<this.sources.length;t++){this.sources[t].onStop()}this.sources=[];this.fire("unavailable")}start(t={}){if(!this._supported){t.callback?.(new Error("XR HitTest is not supported"),null);return}if(!this._available){t.callback?.(new Error("XR HitTest is not available"),null);return}if(!t.profile&&!t.spaceType){t.spaceType=WX}let e;const s=t.offsetRay;if(s){const t=new DOMPoint(s.origin.x,s.origin.y,s.origin.z,1);const i=new DOMPoint(s.direction.x,s.direction.y,s.direction.z,0);e=new XRRay(t,i)}const i=t.callback;if(t.spaceType){this.manager.session.requestReferenceSpace(t.spaceType).then((s=>{if(!this.manager.session){const t=new Error("XR Session is not started (2)");if(i)i(t);this.fire("error",t);return}this.manager.session.requestHitTestSource({space:s,entityTypes:t.entityTypes||undefined,offsetRay:e}).then((e=>{this._onHitTestSource(e,false,t.inputSource,i)})).catch((t=>{if(i)i(t);this.fire("error",t)}))})).catch((t=>{if(i)i(t);this.fire("error",t)}))}else{this.manager.session.requestHitTestSourceForTransientInput({profile:t.profile,entityTypes:t.entityTypes||undefined,offsetRay:e}).then((e=>{this._onHitTestSource(e,true,t.inputSource,i)})).catch((t=>{if(i)i(t);this.fire("error",t)}))}}_onHitTestSource(t,e,s,i){if(!this.manager.session){t.cancel();const e=new Error("XR Session is not started (3)");if(i)i(e);this.fire("error",e);return}const n=new mq(this.manager,t,e,s??null);this.sources.push(n);if(i)i(null,n);this.fire("add",n)}update(t){if(!this._available){return}for(let e=0;e<this.sources.length;e++){this.sources[e].update(t)}}get supported(){return this._supported}get available(){return this._available}}class gq extends at{static{this.EVENT_TRACKED="tracked"}static{this.EVENT_UNTRACKED="untracked"}constructor(t,e){super(),this._bitmap=null,this._measuredWidth=0,this._trackable=false,this._tracking=false,this._emulated=false,this._pose=null,this._position=new It,this._rotation=new Gt;this._image=t;this._width=e}get image(){return this._image}set width(t){this._width=t}get width(){return this._width}get trackable(){return this._trackable}get tracking(){return this._tracking}get emulated(){return this._emulated}prepare(){if(this._bitmap){return{image:this._bitmap,widthInMeters:this._width}}return createImageBitmap(this._image).then((t=>{this._bitmap=t;return{image:this._bitmap,widthInMeters:this._width}}))}destroy(){this._image=null;this._pose=null;if(this._bitmap){this._bitmap.close();this._bitmap=null}}getPosition(){if(this._pose)this._position.copy(this._pose.transform.position);return this._position}getRotation(){if(this._pose)this._rotation.copy(this._pose.transform.orientation);return this._rotation}}class vq extends at{static{this.EVENT_ERROR="error"}constructor(t){super(),this._supported=B.browser&&!!window.XRImageTrackingResult,this._available=false,this._images=[];this._manager=t;if(this._supported){this._manager.on("start",this._onSessionStart,this);this._manager.on("end",this._onSessionEnd,this)}}add(t,e){if(!this._supported||this._manager.active)return null;const s=new gq(t,e);this._images.push(s);return s}remove(t){if(this._manager.active)return;const e=this._images.indexOf(t);if(e!==-1){t.destroy();this._images.splice(e,1)}}_onSessionStart(){this._manager.session.getTrackedImageScores().then((t=>{this._available=true;for(let e=0;e<t.length;e++){this._images[e]._trackable=t[e]==="trackable"}})).catch((t=>{this._available=false;this.fire("error",t)}))}_onSessionEnd(){this._available=false;for(let t=0;t<this._images.length;t++){const e=this._images[t];e._pose=null;e._measuredWidth=0;if(e._tracking){e._tracking=false;e.fire("untracked")}}}prepareImages(t){if(this._images.length){Promise.all(this._images.map((t=>t.prepare()))).then((e=>{t(null,e)})).catch((e=>{t(e,null)}))}else{t(null,null)}}update(t){if(!this._available)return;const e=t.getImageTrackingResults();const s={};for(let i=0;i<e.length;i++){s[e[i].index]=e[i];const n=this._images[e[i].index];n._emulated=e[i].trackingState==="emulated";n._measuredWidth=e[i].measuredWidthInMeters;n._pose=t.getPose(e[i].imageSpace,this._manager._referenceSpace)}for(let t=0;t<this._images.length;t++){if(this._images[t]._tracking&&!s[t]){this._images[t]._tracking=false;this._images[t].fire("untracked")}else if(!this._images[t]._tracking&&s[t]){this._images[t]._tracking=true;this._images[t].fire("tracked")}}}get supported(){return this._supported}get available(){return this._available}get images(){return this._images}}class yq{constructor(t,e){this._joints=[];this._tip=null;this._index=t;this._hand=e;this._hand._fingers.push(this)}get index(){return this._index}get hand(){return this._hand}get joints(){return this._joints}get tip(){return this._tip}}const Sq=B.browser&&window.XRHand?["thumb-tip","index-finger-tip","middle-finger-tip","ring-finger-tip","pinky-finger-tip"]:[];const xq={};for(let t=0;t<Sq.length;t++){xq[Sq[t]]=true}class Tq{constructor(t,e,s,i=null){this._radius=null;this._localTransform=new Vt;this._worldTransform=new Vt;this._localPosition=new It;this._localRotation=new Gt;this._position=new It;this._rotation=new Gt;this._dirtyLocal=true;this._index=t;this._id=e;this._hand=s;this._finger=i;this._wrist=e==="wrist";this._tip=this._finger&&!!xq[e]}update(t){this._dirtyLocal=true;this._radius=t.radius;this._localPosition.copy(t.transform.position);this._localRotation.copy(t.transform.orientation)}_updateTransforms(){if(this._dirtyLocal){this._dirtyLocal=false;this._localTransform.setTRS(this._localPosition,this._localRotation,It.ONE)}const t=this._hand._manager;const e=t.camera.parent;if(e){this._worldTransform.mul2(e.getWorldTransform(),this._localTransform)}else{this._worldTransform.copy(this._localTransform)}}getPosition(){this._updateTransforms();this._worldTransform.getTranslation(this._position);return this._position}getRotation(){this._updateTransforms();this._rotation.setFromMat4(this._worldTransform);return this._rotation}get id(){return this._id}get index(){return this._index}get hand(){return this._hand}get finger(){return this._finger}get wrist(){return this._wrist}get tip(){return this._tip}get radius(){return this._radius||.005}}let wq=[];const bq=new It;const Eq=new It;const Aq=new It;if(B.browser&&window.XRHand){wq=[["thumb-metacarpal","thumb-phalanx-proximal","thumb-phalanx-distal","thumb-tip"],["index-finger-metacarpal","index-finger-phalanx-proximal","index-finger-phalanx-intermediate","index-finger-phalanx-distal","index-finger-tip"],["middle-finger-metacarpal","middle-finger-phalanx-proximal","middle-finger-phalanx-intermediate","middle-finger-phalanx-distal","middle-finger-tip"],["ring-finger-metacarpal","ring-finger-phalanx-proximal","ring-finger-phalanx-intermediate","ring-finger-phalanx-distal","ring-finger-tip"],["pinky-finger-metacarpal","pinky-finger-phalanx-proximal","pinky-finger-phalanx-intermediate","pinky-finger-phalanx-distal","pinky-finger-tip"]]}class Cq extends at{static{this.EVENT_TRACKING="tracking"}static{this.EVENT_TRACKINGLOST="trackinglost"}constructor(t){super(),this._tracking=false,this._fingers=[],this._joints=[],this._jointsById={},this._tips=[],this._wrist=null;const e=t._xrInputSource.hand;this._manager=t._manager;this._inputSource=t;if(e.get("wrist")){const t=new Tq(0,"wrist",this,null);this._wrist=t;this._joints.push(t);this._jointsById.wrist=t}for(let t=0;t<wq.length;t++){const s=new yq(t,this);for(let i=0;i<wq[t].length;i++){const n=wq[t][i];if(!e.get(n))continue;const r=new Tq(i,n,this,s);this._joints.push(r);this._jointsById[n]=r;if(r.tip){this._tips.push(r);s._tip=r}s._joints.push(r)}}}update(t){const e=this._inputSource._xrInputSource;for(let s=0;s<this._joints.length;s++){const i=this._joints[s];const n=e.hand.get(i._id);if(n){let e;if(t.session.visibilityState!=="hidden"){e=t.getJointPose(n,this._manager._referenceSpace)}if(e){i.update(e);if(i.wrist&&!this._tracking){this._tracking=true;this.fire("tracking")}}else if(i.wrist){if(this._tracking){this._tracking=false;this.fire("trackinglost")}break}}}const s=this._jointsById["thumb-metacarpal"];const i=this._jointsById["thumb-tip"];const n=this._jointsById["index-finger-phalanx-proximal"];const r=this._jointsById["index-finger-tip"];const a=this._jointsById["ring-finger-phalanx-proximal"];const o=this._jointsById["pinky-finger-phalanx-proximal"];if(s&&i&&n&&r&&a&&o){this._inputSource._dirtyRay=true;this._inputSource._rayLocal.origin.lerp(i._localPosition,r._localPosition,.5);let t=s;let e=o;if(this._inputSource.handedness===sq){const s=t;t=e;e=s}bq.sub2(t._localPosition,this._wrist._localPosition);Eq.sub2(e._localPosition,this._wrist._localPosition);Aq.cross(bq,Eq).normalize();bq.lerp(n._localPosition,a._localPosition,.5);bq.sub(this._wrist._localPosition).normalize();this._inputSource._rayLocal.direction.lerp(Aq,bq,.5).normalize()}const l=this._fingerIsClosed(1)&&this._fingerIsClosed(2)&&this._fingerIsClosed(3)&&this._fingerIsClosed(4);if(l){if(!this._inputSource._squeezing){this._inputSource._squeezing=true;this._inputSource.fire("squeezestart");this._manager.input.fire("squeezestart",this._inputSource)}}else{if(this._inputSource._squeezing){this._inputSource._squeezing=false;this._inputSource.fire("squeeze");this._manager.input.fire("squeeze",this._inputSource);this._inputSource.fire("squeezeend");this._manager.input.fire("squeezeend",this._inputSource)}}}_fingerIsClosed(t){const e=this._fingers[t];bq.sub2(e.joints[0]._localPosition,e.joints[1]._localPosition).normalize();Eq.sub2(e.joints[2]._localPosition,e.joints[3]._localPosition).normalize();return bq.dot(Eq)<-.8}getJointById(t){return this._jointsById[t]||null}get fingers(){return this._fingers}get joints(){return this._joints}get tips(){return this._tips}get wrist(){return this._wrist}get tracking(){return this._tracking}}const Pq=new It;const Lq=new Gt;let Dq=0;class Mq extends at{static{this.EVENT_REMOVE="remove"}static{this.EVENT_SELECT="select"}static{this.EVENT_SELECTSTART="selectstart"}static{this.EVENT_SELECTEND="selectend"}static{this.EVENT_SQUEEZE="squeeze"}static{this.EVENT_SQUEEZESTART="squeezestart"}static{this.EVENT_SQUEEZEEND="squeezeend"}static{this.EVENT_HITTESTADD="hittest:add"}static{this.EVENT_HITTESTREMOVE="hittest:remove"}static{this.EVENT_HITTESTRESULT="hittest:result"}constructor(t,e){super(),this._ray=new te,this._rayLocal=new te,this._grip=false,this._hand=null,this._velocitiesAvailable=false,this._velocitiesTimestamp=pt(),this._localTransform=null,this._worldTransform=null,this._position=new It,this._rotation=new Gt,this._localPosition=null,this._localPositionLast=null,this._localRotation=null,this._linearVelocity=null,this._dirtyLocal=true,this._dirtyRay=false,this._selecting=false,this._squeezing=false,this._elementInput=true,this._elementEntity=null,this._hitTestSources=[];this._id=++Dq;this._manager=t;this._xrInputSource=e;if(e.hand){this._hand=new Cq(this)}}get id(){return this._id}get inputSource(){return this._xrInputSource}get targetRayMode(){return this._xrInputSource.targetRayMode}get handedness(){return this._xrInputSource.handedness}get profiles(){return this._xrInputSource.profiles}get grip(){return this._grip}get hand(){return this._hand}get gamepad(){return this._xrInputSource.gamepad||null}get selecting(){return this._selecting}get squeezing(){return this._squeezing}set elementInput(t){if(this._elementInput===t){return}this._elementInput=t;if(!this._elementInput){this._elementEntity=null}}get elementInput(){return this._elementInput}get elementEntity(){return this._elementEntity}get hitTestSources(){return this._hitTestSources}update(t){if(this._hand){this._hand.update(t)}else{const e=this._xrInputSource.gripSpace;if(e){const s=t.getPose(e,this._manager._referenceSpace);if(s){if(!this._grip){this._grip=true;this._localTransform=new Vt;this._worldTransform=new Vt;this._localPositionLast=new It;this._localPosition=new It;this._localRotation=new Gt;this._linearVelocity=new It}const t=pt();const e=(t-this._velocitiesTimestamp)/1e3;this._velocitiesTimestamp=t;this._dirtyLocal=true;this._localPositionLast.copy(this._localPosition);this._localPosition.copy(s.transform.position);this._localRotation.copy(s.transform.orientation);this._velocitiesAvailable=true;if(this._manager.input.velocitiesSupported&&s.linearVelocity){this._linearVelocity.copy(s.linearVelocity)}else if(e>0){Pq.sub2(this._localPosition,this._localPositionLast).divScalar(e);this._linearVelocity.lerp(this._linearVelocity,Pq,.15)}}else{this._velocitiesAvailable=false}}const s=t.getPose(this._xrInputSource.targetRaySpace,this._manager._referenceSpace);if(s){this._dirtyRay=true;this._rayLocal.origin.copy(s.transform.position);this._rayLocal.direction.set(0,0,-1);Lq.copy(s.transform.orientation);Lq.transformVector(this._rayLocal.direction,this._rayLocal.direction)}}}_updateTransforms(){if(this._dirtyLocal){this._dirtyLocal=false;this._localTransform.setTRS(this._localPosition,this._localRotation,It.ONE)}const t=this._manager.camera.parent;if(t){this._worldTransform.mul2(t.getWorldTransform(),this._localTransform)}else{this._worldTransform.copy(this._localTransform)}}_updateRayTransforms(){const t=this._dirtyRay;this._dirtyRay=false;const e=this._manager.camera.parent;if(e){const t=this._manager.camera.parent.getWorldTransform();t.getTranslation(this._position);this._rotation.setFromMat4(t);this._rotation.transformVector(this._rayLocal.origin,this._ray.origin);this._ray.origin.add(this._position);this._rotation.transformVector(this._rayLocal.direction,this._ray.direction)}else if(t){this._ray.origin.copy(this._rayLocal.origin);this._ray.direction.copy(this._rayLocal.direction)}}getPosition(){if(!this._position)return null;this._updateTransforms();this._worldTransform.getTranslation(this._position);return this._position}getLocalPosition(){return this._localPosition}getRotation(){if(!this._rotation)return null;this._updateTransforms();this._rotation.setFromMat4(this._worldTransform);return this._rotation}getLocalRotation(){return this._localRotation}getLinearVelocity(){if(!this._velocitiesAvailable){return null}return this._linearVelocity}getOrigin(){this._updateRayTransforms();return this._ray.origin}getDirection(){this._updateRayTransforms();return this._ray.direction}hitTestStart(t={}){t.inputSource=this;t.profile=this._xrInputSource.profiles[0];const e=t.callback;t.callback=(t,s)=>{if(s)this.onHitTestSourceAdd(s);if(e)e(t,s)};this._manager.hitTest.start(t)}onHitTestSourceAdd(t){this._hitTestSources.push(t);this.fire("hittest:add",t);t.on("result",((e,s,i,n)=>{if(i!==this)return;this.fire("hittest:result",t,e,s,n)}));t.once("remove",(()=>{this.onHitTestSourceRemove(t);this.fire("hittest:remove",t)}))}onHitTestSourceRemove(t){const e=this._hitTestSources.indexOf(t);if(e!==-1)this._hitTestSources.splice(e,1)}}class Iq extends at{static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}static{this.EVENT_SELECT="select"}static{this.EVENT_SELECTSTART="selectstart"}static{this.EVENT_SELECTEND="selectend"}static{this.EVENT_SQUEEZE="squeeze"}static{this.EVENT_SQUEEZESTART="squeezestart"}static{this.EVENT_SQUEEZEEND="squeezeend"}constructor(t){super(),this._inputSources=[],this.velocitiesSupported=false;this.manager=t;this.velocitiesSupported=!!(B.browser&&window.XRPose?.prototype?.hasOwnProperty("linearVelocity"));this._onInputSourcesChangeEvt=t=>{this._onInputSourcesChange(t)};this.manager.on("start",this._onSessionStart,this);this.manager.on("end",this._onSessionEnd,this)}_onSessionStart(){const t=this.manager.session;t.addEventListener("inputsourceschange",this._onInputSourcesChangeEvt);t.addEventListener("select",(t=>{const e=this._getByInputSource(t.inputSource);e.update(t.frame);e.fire("select",t);this.fire("select",e,t)}));t.addEventListener("selectstart",(t=>{const e=this._getByInputSource(t.inputSource);e.update(t.frame);e._selecting=true;e.fire("selectstart",t);this.fire("selectstart",e,t)}));t.addEventListener("selectend",(t=>{const e=this._getByInputSource(t.inputSource);e.update(t.frame);e._selecting=false;e.fire("selectend",t);this.fire("selectend",e,t)}));t.addEventListener("squeeze",(t=>{const e=this._getByInputSource(t.inputSource);e.update(t.frame);e.fire("squeeze",t);this.fire("squeeze",e,t)}));t.addEventListener("squeezestart",(t=>{const e=this._getByInputSource(t.inputSource);e.update(t.frame);e._squeezing=true;e.fire("squeezestart",t);this.fire("squeezestart",e,t)}));t.addEventListener("squeezeend",(t=>{const e=this._getByInputSource(t.inputSource);e.update(t.frame);e._squeezing=false;e.fire("squeezeend",t);this.fire("squeezeend",e,t)}));const e=t.inputSources;for(let t=0;t<e.length;t++){this._addInputSource(e[t])}}_onSessionEnd(){let t=this._inputSources.length;while(t--){const e=this._inputSources[t];this._inputSources.splice(t,1);e.fire("remove");this.fire("remove",e)}const e=this.manager.session;e.removeEventListener("inputsourceschange",this._onInputSourcesChangeEvt)}_onInputSourcesChange(t){for(let e=0;e<t.removed.length;e++){this._removeInputSource(t.removed[e])}for(let e=0;e<t.added.length;e++){this._addInputSource(t.added[e])}}_getByInputSource(t){for(let e=0;e<this._inputSources.length;e++){if(this._inputSources[e].inputSource===t){return this._inputSources[e]}}return null}_addInputSource(t){if(this._getByInputSource(t)){return}const e=new Mq(this.manager,t);this._inputSources.push(e);this.fire("add",e)}_removeInputSource(t){for(let e=0;e<this._inputSources.length;e++){if(this._inputSources[e].inputSource!==t){continue}const s=this._inputSources[e];this._inputSources.splice(e,1);let i=s.hitTestSources.length;while(i--){s.hitTestSources[i].remove()}s.fire("remove");this.fire("remove",s);return}}update(t){for(let e=0;e<this._inputSources.length;e++){this._inputSources[e].update(t)}}get inputSources(){return this._inputSources}}const Rq=new It;const Oq=new It;const Fq=new Vt;const Nq=new Vt;class kq extends at{static{this.EVENT_AVAILABLE="available"}static{this.EVENT_ERROR="error"}constructor(t){super(),this._supported=false,this._available=false,this._lightProbeRequested=false,this._lightProbe=null,this._intensity=0,this._rotation=new Gt,this._color=new bt,this._sphericalHarmonics=new Float32Array(27);this._manager=t;this._manager.on("start",this._onSessionStart,this);this._manager.on("end",this._onSessionEnd,this)}_onSessionStart(){const t=!!this._manager.session.requestLightProbe;if(!t)return;this._supported=true}_onSessionEnd(){this._supported=false;this._available=false;this._lightProbeRequested=false;this._lightProbe=null}start(){let t;if(!this._manager.session){t=new Error("XR session is not running")}if(!t&&this._manager.type!==HX){t=new Error("XR session type is not AR")}if(!t&&!this._supported){t=new Error("light-estimation is not supported")}if(!t&&this._lightProbe||this._lightProbeRequested){t=new Error("light estimation is already requested")}if(t){this.fire("error",t);return}this._lightProbeRequested=true;this._manager.session.requestLightProbe().then((t=>{const e=this._lightProbeRequested;this._lightProbeRequested=false;if(this._manager.active){if(e){this._lightProbe=t}}else{this.fire("error",new Error("XR session is not active"))}})).catch((t=>{this._lightProbeRequested=false;this.fire("error",t)}))}end(){this._lightProbeRequested=false;this._lightProbe=null;this._available=false}update(t){if(!this._lightProbe)return;const e=t.getLightEstimate(this._lightProbe);if(!e)return;if(!this._available){this._available=true;this.fire("available")}const s=e.primaryLightIntensity;this._intensity=Math.max(1,Math.max(s.x,Math.max(s.y,s.z)));Rq.copy(s).mulScalar(1/this._intensity);this._color.set(Rq.x,Rq.y,Rq.z);Rq.set(0,0,0);Oq.copy(e.primaryLightDirection);Fq.setLookAt(Oq,Rq,It.UP);Nq.setFromAxisAngle(It.RIGHT,90);Fq.mul(Nq);this._rotation.setFromMat4(Fq);this._sphericalHarmonics.set(e.sphericalHarmonicsCoefficients)}get supported(){return this._supported}get available(){return this._available}get intensity(){return this._available?this._intensity:null}get color(){return this._available?this._color:null}get rotation(){return this._available?this._rotation:null}get sphericalHarmonics(){return this._available?this._sphericalHarmonics:null}}let Bq=0;class Uq extends at{static{this.EVENT_REMOVE="remove"}static{this.EVENT_CHANGE="change"}constructor(t,e){super(),this._position=new It,this._rotation=new Gt;this._id=++Bq;this._planeDetection=t;this._xrPlane=e;this._lastChangedTime=e.lastChangedTime;this._orientation=e.orientation}destroy(){if(!this._xrPlane)return;this._xrPlane=null;this.fire("remove")}update(t){const e=this._planeDetection._manager;const s=t.getPose(this._xrPlane.planeSpace,e._referenceSpace);if(s){this._position.copy(s.transform.position);this._rotation.copy(s.transform.orientation)}if(this._lastChangedTime!==this._xrPlane.lastChangedTime){this._lastChangedTime=this._xrPlane.lastChangedTime;this.fire("change")}}getPosition(){return this._position}getRotation(){return this._rotation}get id(){return this._id}get orientation(){return this._orientation}get points(){return this._xrPlane.polygon}get label(){return this._xrPlane.semanticLabel||""}}class zq extends at{static{this.EVENT_AVAILABLE="available"}static{this.EVENT_UNAVAILABLE="unavailable"}static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}constructor(t){super(),this._supported=B.browser&&!!window.XRPlane,this._available=false,this._planesIndex=new Map,this._planes=[];this._manager=t;if(this._supported){this._manager.on("start",this._onSessionStart,this);this._manager.on("end",this._onSessionEnd,this)}}_onSessionStart(){if(this._manager.session.enabledFeatures){const t=this._manager.session.enabledFeatures.indexOf("plane-detection")!==-1;if(t){this._available=true;this.fire("available")}}}_onSessionEnd(){for(let t=0;t<this._planes.length;t++){this._planes[t].destroy();this.fire("remove",this._planes[t])}this._planesIndex.clear();this._planes.length=0;if(this._available){this._available=false;this.fire("unavailable")}}update(t){if(!this._available){if(!this._manager.session.enabledFeatures&&t.detectedPlanes.size){this._available=true;this.fire("available")}else{return}}const e=t.detectedPlanes;for(const[t,s]of this._planesIndex){if(e.has(t)){continue}this._planesIndex.delete(t);this._planes.splice(this._planes.indexOf(s),1);s.destroy();this.fire("remove",s)}for(const s of e){let e=this._planesIndex.get(s);if(!e){e=new Uq(this,s);this._planesIndex.set(s,e);this._planes.push(e);e.update(t);this.fire("add",e)}else{e.update(t)}}}get supported(){return this._supported}get available(){return this._available}get planes(){return this._planes}}class Vq extends at{static{this.EVENT_DESTROY="destroy"}static{this.EVENT_CHANGE="change"}static{this.EVENT_PERSIST="persist"}static{this.EVENT_FORGET="forget"}constructor(t,e,s=null){super(),this._position=new It,this._rotation=new Gt,this._uuid=null,this._uuidRequests=null;this._anchors=t;this._xrAnchor=e;this._uuid=s}destroy(){if(!this._xrAnchor)return;const t=this._xrAnchor;this._xrAnchor.delete();this._xrAnchor=null;this.fire("destroy",t,this)}update(t){if(!this._xrAnchor){return}const e=t.getPose(this._xrAnchor.anchorSpace,this._anchors.manager._referenceSpace);if(e){if(this._position.equals(e.transform.position)&&this._rotation.equals(e.transform.orientation)){return}this._position.copy(e.transform.position);this._rotation.copy(e.transform.orientation);this.fire("change")}}getPosition(){return this._position}getRotation(){return this._rotation}persist(t){if(!this._anchors.persistence){t?.(new Error("Persistent Anchors are not supported"),null);return}if(this._uuid){t?.(null,this._uuid);return}if(this._uuidRequests){if(t)this._uuidRequests.push(t);return}this._uuidRequests=[];this._xrAnchor.requestPersistentHandle().then((e=>{this._uuid=e;this._anchors._indexByUuid.set(this._uuid,this);t?.(null,e);for(const t of this._uuidRequests){t(null,e)}this._uuidRequests=null;this.fire("persist",e)})).catch((e=>{t?.(e,null);for(const t of this._uuidRequests){t(e,null)}this._uuidRequests=null}))}forget(t){if(!this._uuid){t?.(new Error("Anchor is not persistent"));return}this._anchors.forget(this._uuid,(e=>{this._uuid=null;t?.(e);this.fire("forget")}))}get uuid(){return this._uuid}get persistent(){return!!this._uuid}}class Gq extends at{static{this.EVENT_AVAILABLE="available"}static{this.EVENT_UNAVAILABLE="unavailable"}static{this.EVENT_ERROR="error"}static{this.EVENT_ADD="add"}static{this.EVENT_DESTROY="destroy"}constructor(t){super(),this._supported=B.browser&&!!window.XRAnchor,this._available=false,this._checkingAvailability=false,this._persistence=B.browser&&!!window?.XRSession?.prototype.restorePersistentAnchor,this._creationQueue=[],this._index=new Map,this._indexByUuid=new Map,this._list=[],this._callbacksAnchors=new Map;this.manager=t;if(this._supported){this.manager.on("start",this._onSessionStart,this);this.manager.on("end",this._onSessionEnd,this)}}_onSessionStart(){const t=this.manager.session.enabledFeatures?.indexOf("anchors")>=0;if(!t)return;this._available=t;this.fire("available")}_onSessionEnd(){if(!this._available)return;this._available=false;for(let t=0;t<this._creationQueue.length;t++){if(!this._creationQueue[t].callback){continue}this._creationQueue[t].callback(new Error("session ended"),null)}this._creationQueue.length=0;this._index.clear();this._indexByUuid.clear();let t=this._list.length;while(t--){this._list[t].destroy()}this._list.length=0;this.fire("unavailable")}_createAnchor(t,e=null){const s=new Vq(this,t,e);this._index.set(t,s);if(e)this._indexByUuid.set(e,s);this._list.push(s);s.once("destroy",this._onAnchorDestroy,this);return s}_onAnchorDestroy(t,e){this._index.delete(t);if(e.uuid)this._indexByUuid.delete(e.uuid);const s=this._list.indexOf(e);if(s!==-1)this._list.splice(s,1);this.fire("destroy",e)}create(t,e,s){if(!this._available){s?.(new Error("Anchors API is not available"),null);return}if(window.XRHitTestResult&&t instanceof XRHitTestResult){const i=t;s=e;if(!this._supported){s?.(new Error("Anchors API is not supported"),null);return}if(!i.createAnchor){s?.(new Error("Creating Anchor from Hit Test is not supported"),null);return}i.createAnchor().then((t=>{const e=this._createAnchor(t);s?.(null,e);this.fire("add",e)})).catch((t=>{s?.(t,null);this.fire("error",t)}))}else{this._creationQueue.push({transform:new XRRigidTransform(t,e),callback:s})}}restore(t,e){if(!this._available){e?.(new Error("Anchors API is not available"),null);return}if(!this._persistence){e?.(new Error("Anchor Persistence is not supported"),null);return}if(!this.manager.active){e?.(new Error("WebXR session is not active"),null);return}this.manager.session.restorePersistentAnchor(t).then((s=>{const i=this._createAnchor(s,t);e?.(null,i);this.fire("add",i)})).catch((t=>{e?.(t,null);this.fire("error",t)}))}forget(t,e){if(!this._available){e?.(new Error("Anchors API is not available"));return}if(!this._persistence){e?.(new Error("Anchor Persistence is not supported"));return}if(!this.manager.active){e?.(new Error("WebXR session is not active"));return}this.manager.session.deletePersistentAnchor(t).then((()=>{e?.(null)})).catch((t=>{e?.(t);this.fire("error",t)}))}update(t){if(!this._available){if(!this.manager.session.enabledFeatures&&!this._checkingAvailability){this._checkingAvailability=true;t.createAnchor(new XRRigidTransform,this.manager._referenceSpace).then((t=>{t.delete();if(this.manager.active){this._available=true;this.fire("available")}})).catch((()=>{}))}return}if(this._creationQueue.length){for(let e=0;e<this._creationQueue.length;e++){const s=this._creationQueue[e];t.createAnchor(s.transform,this.manager._referenceSpace).then((t=>{if(s.callback){this._callbacksAnchors.set(t,s.callback)}})).catch((t=>{if(s.callback){s.callback(t,null)}this.fire("error",t)}))}this._creationQueue.length=0}for(const[e,s]of this._index){if(t.trackedAnchors.has(e)){continue}this._index.delete(e);s.destroy()}for(let e=0;e<this._list.length;e++){this._list[e].update(t)}for(const e of t.trackedAnchors){if(this._index.has(e)){continue}try{const t=e.anchorSpace}catch(t){continue}const s=this._createAnchor(e);s.update(t);const i=this._callbacksAnchors.get(e);if(i){this._callbacksAnchors.delete(e);i(null,s)}this.fire("add",s)}}get supported(){return this._supported}get available(){return this._available}get persistence(){return this._persistence}get uuids(){if(!this._available){return null}if(!this._persistence){return null}if(!this.manager.active){return null}return this.manager.session.persistentAnchors}get list(){return this._list}}class Hq extends at{static{this.EVENT_REMOVE="remove"}static{this.EVENT_CHANGE="change"}constructor(t,e){super(),this._lastChanged=0,this._position=new It,this._rotation=new Gt;this._meshDetection=t;this._xrMesh=e;this._lastChanged=this._xrMesh.lastChangedTime}get xrMesh(){return this._xrMesh}get label(){return this._xrMesh.semanticLabel||""}get vertices(){return this._xrMesh.vertices}get indices(){return this._xrMesh.indices}destroy(){if(!this._xrMesh)return;this._xrMesh=null;this.fire("remove")}update(t){const e=this._meshDetection._manager;const s=t.getPose(this._xrMesh.meshSpace,e._referenceSpace);if(s){this._position.copy(s.transform.position);this._rotation.copy(s.transform.orientation)}if(this._lastChanged!==this._xrMesh.lastChangedTime){this._lastChanged=this._xrMesh.lastChangedTime;this.fire("change")}}getPosition(){return this._position}getRotation(){return this._rotation}}class Wq extends at{static{this.EVENT_AVAILABLE="available"}static{this.EVENT_UNAVAILABLE="unavailable"}static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}constructor(t){super(),this._supported=B.browser&&!!window.XRMesh,this._available=false,this._index=new Map,this._list=[];this._manager=t;if(this._supported){this._manager.on("start",this._onSessionStart,this);this._manager.on("end",this._onSessionEnd,this)}}update(t){if(!this._available){if(!this._manager.session.enabledFeatures&&t.detectedMeshes.size){this._available=true;this.fire("available")}else{return}}for(const e of t.detectedMeshes){let s=this._index.get(e);if(!s){s=new Hq(this,e);this._index.set(e,s);this._list.push(s);s.update(t);this.fire("add",s)}else{s.update(t)}}for(const e of this._index.values()){if(t.detectedMeshes.has(e.xrMesh)){continue}this._removeMesh(e)}}_removeMesh(t){this._index.delete(t.xrMesh);this._list.splice(this._list.indexOf(t),1);t.destroy();this.fire("remove",t)}_onSessionStart(){if(this._manager.session.enabledFeatures){const t=this._manager.session.enabledFeatures.indexOf("mesh-detection")!==-1;if(!t)return;this._available=t;this.fire("available")}}_onSessionEnd(){if(!this._available)return;this._available=false;for(const t of this._index.values()){this._removeMesh(t)}this.fire("unavailable")}get supported(){return this._supported}get available(){return this._available}get meshes(){return this._list}}class Xq extends at{static{this.EVENT_DEPTHRESIZE="depth:resize"}constructor(t,e,s){super(),this._positionData=new Float32Array(3),this._viewport=new Ft,this._projMat=new Vt,this._projViewOffMat=new Vt,this._viewMat=new Vt,this._viewOffMat=new Vt,this._viewMat3=new Rt,this._viewInvMat=new Vt,this._viewInvOffMat=new Vt,this._xrCamera=null,this._textureColor=null,this._textureDepth=null,this._depthInfo=null,this._emptyDepthBuffer=new Uint8Array(32),this._depthMatrix=new Vt;this._manager=t;this._xrView=e;const i=this._manager.app.graphicsDevice;if(this._manager.views.supportedColor){this._xrCamera=this._xrView.camera;if(this._manager.views.availableColor&&this._xrCamera){this._textureColor=new lo(i,{format:Ls,mipmaps:false,addressU:pe,addressV:pe,minFilter:os,magFilter:os,width:this._xrCamera.width,height:this._xrCamera.height,name:`XrView-${this._xrView.eye}-Color`})}}if(this._manager.views.supportedDepth&&this._manager.views.availableDepth){const t=this._manager.views.depthGpuOptimized?as:os;this._textureDepth=new lo(i,{format:this._manager.views.depthPixelFormat,arrayLength:s===1?0:s,mipmaps:false,addressU:pe,addressV:pe,minFilter:t,magFilter:t,width:4,height:4,name:`XrView-${this._xrView.eye}-Depth`});for(let t=0;t<this._textureDepth._levels.length;t++){this._textureDepth._levels[t]=this._emptyDepthBuffer}this._textureDepth.upload()}if(this._textureColor||this._textureDepth){i.on("devicelost",this._onDeviceLost,this)}}get textureColor(){return this._textureColor}get textureDepth(){return this._textureDepth}get depthUvMatrix(){return this._depthMatrix}get depthValueToMeters(){return this._depthInfo?.rawValueToMeters||0}get eye(){return this._xrView.eye}get viewport(){return this._viewport}get projMat(){return this._projMat}get projViewOffMat(){return this._projViewOffMat}get viewOffMat(){return this._viewOffMat}get viewInvOffMat(){return this._viewInvOffMat}get viewMat3(){return this._viewMat3}get positionData(){return this._positionData}update(t,e){this._xrView=e;if(this._manager.views.availableColor){this._xrCamera=this._xrView.camera}const s=t.session.renderState.baseLayer;const i=s.getViewport(this._xrView);this._viewport.x=i.x;this._viewport.y=i.y;this._viewport.z=i.width;this._viewport.w=i.height;this._projMat.set(this._xrView.projectionMatrix);this._viewMat.set(this._xrView.transform.inverse.matrix);this._viewInvMat.set(this._xrView.transform.matrix);this._updateTextureColor();this._updateDepth(t)}_updateTextureColor(){if(!this._manager.views.availableColor||!this._xrCamera||!this._textureColor){return}const t=this._manager.webglBinding;if(!t){return}const e=t.getCameraImage(this._xrCamera);if(!e){return}const s=this._manager.app.graphicsDevice;const i=s.gl;if(!this._frameBufferSource){this._frameBufferSource=i.createFramebuffer();this._frameBuffer=i.createFramebuffer()}else{const t=i.COLOR_ATTACHMENT0;const n=this._xrCamera.width;const r=this._xrCamera.height;s.setFramebuffer(this._frameBufferSource);i.framebufferTexture2D(i.FRAMEBUFFER,t,i.TEXTURE_2D,e,0);s.setFramebuffer(this._frameBuffer);i.framebufferTexture2D(i.FRAMEBUFFER,t,i.TEXTURE_2D,this._textureColor.impl._glTexture,0);i.bindFramebuffer(i.READ_FRAMEBUFFER,this._frameBufferSource);i.bindFramebuffer(i.DRAW_FRAMEBUFFER,this._frameBuffer);i.blitFramebuffer(0,r,n,0,0,0,n,r,i.COLOR_BUFFER_BIT,i.NEAREST)}}_updateDepth(t){if(!this._manager.views.availableDepth||!this._textureDepth){return}const e=this._manager.views.depthGpuOptimized;const s=e?this._manager.webglBinding:t;if(!s){this._depthInfo=null;return}const i=s.getDepthInformation(this._xrView);if(!i){this._depthInfo=null;return}let n=!this._depthInfo!==!i;this._depthInfo=i;const r=this._depthInfo?.width||4;const a=this._depthInfo?.height||4;let o=false;if(this._textureDepth.width!==r||this._textureDepth.height!==a){this._textureDepth._width=r;this._textureDepth._height=a;n=true;o=true}if(n){if(this._depthInfo){this._depthMatrix.data.set(this._depthInfo.normDepthBufferFromNormView.matrix)}else{this._depthMatrix.setIdentity()}}if(this._depthInfo){if(e){if(this._depthInfo.texture){const t=this._manager.app.graphicsDevice.gl;this._textureDepth.impl._glTexture=this._depthInfo.texture;if(this._depthInfo.textureType==="texture-array"){this._textureDepth.impl._glTarget=t.TEXTURE_2D_ARRAY}else{this._textureDepth.impl._glTarget=t.TEXTURE_2D}switch(this._manager.views.depthPixelFormat){case Bs:this._textureDepth.impl._glInternalFormat=t.R32F;this._textureDepth.impl._glPixelType=t.FLOAT;this._textureDepth.impl._glFormat=t.RED;break;case Us:this._textureDepth.impl._glInternalFormat=t.DEPTH_COMPONENT16;this._textureDepth.impl._glPixelType=t.UNSIGNED_SHORT;this._textureDepth.impl._glFormat=t.DEPTH_COMPONENT;break}this._textureDepth.impl._glCreated=true}}else{this._textureDepth._levels[0]=new Uint8Array(this._depthInfo.data);this._textureDepth.upload()}}else{this._textureDepth._levels[0]=this._emptyDepthBuffer;this._textureDepth.upload()}if(o)this.fire("depth:resize",r,a)}updateTransforms(t){if(t){this._viewInvOffMat.mul2(t,this._viewInvMat);this.viewOffMat.copy(this._viewInvOffMat).invert()}else{this._viewInvOffMat.copy(this._viewInvMat);this.viewOffMat.copy(this._viewMat)}this._viewMat3.setFromMat4(this._viewOffMat);this._projViewOffMat.mul2(this._projMat,this._viewOffMat);this._positionData[0]=this._viewInvOffMat.data[12];this._positionData[1]=this._viewInvOffMat.data[13];this._positionData[2]=this._viewInvOffMat.data[14]}_onDeviceLost(){this._frameBufferSource=null;this._frameBuffer=null;this._depthInfo=null}getDepth(t,e){if(this._manager.views.depthGpuOptimized){return null}return this._depthInfo?.getDepthInMeters(t,e)??null}destroy(){this._depthInfo=null;if(this._textureColor){this._textureColor.destroy();this._textureColor=null}if(this._textureDepth){this._textureDepth.destroy();this._textureDepth=null}if(this._frameBufferSource){const t=this._manager.app.graphicsDevice.gl;t.deleteFramebuffer(this._frameBufferSource);this._frameBufferSource=null;t.deleteFramebuffer(this._frameBuffer);this._frameBuffer=null}}}class qq extends at{static{this.EVENT_ADD="add"}static{this.EVENT_REMOVE="remove"}constructor(t){super(),this._index=new Map,this._indexTmp=new Map,this._list=[],this._supportedColor=B.browser&&!!window.XRCamera&&!!window.XRWebGLBinding,this._supportedDepth=B.browser&&!!window.XRDepthInformation,this._availableColor=false,this._availableDepth=false,this._depthUsage="",this._depthFormat="",this._depthFormats={[hq]:Es,[cq]:Us,[dq]:Bs};this._manager=t;this._manager.on("start",this._onSessionStart,this);this._manager.on("end",this._onSessionEnd,this)}get list(){return this._list}get supportedColor(){return this._supportedColor}get supportedDepth(){return this._supportedDepth}get availableColor(){return this._availableColor}get availableDepth(){return this._availableDepth}get depthUsage(){return this._depthUsage}get depthGpuOptimized(){return this._depthUsage===lq}get depthFormat(){return this._depthFormat}get depthPixelFormat(){return this._depthFormats[this._depthFormat]??null}update(t,e){for(let t=0;t<e.length;t++){this._indexTmp.set(e[t].eye,e[t])}for(const[s,i]of this._indexTmp){let n=this._index.get(s);if(!n){n=new Xq(this._manager,i,e.length);this._index.set(s,n);this._list.push(n);n.update(t,i);this.fire("add",n)}else{n.update(t,i)}}for(const[t,e]of this._index){if(this._indexTmp.has(t)){continue}e.destroy();this._index.delete(t);const s=this._list.indexOf(e);if(s!==-1)this._list.splice(s,1);this.fire("remove",e)}this._indexTmp.clear()}get(t){return this._index.get(t)||null}_onSessionStart(){if(this._manager.type!==HX){return}if(!this._manager.session.enabledFeatures){return}this._availableColor=this._manager.session.enabledFeatures.indexOf("camera-access")!==-1;this._availableDepth=this._manager.session.enabledFeatures.indexOf("depth-sensing")!==-1;if(this._availableDepth){const t=this._manager.session;this._depthUsage=t.depthUsage;this._depthFormat=t.depthDataFormat}}_onSessionEnd(){for(const t of this._index.values()){t.destroy()}this._index.clear();this._availableColor=false;this._availableDepth=false;this._depthUsage="";this._depthFormat="";this._list.length=0}}class $q extends at{static{this.EVENT_AVAILABLE="available"}static{this.EVENT_START="start"}static{this.EVENT_END="end"}static{this.EVENT_UPDATE="update"}static{this.EVENT_ERROR="error"}constructor(t){super(),this._supported=B.browser&&!!navigator.xr,this._available={},this._type=null,this._spaceType=null,this._session=null,this._baseLayer=null,this.webglBinding=null,this._referenceSpace=null,this._camera=null,this._localPosition=new It,this._localRotation=new Gt,this._depthNear=.1,this._depthFar=1e3,this._supportedFrameRates=null,this._width=0,this._height=0,this._framebufferScaleFactor=1;this.app=t;this._available[VX]=false;this._available[GX]=false;this._available[HX]=false;this.views=new qq(this);this.domOverlay=new uq(this);this.hitTest=new _q(this);this.imageTracking=new vq(this);this.planeDetection=new zq(this);this.meshDetection=new Wq(this);this.input=new Iq(this);this.lightEstimation=new kq(this);this.anchors=new Gq(this);this.views=new qq(this);if(this._supported){navigator.xr.addEventListener("devicechange",(()=>{this._deviceAvailabilityCheck()}));this._deviceAvailabilityCheck();this.app.graphicsDevice.on("devicelost",this._onDeviceLost,this);this.app.graphicsDevice.on("devicerestored",this._onDeviceRestored,this)}}destroy(){}start(t,e,s,i){let n=i;if(typeof i==="object"){n=i.callback}if(!this._available[e]){if(n)n(new Error("XR is not available"));return}if(this._session){if(n)n(new Error("XR session is already started"));return}this._camera=t;this._camera.camera.xr=this;this._type=e;this._spaceType=s;this._framebufferScaleFactor=i?.framebufferScaleFactor??1;this._setClipPlanes(t.nearClip,t.farClip);const r={requiredFeatures:[s],optionalFeatures:[]};const a=this.app.graphicsDevice;if(a?.isWebGPU){r.requiredFeatures.push("webgpu")}const o=a?.isWebGL2;if(e===HX){r.optionalFeatures.push("light-estimation");r.optionalFeatures.push("hit-test");if(i){if(i.imageTracking&&this.imageTracking.supported){r.optionalFeatures.push("image-tracking")}if(i.planeDetection){r.optionalFeatures.push("plane-detection")}if(i.meshDetection){r.optionalFeatures.push("mesh-detection")}}if(this.domOverlay.supported&&this.domOverlay.root){r.optionalFeatures.push("dom-overlay");r.domOverlay={root:this.domOverlay.root}}if(i&&i.anchors&&this.anchors.supported){r.optionalFeatures.push("anchors")}if(i&&i.depthSensing&&this.views.supportedDepth){r.optionalFeatures.push("depth-sensing");const t=[];const e=[];t.push(lq,oq);e.push(dq,hq,cq);if(i.depthSensing.usagePreference){const e=t.indexOf(i.depthSensing.usagePreference);if(e!==-1)t.splice(e,1);t.unshift(i.depthSensing.usagePreference)}if(i.depthSensing.dataFormatPreference){const t=e.indexOf(i.depthSensing.dataFormatPreference);if(t!==-1)e.splice(t,1);e.unshift(i.depthSensing.dataFormatPreference)}r.depthSensing={usagePreference:t,dataFormatPreference:e}}if(o&&i&&i.cameraColor&&this.views.supportedColor){r.optionalFeatures.push("camera-access")}}r.optionalFeatures.push("hand-tracking");if(i&&i.optionalFeatures){r.optionalFeatures=r.optionalFeatures.concat(i.optionalFeatures)}if(this.imageTracking.supported&&this.imageTracking.images.length){this.imageTracking.prepareImages(((t,i)=>{if(t){if(n)n(t);this.fire("error",t);return}if(i!==null){r.trackedImages=i}this._onStartOptionsReady(e,s,r,n)}))}else{this._onStartOptionsReady(e,s,r,n)}}_onStartOptionsReady(t,e,s,i){navigator.xr.requestSession(t,s).then((t=>{this._onSessionStart(t,e,i)})).catch((t=>{this._camera.camera.xr=null;this._camera=null;this._type=null;this._spaceType=null;if(i)i(t);this.fire("error",t)}))}end(t){if(!this._session){if(t)t(new Error("XR Session is not initialized"));return}this.webglBinding=null;if(t)this.once("end",t);this._session.end()}isAvailable(t){return this._available[t]}_deviceAvailabilityCheck(){for(const t in this._available){this._sessionSupportCheck(t)}}initiateRoomCapture(t){if(!this._session){t(new Error("Session is not active"));return}if(!this._session.initiateRoomCapture){t(new Error("Session does not support manual room capture"));return}this._session.initiateRoomCapture().then((()=>{if(t)t(null)})).catch((e=>{if(t)t(e)}))}updateTargetFrameRate(t,e){if(!this._session?.updateTargetFrameRate){e?.(new Error("unable to update frameRate"));return}this._session.updateTargetFrameRate(t).then((()=>{e?.()})).catch((t=>{e?.(t)}))}_sessionSupportCheck(t){navigator.xr.isSessionSupported(t).then((e=>{if(this._available[t]===e){return}this._available[t]=e;this.fire("available",t,e);this.fire(`available:${t}`,e)})).catch((t=>{this.fire("error",t)}))}_onSessionStart(t,e,s){let i=false;this._session=t;const n=()=>{this.fire("visibility:change",t.visibilityState)};const r=()=>{this._setClipPlanes(this._camera.nearClip,this._camera.farClip)};const a=()=>{if(this._camera){this._camera.off("set_nearClip",r);this._camera.off("set_farClip",r);this._camera.camera.xr=null;this._camera=null}t.removeEventListener("end",a);t.removeEventListener("visibilitychange",n);if(!i)this.fire("end");this._session=null;this._referenceSpace=null;this._width=0;this._height=0;this._type=null;this._spaceType=null;if(this.app.systems){this.app.tick()}};t.addEventListener("end",a);t.addEventListener("visibilitychange",n);this._camera.on("set_nearClip",r);this._camera.on("set_farClip",r);this._createBaseLayer();if(this.session.supportedFrameRates){this._supportedFrameRates=Array.from(this.session.supportedFrameRates)}else{this._supportedFrameRates=null}this._session.addEventListener("frameratechange",(()=>{this.fire("frameratechange",this._session?.frameRate)}));t.requestReferenceSpace(e).then((t=>{this._referenceSpace=t;this.app.tick();if(s)s(null);this.fire("start")})).catch((e=>{i=true;t.end();if(s)s(e);this.fire("error",e)}))}_setClipPlanes(t,e){if(this._depthNear===t&&this._depthFar===e){return}this._depthNear=t;this._depthFar=e;if(!this._session){return}this._session.updateRenderState({depthNear:this._depthNear,depthFar:this._depthFar})}_createBaseLayer(){const t=this.app.graphicsDevice;const e=t.maxPixelRatio/window.devicePixelRatio*this._framebufferScaleFactor;this._baseLayer=new XRWebGLLayer(this._session,t.gl,{alpha:true,depth:true,stencil:true,framebufferScaleFactor:e,antialias:false});if(t?.isWebGL2&&window.XRWebGLBinding){try{this.webglBinding=new XRWebGLBinding(this._session,t.gl)}catch(t){this.fire("error",t)}}this._session.updateRenderState({baseLayer:this._baseLayer,depthNear:this._depthNear,depthFar:this._depthFar})}_onDeviceLost(){if(!this._session){return}if(this.webglBinding){this.webglBinding=null}this._baseLayer=null;this._session.updateRenderState({baseLayer:this._baseLayer,depthNear:this._depthNear,depthFar:this._depthFar})}_onDeviceRestored(){if(!this._session){return}setTimeout((()=>{this.app.graphicsDevice.gl.makeXRCompatible().then((()=>{this._createBaseLayer()})).catch((t=>{this.fire("error",t)}))}),0)}update(t){if(!this._session)return false;const e=t.session.renderState.baseLayer.framebufferWidth;const s=t.session.renderState.baseLayer.framebufferHeight;if(this._width!==e||this._height!==s){this._width=e;this._height=s;this.app.graphicsDevice.setResolution(e,s)}const i=t.getViewerPose(this._referenceSpace);if(!i)return false;const n=this.views.list.length;this.views.update(t,i.views);const r=i.transform.position;const a=i.transform.orientation;this._localPosition.set(r.x,r.y,r.z);this._localRotation.set(a.x,a.y,a.z,a.w);if(n===0&&this.views.list.length>0){const t=new Vt;const e=this.views.list[0];t.copy(e.projMat);const s=t.data;const i=2*Math.atan(1/s[5])*180/Math.PI;const n=s[5]/s[0];const r=s[14]/(s[10]+1);const a=s[14]/(s[10]-1);const o=false;const l=this._camera.camera;l.setXrProperties({aspectRatio:n,farClip:r,fov:i,horizontalFov:o,nearClip:a})}this._camera.camera._node.setLocalPosition(this._localPosition);this._camera.camera._node.setLocalRotation(this._localRotation);this.input.update(t);if(this._type===HX){if(this.hitTest.supported){this.hitTest.update(t)}if(this.lightEstimation.supported){this.lightEstimation.update(t)}if(this.imageTracking.supported){this.imageTracking.update(t)}if(this.anchors.supported){this.anchors.update(t)}if(this.planeDetection.supported){this.planeDetection.update(t)}if(this.meshDetection.supported){this.meshDetection.update(t)}}this.fire("update",t);return true}get supported(){return this._supported}get active(){return!!this._session}get type(){return this._type}get spaceType(){return this._spaceType}get session(){return this._session}get frameRate(){return this._session?.frameRate??null}get supportedFrameRates(){return this._supportedFrameRates}get framebufferScaleFactor(){return this._framebufferScaleFactor}set fixedFoveation(t){if((this._baseLayer?.fixedFoveation??null)!==null){if(this.app.graphicsDevice.samples>1);this._baseLayer.fixedFoveation=t}}get fixedFoveation(){return this._baseLayer?.fixedFoveation??null}get camera(){return this._camera?this._camera.entity:null}get visibilityState(){if(!this._session){return null}return this._session.visibilityState}}class jq extends TR{constructor(t,e={}){super(t);const s=new bR;s.graphicsDevice=e.graphicsDevice??this.createDevice(t,e);this.addComponentSystems(s);this.addResourceHandles(s);s.elementInput=e.elementInput;s.keyboard=e.keyboard;s.mouse=e.mouse;s.touch=e.touch;s.gamepads=e.gamepads;s.scriptPrefix=e.scriptPrefix;s.assetPrefix=e.assetPrefix;s.scriptsOrder=e.scriptsOrder;s.soundManager=new Mp;s.lightmapper=XR;s.batchManager=hy;s.xr=$q;this.init(s)}createDevice(t,e){if(!e.graphicsDeviceOptions){e.graphicsDeviceOptions={}}if(B.browser&&!!navigator.xr){e.graphicsDeviceOptions.xrCompatible=true}e.graphicsDeviceOptions.alpha=e.graphicsDeviceOptions.alpha||false;return new Fc(t,e.graphicsDeviceOptions)}addComponentSystems(t){t.componentSystems=[bz,CN,Rk,kO,nF,hB,az,IV,NV,oG,lV,lF,QU,Mz,bk,EF,Qz,sV,TV,sB,kk,AV,uG]}addResourceHandles(t){t.resourceHandlers=[gG,WH,XH,qH,HW,BW,zX,rX,OW,YH,QW,WW,sW,RW,eW,JW,IW,iW,aW,KH,hX,sX,nX,tW,CW]}}class Yq extends at{constructor(t,e){super(),this._assets=new Set,this._loadingAssets=new Set,this._waitingAssets=new Set,this._loading=false,this._loaded=false,this._failed=[];this._registry=e;t.forEach((t=>{if(t instanceof qA){if(!t.registry){t.registry=e}this._assets.add(t)}else{const s=e.get(t);if(s){this._assets.add(s)}else{this._waitForAsset(t)}}}))}destroy(){this._registry.off("load",this._onLoad);this._registry.off("error",this._onError);this._waitingAssets.forEach((t=>{this._registry.off(`add:${t}`,this._onAddAsset)}));this.off("progress");this.off("load")}_assetHasDependencies(t){return t.type==="model"&&t.file?.url&&t.file.url&&t.file.url.match(/.json$/g)}load(t,e){if(this._loading){return}this._loading=true;this._callback=t;this._scope=e;this._registry.on("load",this._onLoad,this);this._registry.on("error",this._onError,this);let s=false;this._assets.forEach((t=>{if(!t.loaded){s=true;if(this._assetHasDependencies(t)){this._registry.loadFromUrl(t.file.url,t.type,((e,s)=>{if(e){this._onError(e,t);return}this._onLoad(t)}))}this._loadingAssets.add(t);this._registry.add(t)}}));this._loadingAssets.forEach((t=>{if(!this._assetHasDependencies(t)){this._registry.load(t)}}));if(!s&&this._waitingAssets.size===0){this._loadingComplete()}}ready(t,e=this){if(this._loaded){t.call(e,Array.from(this._assets))}else{this.once("load",(s=>{t.call(e,s)}))}}_loadingComplete(){if(this._loaded)return;this._loaded=true;this._registry.off("load",this._onLoad,this);this._registry.off("error",this._onError,this);if(this._failed.length){if(this._callback){this._callback.call(this._scope,"Failed to load some assets",this._failed)}this.fire("error",this._failed)}else{if(this._callback){this._callback.call(this._scope)}this.fire("load",Array.from(this._assets))}}_onLoad(t){if(this._loadingAssets.has(t)){this.fire("progress",t);this._loadingAssets.delete(t)}if(this._loadingAssets.size===0){setTimeout((()=>{this._loadingComplete()}),0)}}_onError(t,e){if(this._loadingAssets.has(e)){this._failed.push(e);this._loadingAssets.delete(e)}if(this._loadingAssets.size===0){setTimeout((()=>{this._loadingComplete()}),0)}}_onAddAsset(t){this._waitingAssets.delete(t);this._assets.add(t);if(!t.loaded){this._loadingAssets.add(t);this._registry.load(t)}}_waitForAsset(t){this._waitingAssets.add(t);this._registry.once(`add:${t}`,this._onAddAsset,this)}}const Kq=4096;const Zq=512;class Qq{constructor(t,e,s,i){this.canvas=document.createElement("canvas");this.canvas.width=e;this.canvas.height=s;this.texture=new lo(t,{name:i,format:Hs,width:e,height:s,mipmaps:true,minFilter:ds,magFilter:os,addressU:pe,addressV:pe,levels:[this.canvas]});this.ctx=this.canvas.getContext("2d",{alpha:true})}destroy(){this.texture.destroy()}clear(t){const{width:e,height:s}=this.canvas;this.ctx.clearRect(0,0,e,s);this.ctx.fillStyle=t;this.ctx.fillRect(0,0,e,s)}}class Jq extends at{constructor(t,e={}){super();this.type="bitmap";this.app=t;this.intensity=0;this.fontWeight=e.fontWeight||"normal";this.fontSize=parseInt(e.fontSize,10);this.glyphSize=this.fontSize;this.fontName=e.fontName||"Arial";this.color=e.color||new bt(1,1,1);this.padding=e.padding||0;this.width=Math.min(Kq,e.width||Zq);this.height=Math.min(Kq,e.height||Zq);this.atlases=[];this.chars="";this.data={}}createTextures(t){const e=this._normalizeCharsSet(t);if(e.length!==this.chars.length){this._renderAtlas(e);return}for(let t=0;t<e.length;t++){if(e[t]!==this.chars[t]){this._renderAtlas(e);return}}}updateTextures(t){const e=this._normalizeCharsSet(t);const s=[];for(let t=0;t<e.length;t++){const i=e[t];if(!this.data.chars[i]){s.push(i)}}if(s.length>0){this._renderAtlas(this.chars.concat(s))}}destroy(){this.atlases.forEach((t=>t.destroy()));this.chars=null;this.color=null;this.data=null;this.fontName=null;this.fontSize=null;this.glyphSize=null;this.intensity=null;this.atlases=null;this.type=null;this.fontWeight=null}_colorToRgbString(t,e){let s;const i=Math.round(255*t.r);const n=Math.round(255*t.g);const r=Math.round(255*t.b);if(e){s=`rgba(${i}, ${n}, ${r}, ${t.a})`}else{s=`rgb(${i}, ${n}, ${r})`}return s}renderCharacter(t,e,s,i,n){t.fillStyle=n;t.fillText(e,s,i)}_getAtlas(t){if(t>=this.atlases.length){this.atlases[t]=new Qq(this.app.graphicsDevice,this.width,this.height,`font-atlas-${this.fontName}-${t}`)}return this.atlases[t]}_renderAtlas(t){this.chars=t;const e=this.width;const s=this.height;const i=this._colorToRgbString(this.color,false);const n=this.color.a;this.color.a=1/255;const r=this._colorToRgbString(this.color,true);this.color.a=n;const a="center";const o="alphabetic";let l=0;let h=this._getAtlas(l++);h.clear(r);this.data=this._createJson(this.chars,this.fontName,e,s);const c=nt.getSymbols(this.chars.join(""));let d=0;let u=0;const f={};for(let t=0;t<c.length;t++){const e=c[t];f[e]=this._getTextMetrics(e);d=Math.max(d,f[e].height);u=Math.max(u,f[e].descent)}this.glyphSize=Math.max(this.glyphSize,d);const p=this.glyphSize+this.padding*2;const m=this.glyphSize+this.padding*2;const _=this.glyphSize/2+this.padding;const g=m-u-this.padding;let v=0;let y=0;for(let t=0;t<c.length;t++){const n=c[t];const d=nt.getCodePoint(c[t]);let S=this.fontSize;h.ctx.font=`${this.fontWeight} ${S.toString()}px ${this.fontName}`;h.ctx.textAlign=a;h.ctx.textBaseline=o;let x=h.ctx.measureText(n).width;if(x>S){S=this.fontSize*this.fontSize/x;h.ctx.font=`${this.fontWeight} ${S.toString()}px ${this.fontName}`;x=this.fontSize}this.renderCharacter(h.ctx,n,v+_,y+g,i);const T=this.padding+(this.glyphSize-x)/2;const w=-this.padding+f[n].descent-u;const b=x;this._addChar(this.data,n,d,v,y,p,m,T,w,b,l-1,e,s);v+=p;if(v+p>e){v=0;y+=m;if(y+m>s){h=this._getAtlas(l++);h.clear(r);y=0}}}this.atlases.splice(l).forEach((t=>t.destroy()));this.atlases.forEach((t=>t.texture.upload()));this.fire("render")}_createJson(t,e,s,i){const n={version:3,intensity:this.intensity,info:{face:e,width:s,height:i,maps:[{width:s,height:i}]},chars:{}};return n}_addChar(t,e,s,i,n,r,a,o,l,h,c,d,u){if(t.info.maps.length<c+1){t.info.maps.push({width:d,height:u})}const f=this.fontSize/32;t.chars[e]={id:s,letter:e,x:i,y:n,width:r,height:a,xadvance:h/f,xoffset:o/f,yoffset:(l+this.padding)/f,scale:f,range:1,map:c,bounds:[0,0,r/f,a/f]}}_normalizeCharsSet(t){const e=this.app.systems.element.getUnicodeConverter();if(e){t=e(t)}const s={};const i=nt.getSymbols(t);for(let t=0;t<i.length;t++){const e=i[t];if(s[e])continue;s[e]=e}const n=Object.keys(s);return n.sort()}_getTextMetrics(t){const e=document.createElement("span");e.id="content-span";e.innerHTML=t;const s=document.createElement("div");s.id="content-block";s.style.display="inline-block";s.style.width="1px";s.style.height="0px";const i=document.createElement("div");i.appendChild(e);i.appendChild(s);i.style.font=`${this.fontSize}px ${this.fontName}`;const n=document.body;n.appendChild(i);let r=-1;let a=-1;let o=-1;try{s.style["vertical-align"]="baseline";r=s.offsetTop-e.offsetTop;s.style["vertical-align"]="bottom";o=s.offsetTop-e.offsetTop;a=o-r}finally{document.body.removeChild(i)}return{ascent:r,descent:a,height:o}}get textures(){return this.atlases.map((t=>t.texture))}}const t$=[];const e$=[[],[],[]];class s$ extends Yc{constructor(t,e){super(t),this.viewBindGroups=[];this.renderer=e}destroy(){this.viewBindGroups.forEach((t=>{t.defaultUniformBuffer.destroy();t.destroy()}));this.viewBindGroups.length=0}update(t,e,s,i){this.camera=t;this.scene=e;this.layers=s;this.mapping=i}execute(){const t=this.device;const{renderer:e,camera:s,scene:i,layers:n,mapping:r,renderTarget:a}=this;const o=i.layers.layerList;const l=i.layers.subLayerEnabled;const h=i.layers.subLayerList;for(let c=0;c<o.length;c++){const d=o[c];if(n&&n.indexOf(d)<0){continue}if(d.enabled&&l[c]){if(d.camerasSet.has(s.camera)){const n=h[c];if(d._clearDepthBuffer){e.clear(s.camera,false,true,false)}const o=d.meshInstances;for(let t=0;t<o.length;t++){const e=o[t];if(e.pick&&e.transparent===n){t$.push(e);r.set(e.id,e)}}if(t$.length>0){const n=i.clusteredLightingEnabled;if(n){const t=e.worldClustersAllocator.empty;t.activate()}e.setCameraUniforms(s.camera,a);if(t.supportsUniformBuffers){e.setupViewUniformBuffers(this.viewBindGroups,e.viewUniformFormat,e.viewBindGroupFormat,null)}e.renderForward(s.camera,a,t$,e$,gg,(e=>{t.setBlendState(Ro.NOBLEND)}));t$.length=0}}}}}}const i$=new Set;const n$=new Ft;class r${constructor(t,e,s){this.renderTarget=null;this.mapping=new Map;this.deviceValid=true;this.renderer=t.renderer;this.device=t.graphicsDevice;this.renderPass=new s$(this.device,t.renderer);this.width=0;this.height=0;this.resize(e,s);this.device.on("destroy",(()=>{this.deviceValid=false}))}getSelection(t,e,s=1,i=1){const n=this.device;if(n.isWebGPU){return[]}e=this.renderTarget.height-(e+i);const r=this.sanitizeRect(t,e,s,i);n.setRenderTarget(this.renderTarget);n.updateBegin();const a=new Uint8Array(4*r.z*r.w);n.readPixels(r.x,r.y,r.z,r.w,a);n.updateEnd();return this.decodePixels(a,this.mapping)}getSelectionAsync(t,e,s=1,i=1){if(this.device?.isWebGL2){e=this.renderTarget.height-(e+i)}const n=this.sanitizeRect(t,e,s,i);return this.renderTarget.colorBuffer.read(n.x,n.y,n.z,n.w,{renderTarget:this.renderTarget,immediate:true}).then((t=>this.decodePixels(t,this.mapping)))}sanitizeRect(t,e,s,i){const n=this.renderTarget.width;const r=this.renderTarget.height;t=wt.clamp(Math.floor(t),0,n-1);e=wt.clamp(Math.floor(e),0,r-1);s=Math.floor(Math.max(s,1));s=Math.min(s,n-t);i=Math.floor(Math.max(i,1));i=Math.min(i,r-e);return n$.set(t,e,s,i)}decodePixels(t,e){const s=[];if(this.deviceValid){const i=t.length;for(let s=0;s<i;s+=4){const i=t[s+0];const n=t[s+1];const r=t[s+2];const a=t[s+3];const o=(a<<24|i<<16|n<<8|r)>>>0;if(o!==4294967295){i$.add(e.get(o))}}i$.forEach((t=>{if(t){s.push(t)}}));i$.clear()}return s}allocateRenderTarget(){const t=new lo(this.device,{format:Ds,width:this.width,height:this.height,mipmaps:false,minFilter:as,magFilter:as,addressU:pe,addressV:pe,name:"pick"});this.renderTarget=new il({colorBuffer:t,depth:true})}releaseRenderTarget(){if(this.renderTarget){this.renderTarget.destroyTextureBuffers();this.renderTarget.destroy();this.renderTarget=null}}prepare(t,e,s){if(s instanceof kx){s=[s]}if(!this.renderTarget||this.width!==this.renderTarget.width||this.height!==this.renderTarget.height){this.releaseRenderTarget();this.allocateRenderTarget()}this.mapping.clear();const i=this.renderPass;i.init(this.renderTarget);i.colorOps.clearValue=bt.WHITE;i.colorOps.clear=true;i.depthStencilOps.clearDepth=true;i.update(t,e,s,this.mapping);i.render()}resize(t,e){this.width=Math.floor(t);this.height=Math.floor(e)}}class a$ extends JA{constructor(t){super(t,"scenesettings")}load(t,e){MW.load(t,this.maxRetries,e)}open(t,e){return e.settings}}let o$,l$;const h$=new It;const c$=new It;const d$=new te;const u$=new te;const f$=new te;d$.end=new It;u$.end=new It;f$.end=new It;const p$=new It;const m$=new It;const _$=new It;const g$=new It;const v$=new It;const y$=new It;const S$=new It;const x$=new It;const T$=new It;const w$=new It;const b$=new It;const E$=new It;const A$=new It;const C$=new It;const P$=new It;const L$=new It;const D$=new It;const M$=new It;const I$=new It;const R$=new It;const O$=new Ft;function F$(t,e,s){return b$.cross(t,e).dot(s)}function N$(t,e,s){p$.sub2(e,t);m$.sub2(s[0],t);_$.sub2(s[1],t);g$.sub2(s[2],t);y$.cross(g$,p$);let i=m$.dot(y$);let n;let r;if(i>=0){n=-_$.dot(y$);if(n<0){return-1}r=F$(p$,_$,m$);if(r<0){return-1}const t=1/(n+i+r);S$.copy(s[0]).mulScalar(n*t);x$.copy(s[1]).mulScalar(i*t);T$.copy(s[2]).mulScalar(r*t);w$.copy(S$).add(x$).add(T$)}else{v$.sub2(s[3],t);n=v$.dot(y$);if(n<0){return-1}r=F$(p$,m$,v$);if(r<0){return-1}i=-i;const e=1/(n+i+r);S$.copy(s[0]).mulScalar(n*e);x$.copy(s[3]).mulScalar(i*e);T$.copy(s[2]).mulScalar(r*e);w$.copy(S$).add(x$).add(T$)}if(p$.sub2(s[0],s[2]).lengthSq()<1e-4*1e-4)return-1;if(p$.sub2(s[1],s[3]).lengthSq()<1e-4*1e-4)return-1;return w$.sub(t).lengthSq()}class k${constructor(t,e,s){this.event=t;this.element=e;this.camera=s;this._stopPropagation=false}stopPropagation(){this._stopPropagation=true;if(this.event){this.event.stopImmediatePropagation();this.event.stopPropagation()}}}class B$ extends k${constructor(t,e,s,i,n,r,a){super(t,e,s);this.x=i;this.y=n;this.ctrlKey=t.ctrlKey||false;this.altKey=t.altKey||false;this.shiftKey=t.shiftKey||false;this.metaKey=t.metaKey||false;this.button=t.button;if(np.isPointerLocked()){this.dx=t.movementX||t.webkitMovementX||t.mozMovementX||0;this.dy=t.movementY||t.webkitMovementY||t.mozMovementY||0}else{this.dx=i-r;this.dy=n-a}this.wheelDelta=0;if(t.type==="wheel"){if(t.deltaY>0){this.wheelDelta=1}else if(t.deltaY<0){this.wheelDelta=-1}}}}class U$ extends k${constructor(t,e,s,i,n,r){super(t,e,s);this.touches=t.touches;this.changedTouches=t.changedTouches;this.x=i;this.y=n;this.touch=r}}class z$ extends k${constructor(t,e,s,i){super(t,e,s);this.inputSource=i}}class V${constructor(t,e){this._app=null;this._attached=false;this._target=null;this._enabled=true;this._lastX=0;this._lastY=0;this._upHandler=this._handleUp.bind(this);this._downHandler=this._handleDown.bind(this);this._moveHandler=this._handleMove.bind(this);this._wheelHandler=this._handleWheel.bind(this);this._touchstartHandler=this._handleTouchStart.bind(this);this._touchendHandler=this._handleTouchEnd.bind(this);this._touchcancelHandler=this._touchendHandler;this._touchmoveHandler=this._handleTouchMove.bind(this);this._sortHandler=this._sortElements.bind(this);this._elements=[];this._hoveredElement=null;this._pressedElement=null;this._touchedElements={};this._touchesForWhichTouchLeaveHasFired={};this._selectedElements={};this._selectedPressedElements={};this._useMouse=!e||e.useMouse!==false;this._useTouch=!e||e.useTouch!==false;this._useXr=!e||e.useXr!==false;this._selectEventsAttached=false;if(B.touch){this._clickedEntities={}}this.attach(t)}set enabled(t){this._enabled=t}get enabled(){return this._enabled}set app(t){this._app=t}get app(){return this._app||hA()}attach(t){if(this._attached){this._attached=false;this.detach()}this._target=t;this._attached=true;const e=B.passiveEvents?{passive:true}:false;if(this._useMouse){window.addEventListener("mouseup",this._upHandler,e);window.addEventListener("mousedown",this._downHandler,e);window.addEventListener("mousemove",this._moveHandler,e);window.addEventListener("wheel",this._wheelHandler,e)}if(this._useTouch&&B.touch){this._target.addEventListener("touchstart",this._touchstartHandler,e);this._target.addEventListener("touchend",this._touchendHandler,false);this._target.addEventListener("touchmove",this._touchmoveHandler,false);this._target.addEventListener("touchcancel",this._touchcancelHandler,false)}this.attachSelectEvents()}attachSelectEvents(){if(!this._selectEventsAttached&&this._useXr&&this.app&&this.app.xr&&this.app.xr.supported){if(!this._clickedEntities){this._clickedEntities={}}this._selectEventsAttached=true;this.app.xr.on("start",this._onXrStart,this)}}detach(){if(!this._attached)return;this._attached=false;const t=B.passiveEvents?{passive:true}:false;if(this._useMouse){window.removeEventListener("mouseup",this._upHandler,t);window.removeEventListener("mousedown",this._downHandler,t);window.removeEventListener("mousemove",this._moveHandler,t);window.removeEventListener("wheel",this._wheelHandler,t)}if(this._useTouch){this._target.removeEventListener("touchstart",this._touchstartHandler,t);this._target.removeEventListener("touchend",this._touchendHandler,false);this._target.removeEventListener("touchmove",this._touchmoveHandler,false);this._target.removeEventListener("touchcancel",this._touchcancelHandler,false)}if(this._selectEventsAttached){this._selectEventsAttached=false;this.app.xr.off("start",this._onXrStart,this);this.app.xr.off("end",this._onXrEnd,this);this.app.xr.off("update",this._onXrUpdate,this);this.app.xr.input.off("selectstart",this._onSelectStart,this);this.app.xr.input.off("selectend",this._onSelectEnd,this);this.app.xr.input.off("remove",this._onXrInputRemove,this)}this._target=null}addElement(t){if(this._elements.indexOf(t)===-1){this._elements.push(t)}}removeElement(t){const e=this._elements.indexOf(t);if(e!==-1){this._elements.splice(e,1)}}_handleUp(t){if(!this._enabled)return;if(np.isPointerLocked()){return}this._calcMouseCoords(t);this._onElementMouseEvent("mouseup",t)}_handleDown(t){if(!this._enabled)return;if(np.isPointerLocked()){return}this._calcMouseCoords(t);this._onElementMouseEvent("mousedown",t)}_handleMove(t){if(!this._enabled)return;this._calcMouseCoords(t);this._onElementMouseEvent("mousemove",t);this._lastX=o$;this._lastY=l$}_handleWheel(t){if(!this._enabled)return;this._calcMouseCoords(t);this._onElementMouseEvent("mousewheel",t)}_determineTouchedElements(t){const e={};const s=this.app.systems.camera.cameras;for(let i=s.length-1;i>=0;i--){const n=s[i];let r=0;const a=t.changedTouches.length;for(let s=0;s<a;s++){if(e[t.changedTouches[s].identifier]){r++;continue}const i=yp(t.changedTouches[s]);const a=this._getTargetElementByCoords(n,i.x,i.y);if(a){r++;e[t.changedTouches[s].identifier]={element:a,camera:n,x:i.x,y:i.y}}}if(r===a){break}}return e}_handleTouchStart(t){if(!this._enabled)return;const e=this._determineTouchedElements(t);for(let s=0,i=t.changedTouches.length;s<i;s++){const i=t.changedTouches[s];const n=e[i.identifier];const r=this._touchedElements[i.identifier];if(n&&(!r||n.element!==r.element)){this._fireEvent(t.type,new U$(t,n.element,n.camera,n.x,n.y,i));this._touchesForWhichTouchLeaveHasFired[i.identifier]=false}}for(const t in e){this._touchedElements[t]=e[t]}}_handleTouchEnd(t){if(!this._enabled)return;const e=this.app.systems.camera.cameras;for(const t in this._clickedEntities){delete this._clickedEntities[t]}for(let s=0,i=t.changedTouches.length;s<i;s++){const i=t.changedTouches[s];const n=this._touchedElements[i.identifier];if(!n){continue}const r=n.element;const a=n.camera;const o=n.x;const l=n.y;delete this._touchedElements[i.identifier];delete this._touchesForWhichTouchLeaveHasFired[i.identifier];const h=yp(i);for(let s=e.length-1;s>=0;s--){const n=this._getTargetElementByCoords(e[s],h.x,h.y);if(n===r){if(!this._clickedEntities[r.entity.getGuid()]){this._fireEvent("click",new U$(t,r,a,o,l,i));this._clickedEntities[r.entity.getGuid()]=Date.now()}}}this._fireEvent(t.type,new U$(t,r,a,o,l,i))}}_handleTouchMove(t){t.preventDefault();if(!this._enabled)return;const e=this._determineTouchedElements(t);for(let s=0,i=t.changedTouches.length;s<i;s++){const i=t.changedTouches[s];const n=e[i.identifier];const r=this._touchedElements[i.identifier];if(r){const e=yp(i);if((!n||n.element!==r.element)&&!this._touchesForWhichTouchLeaveHasFired[i.identifier]){this._fireEvent("touchleave",new U$(t,r.element,r.camera,e.x,e.y,i));this._touchesForWhichTouchLeaveHasFired[i.identifier]=true}this._fireEvent("touchmove",new U$(t,r.element,r.camera,e.x,e.y,i))}}}_onElementMouseEvent(t,e){let s=null;const i=this._hoveredElement;this._hoveredElement=null;const n=this.app.systems.camera.cameras;let r;for(let t=n.length-1;t>=0;t--){r=n[t];s=this._getTargetElementByCoords(r,o$,l$);if(s){break}}this._hoveredElement=s;if((t==="mousemove"||t==="mouseup")&&this._pressedElement){this._fireEvent(t,new B$(e,this._pressedElement,r,o$,l$,this._lastX,this._lastY))}else if(s){this._fireEvent(t,new B$(e,s,r,o$,l$,this._lastX,this._lastY));if(t==="mousedown"){this._pressedElement=s}}if(i!==this._hoveredElement){if(i){this._fireEvent("mouseleave",new B$(e,i,r,o$,l$,this._lastX,this._lastY))}if(this._hoveredElement){this._fireEvent("mouseenter",new B$(e,this._hoveredElement,r,o$,l$,this._lastX,this._lastY))}}if(t==="mouseup"&&this._pressedElement){if(this._pressedElement===this._hoveredElement){const t=this._hoveredElement.entity.getGuid();let s=!this._clickedEntities;if(this._clickedEntities){const e=this._clickedEntities[t]||0;const i=Date.now()-e;s=i>300;delete this._clickedEntities[t]}if(s){this._fireEvent("click",new B$(e,this._hoveredElement,r,o$,l$,this._lastX,this._lastY))}}this._pressedElement=null}}_onXrStart(){this.app.xr.on("end",this._onXrEnd,this);this.app.xr.on("update",this._onXrUpdate,this);this.app.xr.input.on("selectstart",this._onSelectStart,this);this.app.xr.input.on("selectend",this._onSelectEnd,this);this.app.xr.input.on("remove",this._onXrInputRemove,this)}_onXrEnd(){this.app.xr.off("update",this._onXrUpdate,this);this.app.xr.input.off("selectstart",this._onSelectStart,this);this.app.xr.input.off("selectend",this._onSelectEnd,this);this.app.xr.input.off("remove",this._onXrInputRemove,this)}_onXrUpdate(){if(!this._enabled)return;const t=this.app.xr.input.inputSources;for(let e=0;e<t.length;e++){this._onElementSelectEvent("selectmove",t[e],null)}}_onXrInputRemove(t){const e=this._selectedElements[t.id];if(e){t._elementEntity=null;this._fireEvent("selectleave",new z$(null,e,null,t))}delete this._selectedElements[t.id];delete this._selectedPressedElements[t.id]}_onSelectStart(t,e){if(!this._enabled)return;this._onElementSelectEvent("selectstart",t,e)}_onSelectEnd(t,e){if(!this._enabled)return;this._onElementSelectEvent("selectend",t,e)}_onElementSelectEvent(t,e,s){let i;const n=this._selectedElements[e.id];let r;const a=this.app.systems.camera.cameras;let o;if(e.elementInput){f$.set(e.getOrigin(),e.getDirection());for(let t=a.length-1;t>=0;t--){o=a[t];i=this._getTargetElementByRay(f$,o);if(i){break}}}e._elementEntity=i||null;if(i){this._selectedElements[e.id]=i;r=i}else{delete this._selectedElements[e.id]}if(n!==r){if(n)this._fireEvent("selectleave",new z$(s,n,o,e));if(r)this._fireEvent("selectenter",new z$(s,r,o,e))}const l=this._selectedPressedElements[e.id];if(t==="selectmove"&&l){this._fireEvent("selectmove",new z$(s,l,o,e))}if(t==="selectstart"){this._selectedPressedElements[e.id]=r;if(r)this._fireEvent("selectstart",new z$(s,r,o,e))}if(!e.elementInput&&l){delete this._selectedPressedElements[e.id];if(n){this._fireEvent("selectend",new z$(s,l,o,e))}}if(t==="selectend"&&e.elementInput){delete this._selectedPressedElements[e.id];if(l){this._fireEvent("selectend",new z$(s,l,o,e))}if(l&&l===n){this._fireEvent("click",new z$(s,l,o,e))}}}_fireEvent(t,e){let s=e.element;while(true){s.fire(t,e);if(e._stopPropagation){break}if(!s.entity.parent){break}s=s.entity.parent.element;if(!s){break}}}_calcMouseCoords(t){const e=this._target.getBoundingClientRect();const s=Math.floor(e.left);const i=Math.floor(e.top);o$=t.clientX-s;l$=t.clientY-i}_sortElements(t,e){const s=this.app.scene.layers.sortTransparentLayers(t.layers,e.layers);if(s!==0)return s;if(t.screen&&!e.screen){return-1}if(!t.screen&&e.screen){return 1}if(!t.screen&&!e.screen){return 0}if(t.screen.screen.screenSpace&&!e.screen.screen.screenSpace){return-1}if(e.screen.screen.screenSpace&&!t.screen.screen.screenSpace){return 1}return e.drawOrder-t.drawOrder}_getTargetElementByCoords(t,e,s){const i=this._calculateRayScreen(e,s,t,d$)?d$:null;const n=this._calculateRay3d(e,s,t,u$)?u$:null;return this._getTargetElement(t,i,n)}_getTargetElementByRay(t,e){d$.origin.copy(t.origin);d$.direction.copy(t.direction);d$.end.copy(d$.direction).mulScalar(e.farClip*2).add(d$.origin);const s=d$;const i=e.worldToScreen(s.origin,h$);const n=this._calculateRayScreen(i.x,i.y,e,u$)?u$:null;return this._getTargetElement(e,n,s)}_getTargetElement(t,e,s){let i=null;let n=Infinity;this._elements.sort(this._sortHandler);for(let r=0,a=this._elements.length;r<a;r++){const a=this._elements[r];if(!a.layers.some((e=>t.layersSet.has(e)))){continue}if(a.screen&&a.screen.screen.screenSpace){if(!e){continue}const t=this._checkElement(e,a,true);if(t>=0){i=a;break}}else{if(!s){continue}const t=this._checkElement(s,a,false);if(t>=0){if(t<n){i=a;n=t}if(a.screen){i=a;break}}}}return i}_calculateRayScreen(t,e,s,i){const n=this.app.graphicsDevice.width;const r=this.app.graphicsDevice.height;const a=s.rect.z*n;const o=s.rect.w*r;const l=s.rect.x*n;const h=l+a;const c=(1-s.rect.y)*r;const d=c-o;let u=t*n/this._target.clientWidth;let f=e*r/this._target.clientHeight;if(u>=l&&u<=h&&f<=c&&f>=d){u=n*(u-l)/a;f=r*(f-d)/o;f=r-f;i.origin.set(u,f,1);i.direction.set(0,0,-1);i.end.copy(i.direction).mulScalar(2).add(i.origin);return true}return false}_calculateRay3d(t,e,s,i){const n=this._target.clientWidth;const r=this._target.clientHeight;const a=s.rect.z*n;const o=s.rect.w*r;const l=s.rect.x*n;const h=l+a;const c=(1-s.rect.y)*r;const d=c-o;let u=t;let f=e;if(t>=l&&t<=h&&e<=c&&f>=d){u=n*(u-l)/a;f=r*(f-d)/o;s.screenToWorld(u,f,s.nearClip,h$);s.screenToWorld(u,f,s.farClip,c$);i.origin.copy(h$);i.direction.set(0,0,-1);i.end.copy(c$);return true}return false}_checkElement(t,e,s){if(e.maskedBy){if(this._checkElement(t,e.maskedBy.element,s)<0){return-1}}let i;if(s){i=V$.calculateScaleToScreen(e)}else{i=V$.calculateScaleToWorld(e)}const n=V$.buildHitCorners(e,s?e.screenCorners:e.worldCorners,i);return N$(t.origin,t.end,n)}static buildHitCorners(t,e,s){let i=e;const n=t.entity&&t.entity.button;if(n){const e=t.entity.button.hitPadding||O$;A$.copy(t.entity.up);C$.copy(A$).mulScalar(-1);L$.copy(t.entity.right);P$.copy(L$).mulScalar(-1);A$.mulScalar(e.w*s.y);C$.mulScalar(e.y*s.y);L$.mulScalar(e.z*s.x);P$.mulScalar(e.x*s.x);D$.copy(i[0]).add(C$).add(P$);M$.copy(i[1]).add(C$).add(L$);I$.copy(i[2]).add(A$).add(L$);R$.copy(i[3]).add(A$).add(P$);i=[D$,M$,I$,R$]}if(s.x<0){const t=i[2].x;const e=i[0].x;i[0].x=t;i[1].x=e;i[2].x=e;i[3].x=t}if(s.y<0){const t=i[2].y;const e=i[0].y;i[0].y=t;i[1].y=t;i[2].y=e;i[3].y=e}if(s.z<0){const t=i[2].x;const e=i[2].y;const s=i[2].z;i[2].x=i[0].x;i[2].y=i[0].y;i[2].z=i[0].z;i[0].x=t;i[0].y=e;i[0].z=s}return i}static calculateScaleToScreen(t){let e=t.entity;const s=t.screen.screen.scale;E$.set(s,s,s);while(e&&!e.screen){E$.mul(e.getLocalScale());e=e.parent}return E$}static calculateScaleToWorld(t){let e=t.entity;E$.set(1,1,1);while(e){E$.mul(e.getLocalScale());e=e.parent}return E$}}Ot.prototype.scale=Ot.prototype.mulScalar;It.prototype.scale=It.prototype.mulScalar;Ft.prototype.scale=Ft.prototype.mulScalar;const G$=Es;const H$=As;const W$=Cs;const X$=Ps;const q$=Ls;const $$=Ds;const j$=Gs;const Y$=Hs;const K$=Ce;const Z$=Pe;const Q$=Ce;const J$=Pe;const tj="1.51";const ej="1.55";const sj="1.56";const ij="1.57";const nj="1.58";const rj="1.60";const aj="1.62";const oj="1.65";const lj="1.70";const hj="2.1";const cj="2.3";const dj="2.5";const uj="2.6";const fj="2.7";const pj="2.8";const mj=new Ft;function _j(t,e){return Vv.fromGeometry(t,new xw(e))}function gj(t,e){return Vv.fromGeometry(t,new _E(e))}function vj(t,e){return Vv.fromGeometry(t,new Sw(e))}function yj(t,e){return Vv.fromGeometry(t,new gE(e))}function Sj(t,e){return Vv.fromGeometry(t,new fE(e))}function xj(t,e){return Vv.fromGeometry(t,new pE(e))}function Tj(t,e){return Vv.fromGeometry(t,new mE(e))}function wj(t,e,s={}){const i=new gw;i.positions=e;i.normals=s.normals;i.tangents=s.tangents;i.colors=s.colors;i.uvs=s.uvs;i.uvs1=s.uvs1;i.blendIndices=s.blendIndices;i.blendWeights=s.blendWeights;i.indices=s.indices;return Vv.fromGeometry(t,i,s)}function bj(t,e,s,i,n){let r;if(n){const s=e?e.width:t.width;const i=e?e.height:t.height;r=mj.set(n.x*s,n.y*i,n.z*s,n.w*i)}Iv(t,e,i,r)}Object.defineProperties(il.prototype,{_glFrameBuffer:{get:function(){return this.impl._glFrameBuffer},set:function(t){}}});Object.defineProperty(Qo,"defaultInstancingFormat",{get:function(){return null}});Object.defineProperties(lo.prototype,{rgbm:{get:function(){return this.type===Vn},set:function(t){this.type=t?Vn:zn}},swizzleGGGR:{get:function(){return this.type===Wn},set:function(t){this.type=t?Wn:zn}},_glTexture:{get:function(){return this.impl._glTexture}}});Object.defineProperty(el.prototype,"boneLimit",{get:function(){return 1024}});Object.defineProperty(el.prototype,"webgl2",{get:function(){return this.isWebGL2}});Object.defineProperty(el.prototype,"textureFloatHighPrecision",{get:function(){return true}});Object.defineProperty(el.prototype,"extBlendMinmax",{get:function(){return true}});Object.defineProperty(el.prototype,"extTextureHalfFloat",{get:function(){return true}});Object.defineProperty(el.prototype,"extTextureLod",{get:function(){return true}});Object.defineProperty(el.prototype,"textureHalfFloatFilterable",{get:function(){return true}});Object.defineProperty(el.prototype,"supportsMrt",{get:function(){return true}});Object.defineProperty(el.prototype,"supportsVolumeTextures",{get:function(){return true}});Object.defineProperty(el.prototype,"supportsInstancing",{get:function(){return true}});Object.defineProperty(el.prototype,"textureHalfFloatUpdatable",{get:function(){return true}});Object.defineProperty(el.prototype,"extTextureFloat",{get:function(){return true}});Object.defineProperty(el.prototype,"extStandardDerivatives",{get:function(){return true}});Ro.DEFAULT=Object.freeze(new Ro);const Ej=new Ro;const Aj=new Uo;el.prototype.setBlendFunction=function(t,e){const s=this.blendState;Ej.copy(s);Ej.setColorBlend(s.colorOp,t,e);Ej.setAlphaBlend(s.alphaOp,t,e);this.setBlendState(Ej)};el.prototype.setBlendFunctionSeparate=function(t,e,s,i){const n=this.blendState;Ej.copy(n);Ej.setColorBlend(n.colorOp,t,e);Ej.setAlphaBlend(n.alphaOp,s,i);this.setBlendState(Ej)};el.prototype.setBlendEquation=function(t){const e=this.blendState;Ej.copy(e);Ej.setColorBlend(t,e.colorSrcFactor,e.colorDstFactor);Ej.setAlphaBlend(t,e.alphaSrcFactor,e.alphaDstFactor);this.setBlendState(Ej)};el.prototype.setBlendEquationSeparate=function(t,e){const s=this.blendState;Ej.copy(s);Ej.setColorBlend(t,s.colorSrcFactor,s.colorDstFactor);Ej.setAlphaBlend(e,s.alphaSrcFactor,s.alphaDstFactor);this.setBlendState(Ej)};el.prototype.setColorWrite=function(t,e,s,i){const n=this.blendState;Ej.copy(n);Ej.setColorWrite(t,e,s,i);this.setBlendState(Ej)};el.prototype.getBlending=function(){return this.blendState.blend};el.prototype.setBlending=function(t){Ej.copy(this.blendState);Ej.blend=t;this.setBlendState(Ej)};el.prototype.setDepthWrite=function(t){Aj.copy(this.depthState);Aj.write=t;this.setDepthState(Aj)};el.prototype.setDepthFunc=function(t){Aj.copy(this.depthState);Aj.func=t;this.setDepthState(Aj)};el.prototype.setDepthTest=function(t){Aj.copy(this.depthState);Aj.test=t;this.setDepthState(Aj)};el.prototype.getCullMode=function(){return this.cullMode};const Cj=mb;const Pj=_b;const Lj=wb;const Dj=new Proxy({},{get(t,e){return yv.get(hA().graphicsDevice,cr).get(e)},set(t,e,s){yv.get(hA().graphicsDevice,cr).set(e,s);return true}});Object.defineProperty(hb.prototype,"defaultMaterial",{get:function(){return Hv(hA().graphicsDevice)}});Object.defineProperty(hb.prototype,"fogColor",{set:function(t){this.fog.color=t},get:function(){return this.fog.color}});Object.defineProperty(hb.prototype,"fogEnd",{set:function(t){this.fog.end=t},get:function(){return this.fog.end}});Object.defineProperty(hb.prototype,"fogStart",{set:function(t){this.fog.start=t},get:function(){return this.fog.start}});Object.defineProperty(hb.prototype,"fogDensity",{set:function(t){this.fog.density=t},get:function(){return this.fog.density}});Object.defineProperty(hb.prototype,"toneMapping",{set:function(t){},get:function(){return undefined}});Object.defineProperty(hb.prototype,"gammaCorrection",{set:function(t){},get:function(){return undefined}});Object.defineProperty(hb.prototype,"rendering",{set:function(t){},get:function(){return undefined}});Object.defineProperty(zx.prototype,"_meshInstances",{get:function(){return null}});Object.defineProperty(hb.prototype,"drawCalls",{get:function(){return null}});["128","64","32","16","8","4"].forEach(((t,e)=>{Object.defineProperty(hb.prototype,`skyboxPrefiltered${t}`,{get:function(){return this._prefilteredCubemaps[e]},set:function(t){this._prefilteredCubemaps[e]=t;this.updateShaders=true}})}));Object.defineProperty(hb.prototype,"models",{get:function(){if(!this._models){this._models=[]}return this._models}});function Mj(t,e,s=""){Object.defineProperty(t.prototype,e,{set:function(t){},get:function(){return undefined}})}Mj(kx,"renderTarget");Mj(kx,"onPreCull");Mj(kx,"onPreRender");Mj(kx,"onPreRenderOpaque");Mj(kx,"onPreRenderTransparent");Mj(kx,"onPostCull");Mj(kx,"onPostRender");Mj(kx,"onPostRenderOpaque");Mj(kx,"onPostRenderTransparent");Mj(kx,"onDrawCall");Mj(kx,"layerReference");Mj(LV,"onPreCull","Use Scene#EVENT_PRECULL event instead.");Mj(LV,"onPostCull","Use Scene#EVENT_POSTCULL event instead.");Mj(LV,"onPreRender","Use Scene#EVENT_PRERENDER event instead.");Mj(LV,"onPostRender","Use Scene#EVENT_POSTRENDER event instead.");Mj(LV,"onPreRenderLayer","Use Scene#EVENT_PRERENDER_LAYER event instead.");Mj(LV,"onPostRenderLayer","Use Scene#EVENT_POSTRENDER_LAYER event instead.");Cx.prototype.renderComposition=function(t){hA().renderComposition(t)};sy.prototype.syncAabb=function(){};tT.prototype.getTarget=function(t){return this.targets[t]};By.prototype.getChildren=function(){return this.children};By.prototype.getName=function(){return this.name};By.prototype.getPath=function(){return this.path};By.prototype.getRoot=function(){return this.root};By.prototype.getParent=function(){return this.parent};By.prototype.setName=function(t){this.name=t};Object.defineProperty(wS.prototype,"shader",{set:function(t){},get:function(){return null}});Object.defineProperty(wS.prototype,"blend",{set:function(t){this.blendState.blend=t},get:function(){return this.blendState.blend}});Object.defineProperty(Qb.prototype,"shininess",{get:function(){return this.gloss*100},set:function(t){this.gloss=t*.01}});Object.defineProperty(Qb.prototype,"useGammaTonemap",{get:function(){return this.useTonemap},set:function(t){this.useTonemap=t}});Object.defineProperty(Qb.prototype,"anisotropy",{get:function(){const t=Math.sign(Math.cos(this.anisotropyRotation*wt.DEG_TO_RAD*2));return this.anisotropyIntensity*t},set:function(t){this.anisotropyIntensity=Math.abs(t);if(t>=0){this.anisotropyRotation=0}else{this.anisotropyRotation=90}}});function Ij(t,e){Object.defineProperty(Qb.prototype,e,{get:function(){return this[t]},set:function(e){this[t]=e}})}function Rj(t){Object.defineProperty(Qb.prototype,t,{get:function(){return true},set:function(t){}})}Rj("sheenTint");Rj("diffuseTint");Rj("emissiveTint");Rj("ambientTint");Ij("specularTint","specularMapTint");Ij("aoVertexColor","aoMapVertexColor");Ij("diffuseVertexColor","diffuseMapVertexColor");Ij("specularVertexColor","specularMapVertexColor");Ij("emissiveVertexColor","emissiveMapVertexColor");Ij("metalnessVertexColor","metalnessMapVertexColor");Ij("glossVertexColor","glossMapVertexColor");Ij("opacityVertexColor","opacityMapVertexColor");Ij("lightVertexColor","lightMapVertexColor");Ij("sheenGloss","sheenGlossiess");Ij("clearCoatGloss","clearCostGlossiness");function Oj(t,e){if(t!=="pass"){Object.defineProperty(Ob.prototype,t,{get:function(){return this.litOptions[e||t]},set:function(s){this.litOptions[e||t]=s}})}}Oj("refraction","useRefraction");const Fj=new wb;const Nj=Object.getOwnPropertyNames(Fj);for(const t in Nj){Oj(Nj[t])}jA.prototype.getAssetById=function(t){return this.get(t)};Object.defineProperty(Mq.prototype,"ray",{get:function(){return this._rayLocal}});Object.defineProperty(Mq.prototype,"position",{get:function(){return this._localPosition}});Object.defineProperty(Mq.prototype,"rotation",{get:function(){return this._localRotation}});const kj="keydown";const Bj="keyup";const Uj="mousedown";const zj="mousemove";const Vj="mouseup";const Gj="mousewheel";const Hj="touchstart";const Wj="touchend";const Xj="touchmove";const qj="touchcancel";const $j="gamepadconnected";const jj="gamepaddisconnected";const Yj="select";const Kj="selectstart";const Zj="selectend";Object.defineProperty(V$.prototype,"wheel",{get:function(){return this.wheelDelta*-2}});Object.defineProperty(ip.prototype,"wheel",{get:function(){return this.wheelDelta*-2}});const Qj=DF;const Jj=MF;const tY=IF;const eY=RF;const sY=OF;const iY=FF;const nY=NF;const rY=kF;const aY=BF;const oY=UF;const lY=zF;TR.prototype.isFullscreen=function(){return!!document.fullscreenElement};TR.prototype.enableFullscreen=function(t,e,s){t=t||this.graphicsDevice.canvas;const i=function(){e();document.removeEventListener("fullscreenchange",i)};const n=function(){s();document.removeEventListener("fullscreenerror",n)};if(e){document.addEventListener("fullscreenchange",i,false)}if(s){document.addEventListener("fullscreenerror",n,false)}if(t.requestFullscreen){t.requestFullscreen(Element.ALLOW_KEYBOARD_INPUT)}else{s()}};TR.prototype.disableFullscreen=function(t){const e=function(){t();document.removeEventListener("fullscreenchange",e)};if(t){document.addEventListener("fullscreenchange",e,false)}document.exitFullscreen()};TR.prototype.getSceneUrl=function(t){const e=this.scenes.find(t);if(e){return e.url}return null};TR.prototype.loadScene=function(t,e){this.scenes.loadScene(t,e)};TR.prototype.loadSceneHierarchy=function(t,e){this.scenes.loadSceneHierarchy(t,e)};TR.prototype.loadSceneSettings=function(t,e){this.scenes.loadSceneSettings(t,e)};aB.prototype.setVisible=function(t){this.enabled=t};Object.defineProperty(mz.prototype,"bodyType",{get:function(){return this.type},set:function(t){this.type=t}});mz.prototype.syncBodyToEntity=function(){this._updateDynamic()};bz.prototype.setGravity=function(){if(arguments.length===1){this.gravity.copy(arguments[0])}else{this.gravity.set(arguments[0],arguments[1],arguments[2])}};class hY{constructor(t){this._frameIndex=0;this._frameTimings=[];this._timings=[];this._prevTimings=[];this.unitsName="ms";this.decimalPlaces=1;this.enabled=true;t.on("frameupdate",this.begin.bind(this,"update"));t.on("framerender",this.mark.bind(this,"render"));t.on("frameend",this.mark.bind(this,"other"))}begin(t){if(!this.enabled){return}if(this._frameIndex<this._frameTimings.length){this._frameTimings.splice(this._frameIndex)}const e=this._prevTimings;this._prevTimings=this._timings;this._timings=this._frameTimings;this._frameTimings=e;this._frameIndex=0;this.mark(t)}mark(t){if(!this.enabled){return}const e=pt();if(this._frameIndex>0){const t=this._frameTimings[this._frameIndex-1];t[1]=e-t[1]}else if(this._timings.length>0){const t=this._timings[this._timings.length-1];t[1]=e-t[1]}if(this._frameIndex>=this._frameTimings.length){this._frameTimings.push([t,e])}else{const s=this._frameTimings[this._frameIndex];s[0]=t;s[1]=e}this._frameIndex++}get timings(){return this._timings.slice(0,-1).map((t=>t[1]))}}class cY{constructor(t){this.device=t;t.gpuProfiler.enabled=true;this.enabled=true;this.unitsName="ms";this.decimalPlaces=1;this._timings=[]}get timings(){this._timings[0]=this.device.gpuProfiler._frameTime;return this._timings}}class dY{constructor(t,e,s,i,n){this.app=t;this.values=[];this.statNames=e;if(this.statNames.length>3){this.statNames.length=3}this.unitsName=i;this.decimalPlaces=s;this.multiplier=n||1;const r=(t,e)=>t.split(".").reduce(((t,e)=>t?t[e]:null),e||this);t.on("frameupdate",(t=>{for(let t=0;t<this.statNames.length;t++){this.values[t]=r(this.statNames[t],this.app.stats)*this.multiplier}}))}get timings(){return this.values}}class uY{constructor(t,e,s,i,n){this.app=e;this.name=t;this.device=e.graphicsDevice;this.timer=n;this.watermark=s;this.enabled=false;this.textRefreshRate=i;this.avgTotal=0;this.avgTimer=0;this.avgCount=0;this.timingText="";this.texture=null;this.yOffset=0;this.cursor=0;this.sample=new Uint8ClampedArray(4);this.sample.set([0,0,0,255]);this.counter=0;this.app.on("frameupdate",this.update,this)}destroy(){this.app.off("frameupdate",this.update,this)}loseContext(){if(this.timer&&typeof this.timer.loseContext==="function"){this.timer.loseContext()}}update(t){const e=this.timer.timings;const s=e.reduce(((t,e)=>t+e),0);this.avgTotal+=s;this.avgTimer+=t;this.avgCount++;if(this.avgTimer>this.textRefreshRate){this.timingText=(this.avgTotal/this.avgCount).toFixed(this.timer.decimalPlaces);this.avgTimer=0;this.avgTotal=0;this.avgCount=0}if(this.enabled){let t=0;const s=1.5*this.watermark;for(let i=0;i<e.length;++i){t+=Math.floor(e[i]/s*255);this.sample[i]=t}this.sample[3]=this.watermark/s*255;const i=this.texture.lock();i.set(this.sample,(this.cursor+this.yOffset*this.texture.width)*4);this.texture.unlock();this.cursor++;if(this.cursor===this.texture.width){this.cursor=0}}}render(t,e,s,i,n){t.quad(e+i,s,-i,n,this.enabled?this.cursor:0,this.enabled?.5+this.yOffset:this.texture.height-1,-i,0,this.texture,0)}}class fY{constructor(t,e){const s=t=>{t.font='10px "Lucida Console", Monaco, monospace';t.textAlign="left";t.textBaseline="alphabetic"};const i=t=>t==="."||t.length===1&&t.charCodeAt(0)>=48&&t.charCodeAt(0)<=57;const n=document.createElement("canvas");const r=n.getContext("2d",{alpha:true});s(r);const a=new Map;const o=5;const l=512;let h=o;let c=o;e.forEach((t=>{const e=r.measureText(t);const s=Math.ceil(-e.actualBoundingBoxLeft);const i=Math.ceil(e.actualBoundingBoxRight);const n=Math.ceil(e.actualBoundingBoxAscent);const d=Math.ceil(e.actualBoundingBoxDescent);const u=s+i;const f=n+d;if(h+u+o>=l){h=o;c+=16}a.set(t,{l:s,r:i,a:n,d:d,w:u,h:f,x:h,y:c});h+=u+o}));n.width=512;n.height=wt.nextPowerOfTwo(c+16+o);s(r);r.fillStyle="rgb(0, 0, 0)";r.fillRect(0,0,n.width,n.height);a.forEach(((t,e)=>{r.fillStyle=i(e)?"rgb(255, 255, 255)":"rgb(170, 170, 170)";r.fillText(e,t.x-t.l,t.y+t.a)}));this.placements=a;const d=r.getImageData(0,0,n.width,n.height).data;for(let t=0;t<d.length;t+=4){d[t+3]=d[t+0];d[t+0]=255;d[t+1]=255;d[t+2]=255}this.texture=new lo(t,{name:"mini-stats-word-atlas",width:n.width,height:n.height,mipmaps:false,minFilter:as,magFilter:as,levels:[d]})}destroy(){this.texture.destroy();this.texture=null}render(t,e,s,i){const n=this.placements.get(e);if(n){const e=1;t.quad(s+n.l-e,i-n.d+e,n.w+e*2,n.h+e*2,n.x-e,this.texture.height-n.y-n.h-e,undefined,undefined,this.texture,1);return n.w}return 0}}const pY=`\n\tattribute vec3 vertex_position;\n\tattribute vec4 vertex_texCoord0;\n\tvarying vec4 uv0;\n\tvarying float wordFlag;\n\tvoid main(void) {\n\t\tgl_Position = vec4(vertex_position.xy * 2.0 - 1.0, 0.5, 1.0);\n\t\tuv0 = vertex_texCoord0;\n\t\twordFlag = vertex_position.z;\n\t}\n`;const mY=`\n\tattribute vertex_position: vec3f;\n\tattribute vertex_texCoord0: vec4f;\n\tvarying uv0: vec4f;\n\tvarying wordFlag: f32;\n\t@vertex fn vertexMain(input : VertexInput) -> VertexOutput {\n\t\tvar output : VertexOutput;\n\t\toutput.position = vec4(input.vertex_position.xy * 2.0 - 1.0, 0.5, 1.0);\n\t\toutput.uv0 = input.vertex_texCoord0;\n\t\toutput.wordFlag = input.vertex_position.z;\n\t\treturn output;\n\t}\n`;const _Y=`\n\tvarying vec4 uv0;\n\tvarying float wordFlag;\n\tuniform vec4 clr;\n\tuniform sampler2D graphTex;\n\tuniform sampler2D wordsTex;\n\tvoid main (void) {\n\t\tvec4 graphSample = texture2D(graphTex, uv0.xy);\n\t\tvec4 graph;\n\t\tif (uv0.w < graphSample.r)\n\t\t\tgraph = vec4(0.7, 0.2, 0.2, 1.0);\n\t\telse if (uv0.w < graphSample.g)\n\t\t\tgraph = vec4(0.2, 0.7, 0.2, 1.0);\n\t\telse if (uv0.w < graphSample.b)\n\t\t\tgraph = vec4(0.2, 0.2, 0.7, 1.0);\n\t\telse\n\t\t\tgraph = vec4(0.0, 0.0, 0.0, 1.0 - 0.25 * sin(uv0.w * 3.14159));\n\t\tvec4 words = texture2D(wordsTex, vec2(uv0.x, 1.0 - uv0.y));\n\t\tgl_FragColor = mix(graph, words, wordFlag) * clr;\n\t}\n`;const gY=`\n\tvarying uv0: vec4f;\n\tvarying wordFlag: f32;\n\tuniform clr: vec4f;\n\tvar graphTex : texture_2d<f32>;\n\tvar graphTex_sampler : sampler;\n\tvar wordsTex : texture_2d<f32>;\n\tvar wordsTex_sampler : sampler;\n\t@fragment fn fragmentMain(input : FragmentInput) -> FragmentOutput {\n\t\tvar uv0: vec4f = input.uv0;\n\t\tvar graphSample: vec4f = textureSample(graphTex, graphTex_sampler, uv0.xy);\n\t\tvar graph: vec4f;\n\t\tif (uv0.w < graphSample.r) {\n\t\t\tgraph = vec4f(0.7, 0.2, 0.2, 1.0);\n\t\t} else if (uv0.w < graphSample.g) {\n\t\t\tgraph = vec4f(0.2, 0.7, 0.2, 1.0);\n\t\t} else if (uv0.w < graphSample.b) {\n\t\t\tgraph = vec4f(0.2, 0.2, 0.7, 1.0);\n\t\t} else {\n\t\t\tgraph = vec4f(0.0, 0.0, 0.0, 1.0 - 0.25 * sin(uv0.w * 3.14159));\n\t\t}\n\t\tvar words: vec4f = textureSample(wordsTex, wordsTex_sampler, vec2f(uv0.x, 1.0 - uv0.y));\n\t\tvar output: FragmentOutput;\n\t\toutput.color = mix(graph, words, input.wordFlag) * uniform.clr;\n\t\treturn output;\n\t}\n`;class vY{constructor(t,e=512){const s=new Qo(t,[{semantic:Ki,components:3,type:vr},{semantic:nn,components:4,type:vr}]);const i=new Uint16Array(e*6);for(let t=0;t<e;++t){i[t*6+0]=t*4;i[t*6+1]=t*4+1;i[t*6+2]=t*4+2;i[t*6+3]=t*4;i[t*6+4]=t*4+2;i[t*6+5]=t*4+3}this.device=t;this.buffer=new qo(t,s,e*4,{usage:Xe});this.data=new Float32Array(this.buffer.numBytes/4);this.indexBuffer=new qc(t,xs,e*6,He,i);this.prim={type:$i,indexed:true,base:0,baseVertex:0,count:0};this.quads=0;this.mesh=new Vv(t);this.mesh.vertexBuffer=this.buffer;this.mesh.indexBuffer[0]=this.indexBuffer;this.mesh.primitive=[this.prim];const n=new dw({uniqueName:"MiniStats",vertexGLSL:pY,fragmentGLSL:_Y,vertexWGSL:mY,fragmentWGSL:gY,attributes:{vertex_position:Ki,vertex_texCoord0:nn}});this.material=n;n.cull=ss;n.depthState=Uo.NODEPTH;n.blendState=new Ro(true,Le,Te,be,Le,ge,ge);n.update();this.meshInstance=new sy(this.mesh,n,new By("MiniStatsMesh"));this.uniforms={clr:new Float32Array(4)};this.targetSize={width:t.width,height:t.height}}quad(t,e,s,i,n,r,a,o,l,h=0){const c=this.targetSize.width;const d=this.targetSize.height;const u=t/c;const f=e/d;const p=(t+s)/c;const m=(e+i)/d;const _=l.width;const g=l.height;const v=n/_;const y=r/g;const S=(n+(a??s))/_;const x=(r+(o??i))/g;this.data.set([u,f,h,v,y,0,0,p,f,h,S,y,1,0,p,m,h,S,x,1,1,u,m,h,v,x,0,1],4*7*this.quads);this.quads++;this.prim.count+=6}startFrame(){this.quads=0;this.prim.count=0;this.targetSize.width=this.device.canvas.scrollWidth;this.targetSize.height=this.device.canvas.scrollHeight}render(t,e,s,i,n,r){this.buffer.setData(this.data.buffer);this.uniforms.clr.set(n,0);this.material.setParameter("clr",this.uniforms.clr);this.material.setParameter("graphTex",s);this.material.setParameter("wordsTex",i);t.drawMeshInstance(this.meshInstance,e)}}class yY{constructor(t,e){const s=t.graphicsDevice;e=e||yY.getDefaultOptions();this.initGraphs(t,s,e);const i=new Set(["","ms","0","1","2","3","4","5","6","7","8","9","."].concat(this.graphs.map((t=>t.name))).concat(e.stats?e.stats.map((t=>t.unitsName)):[]).filter((t=>!!t)));this.wordAtlas=new fY(s,i);this.sizes=e.sizes;this._activeSizeIndex=e.startSizeIndex;const n=document.createElement("div");n.setAttribute("id","mini-stats");n.style.cssText="position:fixed;bottom:0;left:0;background:transparent;";document.body.appendChild(n);n.addEventListener("mouseenter",(t=>{this.opacity=1}));n.addEventListener("mouseleave",(t=>{this.opacity=.7}));n.addEventListener("click",(t=>{t.preventDefault();if(this._enabled){this.activeSizeIndex=(this.activeSizeIndex+1)%this.sizes.length;this.resize(this.sizes[this.activeSizeIndex].width,this.sizes[this.activeSizeIndex].height,this.sizes[this.activeSizeIndex].graphs)}}));s.on("resizecanvas",this.updateDiv,this);s.on("losecontext",this.loseContext,this);t.on("postrender",this.postRender,this);this.app=t;this.drawLayer=t.scene.layers.getLayerById(fm);this.device=s;this.render2d=new vY(s);this.div=n;this.width=0;this.height=0;this.gspacing=2;this.clr=[1,1,1,.5];this._enabled=true;this.activeSizeIndex=this._activeSizeIndex}destroy(){this.device.off("resizecanvas",this.updateDiv,this);this.device.off("losecontext",this.loseContext,this);this.app.off("postrender",this.postRender,this);this.graphs.forEach((t=>t.destroy()));this.wordAtlas.destroy();this.texture.destroy()}static getDefaultOptions(){return{sizes:[{width:100,height:16,spacing:0,graphs:false},{width:128,height:32,spacing:2,graphs:true},{width:256,height:64,spacing:2,graphs:true}],startSizeIndex:0,textRefreshRate:500,cpu:{enabled:true,watermark:33},gpu:{enabled:true,watermark:33},stats:[{name:"Frame",stats:["frame.ms"],decimalPlaces:1,unitsName:"ms",watermark:33},{name:"DrawCalls",stats:["drawCalls.total"],watermark:1e3}]}}set activeSizeIndex(t){this._activeSizeIndex=t;this.gspacing=this.sizes[t].spacing;this.resize(this.sizes[t].width,this.sizes[t].height,this.sizes[t].graphs)}get activeSizeIndex(){return this._activeSizeIndex}set opacity(t){this.clr[3]=t}get opacity(){return this.clr[3]}get overallHeight(){const t=this.graphs;const e=this.gspacing;return this.height*t.length+e*(t.length-1)}set enabled(t){if(t!==this._enabled){this._enabled=t;for(let e=0;e<this.graphs.length;++e){this.graphs[e].enabled=t;this.graphs[e].timer.enabled=t}}}get enabled(){return this._enabled}initGraphs(t,e,s){this.graphs=[];if(s.cpu.enabled){const e=new hY(t);const i=new uY("CPU",t,s.cpu.watermark,s.textRefreshRate,e);this.graphs.push(i)}if(s.gpu.enabled){const i=new cY(e);const n=new uY("GPU",t,s.gpu.watermark,s.textRefreshRate,i);this.graphs.push(n)}if(s.stats){s.stats.forEach((e=>{const i=new dY(t,e.stats,e.decimalPlaces,e.unitsName,e.multiplier);const n=new uY(e.name,t,e.watermark,s.textRefreshRate,i);this.graphs.push(n)}))}const i=s.sizes.reduce(((t,e)=>e.width>t?e.width:t),0);this.texture=new lo(e,{name:"mini-stats-graph-texture",width:wt.nextPowerOfTwo(i),height:wt.nextPowerOfTwo(this.graphs.length),mipmaps:false,minFilter:as,magFilter:as,addressU:fe,addressV:fe});this.graphs.forEach(((t,e)=>{t.texture=this.texture;t.yOffset=e}))}render(){const t=this.graphs;const e=this.wordAtlas;const s=this.render2d;const i=this.width;const n=this.height;const r=this.gspacing;s.startFrame();for(let a=0;a<t.length;++a){const o=t[a];let l=a*(n+r);o.render(s,0,l,i,n);let h=1;l+=n-13;h+=e.render(s,o.name,h,l)+10;const c=o.timingText;for(let t=0;t<c.length;++t){h+=e.render(s,c[t],h,l)}if(o.timer.unitsName){h+=3;e.render(s,o.timer.unitsName,h,l)}}s.render(this.app,this.drawLayer,this.texture,this.wordAtlas.texture,this.clr,n)}resize(t,e,s){const i=this.graphs;for(let t=0;t<i.length;++t){i[t].enabled=s}this.width=t;this.height=e;this.updateDiv()}updateDiv(){const t=this.device.canvas.getBoundingClientRect();this.div.style.left=`${t.left}px`;this.div.style.bottom=`${window.innerHeight-t.bottom}px`;this.div.style.width=`${this.width}px`;this.div.style.height=`${this.overallHeight}px`}loseContext(){this.graphs.forEach((t=>t.loseContext()))}postRender(){if(this._enabled){this.render()}}}const SY=`\n\tvarying vec2 vUv0;\n\tuniform vec2 uOffset;\n\tuniform float uSrcMultiplier;\n\tuniform sampler2D source;\n\tvoid main(void)\n\t{\n\t\tvec4 pixel;\n\t\tvec4 texel = texture2D(source, vUv0);\n\t\tvec4 firstTexel = texel;\n\t\tfloat diff = texel.a * uSrcMultiplier;\n\t\tpixel = texture2D(source, vUv0 + uOffset * -2.0);\n\t\ttexel = max(texel, pixel);\n\t\tdiff = max(diff, length(firstTexel.rgb - pixel.rgb));\n\t\tpixel = texture2D(source, vUv0 + uOffset * -1.0);\n\t\ttexel = max(texel, pixel);\n\t\tdiff = max(diff, length(firstTexel.rgb - pixel.rgb));\n\t\tpixel = texture2D(source, vUv0 + uOffset * 1.0);\n\t\ttexel = max(texel, pixel);\n\t\tdiff = max(diff, length(firstTexel.rgb - pixel.rgb));\n\t\tpixel = texture2D(source, vUv0 + uOffset * 2.0);\n\t\ttexel = max(texel, pixel);\n\t\tdiff = max(diff, length(firstTexel.rgb - pixel.rgb));\n\t   gl_FragColor = vec4(texel.rgb, min(diff, 1.0));\n\t}\n`;const xY=new Float32Array(2);const TY=new bt;class wY{constructor(t,e,s=-1){this.app=t;this.renderingLayer=e??t.scene.layers.getLayerByName("Immediate");this.rt=this.createRenderTarget("OutlineTexture",1,1,true);this.outlineCameraEntity=new dC("OutlineCamera");this.outlineCameraEntity.addComponent("camera",{layers:[this.renderingLayer.id],priority:s,clearColor:new bt(0,0,0,0),renderTarget:this.rt});this.outlineShaderPass=this.outlineCameraEntity.camera.setShaderPass("OutlineShaderPass");this.postRender=t=>{if(this.outlineCameraEntity.camera===t){this.onPostRender()}};t.scene.on("postrender",this.postRender);this.app.root.addChild(this.outlineCameraEntity);this.tempRt=this.createRenderTarget("OutlineTempTexture",1,1,false);this.blendState=new Ro(true,Le,Te,be);const i=this.app.graphicsDevice;this.shaderExtend=Tv.createShader(i,{uniqueName:"OutlineExtendShader",attributes:{vertex_position:Ki},vertexGLSL:yv.get(i,cr).get("fullscreenQuadVS"),fragmentGLSL:SY});this.shaderBlend=Tv.createShader(i,{uniqueName:"OutlineBlendShader",attributes:{vertex_position:Ki},vertexChunk:"fullscreenQuadVS",fragmentChunk:"outputTex2DPS"});this.quadRenderer=new Lv(this.shaderBlend);this.whiteTex=new lo(i,{name:"OutlineWhiteTexture",width:1,height:1,format:Hs,mipmaps:false});const n=this.whiteTex.lock();n.set(new Uint8Array([255,255,255,255]));this.whiteTex.unlock()}destroy(){this.whiteTex.destroy();this.whiteTex=null;this.outlineCameraEntity.destroy();this.outlineCameraEntity=null;this.rt.destroyTextureBuffers();this.rt.destroy();this.rt=null;this.tempRt.destroyTextureBuffers();this.tempRt.destroy();this.tempRt=null;this.app.scene.off("postrender",this.postRender);this.quadRenderer?.destroy();this.quadRenderer=null}getMeshInstances(t,e){const s=[];if(t){const i=e?t.findComponents("render"):t.render?[t.render]:[];i.forEach((t=>{if(t.meshInstances){s.push(...t.meshInstances)}}));const n=e?t.findComponents("model"):t.model?[t.model]:[];n.forEach((t=>{if(t.meshInstances){s.push(...t.meshInstances)}}))}return s}addEntity(t,e,s=true){const i=this.getMeshInstances(t,s);i.forEach((t=>{if(t.material instanceof Qb){const s=this.outlineShaderPass;t.material.onUpdateShader=t=>{if(t.pass===s){const e=new Ob;e.defines=t.defines;e.opacityMap=t.opacityMap;e.opacityMapUv=t.opacityMapUv;e.opacityMapChannel=t.opacityMapChannel;e.opacityMapTransform=t.opacityMapTransform;e.opacityVertexColor=t.opacityVertexColor;e.opacityVertexColorChannel=t.opacityVertexColorChannel;e.litOptions.vertexColors=t.litOptions.vertexColors;e.litOptions.alphaTest=t.litOptions.alphaTest;e.litOptions.skin=t.litOptions.skin;e.litOptions.batch=t.litOptions.batch;e.litOptions.useInstancing=t.litOptions.useInstancing;e.litOptions.useMorphPosition=t.litOptions.useMorphPosition;e.litOptions.useMorphNormal=t.litOptions.useMorphNormal;e.litOptions.useMorphTextureBasedInt=t.litOptions.useMorphTextureBasedInt;e.litOptions.opacityFadesSpecular=t.litOptions.opacityFadesSpecular;return e}return t};TY.linear(e);const i=new Float32Array([TY.r,TY.g,TY.b]);t.setParameter("material_emissive",i,1<<this.outlineShaderPass);t.setParameter("texture_emissiveMap",this.whiteTex,1<<this.outlineShaderPass)}}));this.renderingLayer.addMeshInstances(i,true)}removeEntity(t,e=true){const s=this.getMeshInstances(t,e);this.renderingLayer.removeMeshInstances(s);s.forEach((t=>{if(t.material instanceof Qb){t.material.onUpdateShader=null;t.deleteParameter("material_emissive")}}))}removeAllEntities(){this.renderingLayer.clearMeshInstances()}blendOutlines(){const t=this.app.graphicsDevice;t.scope.resolve("source").setValue(this.rt.colorBuffer);t.setDepthState(Uo.NODEPTH);t.setCullMode(ss);t.setBlendState(this.blendState);this.quadRenderer.render()}onPostRender(){const t=this.app.graphicsDevice;const e=t.scope.resolve("uOffset");const s=t.scope.resolve("source");const i=t.scope.resolve("uSrcMultiplier");const{rt:n,tempRt:r,shaderExtend:a}=this;const{width:o,height:l}=n;xY[0]=1/o/2;xY[1]=0;e.setValue(xY);s.setValue(n.colorBuffer);i.setValue(0);Iv(t,r,a);xY[0]=0;xY[1]=1/l/2;e.setValue(xY);s.setValue(r.colorBuffer);i.setValue(1);Iv(t,n,a)}createRenderTarget(t,e,s,i){const n=new lo(this.app.graphicsDevice,{name:t,width:e,height:s,format:Hs,mipmaps:false,addressU:pe,addressV:pe,minFilter:ds,magFilter:os});return new il({colorBuffer:n,depth:i,flipY:this.app.graphicsDevice.isWebGPU})}updateRenderTarget(t){const e=t.renderTarget?.width??this.app.graphicsDevice.width;const s=t.renderTarget?.height??this.app.graphicsDevice.height;const i=this.outlineCameraEntity.camera;if(!i.renderTarget||i.renderTarget.width!==e||i.renderTarget.height!==s){this.rt.resize(e,s);this.tempRt.resize(e,s)}}frameUpdate(t,e,s){const i=t.camera;this.updateRenderTarget(i);const n=this.app.scene.on("prerender:layer",((t,r,a)=>{if(i===t&&a===s&&r===e){this.blendOutlines();n.off()}}));this.outlineCameraEntity.setLocalPosition(t.getPosition());this.outlineCameraEntity.setLocalRotation(t.getRotation());const r=this.outlineCameraEntity.camera;r.projection=i.projection;r.horizontalFov=i.horizontalFov;r.fov=i.fov;r.orthoHeight=i.orthoHeight;r.nearClip=i.nearClip;r.farClip=i.farClip}}class bY{constructor(){}textureToCanvas(t,e={}){const s=t.getSource();if(typeof HTMLImageElement!=="undefined"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement!=="undefined"&&s instanceof HTMLCanvasElement||typeof OffscreenCanvas!=="undefined"&&s instanceof OffscreenCanvas||typeof ImageBitmap!=="undefined"&&s instanceof ImageBitmap){const{width:t,height:i}=this.calcTextureSize(s.width,s.height,e.maxTextureSize);const n=document.createElement("canvas");n.width=t;n.height=i;const r=n.getContext("2d");if(r===null){return Promise.resolve(undefined)}r.drawImage(s,0,0,n.width,n.height);if(e.color){const{r:s,g:n,b:a}=e.color;const o=r.getImageData(0,0,t,i);const l=o.data;for(let t=0;t<l.length;t+=4){l[t+0]=l[t+0]*s;l[t+1]=l[t+1]*n;l[t+2]=l[t+2]*a}r.putImageData(o,0,0)}return Promise.resolve(n)}const i=t.device;const{width:n,height:r}=this.calcTextureSize(t.width,t.height,e.maxTextureSize);const a=Ni(t.format)?Ds:t.format;const o=new lo(i,{name:"ExtractedTexture",width:n,height:r,format:a,cubemap:false,mipmaps:false,minFilter:os,magFilter:os,addressU:pe,addressV:pe});const l=new il({colorBuffer:o,depth:false});const h=Tv.createShader(i,{uniqueName:"ShaderCoreExporterBlit",attributes:{vertex_position:Ki},vertexChunk:"fullscreenQuadVS",fragmentChunk:"outputTex2DPS"});i.scope.resolve("source").setValue(t);i.setBlendState(Ro.NOBLEND);Iv(i,l,h);return o.read(0,0,n,r,{renderTarget:l,immediate:true}).then((t=>{o.destroy();l.destroy();const e=new Uint8ClampedArray(n*r*4);e.set(t);const s=new ImageData(e,n,r);const i=document.createElement("canvas");i.width=n;i.height=r;const a=i.getContext("2d");if(!a){return Promise.resolve(undefined)}a.putImageData(s,0,0);return Promise.resolve(i)}))}calcTextureSize(t,e,s){if(s){const i=Math.min(s/Math.max(t,e),1);t=Math.round(t*i);e=Math.round(e*i)}return{width:t,height:e}}}var EY=Uint8Array,AY=Uint16Array,CY=Int32Array;var PY=new EY([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]);var LY=new EY([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]);var DY=new EY([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);var MY=function(t,e){var s=new AY(31);for(var i=0;i<31;++i){s[i]=e+=1<<t[i-1]}var n=new CY(s[30]);for(var i=1;i<30;++i){for(var r=s[i];r<s[i+1];++r){n[r]=r-s[i]<<5|i}}return{b:s,r:n}};var IY=MY(PY,2),RY=IY.b,OY=IY.r;RY[28]=258,OY[258]=28;var FY=MY(LY,0),NY=FY.r;var kY=new AY(32768);for(var BY=0;BY<32768;++BY){var UY=(BY&43690)>>1|(BY&21845)<<1;UY=(UY&52428)>>2|(UY&13107)<<2;UY=(UY&61680)>>4|(UY&3855)<<4;kY[BY]=((UY&65280)>>8|(UY&255)<<8)>>1}var zY=function(t,e,s){var i=t.length;var n=0;var r=new AY(e);for(;n<i;++n){if(t[n])++r[t[n]-1]}var a=new AY(e);for(n=1;n<e;++n){a[n]=a[n-1]+r[n-1]<<1}var o;if(s){o=new AY(1<<e);var l=15-e;for(n=0;n<i;++n){if(t[n]){var h=n<<4|t[n];var c=e-t[n];var d=a[t[n]-1]++<<c;for(var u=d|(1<<c)-1;d<=u;++d){o[kY[d]>>l]=h}}}}else{o=new AY(i);for(n=0;n<i;++n){if(t[n]){o[n]=kY[a[t[n]-1]++]>>15-t[n]}}}return o};var VY=new EY(288);for(var BY=0;BY<144;++BY)VY[BY]=8;for(var BY=144;BY<256;++BY)VY[BY]=9;for(var BY=256;BY<280;++BY)VY[BY]=7;for(var BY=280;BY<288;++BY)VY[BY]=8;var GY=new EY(32);for(var BY=0;BY<32;++BY)GY[BY]=5;var HY=zY(VY,9,0);zY(VY,9,1);var WY=zY(GY,5,0);zY(GY,5,1);var XY=function(t){return(t+7)/8|0};var qY=function(t,e,s){if(s==null||s>t.length)s=t.length;return new EY(t.subarray(e,s))};var $Y=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"];var jY=function(t,e,s){var i=new Error(e||$Y[t]);i.code=t;if(Error.captureStackTrace)Error.captureStackTrace(i,jY);if(!s)throw i;return i};var YY=function(t,e,s){s<<=e&7;var i=e/8|0;t[i]|=s;t[i+1]|=s>>8};var KY=function(t,e,s){s<<=e&7;var i=e/8|0;t[i]|=s;t[i+1]|=s>>8;t[i+2]|=s>>16};var ZY=function(t,e){var s=[];for(var i=0;i<t.length;++i){if(t[i])s.push({s:i,f:t[i]})}var n=s.length;var r=s.slice();if(!n)return{t:nK,l:0};if(n==1){var a=new EY(s[0].s+1);a[s[0].s]=1;return{t:a,l:1}}s.sort((function(t,e){return t.f-e.f}));s.push({s:-1,f:25001});var o=s[0],l=s[1],h=0,c=1,d=2;s[0]={s:-1,f:o.f+l.f,l:o,r:l};while(c!=n-1){o=s[s[h].f<s[d].f?h++:d++];l=s[h!=c&&s[h].f<s[d].f?h++:d++];s[c++]={s:-1,f:o.f+l.f,l:o,r:l}}var u=r[0].s;for(var i=1;i<n;++i){if(r[i].s>u)u=r[i].s}var f=new AY(u+1);var p=QY(s[c-1],f,0);if(p>e){var i=0,m=0;var _=p-e,g=1<<_;r.sort((function(t,e){return f[e.s]-f[t.s]||t.f-e.f}));for(;i<n;++i){var v=r[i].s;if(f[v]>e){m+=g-(1<<p-f[v]);f[v]=e}else break}m>>=_;while(m>0){var y=r[i].s;if(f[y]<e)m-=1<<e-f[y]++-1;else++i}for(;i>=0&&m;--i){var S=r[i].s;if(f[S]==e){--f[S];++m}}p=e}return{t:new EY(f),l:p}};var QY=function(t,e,s){return t.s==-1?Math.max(QY(t.l,e,s+1),QY(t.r,e,s+1)):e[t.s]=s};var JY=function(t){var e=t.length;while(e&&!t[--e]);var s=new AY(++e);var i=0,n=t[0],r=1;var a=function(t){s[i++]=t};for(var o=1;o<=e;++o){if(t[o]==n&&o!=e)++r;else{if(!n&&r>2){for(;r>138;r-=138)a(32754);if(r>2){a(r>10?r-11<<5|28690:r-3<<5|12305);r=0}}else if(r>3){a(n),--r;for(;r>6;r-=6)a(8304);if(r>2)a(r-3<<5|8208),r=0}while(r--)a(n);r=1;n=t[o]}}return{c:s.subarray(0,i),n:e}};var tK=function(t,e){var s=0;for(var i=0;i<e.length;++i)s+=t[i]*e[i];return s};var eK=function(t,e,s){var i=s.length;var n=XY(e+2);t[n]=i&255;t[n+1]=i>>8;t[n+2]=t[n]^255;t[n+3]=t[n+1]^255;for(var r=0;r<i;++r)t[n+r+4]=s[r];return(n+4+i)*8};var sK=function(t,e,s,i,n,r,a,o,l,h,c){YY(e,c++,s);++n[256];var d=ZY(n,15),u=d.t,f=d.l;var p=ZY(r,15),m=p.t,_=p.l;var g=JY(u),v=g.c,y=g.n;var S=JY(m),x=S.c,T=S.n;var w=new AY(19);for(var b=0;b<v.length;++b)++w[v[b]&31];for(var b=0;b<x.length;++b)++w[x[b]&31];var E=ZY(w,7),A=E.t,C=E.l;var P=19;for(;P>4&&!A[DY[P-1]];--P);var L=h+5<<3;var D=tK(n,VY)+tK(r,GY)+a;var M=tK(n,u)+tK(r,m)+a+14+3*P+tK(w,A)+2*w[16]+3*w[17]+7*w[18];if(l>=0&&L<=D&&L<=M)return eK(e,c,t.subarray(l,l+h));var I,R,O,F;YY(e,c,1+(M<D)),c+=2;if(M<D){I=zY(u,f,0),R=u,O=zY(m,_,0),F=m;var N=zY(A,C,0);YY(e,c,y-257);YY(e,c+5,T-1);YY(e,c+10,P-4);c+=14;for(var b=0;b<P;++b)YY(e,c+3*b,A[DY[b]]);c+=3*P;var k=[v,x];for(var B=0;B<2;++B){var U=k[B];for(var b=0;b<U.length;++b){var z=U[b]&31;YY(e,c,N[z]),c+=A[z];if(z>15)YY(e,c,U[b]>>5&127),c+=U[b]>>12}}}else{I=HY,R=VY,O=WY,F=GY}for(var b=0;b<o;++b){var V=i[b];if(V>255){var z=V>>18&31;KY(e,c,I[z+257]),c+=R[z+257];if(z>7)YY(e,c,V>>23&31),c+=PY[z];var G=V&31;KY(e,c,O[G]),c+=F[G];if(G>3)KY(e,c,V>>5&8191),c+=LY[G]}else{KY(e,c,I[V]),c+=R[V]}}KY(e,c,I[256]);return c+R[256]};var iK=new CY([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]);var nK=new EY(0);var rK=function(t,e,s,i,n,r){var a=r.z||t.length;var o=new EY(i+a+5*(1+Math.ceil(a/7e3))+n);var l=o.subarray(i,o.length-n);var h=r.l;var c=(r.r||0)&7;if(e){if(c)l[0]=r.r>>3;var d=iK[e-1];var u=d>>13,f=d&8191;var p=(1<<s)-1;var m=r.p||new AY(32768),_=r.h||new AY(p+1);var g=Math.ceil(s/3),v=2*g;var y=function(e){return(t[e]^t[e+1]<<g^t[e+2]<<v)&p};var S=new CY(25e3);var x=new AY(288),T=new AY(32);var w=0,b=0,E=r.i||0,A=0,C=r.w||0,P=0;for(;E+2<a;++E){var L=y(E);var D=E&32767,M=_[L];m[D]=M;_[L]=D;if(C<=E){var I=a-E;if((w>7e3||A>24576)&&(I>423||!h)){c=sK(t,l,0,S,x,T,b,A,P,E-P,c);A=w=b=0,P=E;for(var R=0;R<286;++R)x[R]=0;for(var R=0;R<30;++R)T[R]=0}var O=2,F=0,N=f,k=D-M&32767;if(I>2&&L==y(E-k)){var B=Math.min(u,I)-1;var U=Math.min(32767,E);var z=Math.min(258,I);while(k<=U&&--N&&D!=M){if(t[E+O]==t[E+O-k]){var V=0;for(;V<z&&t[E+V]==t[E+V-k];++V);if(V>O){O=V,F=k;if(V>B)break;var G=Math.min(k,V-2);var H=0;for(var R=0;R<G;++R){var W=E-k+R&32767;var X=m[W];var q=W-X&32767;if(q>H)H=q,M=W}}}D=M,M=m[D];k+=D-M&32767}}if(F){S[A++]=268435456|OY[O]<<18|NY[F];var $=OY[O]&31,j=NY[F]&31;b+=PY[$]+LY[j];++x[257+$];++T[j];C=E+O;++w}else{S[A++]=t[E];++x[t[E]]}}}for(E=Math.max(E,C);E<a;++E){S[A++]=t[E];++x[t[E]]}c=sK(t,l,h,S,x,T,b,A,P,E-P,c);if(!h){r.r=c&7|l[c/8|0]<<3;c-=7;r.h=_,r.p=m,r.i=E,r.w=C}}else{for(var E=r.w||0;E<a+h;E+=65535){var Y=E+65535;if(Y>=a){l[c/8|0]=h;Y=a}c=eK(l,c+1,t.subarray(E,Y))}r.i=a}return qY(o,0,i+XY(c)+n)};var aK=function(){var t=new Int32Array(256);for(var e=0;e<256;++e){var s=e,i=9;while(--i)s=(s&1&&-306674912)^s>>>1;t[e]=s}return t}();var oK=function(){var t=-1;return{p:function(e){var s=t;for(var i=0;i<e.length;++i)s=aK[s&255^e[i]]^s>>>8;t=s},d:function(){return~t}}};var lK=function(t,e,s,i,n){if(!n){n={l:1};if(e.dictionary){var r=e.dictionary.subarray(-32768);var a=new EY(r.length+t.length);a.set(r);a.set(t,r.length);t=a;n.w=r.length}}return rK(t,e.level==null?6:e.level,e.mem==null?n.l?Math.ceil(Math.max(8,Math.min(13,Math.log(t.length)))*1.5):20:12+e.mem,s,i,n)};var hK=function(t,e){var s={};for(var i in t)s[i]=t[i];for(var i in e)s[i]=e[i];return s};var cK=function(t,e,s){for(;s;++e)t[e]=s,s>>>=8};function dK(t,e){return lK(t,e||{},0,0)}var uK=function(t,e,s,i){for(var n in t){var r=t[n],a=e+n,o=i;if(Array.isArray(r))o=hK(i,r[1]),r=r[0];if(r instanceof EY)s[a]=[r,o];else{s[a+="/"]=[new EY(0),o];uK(r,a,s,i)}}};var fK=typeof TextEncoder!="undefined"&&new TextEncoder;var pK=typeof TextDecoder!="undefined"&&new TextDecoder;var mK=0;try{pK.decode(nK,{stream:true});mK=1}catch(t){}function _K(t,e){var s;if(fK)return fK.encode(t);var i=t.length;var n=new EY(t.length+(t.length>>1));var r=0;var a=function(t){n[r++]=t};for(var s=0;s<i;++s){if(r+5>n.length){var o=new EY(r+8+(i-s<<1));o.set(n);n=o}var l=t.charCodeAt(s);if(l<128||e)a(l);else if(l<2048)a(192|l>>6),a(128|l&63);else if(l>55295&&l<57344)l=65536+(l&1023<<10)|t.charCodeAt(++s)&1023,a(240|l>>18),a(128|l>>12&63),a(128|l>>6&63),a(128|l&63);else a(224|l>>12),a(128|l>>6&63),a(128|l&63)}return qY(n,0,r)}var gK=function(t){var e=0;if(t){for(var s in t){var i=t[s].length;if(i>65535)jY(9);e+=i+4}}return e};var vK=function(t,e,s,i,n,r,a,o){var l=i.length,h=s.extra,c=o&&o.length;var d=gK(h);cK(t,e,a!=null?33639248:67324752),e+=4;if(a!=null)t[e++]=20,t[e++]=s.os;t[e]=20,e+=2;t[e++]=s.flag<<1|(r<0&&8),t[e++]=n&&8;t[e++]=s.compression&255,t[e++]=s.compression>>8;var u=new Date(s.mtime==null?Date.now():s.mtime),f=u.getFullYear()-1980;if(f<0||f>119)jY(10);cK(t,e,f<<25|u.getMonth()+1<<21|u.getDate()<<16|u.getHours()<<11|u.getMinutes()<<5|u.getSeconds()>>1),e+=4;if(r!=-1){cK(t,e,s.crc);cK(t,e+4,r<0?-r-2:r);cK(t,e+8,s.size)}cK(t,e+12,l);cK(t,e+14,d),e+=16;if(a!=null){cK(t,e,c);cK(t,e+6,s.attrs);cK(t,e+10,a),e+=14}t.set(i,e);e+=l;if(d){for(var p in h){var m=h[p],_=m.length;cK(t,e,+p);cK(t,e+2,_);t.set(m,e+4),e+=4+_}}if(c)t.set(o,e),e+=c;return e};var yK=function(t,e,s,i,n){cK(t,e,101010256);cK(t,e+8,s);cK(t,e+10,s);cK(t,e+12,i);cK(t,e+16,n)};function SK(t,e){if(!e)e={};var s={};var i=[];uK(t,"",s,e);var n=0;var r=0;for(var a in s){var o=s[a],l=o[0],h=o[1];var c=h.level==0?0:8;var d=_K(a),u=d.length;var f=h.comment,p=f&&_K(f),m=p&&p.length;var _=gK(h.extra);if(u>65535)jY(11);var g=c?dK(l,h):l,v=g.length;var y=oK();y.p(l);i.push(hK(h,{size:l.length,crc:y.d(),c:g,f:d,m:p,u:u!=a.length||p&&f.length!=m,o:n,compression:c}));n+=30+u+_+v;r+=76+2*(u+_)+(m||0)+v}var S=new EY(r+22),x=n,T=r-n;for(var w=0;w<i.length;++w){var d=i[w];vK(S,d.o,d,d.f,d.u,d.c.length);var b=30+d.f.length+gK(d.extra);S.set(d.c,d.o+b);vK(S,n,d,d.f,d.u,d.c.length,d.o,d.m),n+=16+b+(d.m?d.m.length:0)}yK(S,n,i.length,T,x);return S}const xK="root";const TK=`#usda 1.0\n(\n\t\tcustomLayerData = {\n\t\t\t\tstring creator = "PlayCanvas UsdzExporter"\n\t\t}\n\t\tmetersPerUnit = 1\n\t\tupAxis = "Y"\n)\n`;const wK=t=>`\ndef "Materials"\n{\n\t\t${t.join("\n")}\n}\n`;const bK=(t,e,s,i,n,r)=>`\ndef "Mesh"\n{\n\t\tdef Mesh "Mesh"\n\t\t{\n\t\t\t\tint[] faceVertexCounts = [${t}]\n\t\t\t\tint[] faceVertexIndices = [${e}]\n\t\t\t\tnormal3f[] normals = [${s}] (\n\t\t\t\t\t\tinterpolation = "vertex"\n\t\t\t\t)\n\t\t\t\tpoint3f[] points = [${i}]\n\t\t\t\ttexCoord2f[] primvars:st = [${n}] (\n\t\t\t\t\t\tinterpolation = "vertex"\n\t\t\t\t)\n\t\t\t\ttexCoord2f[] primvars:st1 = [${r}] (\n\t\t\t\t\t\tinterpolation = "vertex"\n\t\t\t\t)\n\t\t\t\tuniform token subdivisionScheme = "none"\n\t\t}\n}\n`;const EK=(t,e,s,i)=>`\ndef Xform "${t}" (\n\t\tprepend references = ${e}\n)\n{\n\t\tmatrix4d xformOp:transform = ${s}\n\t\tuniform token[] xformOpOrder = ["xformOp:transform"]\n\n\t\trel material:binding = ${i}\n}\n`;const AK=(t,e,s)=>`                    ${t} inputs:${e} = ${s}`;class CK extends bY{init(){this.meshMap=new Map;this.textureMap=new Map;this.materialMap=new Map;this.materials=[];this.files={};this.nodeNames=new Set}done(){this.meshMap=null;this.textureMap=null;this.materialMap=null;this.materials=null;this.files=null;this.nodeNames=null}build(t,e={}){this.init();this.addFile(null,xK);const s=[];if(t){const e=t.findComponents("render");e.forEach((t=>{s.push(...t.meshInstances)}))}let i="";s.forEach((t=>{i+=this.buildMeshInstance(t)}));i+=wK(this.materials);this.addFile(null,xK,"",i);const n={maxTextureSize:e.maxTextureSize};const r=Array.from(this.textureMap.keys());const a=[];for(let t=0;t<r.length;t++){const e="image/png";const s=r[t];const i=this.textureToCanvas(s,n).then((t=>{if(t){return new Promise((s=>t.toBlob(s,e,1))).then((t=>t.arrayBuffer()))}console.warn(`Export of texture ${s.name} is not currently supported.`);return new Promise((t=>t(null)))}));a.push(i)}const o=Promise.all(a).then((t=>{t.forEach(((t,e)=>{const s=r[e];const i=this.getTextureFileIds(s);this.files[i.fileName]=new Uint8Array(t)}));this.alignFiles();const e=SK(this.files,{level:0});this.done();return e}));return o}alignFiles(){let t=0;for(const e in this.files){const s=this.files[e];const i=34+e.length;t+=i;const n=t&63;if(n!==4){const t=64-n;const i=new Uint8Array(t);this.files[e]=[s,{extra:{12345:i}}]}t=s.length}}getFileIds(t,e,s,i="usda"){const n=`${t?`${t}/`:""}${e}.${i}`;const r=`@./${n}@</${s}>`;return{name:e,fileName:n,refName:r}}getTextureFileIds(t){return this.getFileIds("texture",`Texture_${t.id}`,"Texture","png")}addFile(t,e,s="",i=""){let n=null;if(i){i=`${TK}\n${i}`;n=_K(i)}const r=this.getFileIds(t,e,s);this.files[r.fileName]=n;return r.refName}getMaterialRef(t){let e=this.materialMap.get(t);if(!e){e=this.buildMaterial(t);this.materialMap.set(t,e)}return e}getMeshRef(t){let e=this.meshMap.get(t);if(!e){e=this.buildMesh(t);this.meshMap.set(t,e)}return e}buildArray2(t){const e=[];const s=t.length;for(let i=0;i<s;i+=2){e.push(`(${t[i]}, ${1-t[i+1]})`)}return e.join(", ")}buildArray3(t){const e=[];const s=t.length;for(let i=0;i<s;i+=3){e.push(`(${t[i]}, ${t[i+1]}, ${t[i+2]})`)}return e.join(", ")}buildMat4(t){const e=t.data;const s=[];for(let t=0;t<16;t+=4){s.push(`(${e[t]}, ${e[t+1]}, ${e[t+2]}, ${e[t+3]})`)}return`( ${s.join(", ")} )`}buildMaterial(t){const e=`Material_${t.id}`;const s=`/Materials/${e}`;const i=t=>`<${s}${t}>`;const n=(t,e,s,n,r,a,o,l)=>`\n\t\t\t\t\t\t\t\tdef Shader "Transform2d_${s}" (\n\t\t\t\t\t\t\t\t\t\tsdrMetadata = {\n\t\t\t\t\t\t\t\t\t\t\t\tstring role = "math"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tuniform token info:id = "UsdTransform2d"\n\t\t\t\t\t\t\t\t\t\tfloat2 inputs:in.connect = ${i(`/uvReader_${n}.outputs:result`)}\n\t\t\t\t\t\t\t\t\t\tfloat inputs:rotation = ${o}\n\t\t\t\t\t\t\t\t\t\tfloat2 inputs:scale = (${r.x}, ${r.y})\n\t\t\t\t\t\t\t\t\t\tfloat2 inputs:translation = (${a.x}, ${a.y})\n\t\t\t\t\t\t\t\t\t\tfloat2 outputs:result\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tdef Shader "Texture_${t.id}_${s}"\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tuniform token info:id = "UsdUVTexture"\n\t\t\t\t\t\t\t\t\t\tasset inputs:file = @${e.fileName}@\n\t\t\t\t\t\t\t\t\t\tfloat2 inputs:st.connect = ${i(`/Transform2d_${s}.outputs:result`)}\n\t\t\t\t\t\t\t\t\t\ttoken inputs:wrapS = "repeat"\n\t\t\t\t\t\t\t\t\t\ttoken inputs:wrapT = "repeat"\n\t\t\t\t\t\t\t\t\t\tfloat4 inputs:scale = (${l.r}, ${l.g}, ${l.b}, ${l.a})\n\t\t\t\t\t\t\t\t\t\tfloat outputs:r\n\t\t\t\t\t\t\t\t\t\tfloat outputs:g\n\t\t\t\t\t\t\t\t\t\tfloat outputs:b\n\t\t\t\t\t\t\t\t\t\tfloat3 outputs:rgb\n\t\t\t\t\t\t\t\t\t\tfloat outputs:a\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t`;const r=[];const a=[];const o=(e,s,o,l,h,c=false,d=false)=>{const u=t[e];if(u){const f=this.getTextureFileIds(u);this.textureMap.set(u,f.refName);const p=t[`${e}Channel`]||"rgb";const m=i(`/${f.name}_${h}.outputs:${p}`);r.push(AK(o,`${l}.connect`,m));if(c){if(t.alphaTest>0);}const _=t[`${e}Tiling`];const g=t[`${e}Offset`];const v=t[`${e}Rotation`];const y=t[`${e}Uv`]===1?"st1":"st";const S=d&&s?s:bt.WHITE;a.push(n(u,f,h,y,_,g,v,S))}else if(s){const t=o==="float"?`${s}`:`(${s.r}, ${s.g}, ${s.b})`;r.push(AK(o,l,t))}};o("diffuseMap",t.diffuse,"color3f","diffuseColor","diffuse",false,true);if(t.transparent||t.alphaTest>0){o("opacityMap",t.opacity,"float","opacity","opacity",true)}o("normalMap",null,"normal3f","normal","normal");o("emissiveMap",t.emissive,"color3f","emissiveColor","emissive",false,true);o("aoMap",null,"float","occlusion","occlusion");o("metalnessMap",t.metalness,"float","metallic","metallic");o("glossMap",t.gloss,"float","roughness","roughness");const l=`\n\t\t\t\t\t\tdef Material "${e}"\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdef Shader "PreviewSurface"\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tuniform token info:id = "UsdPreviewSurface"\n${r.join("\n")}\n\t\t\t\t\t\t\t\t\t\tint inputs:useSpecularWorkflow = 0\n\t\t\t\t\t\t\t\t\t\ttoken outputs:surface\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\ttoken outputs:surface.connect = ${i("/PreviewSurface.outputs:surface")}\n\n\t\t\t\t\t\t\t\tdef Shader "uvReader_st"\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tuniform token info:id = "UsdPrimvarReader_float2"\n\t\t\t\t\t\t\t\t\t\ttoken inputs:varname = "st"\n\t\t\t\t\t\t\t\t\t\tfloat2 inputs:fallback = (0.0, 0.0)\n\t\t\t\t\t\t\t\t\t\tfloat2 outputs:result\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tdef Shader "uvReader_st1"\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tuniform token info:id = "UsdPrimvarReader_float2"\n\t\t\t\t\t\t\t\t\t\ttoken inputs:varname = "st1"\n\t\t\t\t\t\t\t\t\t\tfloat2 inputs:fallback = (0.0, 0.0)\n\t\t\t\t\t\t\t\t\t\tfloat2 outputs:result\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t${a.join("\n")}\n\t\t\t\t\t\t}\n\t\t\t\t`;this.materials.push(l);return i("")}buildMesh(t){let e=[];const s=[];let i=[];let n=[];let r=[];t.getVertexStream(Ki,e);t.getVertexStream(Zi,i);t.getVertexStream(nn,n);t.getVertexStream(rn,r);t.getIndices(s);const a=s.length||e.length;const o=Array(a/3).fill(3).join(", ");if(!s.length){for(let t=0;t<a;t++){s[t]=t}}const l=e.length/3;i=i.length?i:Array(l*3).fill(0);n=n.length?n:Array(l*2).fill(0);r=r.length?r:Array(l*2).fill(0);e=this.buildArray3(e);i=this.buildArray3(i);n=this.buildArray2(n);r=this.buildArray2(r);const h=bK(o,s,i,e,n,r);const c=this.addFile("mesh",`Mesh_${t.id}`,"Mesh",h);return c}buildMeshInstance(t){const e=this.getMeshRef(t.mesh);const s=this.getMaterialRef(t.material);const i=this.buildMat4(t.node.getWorldTransform());const n=t.node.name.replace(/[^a-z0-9]/gi,"_");let r=n;while(this.nodeNames.has(r)){r=`${n}_${Math.random().toString(36).slice(2,7)}`}this.nodeNames.add(r);return EK(r,e,i,s)}}const PK=34962;const LK=34963;const DK=t=>{switch(t){case Ss:return 5121;case xs:return 5123;case Ts:return 5125}return 0};const MK=t=>{switch(t){case ur:return 5120;case fr:return 5121;case pr:return 5122;case mr:return 5123;case _r:return 5124;case gr:return 5125;case vr:return 5126}return 0};const IK=t=>{switch(t){case 1:return"SCALAR";case 2:return"VEC2";case 3:return"VEC3";case 4:return"VEC4"}return 0};const RK=t=>{switch(t){case Ki:return"POSITION";case Zi:return"NORMAL";case Qi:return"TANGENT";case en:return"COLOR_0";case tn:return"JOINTS_0";case Ji:return"WEIGHTS_0";case nn:return"TEXCOORD_0";case rn:return"TEXCOORD_1";case an:return"TEXCOORD_2";case on:return"TEXCOORD_3";case ln:return"TEXCOORD_4";case hn:return"TEXCOORD_5";case cn:return"TEXCOORD_6";case dn:return"TEXCOORD_7"}return""};const OK=function(t){switch(t){case as:return 9728;case os:return 9729;case ls:return 9984;case cs:return 9985;case hs:return 9986;case ds:return 9987}return 0};const FK=function(t){switch(t){case pe:return 33071;case me:return 33648;case fe:return 10497}return 0};function NK(t){const e=t.getContext("2d");const s=e.getImageData(0,0,t.width,t.height).data;for(let t=3;t<s.length;t+=4){if(s[t]<255){return true}}return false}const kK=["diffuseMap","colorMap","normalMap","metalnessMap","emissiveMap"];class BK extends bY{collectResources(t){const e={buffers:[],cameras:[],entities:[],materials:[],skins:[],textures:[],entityMeshInstances:[],bufferViewMap:new Map,compressableTexture:new Set};const{materials:s,buffers:i,entityMeshInstances:n,textures:r}=e;t.forEach((t=>{e.entities.push(t)}));const a=t=>{t.forEach((t=>{const a=t.material;if(s.indexOf(a)<0){e.materials.push(a);kK.forEach((t=>{const s=a[t];if(s&&r.indexOf(s)<0){if(t!=="normalMap"){e.compressableTexture.add(s)}r.push(s)}}))}const o=t.node;let l=n.find((t=>t.node===o));if(!l){l={node:o,meshInstances:[]};n.push(l)}l.meshInstances.push(t);const h=t.mesh;const c=h.vertexBuffer;if(i.indexOf(c)<0){i.unshift(c)}const d=h.indexBuffer[0];if(i.indexOf(d)<0){i.push(d)}if(h.skin&&e.skins.indexOf(h.skin)<0){e.skins.push(h.skin)}}))};e.entities.forEach((t=>{if(t.camera){e.cameras.push(t.camera)}if(t.render&&t.render.enabled){a(t.render.meshInstances)}if(t.model&&t.model.enabled&&t.model.meshInstances){a(t.model.meshInstances)}}));return e}writeBufferViews(t,e){e.bufferViews=[];for(const s of t.buffers){BK.writeBufferView(t,e,s)}}static writeBufferView(t,e,s){e.buffers=e.buffers??[];e.buffers[0]=e.buffers[0]??{byteLength:0};const i=e.buffers[0];i.byteLength=wt.roundUp(i.byteLength,4);const n=i.byteLength;const r=(t,s,i,n)=>{const r={buffer:0,byteLength:s,byteOffset:i};if(t===PK||t===LK){r.target=t}if(n!==undefined){r.byteStride=n}return e.bufferViews.push(r)-1};let a;if(s instanceof qo){a=s.lock();const e=s.getFormat();if(e.interleaved){const i=r(PK,a.byteLength,n,e.size);t.bufferViewMap.set(s,[i])}else{const i=[];for(const t of e.elements){const s=r(PK,t.size*e.vertexCount,n+t.offset,t.size);i.push(s)}t.bufferViewMap.set(s,i)}}else if(s instanceof qc){a=s.lock();const e=r(LK,a.byteLength,n);t.bufferViewMap.set(s,[e])}else{a=s;const e=r(undefined,a.byteLength,n);t.bufferViewMap.set(s,[e])}i.byteLength+=a.byteLength}writeCameras(t,e){if(t.cameras.length>0){e.cameras=t.cameras.map((t=>{const e=t.projection;const s=t.nearClip;const i=t.farClip;const n={};if(e===h_){n.type="orthographic";n.orthographic={xmag:1,ymag:1,znear:s,zfar:i}}else{const e=t.fov;n.type="perspective";n.perspective={yfov:e*Math.PI/180,znear:s,zfar:i}}return n}))}}attachTexture(t,e,s,i,n,r){const a=e[n];if(a){const o=t.textures.indexOf(a);if(o<0)console.warn(`Texture ${a.name} wasn't collected.`);s[i]={index:o};const l=e[`${n}Tiling`];const h=e[`${n}Offset`];const c=e[`${n}Rotation`];if(l&&!l.equals(Ot.ONE)||h&&!h.equals(Ot.ZERO)||c!==0){s[i].extensions={KHR_texture_transform:{}};r.extensionsUsed=r.extensionsUsed??[];if(r.extensionsUsed.indexOf("KHR_texture_transform")<0){r.extensionsUsed.push("KHR_texture_transform")}r.extensionsRequired=r.extensionsRequired??[];if(r.extensionsRequired.indexOf("KHR_texture_transform")<0){r.extensionsRequired.push("KHR_texture_transform")}if(l&&!l.equals(Ot.ONE)){s[i].extensions.KHR_texture_transform.scale=[l.x,l.y]}if(h&&!h.equals(Ot.ZERO)){s[i].extensions.KHR_texture_transform.offset=[h.x,h.y-1+l.y]}if(c!==0){s[i].extensions.KHR_texture_transform.rotation=c*wt.DEG_TO_RAD}}}}writeStandardMaterial(t,e,s,i){const{diffuse:n,emissive:r,opacity:a,metalness:o,gloss:l,glossInvert:h}=e;const c=s.pbrMetallicRoughness;if(!n.equals(bt.WHITE)||a!==1){c.baseColorFactor=[n.r,n.g,n.b,a]}if(o!==1){c.metallicFactor=o}const d=h?l:1-l;if(d!==1){c.roughnessFactor=d}this.attachTexture(t,e,c,"baseColorTexture","diffuseMap",i);this.attachTexture(t,e,c,"metallicRoughnessTexture","metalnessMap",i);if(!r.equals(bt.BLACK)){s.emissiveFactor=[r.r,r.g,r.b]}}writeMaterials(t,e){if(t.materials.length>0){e.materials=t.materials.map((s=>{const{name:i,blendType:n,cull:r,alphaTest:a}=s;const o={pbrMetallicRoughness:{}};if(i&&i.length>0){o.name=i}if(s instanceof Qb){this.writeStandardMaterial(t,s,o,e)}if(n===Hp){o.alphaMode="BLEND"}else if(n===Wp){if(a!==0){o.alphaMode="MASK";o.alphaCutoff=a}}if(r===ss){o.doubleSided=true}this.attachTexture(t,s,o,"normalTexture","normalMap",e);this.attachTexture(t,s,o,"occlusionTexture","aoMap",e);this.attachTexture(t,s,o,"emissiveTexture","emissiveMap",e);return o}))}}writeNodes(t,e){if(t.entities.length>0){e.nodes=t.entities.map((e=>{const s=e.name;const i=e.getLocalPosition();const n=e.getLocalRotation();const r=e.getLocalScale();const a={};if(s&&s.length>0){a.name=s}if(!i.equals(It.ZERO)){a.translation=[i.x,i.y,i.z]}if(!n.equals(Gt.IDENTITY)){a.rotation=[n.x,n.y,n.z,n.w]}if(!r.equals(It.ONE)){a.scale=[r.x,r.y,r.z]}if(e.camera&&e.camera.enabled){a.camera=t.cameras.indexOf(e.camera)}const o=t.entityMeshInstances.find((t=>t.node===e));if(o){a.mesh=t.entityMeshInstances.indexOf(o);const e=o.meshInstances[0];if(e&&e.mesh.skin){a.skin=t.skins.indexOf(e.mesh.skin)}}if(e.children.length>0){a.children=[];e.children.forEach((e=>{a.children.push(t.entities.indexOf(e))}))}return a}))}}writeMeshes(t,e,s){if(t.entityMeshInstances.length>0){e.accessors=[];e.meshes=[];t.entityMeshInstances.forEach((i=>{const n={primitives:[]};const r=i.meshInstances;r.forEach((i=>{const r=BK.createPrimitive(t,e,i.mesh,s);r.material=t.materials.indexOf(i.material);n.primitives.push(r)}));e.meshes.push(n)}))}}static createPrimitive(t,e,s,i={}){const n={attributes:{}};const{vertexBuffer:r}=s;const{format:a}=r;const{interleaved:o,elements:l}=a;const h=r.getNumVertices();l.forEach(((a,l)=>{const c=RK(a.name);if(i.stripUnusedAttributes){let e=true;if(c.startsWith("TEXCOORD_")){const s=parseInt(c.split("_")[1],10);e=t.materials.some((t=>kK.some((e=>{const i=t[e];return i&&(s===0||t[`${e}Tiling`]?.uv===s)}))))}if(c==="COLOR_0"){e=t.materials.some((t=>t.vertexColors))}if(c==="TANGENT"){e=t.materials.some((t=>t.normalMap))}if(c==="JOINTS_0"||c==="WEIGHTS_0"){e=t.entityMeshInstances.some((t=>t.meshInstances.some((t=>t.mesh.skin))))}if(!e){return}}let d=t.bufferViewMap.get(r);if(!d){BK.writeBufferView(t,e,r);t.buffers.push(r);d=t.bufferViewMap.get(r)}const u=d[o?0:l];const f={bufferView:u,byteOffset:o?a.offset:0,componentType:MK(a.dataType),type:IK(a.numComponents),count:h};const p=e.accessors.push(f)-1;n.attributes[c]=p;if(a.name===Ki){const t=[];s.getPositions(t);const e=new It;const i=new It;jt.computeMinMax(t,e,i);f.min=[e.x,e.y,e.z];f.max=[i.x,i.y,i.z]}}));const c=s.indexBuffer[0];if(c){let s=t.bufferViewMap.get(c);if(!s){BK.writeBufferView(t,e,c);t.buffers.push(c);s=t.bufferViewMap.get(c)}const i=s[0];const r={bufferView:i,componentType:DK(c.getFormat()),count:c.getNumIndices(),type:"SCALAR"};const a=e.accessors.push(r)-1;n.indices=a}return n}writeSkins(t,e){if(t.skins.length>0){e.skins=t.skins.map((s=>{const i=new Float32Array(s.inverseBindPose.length*16);for(let t=0;t<s.inverseBindPose.length;t++){const e=s.inverseBindPose[t];i.set(e.data,t*16)}const n=i.buffer;BK.writeBufferView(t,e,n);t.buffers.push(n);const r=t.bufferViewMap.get(n);const a={bufferView:r[0],componentType:MK(vr),count:s.inverseBindPose.length,type:"MAT4"};const o=e.accessors.push(a)-1;const l=s.boneNames.map((e=>{const s=t.entities.find((t=>t.name===e));return t.entities.indexOf(s)}));return{inverseBindMatrices:o,joints:l}}))}}convertTextures(t,e){const s={maxTextureSize:e.maxTextureSize};const i=[];t.forEach((t=>{const e=this.textureToCanvas(t,s);e.then((t=>new Promise((e=>e(t)))));i.push(e)}));return i}writeTextures(t,e,s,i){const n=t.textures;const r=[];for(let i=0;i<e.length;i++){const a=n[i];const o=e[i];const l=NK(o)||!t.compressableTexture.has(a);const h=l?"image/png":"image/jpeg";r.push(this.getBlob(o,h).then((t=>{const e=new FileReader;e.readAsArrayBuffer(t);return new Promise((t=>{e.onloadend=()=>{t(e)}}))})).then((e=>{const n=this.getPaddedArrayBuffer(e.result);BK.writeBufferView(t,s,n);t.buffers.push(n);const r=t.bufferViewMap.get(n);s.images[i]={mimeType:h,bufferView:r[0]};s.samplers[i]={minFilter:OK(a.minFilter),magFilter:OK(a.magFilter),wrapS:FK(a.addressU),wrapT:FK(a.addressV)};s.textures[i]={sampler:i,source:i}})))}return Promise.all(r)}getBlob(t,e){if(t.toBlob!==undefined){return new Promise((s=>{t.toBlob(s,e)}))}let s=1;if(e==="image/jpeg"){s=.92}return t.convertToBlob({type:e,quality:s})}getPaddedArrayBuffer(t,e=0){const s=wt.roundUp(t.byteLength,4);if(s!==t.byteLength){const i=new Uint8Array(s);i.set(new Uint8Array(t));if(e!==0){for(let n=t.byteLength;n<s;n++){i[n]=e}}return i.buffer}return t}buildJson(t,e){const s=this.convertTextures(t.textures,e);return Promise.all(s).then((async s=>{const i={asset:{version:"2.0",generator:"PlayCanvas GltfExporter"},scenes:[{nodes:[0]}],images:[],samplers:[],textures:[],scene:0};this.writeBufferViews(t,i);this.writeCameras(t,i);this.writeMeshes(t,i,e);this.writeMaterials(t,i);this.writeNodes(t,i,e);this.writeSkins(t,i);await this.writeTextures(t,s,i,e);if(!i.images.length)delete i.images;if(!i.samplers.length)delete i.samplers;if(!i.textures.length)delete i.textures;return i}))}build(t,e={}){const s=this.collectResources(t);return this.buildJson(s,e).then((t=>{const e=new TextEncoder;const i=e.encode(JSON.stringify(t));const n=12;const r=8;const a=i.length;const o=4-(a&3)&3;const l=8;const h=t.buffers.reduce(((t,e)=>wt.roundUp(t+e.byteLength,4)),0);let c=n+r+a+o;if(h>0){c+=l+h}const d=new ArrayBuffer(c);const u=new DataView(d);u.setUint32(0,1179937895,true);u.setUint32(4,2,true);u.setUint32(8,c,true);u.setUint32(12,a+o,true);u.setUint32(16,1313821514,true);let f=n+r;new Uint8Array(d,f,a).set(i);f+=a;for(let t=0;t<o;t++){u.setUint8(f+t,32)}f+=o;if(h>0){u.setUint32(f,h,true);u.setUint32(f+4,5130562,true);f+=l;s.buffers.forEach((e=>{let i;const n=s.bufferViewMap.get(e)[0];const r=t.bufferViews[n].byteOffset;if(e instanceof ArrayBuffer){i=new Uint8Array(e)}else{const t=e.lock();if(t instanceof ArrayBuffer){i=new Uint8Array(t)}else{i=new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}}const a=new Uint8Array(d,f+r,i.byteLength);a.set(i)}))}return Promise.resolve(d)}))}}const UK="none";const zK="lighting";const VK="combine";var GK=`\nuniform sampler2D sourceTexture;\nuniform vec2 sourceInvResolution;\nvarying vec2 uv0;\n#ifdef PREMULTIPLY\n\tuniform sampler2D premultiplyTexture;\n#endif\nvoid main()\n{\n\tvec3 e = texture2D (sourceTexture, uv0).rgb;\n\t#ifdef BOXFILTER\n\t\tvec3 value = e;\n\t\t#ifdef PREMULTIPLY\n\t\t\tfloat premultiply = texture2D(premultiplyTexture, uv0).{PREMULTIPLY_SRC_CHANNEL};\n\t\t\tvalue *= vec3(premultiply);\n\t\t#endif\n\t#else\n\t\tfloat x = sourceInvResolution.x;\n\t\tfloat y = sourceInvResolution.y;\n\t\tvec3 a = texture2D(sourceTexture, vec2 (uv0.x - 2.0 * x, uv0.y + 2.0 * y)).rgb;\n\t\tvec3 b = texture2D(sourceTexture, vec2 (uv0.x,\t\t   uv0.y + 2.0 * y)).rgb;\n\t\tvec3 c = texture2D(sourceTexture, vec2 (uv0.x + 2.0 * x, uv0.y + 2.0 * y)).rgb;\n\t\tvec3 d = texture2D(sourceTexture, vec2 (uv0.x - 2.0 * x, uv0.y)).rgb;\n\t\tvec3 f = texture2D(sourceTexture, vec2 (uv0.x + 2.0 * x, uv0.y)).rgb;\n\t\tvec3 g = texture2D(sourceTexture, vec2 (uv0.x - 2.0 * x, uv0.y - 2.0 * y)).rgb;\n\t\tvec3 h = texture2D(sourceTexture, vec2 (uv0.x,\t\t   uv0.y - 2.0 * y)).rgb;\n\t\tvec3 i = texture2D(sourceTexture, vec2 (uv0.x + 2.0 * x, uv0.y - 2.0 * y)).rgb;\n\t\tvec3 j = texture2D(sourceTexture, vec2 (uv0.x - x, uv0.y + y)).rgb;\n\t\tvec3 k = texture2D(sourceTexture, vec2 (uv0.x + x, uv0.y + y)).rgb;\n\t\tvec3 l = texture2D(sourceTexture, vec2 (uv0.x - x, uv0.y - y)).rgb;\n\t\tvec3 m = texture2D(sourceTexture, vec2 (uv0.x + x, uv0.y - y)).rgb;\n\t\tvec3 value = e * 0.125;\n\t\tvalue += (a + c + g + i) * 0.03125;\n\t\tvalue += (b + d + f + h) * 0.0625;\n\t\tvalue += (j + k + l + m) * 0.125;\n\t#endif\n\t#ifdef REMOVE_INVALID\n\t\tvalue = max(value, vec3(0.0));\n\t#endif\n\tgl_FragColor = vec4(value, 1.0);\n}\n`;var HK=`\nvar sourceTexture: texture_2d<f32>;\nvar sourceTextureSampler: sampler;\nuniform sourceInvResolution: vec2f;\nvarying uv0: vec2f;\n#ifdef PREMULTIPLY\n\tvar premultiplyTexture: texture_2d<f32>;\n\tvar premultiplyTextureSampler: sampler;\n#endif\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tlet e: vec3f = textureSample(sourceTexture, sourceTextureSampler, input.uv0).rgb;\n\t#ifdef BOXFILTER\n\t\tvar value: vec3f = e;\n\t\t#ifdef PREMULTIPLY\n\t\t\tlet premultiply: f32 = textureSample(premultiplyTexture, premultiplyTextureSampler, input.uv0).{PREMULTIPLY_SRC_CHANNEL};\n\t\t\tvalue = value * vec3f(premultiply);\n\t\t#endif\n\t#else\n\t\tlet x: f32 = uniform.sourceInvResolution.x;\n\t\tlet y: f32 = uniform.sourceInvResolution.y;\n\t\tlet a: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x - 2.0 * x, input.uv0.y + 2.0 * y)).rgb;\n\t\tlet b: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x,\t\t   input.uv0.y + 2.0 * y)).rgb;\n\t\tlet c: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x + 2.0 * x, input.uv0.y + 2.0 * y)).rgb;\n\t\tlet d: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x - 2.0 * x, input.uv0.y)).rgb;\n\t\tlet f: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x + 2.0 * x, input.uv0.y)).rgb;\n\t\tlet g: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x - 2.0 * x, input.uv0.y - 2.0 * y)).rgb;\n\t\tlet h: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x,\t\t   input.uv0.y - 2.0 * y)).rgb;\n\t\tlet i: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x + 2.0 * x, input.uv0.y - 2.0 * y)).rgb;\n\t\tlet j: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x - x, input.uv0.y + y)).rgb;\n\t\tlet k: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x + x, input.uv0.y + y)).rgb;\n\t\tlet l: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x - x, input.uv0.y - y)).rgb;\n\t\tlet m: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x + x, input.uv0.y - y)).rgb;\n\t\tvar value: vec3f = e * 0.125;\n\t\tvalue = value + (a + c + g + i) * 0.03125;\n\t\tvalue = value + (b + d + f + h) * 0.0625;\n\t\tvalue = value + (j + k + l + m) * 0.125;\n\t#endif\n\t#ifdef REMOVE_INVALID\n\t\tvalue = max(value, vec3f(0.0));\n\t#endif\n\toutput.color = vec4f(value, 1.0);\n\treturn output;\n}\n`;class WK extends Tb{constructor(t,e,s={}){super(t);this.sourceTexture=e;this.premultiplyTexture=s.premultiplyTexture;yv.get(t,cr).set("downsamplePS",GK);yv.get(t,dr).set("downsamplePS",HK);const i=s.boxFilter??false;const n=`${i?"Box":""}-${s.premultiplyTexture?"Premultiply":""}-${s.premultiplySrcChannel??""}-${s.removeInvalid?"RemoveInvalid":""}`;const r=new Map;if(i)r.set("BOXFILTER","");if(s.premultiplyTexture)r.set("PREMULTIPLY","");if(s.removeInvalid)r.set("REMOVE_INVALID","");r.set("{PREMULTIPLY_SRC_CHANNEL}",s.premultiplySrcChannel??"x");this.shader=Tv.createShader(t,{uniqueName:`DownSampleShader:${n}`,attributes:{aPosition:Ki},vertexChunk:"quadVS",fragmentChunk:"downsamplePS",fragmentDefines:r});this.sourceTextureId=t.scope.resolve("sourceTexture");this.premultiplyTextureId=t.scope.resolve("premultiplyTexture");this.sourceInvResolutionId=t.scope.resolve("sourceInvResolution");this.sourceInvResolutionValue=new Float32Array(2)}setSourceTexture(t){this._sourceTexture=t;this.options.resizeSource=t}execute(){this.sourceTextureId.setValue(this.sourceTexture);if(this.premultiplyTexture){this.premultiplyTextureId.setValue(this.premultiplyTexture)}this.sourceInvResolutionValue[0]=1/this.sourceTexture.width;this.sourceInvResolutionValue[1]=1/this.sourceTexture.height;this.sourceInvResolutionId.setValue(this.sourceInvResolutionValue);super.execute()}}var XK=`\n\tuniform sampler2D sourceTexture;\n\tuniform vec2 sourceInvResolution;\n\tvarying vec2 uv0;\n\tvoid main()\n\t{\n\t\tfloat x = sourceInvResolution.x;\n\t\tfloat y = sourceInvResolution.y;\n\t\tvec3 a = texture2D (sourceTexture, vec2 (uv0.x - x, uv0.y + y)).rgb;\n\t\tvec3 b = texture2D (sourceTexture, vec2 (uv0.x,\t uv0.y + y)).rgb;\n\t\tvec3 c = texture2D (sourceTexture, vec2 (uv0.x + x, uv0.y + y)).rgb;\n\t\tvec3 d = texture2D (sourceTexture, vec2 (uv0.x - x, uv0.y)).rgb;\n\t\tvec3 e = texture2D (sourceTexture, vec2 (uv0.x,\t uv0.y)).rgb;\n\t\tvec3 f = texture2D (sourceTexture, vec2 (uv0.x + x, uv0.y)).rgb;\n\t\tvec3 g = texture2D (sourceTexture, vec2 (uv0.x - x, uv0.y - y)).rgb;\n\t\tvec3 h = texture2D (sourceTexture, vec2 (uv0.x,\t uv0.y - y)).rgb;\n\t\tvec3 i = texture2D (sourceTexture, vec2 (uv0.x + x, uv0.y - y)).rgb;\n\t\tvec3 value = e * 4.0;\n\t\tvalue += (b + d + f + h) * 2.0;\n\t\tvalue += (a + c + g + i);\n\t\tvalue *= 1.0 / 16.0;\n\t\tgl_FragColor = vec4(value, 1.0);\n\t}\n`;var qK=`\n\tvar sourceTexture: texture_2d<f32>;\n\tvar sourceTextureSampler: sampler;\n\tuniform sourceInvResolution: vec2f;\n\tvarying uv0: vec2f;\n\t@fragment\n\tfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\tlet x: f32 = uniform.sourceInvResolution.x;\n\t\tlet y: f32 = uniform.sourceInvResolution.y;\n\t\tlet a: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x - x, input.uv0.y + y)).rgb;\n\t\tlet b: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x,\t input.uv0.y + y)).rgb;\n\t\tlet c: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x + x, input.uv0.y + y)).rgb;\n\t\tlet d: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x - x, input.uv0.y)).rgb;\n\t\tlet e: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x,\t input.uv0.y)).rgb;\n\t\tlet f: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x + x, input.uv0.y)).rgb;\n\t\tlet g: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x - x, input.uv0.y - y)).rgb;\n\t\tlet h: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x,\t input.uv0.y - y)).rgb;\n\t\tlet i: vec3f = textureSample(sourceTexture, sourceTextureSampler, vec2f(input.uv0.x + x, input.uv0.y - y)).rgb;\n\t\tvar value: vec3f = e * 4.0;\n\t\tvalue = value + (b + d + f + h) * 2.0;\n\t\tvalue = value + (a + c + g + i);\n\t\tvalue = value * (1.0 / 16.0);\n\t\toutput.color = vec4f(value, 1.0);\n\t\treturn output;\n\t}\n`;class $K extends Tb{constructor(t,e){super(t);this.sourceTexture=e;yv.get(t,cr).set("upsamplePS",XK);yv.get(t,dr).set("upsamplePS",qK);this.shader=Tv.createShader(t,{uniqueName:"UpSampleShader",attributes:{aPosition:Ki},vertexChunk:"quadVS",fragmentChunk:"upsamplePS"});this.sourceTextureId=t.scope.resolve("sourceTexture");this.sourceInvResolutionId=t.scope.resolve("sourceInvResolution");this.sourceInvResolutionValue=new Float32Array(2)}execute(){this.sourceTextureId.setValue(this.sourceTexture);this.sourceInvResolutionValue[0]=1/this.sourceTexture.width;this.sourceInvResolutionValue[1]=1/this.sourceTexture.height;this.sourceInvResolutionId.setValue(this.sourceInvResolutionValue);super.execute()}}class jK extends Yc{constructor(t,e,s){super(t),this.blurLevel=16,this.renderTargets=[];this._sourceTexture=e;this.textureFormat=s;this.bloomRenderTarget=this.createRenderTarget(0);this.bloomTexture=this.bloomRenderTarget.colorBuffer}destroy(){this.destroyRenderPasses();this.destroyRenderTargets()}destroyRenderTargets(t=0){for(let e=t;e<this.renderTargets.length;e++){const t=this.renderTargets[e];t.destroyTextureBuffers();t.destroy()}this.renderTargets.length=0}destroyRenderPasses(){for(let t=0;t<this.beforePasses.length;t++){this.beforePasses[t].destroy()}this.beforePasses.length=0}createRenderTarget(t){return new il({depth:false,colorBuffer:new lo(this.device,{name:`BloomTexture${t}`,width:1,height:1,format:this.textureFormat,mipmaps:false,minFilter:os,magFilter:os,addressU:pe,addressV:pe})})}createRenderTargets(t){for(let e=0;e<t;e++){const t=e===0?this.bloomRenderTarget:this.createRenderTarget(e);this.renderTargets.push(t)}}calcMipLevels(t,e,s){const i=Math.min(t,e);return Math.floor(Math.log2(i)-Math.log2(s))}createRenderPasses(t){const e=this.device;let s=this._sourceTexture;for(let i=0;i<t;i++){const t=new WK(e,s);const n=this.renderTargets[i];t.init(n,{resizeSource:s,scaleX:.5,scaleY:.5});t.setClearColor(bt.BLACK);this.beforePasses.push(t);s=n.colorBuffer}s=this.renderTargets[t-1].colorBuffer;for(let i=t-2;i>=0;i--){const t=new $K(e,s);const n=this.renderTargets[i];t.init(n);t.blendState=Ro.ADDBLEND;this.beforePasses.push(t);s=n.colorBuffer}}onDisable(){this.renderTargets[0]?.resize(1,1);this.destroyRenderPasses();this.destroyRenderTargets(1)}frameUpdate(){super.frameUpdate();const t=this.calcMipLevels(this._sourceTexture.width,this._sourceTexture.height,1);const e=wt.clamp(t,1,this.blurLevel);if(this.renderTargets.length!==e){this.destroyRenderPasses();this.destroyRenderTargets(1);this.createRenderTargets(e);this.createRenderPasses(e)}}}var YK=`\n\t#include "tonemappingPS"\n\t#include "gammaPS"\n\tvarying vec2 uv0;\n\tuniform sampler2D sceneTexture;\n\tuniform vec2 sceneTextureInvRes;\n\t#include "composeBloomPS"\n\t#include "composeDofPS"\n\t#include "composeSsaoPS"\n\t#include "composeGradingPS"\n\t#include "composeVignettePS"\n\t#include "composeFringingPS"\n\t#include "composeCasPS"\n\t#include "composeColorLutPS"\n\tvoid main() {\n\t\tvec2 uv = uv0;\n\t\t#ifdef TAA\n\t\t#ifdef WEBGPU\n\t\t\tuv.y = 1.0 - uv.y;\n\t\t#endif\n\t\t#endif\n\t\tvec4 scene = texture2DLod(sceneTexture, uv, 0.0);\n\t\tvec3 result = scene.rgb;\n\t\t#ifdef CAS\n\t\t\tresult = applyCas(result, uv, sharpness);\n\t\t#endif\n\t\t#ifdef DOF\n\t\t\tresult = applyDof(result, uv0);\n\t\t#endif\n\t\t#ifdef SSAO_TEXTURE\n\t\t\tresult = applySsao(result, uv0);\n\t\t#endif\n\t\t#ifdef FRINGING\n\t\t\tresult = applyFringing(result, uv);\n\t\t#endif\n\t\t#ifdef BLOOM\n\t\t\tresult = applyBloom(result, uv0);\n\t\t#endif\n\t\t#ifdef GRADING\n\t\t\tresult = applyGrading(result);\n\t\t#endif\n\t\tresult = toneMap(max(vec3(0.0), result));\n\t\t#ifdef COLOR_LUT\n\t\t\tresult = applyColorLUT(result);\n\t\t#endif\n\t\t#ifdef VIGNETTE\n\t\t\tresult = applyVignette(result, uv);\n\t\t#endif\n\t\t#ifdef DEBUG_COMPOSE\n\t\t\t#if DEBUG_COMPOSE == scene\n\t\t\t\tresult = scene.rgb;\n\t\t\t#elif defined(BLOOM) && DEBUG_COMPOSE == bloom\n\t\t\t\tresult = dBloom * bloomIntensity;\n\t\t\t#elif defined(DOF) && DEBUG_COMPOSE == dofcoc\n\t\t\t\tresult = vec3(dCoc, 0.0);\n\t\t\t#elif defined(DOF) && DEBUG_COMPOSE == dofblur\n\t\t\t\tresult = dBlur;\n\t\t\t#elif defined(SSAO_TEXTURE) && DEBUG_COMPOSE == ssao\n\t\t\t\tresult = vec3(dSsao);\n\t\t\t#elif defined(VIGNETTE) && DEBUG_COMPOSE == vignette\n\t\t\t\tresult = vec3(dVignette);\n\t\t\t#endif\n\t\t#endif\n\t\tresult = gammaCorrectOutput(result);\n\t\tgl_FragColor = vec4(result, scene.a);\n\t}\n`;var KK=`\n\t#ifdef BLOOM\n\t\tuniform sampler2D bloomTexture;\n\t\tuniform float bloomIntensity;\n\t\t\n\t\tvec3 dBloom;\n\t\t\n\t\tvec3 applyBloom(vec3 color, vec2 uv) {\n\t\t\tdBloom = texture2DLod(bloomTexture, uv, 0.0).rgb;\n\t\t\treturn color + dBloom * bloomIntensity;\n\t\t}\n\t#endif\n`;var ZK=`\n\t#ifdef DOF\n\t\tuniform sampler2D cocTexture;\n\t\tuniform sampler2D blurTexture;\n\t\t\n\t\tvec2 dCoc;\n\t\tvec3 dBlur;\n\t\tvec3 getDofBlur(vec2 uv) {\n\t\t\tdCoc = texture2DLod(cocTexture, uv, 0.0).rg;\n\t\t\t#if DOF_UPSCALE\n\t\t\t\tvec2 blurTexelSize = 1.0 / vec2(textureSize(blurTexture, 0));\n\t\t\t\tvec3 bilinearBlur = vec3(0.0);\n\t\t\t\tfloat totalWeight = 0.0;\n\t\t\t\tfor (int i = -1; i <= 1; i++) {\n\t\t\t\t\tfor (int j = -1; j <= 1; j++) {\n\t\t\t\t\t\tvec2 offset = vec2(i, j) * blurTexelSize;\n\t\t\t\t\t\tvec2 cocSample = texture2DLod(cocTexture, uv + offset, 0.0).rg;\n\t\t\t\t\t\tvec3 blurSample = texture2DLod(blurTexture, uv + offset, 0.0).rgb;\n\t\t\t\t\t\tfloat cocWeight = clamp(cocSample.r + cocSample.g, 0.0, 1.0);\n\t\t\t\t\t\tbilinearBlur += blurSample * cocWeight;\n\t\t\t\t\t\ttotalWeight += cocWeight;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (totalWeight > 0.0) {\n\t\t\t\t\tbilinearBlur /= totalWeight;\n\t\t\t\t}\n\t\t\t\tdBlur = bilinearBlur;\n\t\t\t\treturn bilinearBlur;\n\t\t\t#else\n\t\t\t\tdBlur = texture2DLod(blurTexture, uv, 0.0).rgb;\n\t\t\t\treturn dBlur;\n\t\t\t#endif\n\t\t}\n\t\tvec3 applyDof(vec3 color, vec2 uv) {\n\t\t\tvec3 blur = getDofBlur(uv);\n\t\t\treturn mix(color, blur, dCoc.r + dCoc.g);\n\t\t}\n\t#endif\n`;var QK=`\n\t#ifdef SSAO\n\t\t#define SSAO_TEXTURE\n\t#endif\n\t#if DEBUG_COMPOSE == ssao\n\t\t#define SSAO_TEXTURE\n\t#endif\n\t#ifdef SSAO_TEXTURE\n\t\tuniform sampler2D ssaoTexture;\n\t\t\n\t\tfloat dSsao;\n\t\t\n\t\tvec3 applySsao(vec3 color, vec2 uv) {\n\t\t\tdSsao = texture2DLod(ssaoTexture, uv, 0.0).r;\n\t\t\t\n\t\t\t#ifdef SSAO\n\t\t\t\treturn color * dSsao;\n\t\t\t#else\n\t\t\t\treturn color;\n\t\t\t#endif\n\t\t}\n\t#endif\n`;var JK=`\n\t#ifdef GRADING\n\t\tuniform vec3 brightnessContrastSaturation;\n\t\tuniform vec3 tint;\n\t\tvec3 colorGradingHDR(vec3 color, float brt, float sat, float con) {\n\t\t\tcolor *= tint;\n\t\t\tcolor = color * brt;\n\t\t\tfloat grey = dot(color, vec3(0.3, 0.59, 0.11));\n\t\t\tgrey = grey / max(1.0, max(color.r, max(color.g, color.b)));\n\t\t\tcolor = mix(vec3(grey), color, sat);\n\t\t\treturn mix(vec3(0.5), color, con);\n\t\t}\n\t\tvec3 applyGrading(vec3 color) {\n\t\t\treturn colorGradingHDR(color, \n\t\t\t\tbrightnessContrastSaturation.x, \n\t\t\t\tbrightnessContrastSaturation.z, \n\t\t\t\tbrightnessContrastSaturation.y);\n\t\t}\n\t#endif\n`;var tZ=`\n\t#ifdef VIGNETTE\n\t\tuniform vec4 vignetterParams;\n\t\t\n\t\tfloat dVignette;\n\t\t\n\t\tfloat calcVignette(vec2 uv) {\n\t\t\tfloat inner = vignetterParams.x;\n\t\t\tfloat outer = vignetterParams.y;\n\t\t\tfloat curvature = vignetterParams.z;\n\t\t\tfloat intensity = vignetterParams.w;\n\t\t\tvec2 curve = pow(abs(uv * 2.0 -1.0), vec2(1.0 / curvature));\n\t\t\tfloat edge = pow(length(curve), curvature);\n\t\t\tdVignette = 1.0 - intensity * smoothstep(inner, outer, edge);\n\t\t\treturn dVignette;\n\t\t}\n\t\tvec3 applyVignette(vec3 color, vec2 uv) {\n\t\t\treturn color * calcVignette(uv);\n\t\t}\n\t#endif\n`;var eZ=`\n\t#ifdef FRINGING\n\t\tuniform float fringingIntensity;\n\t\tvec3 applyFringing(vec3 color, vec2 uv) {\n\t\t\tvec2 centerDistance = uv - 0.5;\n\t\t\tvec2 offset = fringingIntensity * pow(centerDistance, vec2(2.0, 2.0));\n\t\t\tcolor.r = texture2D(sceneTexture, uv - offset).r;\n\t\t\tcolor.b = texture2D(sceneTexture, uv + offset).b;\n\t\t\treturn color;\n\t\t}\n\t#endif\n`;var sZ=`\n\t#ifdef CAS\n\t\tuniform float sharpness;\n\t\tfloat maxComponent(float x, float y, float z) { return max(x, max(y, z)); }\n\t\tvec3 toSDR(vec3 c) { return c / (1.0 + maxComponent(c.r, c.g, c.b)); }\n\t\tvec3 toHDR(vec3 c) { return c / (1.0 - maxComponent(c.r, c.g, c.b)); }\n\t\tvec3 applyCas(vec3 color, vec2 uv, float sharpness) {\n\t\t\tfloat x = sceneTextureInvRes.x;\n\t\t\tfloat y = sceneTextureInvRes.y;\n\t\t\tvec3 a = toSDR(texture2DLod(sceneTexture, uv + vec2(0.0, -y), 0.0).rgb);\n\t\t\tvec3 b = toSDR(texture2DLod(sceneTexture, uv + vec2(-x, 0.0), 0.0).rgb);\n\t\t\tvec3 c = toSDR(color.rgb);\n\t\t\tvec3 d = toSDR(texture2DLod(sceneTexture, uv + vec2(x, 0.0), 0.0).rgb);\n\t\t\tvec3 e = toSDR(texture2DLod(sceneTexture, uv + vec2(0.0, y), 0.0).rgb);\n\t\t\tfloat min_g = min(a.g, min(b.g, min(c.g, min(d.g, e.g))));\n\t\t\tfloat max_g = max(a.g, max(b.g, max(c.g, max(d.g, e.g))));\n\t\t\tfloat sharpening_amount = sqrt(min(1.0 - max_g, min_g) / max_g);\n\t\t\tfloat w = sharpening_amount * sharpness;\n\t\t\tvec3 res = (w * (a + b + d + e) + c) / (4.0 * w + 1.0);\n\t\t\tres = max(res, 0.0);\n\t\t\treturn toHDR(res);\n\t\t}\n\t#endif\n`;var iZ=`\n\t#ifdef COLOR_LUT\n\t\tuniform sampler2D colorLUT;\n\t\tuniform vec4 colorLUTParams;\n\t\tvec3 applyColorLUT(vec3 color) {\n\t\t\tvec3 c = clamp(color, 0.0, 1.0);\n\t\t\tfloat width = colorLUTParams.x;\n\t\t\tfloat height = colorLUTParams.y;\n\t\t\tfloat maxColor = colorLUTParams.z;\n\t\t\tfloat cell = c.b * maxColor;\n\t\t\tfloat cell_l = floor(cell);\n\t\t\tfloat cell_h = ceil(cell);\n\t\t\tfloat half_px_x = 0.5 / width;\n\t\t\tfloat half_px_y = 0.5 / height;\n\t\t\tfloat r_offset = half_px_x + c.r / height * (maxColor / height);\n\t\t\tfloat g_offset = half_px_y + c.g * (maxColor / height);\n\t\t\tvec2 uv_l = vec2(cell_l / height + r_offset, g_offset);\n\t\t\tvec2 uv_h = vec2(cell_h / height + r_offset, g_offset);\n\t\t\tvec3 color_l = texture2DLod(colorLUT, uv_l, 0.0).rgb;\n\t\t\tvec3 color_h = texture2DLod(colorLUT, uv_h, 0.0).rgb;\n\t\t\tvec3 lutColor = mix(color_l, color_h, fract(cell));\n\t\t\treturn mix(color, lutColor, colorLUTParams.w);\n\t\t}\n\t#endif\n`;const nZ={composePS:YK,composeBloomPS:KK,composeDofPS:ZK,composeSsaoPS:QK,composeGradingPS:JK,composeVignettePS:tZ,composeFringingPS:eZ,composeCasPS:sZ,composeColorLutPS:iZ};var rZ=`\n\t#include "tonemappingPS"\n\t#include "gammaPS"\n\tvarying uv0: vec2f;\n\tvar sceneTexture: texture_2d<f32>;\n\tvar sceneTextureSampler: sampler;\n\tuniform sceneTextureInvRes: vec2f;\n\t#include "composeBloomPS"\n\t#include "composeDofPS"\n\t#include "composeSsaoPS"\n\t#include "composeGradingPS"\n\t#include "composeVignettePS"\n\t#include "composeFringingPS"\n\t#include "composeCasPS"\n\t#include "composeColorLutPS"\n\t@fragment\n\tfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\tvar uv = uv0;\n\t\t#ifdef TAA\n\t\t\tuv.y = 1.0 - uv.y;\n\t\t#endif\n\t\tlet scene = textureSampleLevel(sceneTexture, sceneTextureSampler, uv, 0.0);\n\t\tvar result = scene.rgb;\n\t\t#ifdef CAS\n\t\t\tresult = applyCas(result, uv, uniform.sharpness);\n\t\t#endif\n\t\t#ifdef DOF\n\t\t\tresult = applyDof(result, uv0);\n\t\t#endif\n\t\t#ifdef SSAO_TEXTURE\n\t\t\tresult = applySsao(result, uv0);\n\t\t#endif\n\t\t#ifdef FRINGING\n\t\t\tresult = applyFringing(result, uv);\n\t\t#endif\n\t\t#ifdef BLOOM\n\t\t\tresult = applyBloom(result, uv0);\n\t\t#endif\n\t\t#ifdef GRADING\n\t\t\tresult = applyGrading(result);\n\t\t#endif\n\t\tresult = toneMap(max(vec3f(0.0), result));\n\t\t#ifdef COLOR_LUT\n\t\t\tresult = applyColorLUT(result);\n\t\t#endif\n\t\t#ifdef VIGNETTE\n\t\t\tresult = applyVignette(result, uv);\n\t\t#endif\n\t\t#ifdef DEBUG_COMPOSE\n\t\t\t#if DEBUG_COMPOSE == scene\n\t\t\t\tresult = scene.rgb;\n\t\t\t#elif defined(BLOOM) && DEBUG_COMPOSE == bloom\n\t\t\t\tresult = dBloom * uniform.bloomIntensity;\n\t\t\t#elif defined(DOF) && DEBUG_COMPOSE == dofcoc\n\t\t\t\tresult = vec3f(dCoc, 0.0);\n\t\t\t#elif defined(DOF) && DEBUG_COMPOSE == dofblur\n\t\t\t\tresult = dBlur;\n\t\t\t#elif defined(SSAO_TEXTURE) && DEBUG_COMPOSE == ssao\n\t\t\t\tresult = vec3f(dSsao);\n\t\t\t#elif defined(VIGNETTE) && DEBUG_COMPOSE == vignette\n\t\t\t\tresult = vec3f(dVignette);\n\t\t\t#endif\n\t\t#endif\n\t\tresult = gammaCorrectOutput(result);\n\t\toutput.color = vec4f(result, scene.a);\n\t\treturn output;\n\t}\n`;var aZ=`\n\t#ifdef BLOOM\n\t\tvar bloomTexture: texture_2d<f32>;\n\t\tvar bloomTextureSampler: sampler;\n\t\tuniform bloomIntensity: f32;\n\t\t\n\t\tvar<private> dBloom: vec3f;\n\t\t\n\t\tfn applyBloom(color: vec3f, uv: vec2f) -> vec3f {\n\t\t\tdBloom = textureSampleLevel(bloomTexture, bloomTextureSampler, uv, 0.0).rgb;\n\t\t\treturn color + dBloom * uniform.bloomIntensity;\n\t\t}\n\t#endif\n`;var oZ=`\n\t#ifdef DOF\n\t\tvar cocTexture: texture_2d<f32>;\n\t\tvar cocTextureSampler: sampler;\n\t\tvar blurTexture: texture_2d<f32>;\n\t\tvar blurTextureSampler: sampler;\n\t\t\n\t\tvar<private> dCoc: vec2f;\n\t\tvar<private> dBlur: vec3f;\n\t\tfn getDofBlur(uv: vec2f) -> vec3f {\n\t\t\tdCoc = textureSampleLevel(cocTexture, cocTextureSampler, uv, 0.0).rg;\n\t\t\t#if DOF_UPSCALE\n\t\t\t\tlet blurTexelSize = 1.0 / vec2f(textureDimensions(blurTexture, 0));\n\t\t\t\tvar bilinearBlur = vec3f(0.0);\n\t\t\t\tvar totalWeight = 0.0;\n\t\t\t\tfor (var i = -1; i <= 1; i++) {\n\t\t\t\t\tfor (var j = -1; j <= 1; j++) {\n\t\t\t\t\t\tlet offset = vec2f(f32(i), f32(j)) * blurTexelSize;\n\t\t\t\t\t\tlet cocSample = textureSampleLevel(cocTexture, cocTextureSampler, uv + offset, 0.0).rg;\n\t\t\t\t\t\tlet blurSample = textureSampleLevel(blurTexture, blurTextureSampler, uv + offset, 0.0).rgb;\n\t\t\t\t\t\tlet cocWeight = clamp(cocSample.r + cocSample.g, 0.0, 1.0);\n\t\t\t\t\t\tbilinearBlur += blurSample * cocWeight;\n\t\t\t\t\t\ttotalWeight += cocWeight;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (totalWeight > 0.0) {\n\t\t\t\t\tbilinearBlur /= totalWeight;\n\t\t\t\t}\n\t\t\t\tdBlur = bilinearBlur;\n\t\t\t\treturn bilinearBlur;\n\t\t\t#else\n\t\t\t\tdBlur = textureSampleLevel(blurTexture, blurTextureSampler, uv, 0.0).rgb;\n\t\t\t\treturn dBlur;\n\t\t\t#endif\n\t\t}\n\t\tfn applyDof(color: vec3f, uv: vec2f) -> vec3f {\n\t\t\tlet blur = getDofBlur(uv);\n\t\t\treturn mix(color, blur, dCoc.r + dCoc.g);\n\t\t}\n\t#endif\n`;var lZ=`\n\t#ifdef SSAO\n\t\t#define SSAO_TEXTURE\n\t#endif\n\t#if DEBUG_COMPOSE == ssao\n\t\t#define SSAO_TEXTURE\n\t#endif\n\t#ifdef SSAO_TEXTURE\n\t\tvar ssaoTexture: texture_2d<f32>;\n\t\tvar ssaoTextureSampler: sampler;\n\t\t\n\t\tvar<private> dSsao: f32;\n\t\t\n\t\tfn applySsao(color: vec3f, uv: vec2f) -> vec3f {\n\t\t\tdSsao = textureSampleLevel(ssaoTexture, ssaoTextureSampler, uv, 0.0).r;\n\t\t\t\n\t\t\t#ifdef SSAO\n\t\t\t\treturn color * dSsao;\n\t\t\t#else\n\t\t\t\treturn color;\n\t\t\t#endif\n\t\t}\n\t#endif\n`;var hZ=`\n\t#ifdef GRADING\n\t\tuniform brightnessContrastSaturation: vec3f;\n\t\tuniform tint: vec3f;\n\t\tfn colorGradingHDR(color: vec3f, brt: f32, sat: f32, con: f32) -> vec3f {\n\t\t\tvar colorOut = color * uniform.tint;\n\t\t\tcolorOut = colorOut * brt;\n\t\t\tlet grey = dot(colorOut, vec3f(0.3, 0.59, 0.11));\n\t\t\tlet normalizedGrey = grey / max(1.0, max(colorOut.r, max(colorOut.g, colorOut.b)));\n\t\t\tcolorOut = mix(vec3f(normalizedGrey), colorOut, sat);\n\t\t\treturn mix(vec3f(0.5), colorOut, con);\n\t\t}\n\t\tfn applyGrading(color: vec3f) -> vec3f {\n\t\t\treturn colorGradingHDR(color, \n\t\t\t\tuniform.brightnessContrastSaturation.x, \n\t\t\t\tuniform.brightnessContrastSaturation.z, \n\t\t\t\tuniform.brightnessContrastSaturation.y);\n\t\t}\n\t#endif\n`;var cZ=`\n\t#ifdef VIGNETTE\n\t\tuniform vignetterParams: vec4f;\n\t\t\n\t\tvar<private> dVignette: f32;\n\t\t\n\t\tfn calcVignette(uv: vec2f) -> f32 {\n\t\t\tlet inner = uniform.vignetterParams.x;\n\t\t\tlet outer = uniform.vignetterParams.y;\n\t\t\tlet curvature = uniform.vignetterParams.z;\n\t\t\tlet intensity = uniform.vignetterParams.w;\n\t\t\tlet curve = pow(abs(uv * 2.0 - 1.0), vec2f(1.0 / curvature));\n\t\t\tlet edge = pow(length(curve), curvature);\n\t\t\tdVignette = 1.0 - intensity * smoothstep(inner, outer, edge);\n\t\t\treturn dVignette;\n\t\t}\n\t\tfn applyVignette(color: vec3f, uv: vec2f) -> vec3f {\n\t\t\treturn color * calcVignette(uv);\n\t\t}\n\t#endif\n`;var dZ=`\n\t#ifdef FRINGING\n\t\tuniform fringingIntensity: f32;\n\t\tfn applyFringing(color: vec3f, uv: vec2f) -> vec3f {\n\t\t\tlet centerDistance = uv - 0.5;\n\t\t\tlet offset = uniform.fringingIntensity * pow(centerDistance, vec2f(2.0));\n\t\t\tvar colorOut = color;\n\t\t\tcolorOut.r = textureSample(sceneTexture, sceneTextureSampler, uv - offset).r;\n\t\t\tcolorOut.b = textureSample(sceneTexture, sceneTextureSampler, uv + offset).b;\n\t\t\treturn colorOut;\n\t\t}\n\t#endif\n`;var uZ=`\n\t#ifdef CAS\n\t\tuniform sharpness: f32;\n\t\tfn maxComponent(x: f32, y: f32, z: f32) -> f32 { return max(x, max(y, z)); }\n\t\tfn toSDR(c: vec3f) -> vec3f { return c / (1.0 + maxComponent(c.r, c.g, c.b)); }\n\t\tfn toHDR(c: vec3f) -> vec3f { return c / (1.0 - maxComponent(c.r, c.g, c.b)); }\n\t\tfn applyCas(color: vec3f, uv: vec2f, sharpness: f32) -> vec3f {\n\t\t\tlet x = uniform.sceneTextureInvRes.x;\n\t\t\tlet y = uniform.sceneTextureInvRes.y;\n\t\t\tlet a = toSDR(textureSampleLevel(sceneTexture, sceneTextureSampler, uv + vec2f(0.0, -y), 0.0).rgb);\n\t\t\tlet b = toSDR(textureSampleLevel(sceneTexture, sceneTextureSampler, uv + vec2f(-x, 0.0), 0.0).rgb);\n\t\t\tlet c = toSDR(color.rgb);\n\t\t\tlet d = toSDR(textureSampleLevel(sceneTexture, sceneTextureSampler, uv + vec2f(x, 0.0), 0.0).rgb);\n\t\t\tlet e = toSDR(textureSampleLevel(sceneTexture, sceneTextureSampler, uv + vec2f(0.0, y), 0.0).rgb);\n\t\t\tlet min_g = min(a.g, min(b.g, min(c.g, min(d.g, e.g))));\n\t\t\tlet max_g = max(a.g, max(b.g, max(c.g, max(d.g, e.g))));\n\t\t\tlet sharpening_amount = sqrt(min(1.0 - max_g, min_g) / max_g);\n\t\t\tlet w = sharpening_amount * uniform.sharpness;\n\t\t\tvar res = (w * (a + b + d + e) + c) / (4.0 * w + 1.0);\n\t\t\tres = max(res, vec3f(0.0));\n\t\t\treturn toHDR(res);\n\t\t}\n\t#endif\n`;var fZ=`\n\t#ifdef COLOR_LUT\n\t\tvar colorLUT: texture_2d<f32>;\n\t\tvar colorLUTSampler: sampler;\n\t\tuniform colorLUTParams: vec4f;\n\t\tfn applyColorLUT(color: vec3f) -> vec3f {\n\t\t\tvar c: vec3f = clamp(color, vec3f(0.0), vec3f(1.0));\n\t\t\tlet width: f32 = uniform.colorLUTParams.x;\n\t\t\tlet height: f32 = uniform.colorLUTParams.y;\n\t\t\tlet maxColor: f32 = uniform.colorLUTParams.z;\n\t\t\tlet cell: f32 = c.b * maxColor;\n\t\t\tlet cell_l: f32 = floor(cell);\n\t\t\tlet cell_h: f32 = ceil(cell);\n\t\t\tlet half_px_x: f32 = 0.5 / width;\n\t\t\tlet half_px_y: f32 = 0.5 / height;\n\t\t\tlet r_offset: f32 = half_px_x + c.r / height * (maxColor / height);\n\t\t\tlet g_offset: f32 = half_px_y + c.g * (maxColor / height);\n\t\t\tlet uv_l: vec2f = vec2f(cell_l / height + r_offset, g_offset);\n\t\t\tlet uv_h: vec2f = vec2f(cell_h / height + r_offset, g_offset);\n\t\t\tlet color_l: vec3f = textureSampleLevel(colorLUT, colorLUTSampler, uv_l, 0.0).rgb;\n\t\t\tlet color_h: vec3f = textureSampleLevel(colorLUT, colorLUTSampler, uv_h, 0.0).rgb;\n\t\t\tlet lutColor: vec3f = mix(color_l, color_h, fract(cell));\n\t\t\treturn mix(color, lutColor, uniform.colorLUTParams.w);\n\t\t}\n\t#endif\n`;const pZ={composePS:rZ,composeBloomPS:aZ,composeDofPS:oZ,composeSsaoPS:lZ,composeGradingPS:hZ,composeVignettePS:cZ,composeFringingPS:dZ,composeCasPS:uZ,composeColorLutPS:fZ};class mZ extends Tb{constructor(t){super(t),this.sceneTexture=null,this.bloomIntensity=.01,this._bloomTexture=null,this._cocTexture=null,this.blurTexture=null,this.blurTextureUpscale=false,this._ssaoTexture=null,this._toneMapping=E_,this._gradingEnabled=false,this.gradingSaturation=1,this.gradingContrast=1,this.gradingBrightness=1,this.gradingTint=new bt(1,1,1,1),this._shaderDirty=true,this._vignetteEnabled=false,this.vignetteInner=.5,this.vignetteOuter=1,this.vignetteCurvature=.5,this.vignetteIntensity=.3,this._fringingEnabled=false,this.fringingIntensity=10,this._taaEnabled=false,this._sharpness=.5,this._gammaCorrection=w_,this._colorLUT=null,this.colorLUTIntensity=1,this._key="",this._debug=null;yv.get(t,cr).add(nZ);yv.get(t,dr).add(pZ);const{scope:e}=t;this.sceneTextureId=e.resolve("sceneTexture");this.bloomTextureId=e.resolve("bloomTexture");this.cocTextureId=e.resolve("cocTexture");this.ssaoTextureId=e.resolve("ssaoTexture");this.blurTextureId=e.resolve("blurTexture");this.bloomIntensityId=e.resolve("bloomIntensity");this.bcsId=e.resolve("brightnessContrastSaturation");this.tintId=e.resolve("tint");this.vignetterParamsId=e.resolve("vignetterParams");this.fringingIntensityId=e.resolve("fringingIntensity");this.sceneTextureInvResId=e.resolve("sceneTextureInvRes");this.sceneTextureInvResValue=new Float32Array(2);this.sharpnessId=e.resolve("sharpness");this.colorLUTId=e.resolve("colorLUT");this.colorLUTParams=new Float32Array(4);this.colorLUTParamsId=e.resolve("colorLUTParams")}set debug(t){if(this._debug!==t){this._debug=t;this._shaderDirty=true}}get debug(){return this._debug}set colorLUT(t){if(this._colorLUT!==t){this._colorLUT=t;this._shaderDirty=true}}get colorLUT(){return this._colorLUT}set bloomTexture(t){if(this._bloomTexture!==t){this._bloomTexture=t;this._shaderDirty=true}}get bloomTexture(){return this._bloomTexture}set cocTexture(t){if(this._cocTexture!==t){this._cocTexture=t;this._shaderDirty=true}}get cocTexture(){return this._cocTexture}set ssaoTexture(t){if(this._ssaoTexture!==t){this._ssaoTexture=t;this._shaderDirty=true}}get ssaoTexture(){return this._ssaoTexture}set taaEnabled(t){if(this._taaEnabled!==t){this._taaEnabled=t;this._shaderDirty=true}}get taaEnabled(){return this._taaEnabled}set gradingEnabled(t){if(this._gradingEnabled!==t){this._gradingEnabled=t;this._shaderDirty=true}}get gradingEnabled(){return this._gradingEnabled}set vignetteEnabled(t){if(this._vignetteEnabled!==t){this._vignetteEnabled=t;this._shaderDirty=true}}get vignetteEnabled(){return this._vignetteEnabled}set fringingEnabled(t){if(this._fringingEnabled!==t){this._fringingEnabled=t;this._shaderDirty=true}}get fringingEnabled(){return this._fringingEnabled}set toneMapping(t){if(this._toneMapping!==t){this._toneMapping=t;this._shaderDirty=true}}get toneMapping(){return this._toneMapping}set sharpness(t){if(this._sharpness!==t){this._sharpness=t;this._shaderDirty=true}}get sharpness(){return this._sharpness}get isSharpnessEnabled(){return this._sharpness>0}postInit(){this.setClearColor(bt.BLACK);this.setClearDepth(1);this.setClearStencil(0)}frameUpdate(){const t=this.renderTarget??this.device.backBuffer;const e=t.isColorBufferSrgb(0);const s=e?T_:w_;if(this._gammaCorrection!==s){this._gammaCorrection=s;this._shaderDirty=true}if(this._shaderDirty){this._shaderDirty=false;const t=b_[this._gammaCorrection];const e=`${this.toneMapping}`+`-${t}`+`-${this.bloomTexture?"bloom":"nobloom"}`+`-${this.cocTexture?"dof":"nodof"}`+`-${this.blurTextureUpscale?"dofupscale":""}`+`-${this.ssaoTexture?"ssao":"nossao"}`+`-${this.gradingEnabled?"grading":"nograding"}`+`-${this.colorLUT?"colorlut":"nocolorlut"}`+`-${this.vignetteEnabled?"vignette":"novignette"}`+`-${this.fringingEnabled?"fringing":"nofringing"}`+`-${this.taaEnabled?"taa":"notaa"}`+`-${this.isSharpnessEnabled?"cas":"nocas"}`+`-${this._debug??""}`;if(this._key!==e){this._key=e;const s=new Map;s.set("TONEMAP",I_[this.toneMapping]);s.set("GAMMA",t);if(this.bloomTexture)s.set("BLOOM",true);if(this.cocTexture)s.set("DOF",true);if(this.blurTextureUpscale)s.set("DOF_UPSCALE",true);if(this.ssaoTexture)s.set("SSAO",true);if(this.gradingEnabled)s.set("GRADING",true);if(this.colorLUT)s.set("COLOR_LUT",true);if(this.vignetteEnabled)s.set("VIGNETTE",true);if(this.fringingEnabled)s.set("FRINGING",true);if(this.taaEnabled)s.set("TAA",true);if(this.isSharpnessEnabled)s.set("CAS",true);if(this._debug)s.set("DEBUG_COMPOSE",this._debug);const i=new Map(yv.get(this.device,this.device.isWebGPU?dr:cr));this.shader=Tv.createShader(this.device,{uniqueName:`ComposeShader-${e}`,attributes:{aPosition:Ki},vertexChunk:"quadVS",fragmentChunk:"composePS",fragmentDefines:s,fragmentIncludes:i})}}}execute(){this.sceneTextureId.setValue(this.sceneTexture);this.sceneTextureInvResValue[0]=1/this.sceneTexture.width;this.sceneTextureInvResValue[1]=1/this.sceneTexture.height;this.sceneTextureInvResId.setValue(this.sceneTextureInvResValue);if(this._bloomTexture){this.bloomTextureId.setValue(this._bloomTexture);this.bloomIntensityId.setValue(this.bloomIntensity)}if(this._cocTexture){this.cocTextureId.setValue(this._cocTexture);this.blurTextureId.setValue(this.blurTexture)}if(this._ssaoTexture){this.ssaoTextureId.setValue(this._ssaoTexture)}if(this._gradingEnabled){this.bcsId.setValue([this.gradingBrightness,this.gradingContrast,this.gradingSaturation]);this.tintId.setValue([this.gradingTint.r,this.gradingTint.g,this.gradingTint.b])}const t=this._colorLUT;if(t){this.colorLUTParams[0]=t.width;this.colorLUTParams[1]=t.height;this.colorLUTParams[2]=t.height-1;this.colorLUTParams[3]=this.colorLUTIntensity;this.colorLUTParamsId.setValue(this.colorLUTParams);this.colorLUTId.setValue(t)}if(this._vignetteEnabled){this.vignetterParamsId.setValue([this.vignetteInner,this.vignetteOuter,this.vignetteCurvature,this.vignetteIntensity])}if(this._fringingEnabled){this.fringingIntensityId.setValue(this.fringingIntensity/1024)}if(this.isSharpnessEnabled){this.sharpnessId.setValue(wt.lerp(-.125,-.2,this.sharpness))}super.execute()}}var _Z=`\nvec4 SampleTextureCatmullRom(TEXTURE_ACCEPT(tex), vec2 uv, vec2 texSize) {\n\tvec2 samplePos = uv * texSize;\n\tvec2 texPos1 = floor(samplePos - 0.5) + 0.5;\n\tvec2 f = samplePos - texPos1;\n\tvec2 w0 = f * (-0.5 + f * (1.0 - 0.5 * f));\n\tvec2 w1 = 1.0 + f * f * (-2.5 + 1.5 * f);\n\tvec2 w2 = f * (0.5 + f * (2.0 - 1.5 * f));\n\tvec2 w3 = f * f * (-0.5 + 0.5 * f);\n\tvec2 w12 = w1 + w2;\n\tvec2 offset12 = w2 / (w1 + w2);\n\tvec2 texPos0 = (texPos1 - 1.0) / texSize;\n\tvec2 texPos3 = (texPos1 + 2.0) / texSize;\n\tvec2 texPos12 = (texPos1 + offset12) / texSize;\n\tvec4 result = vec4(0.0);\n\tresult += texture2DLod(tex, vec2(texPos0.x, texPos0.y), 0.0) * w0.x * w0.y;\n\tresult += texture2DLod(tex, vec2(texPos12.x, texPos0.y), 0.0) * w12.x * w0.y;\n\tresult += texture2DLod(tex, vec2(texPos3.x, texPos0.y), 0.0) * w3.x * w0.y;\n\tresult += texture2DLod(tex, vec2(texPos0.x, texPos12.y), 0.0) * w0.x * w12.y;\n\tresult += texture2DLod(tex, vec2(texPos12.x, texPos12.y), 0.0) * w12.x * w12.y;\n\tresult += texture2DLod(tex, vec2(texPos3.x, texPos12.y), 0.0) * w3.x * w12.y;\n\tresult += texture2DLod(tex, vec2(texPos0.x, texPos3.y), 0.0) * w0.x * w3.y;\n\tresult += texture2DLod(tex, vec2(texPos12.x, texPos3.y), 0.0) * w12.x * w3.y;\n\tresult += texture2DLod(tex, vec2(texPos3.x, texPos3.y), 0.0) * w3.x * w3.y;\n\treturn result;\n}\n`;var gZ=`\nfn SampleTextureCatmullRom(tex: texture_2d<f32>, texSampler: sampler, uv: vec2f, texSize: vec2f) -> vec4f {\n\tlet samplePos: vec2f = uv * texSize;\n\tlet texPos1: vec2f = floor(samplePos - 0.5) + 0.5;\n\tlet f: vec2f = samplePos - texPos1;\n\tlet w0: vec2f = f * (-0.5 + f * (1.0 - 0.5 * f));\n\tlet w1: vec2f = 1.0 + f * f * (-2.5 + 1.5 * f);\n\tlet w2: vec2f = f * (0.5 + f * (2.0 - 1.5 * f));\n\tlet w3: vec2f = f * f * (-0.5 + 0.5 * f);\n\tlet w12: vec2f = w1 + w2;\n\tlet offset12: vec2f = w2 / w12;\n\tlet texPos0: vec2f = (texPos1 - 1.0) / texSize;\n\tlet texPos3: vec2f = (texPos1 + 2.0) / texSize;\n\tlet texPos12: vec2f = (texPos1 + offset12) / texSize;\n\tvar result: vec4f = vec4f(0.0);\n\tresult = result + textureSampleLevel(tex, texSampler, vec2f(texPos0.x, texPos0.y), 0.0) * w0.x * w0.y;\n\tresult = result + textureSampleLevel(tex, texSampler, vec2f(texPos12.x, texPos0.y), 0.0) * w12.x * w0.y;\n\tresult = result + textureSampleLevel(tex, texSampler, vec2f(texPos3.x, texPos0.y), 0.0) * w3.x * w0.y;\n\tresult = result + textureSampleLevel(tex, texSampler, vec2f(texPos0.x, texPos12.y), 0.0) * w0.x * w12.y;\n\tresult = result + textureSampleLevel(tex, texSampler, vec2f(texPos12.x, texPos12.y), 0.0) * w12.x * w12.y;\n\tresult = result + textureSampleLevel(tex, texSampler, vec2f(texPos3.x, texPos12.y), 0.0) * w3.x * w12.y;\n\tresult = result + textureSampleLevel(tex, texSampler, vec2f(texPos0.x, texPos3.y), 0.0) * w0.x * w3.y;\n\tresult = result + textureSampleLevel(tex, texSampler, vec2f(texPos12.x, texPos3.y), 0.0) * w12.x * w3.y;\n\tresult = result + textureSampleLevel(tex, texSampler, vec2f(texPos3.x, texPos3.y), 0.0) * w3.x * w3.y;\n\treturn result;\n}\n`;var vZ=`\n\t#include  "sampleCatmullRomPS"\n\t#include  "screenDepthPS"\n\tuniform sampler2D sourceTexture;\n\tuniform sampler2D historyTexture;\n\tuniform mat4 matrix_viewProjectionPrevious;\n\tuniform mat4 matrix_viewProjectionInverse;\n\tuniform vec4 jitters;\n\tuniform vec2 textureSize;\n\tvarying vec2 uv0;\n\tvec2 reproject(vec2 uv, float depth) {\n\t\t#ifndef WEBGPU\n\t\t\tdepth = depth * 2.0 - 1.0;\n\t\t#endif\n\t\tvec4 ndc = vec4(uv * 2.0 - 1.0, depth, 1.0);\n\t\tndc.xy -= jitters.xy;\n\t\tvec4 worldPosition = matrix_viewProjectionInverse * ndc;\n\t\tworldPosition /= worldPosition.w;\n\t\tvec4 screenPrevious = matrix_viewProjectionPrevious * worldPosition;\n\t\treturn (screenPrevious.xy / screenPrevious.w) * 0.5 + 0.5;\n\t}\n\tvec4 colorClamp(vec2 uv, vec4 historyColor) {\n\t\tvec3 minColor = vec3(9999.0);\n\t\tvec3 maxColor = vec3(-9999.0);\n\t\tfor(float x = -1.0; x <= 1.0; ++x) {\n\t\t\tfor(float y = -1.0; y <= 1.0; ++y) {\n\t\t\t\tvec3 color = texture2D(sourceTexture, uv + vec2(x, y) / textureSize).rgb;\n\t\t\t\tminColor = min(minColor, color);\n\t\t\t\tmaxColor = max(maxColor, color);\n\t\t\t}\n\t\t}\n\t\tvec3 clamped = clamp(historyColor.rgb, minColor, maxColor);\n\t\treturn vec4(clamped, historyColor.a);\n\t}\n\tvoid main()\n\t{\n\t\tvec2 uv = uv0;\n\t\t#ifdef WEBGPU\n\t\t\tuv.y = 1.0 - uv.y;\n\t\t#endif\n\t\tvec4 srcColor = texture2D(sourceTexture, uv);\n\t\tfloat linearDepth = getLinearScreenDepth(uv0);\n\t\tfloat depth = delinearizeDepth(linearDepth);\n\t\tvec2 historyUv = reproject(uv0, depth);\n\t\t#ifdef QUALITY_HIGH\n\t\t\tvec4 historyColor = SampleTextureCatmullRom(TEXTURE_PASS(historyTexture), historyUv, textureSize);\n\t\t#else\n\t\t\tvec4 historyColor = texture2D(historyTexture, historyUv);\n\t\t#endif\n\t\tvec4 historyColorClamped = colorClamp(uv, historyColor);\n\t\tfloat mixFactor = (historyUv.x < 0.0 || historyUv.x > 1.0 || historyUv.y < 0.0 || historyUv.y > 1.0) ?\n\t\t\t1.0 : 0.05;\n\t\tgl_FragColor = mix(historyColorClamped, srcColor, mixFactor);\n\t}\n`;var yZ=`\n\t#include "sampleCatmullRomPS"\n\t#include "screenDepthPS"\n\tvar sourceTexture: texture_2d<f32>;\n\tvar sourceTextureSampler: sampler;\n\tvar historyTexture: texture_2d<f32>;\n\tvar historyTextureSampler: sampler;\n\tuniform matrix_viewProjectionPrevious: mat4x4f;\n\tuniform matrix_viewProjectionInverse: mat4x4f;\n\tuniform jitters: vec4f;\n\tuniform textureSize: vec2f;\n\tvarying uv0: vec2f;\n\tfn reproject(uv: vec2f, depth: f32) -> vec2f {\n\t\tvar ndc = vec4f(uv * 2.0 - 1.0, depth, 1.0);\n\t\tndc = vec4f(ndc.xy - uniform.jitters.xy, ndc.zw);\n\t\tvar worldPosition = uniform.matrix_viewProjectionInverse * ndc;\n\t\tworldPosition = worldPosition / worldPosition.w;\n\t\tlet screenPrevious = uniform.matrix_viewProjectionPrevious * worldPosition;\n\t\treturn (screenPrevious.xy / screenPrevious.w) * 0.5 + 0.5;\n\t}\n\tfn colorClamp(uv: vec2f, historyColor: vec4f) -> vec4f {\n\t\tvar minColor = vec3f(9999.0);\n\t\tvar maxColor = vec3f(-9999.0);\n\t\tfor (var ix: i32 = -1; ix <= 1; ix = ix + 1) {\n\t\t\tfor (var iy: i32 = -1; iy <= 1; iy = iy + 1) {\n\t\t\t\tlet color_sample = textureSample(sourceTexture, sourceTextureSampler, uv + vec2f(f32(ix), f32(iy)) / uniform.textureSize).rgb;\n\t\t\t\tminColor = min(minColor, color_sample);\n\t\t\t\tmaxColor = max(maxColor, color_sample);\n\t\t\t}\n\t\t}\n\t\tlet clamped = clamp(historyColor.rgb, minColor, maxColor);\n\t\treturn vec4f(clamped, historyColor.a);\n\t}\n\t@fragment\n\tfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\tvar uv = input.uv0;\n\t\tuv.y = 1.0 - uv.y;\n\t\tlet srcColor = textureSample(sourceTexture, sourceTextureSampler, uv);\n\t\tlet linearDepth = getLinearScreenDepth(uv0);\n\t\tlet depth = delinearizeDepth(linearDepth);\n\t\tlet historyUv = reproject(uv0, depth);\n\t\t#ifdef QUALITY_HIGH\n\t\t\tvar historyColor: vec4f = SampleTextureCatmullRom(historyTexture, historyTextureSampler, historyUv, uniform.textureSize);\n\t\t#else\n\t\t\tvar historyColor: vec4f = textureSample(historyTexture, historyTextureSampler, historyUv);\n\t\t#endif\n\t\tlet historyColorClamped = colorClamp(uv, historyColor);\n\t\tlet mixFactor_condition = historyUv.x < 0.0 || historyUv.x > 1.0 || historyUv.y < 0.0 || historyUv.y > 1.0;\n\t\tlet mixFactor = select(0.05, 1.0, mixFactor_condition);\n\t\toutput.color = mix(historyColorClamped, srcColor, mixFactor);\n\t\treturn output;\n\t}\n`;class SZ extends Tb{constructor(t,e,s){super(t),this.historyIndex=0,this.historyTexture=null,this.historyTextures=[],this.historyRenderTargets=[];this.sourceTexture=e;this.cameraComponent=s;yv.get(t,cr).set("sampleCatmullRomPS",_Z);yv.get(t,dr).set("sampleCatmullRomPS",gZ);yv.get(t,cr).set("taaResolvePS",vZ);yv.get(t,dr).set("taaResolvePS",yZ);const i=new Map;i.set("QUALITY_HIGH",true);Tv.addScreenDepthChunkDefines(t,s.shaderParams,i);this.shader=Tv.createShader(t,{uniqueName:"TaaResolveShader",attributes:{aPosition:Ki},vertexChunk:"quadVS",fragmentChunk:"taaResolvePS",fragmentDefines:i});const{scope:n}=t;this.sourceTextureId=n.resolve("sourceTexture");this.textureSizeId=n.resolve("textureSize");this.textureSize=new Float32Array(2);this.historyTextureId=n.resolve("historyTexture");this.viewProjPrevId=n.resolve("matrix_viewProjectionPrevious");this.viewProjInvId=n.resolve("matrix_viewProjectionInverse");this.jittersId=n.resolve("jitters");this.cameraParams=new Float32Array(4);this.cameraParamsId=n.resolve("camera_params");this.setup()}destroy(){if(this.renderTarget){this.renderTarget.destroyTextureBuffers();this.renderTarget.destroy();this.renderTarget=null}}setup(){for(let t=0;t<2;++t){this.historyTextures[t]=new lo(this.device,{name:`TAA-History-${t}`,width:4,height:4,format:this.sourceTexture.format,mipmaps:false,minFilter:os,magFilter:os,addressU:pe,addressV:pe});this.historyRenderTargets[t]=new il({colorBuffer:this.historyTextures[t],depth:false})}this.historyTexture=this.historyTextures[0];this.init(this.historyRenderTargets[0],{resizeSource:this.sourceTexture})}before(){this.sourceTextureId.setValue(this.sourceTexture);this.historyTextureId.setValue(this.historyTextures[1-this.historyIndex]);this.textureSize[0]=this.sourceTexture.width;this.textureSize[1]=this.sourceTexture.height;this.textureSizeId.setValue(this.textureSize);const t=this.cameraComponent.camera;this.viewProjPrevId.setValue(t._viewProjPrevious.data);this.viewProjInvId.setValue(t._viewProjInverse.data);this.jittersId.setValue(t._jitters);const e=t._farClip;this.cameraParams[0]=1/e;this.cameraParams[1]=e;this.cameraParams[2]=t._nearClip;this.cameraParams[3]=t.projection===h_?1:0;this.cameraParamsId.setValue(this.cameraParams)}update(){this.historyIndex=1-this.historyIndex;this.historyTexture=this.historyTextures[this.historyIndex];this.renderTarget=this.historyRenderTargets[this.historyIndex];return this.historyTexture}}var xZ=`\n\t#include "screenDepthPS"\n\tvarying vec2 uv0;\n\tuniform vec3 params;\n\tvoid main()\n\t{\n\t\tfloat depth = getLinearScreenDepth(uv0);\n\t\tfloat focusDistance = params.x;\n\t\tfloat focusRange = params.y;\n\t\tfloat invRange = params.z;\n\t\tfloat farRange = focusDistance + focusRange * 0.5;\n\t\t\n\t\tfloat cocFar = min((depth - farRange) * invRange, 1.0);\n\t\t#ifdef NEAR_BLUR\n\t\t\tfloat nearRange = focusDistance - focusRange * 0.5;\n\t\t\tfloat cocNear = min((nearRange - depth) * invRange, 1.0);\n\t\t#else\n\t\t\tfloat cocNear = 0.0;\n\t\t#endif\n\t\tgl_FragColor = vec4(cocFar, cocNear, 0.0, 0.0);\n\t}\n`;var TZ=`\n#include "screenDepthPS"\nvarying uv0: vec2f;\nuniform params: vec3f;\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tlet depth: f32 = getLinearScreenDepth(uv0);\n\tlet focusDistance: f32 = uniform.params.x;\n\tlet focusRange: f32 = uniform.params.y;\n\tlet invRange: f32 = uniform.params.z;\n\tlet farRange: f32 = focusDistance + focusRange * 0.5;\n\tlet cocFar: f32 = min((depth - farRange) * invRange, 1.0);\n\t#ifdef NEAR_BLUR\n\t\tlet nearRange: f32 = focusDistance - focusRange * 0.5;\n\t\tvar cocNear: f32 = min((nearRange - depth) * invRange, 1.0);\n\t#else\n\t\tvar cocNear: f32 = 0.0;\n\t#endif\n\toutput.color = vec4f(cocFar, cocNear, 0.0, 0.0);\n\treturn output;\n}\n`;class wZ extends Tb{constructor(t,e,s){super(t);this.cameraComponent=e;yv.get(t,cr).set("cocPS",xZ);yv.get(t,dr).set("cocPS",TZ);const i=new Map;if(s)i.set("NEAR_BLUR","");Tv.addScreenDepthChunkDefines(t,e.shaderParams,i);this.shader=Tv.createShader(t,{uniqueName:`CocShader-${s}`,attributes:{aPosition:Ki},vertexChunk:"quadVS",fragmentChunk:"cocPS",fragmentDefines:i});this.paramsId=t.scope.resolve("params");this.paramsValue=new Float32Array(3);this.cameraParams=new Float32Array(4);this.cameraParamsId=t.scope.resolve("camera_params")}execute(){const{paramsValue:t,focusRange:e}=this;t[0]=this.focusDistance+.001;t[1]=e;t[2]=1/e;this.paramsId.setValue(t);const s=this.cameraComponent.camera;const i=s._farClip;this.cameraParams[0]=1/i;this.cameraParams[1]=i;this.cameraParams[2]=s._nearClip;this.cameraParams[3]=s.projection===h_?1:0;this.cameraParamsId.setValue(this.cameraParams);super.execute()}}var bZ=`\n\t#if defined(NEAR_BLUR)\n\t\tuniform sampler2D nearTexture;\n\t#endif\n\tuniform sampler2D farTexture;\n\tuniform sampler2D cocTexture;\n\tuniform vec2 kernel[{KERNEL_COUNT}];\n\tuniform float blurRadiusNear;\n\tuniform float blurRadiusFar;\n\tvarying vec2 uv0;\n\tvoid main()\n\t{\n\t\tvec2 coc = texture2D(cocTexture, uv0).rg;\n\t\tfloat cocFar = coc.r;\n\t\tvec3 sum = vec3(0.0, 0.0, 0.0);\n\t\t#if defined(NEAR_BLUR)\n\t\t\tfloat cocNear = coc.g;\n\t\t\tif (cocNear > 0.0001) {\n\t\t\t\tivec2 nearTextureSize = textureSize(nearTexture, 0);\n\t\t\t\tvec2 step = cocNear * blurRadiusNear / vec2(nearTextureSize);\n\t\t\t\tfor (int i = 0; i < {KERNEL_COUNT}; i++) {\n\t\t\t\t\tvec2 uv = uv0 + step * kernel[i];\n\t\t\t\t\tvec3 tap = texture2DLod(nearTexture, uv, 0.0).rgb;\n\t\t\t\t\tsum += tap.rgb;\n\t\t\t\t}\n\t\t\t\tsum *= float({INV_KERNEL_COUNT});\n\t\t\t} else\n\t\t#endif\n\t\t\t\n\t\t\tif (cocFar > 0.0001) {\n\t\t\tivec2 farTextureSize = textureSize(farTexture, 0);\n\t\t\tvec2 step = cocFar * blurRadiusFar / vec2(farTextureSize);\n\t\t\tfloat sumCoC = 0.0; \n\t\t\tfor (int i = 0; i < {KERNEL_COUNT}; i++) {\n\t\t\t\tvec2 uv = uv0 + step * kernel[i];\n\t\t\t\tvec3 tap = texture2DLod(farTexture, uv, 0.0).rgb;\n\t\t\t\tfloat cocThis = texture2DLod(cocTexture, uv, 0.0).r;\n\t\t\t\ttap *= cocThis;\n\t\t\t\tsumCoC += cocThis;\n\t\t\t\tsum += tap;\n\t\t\t}\n\t\t\tif (sumCoC > 0.0)\n\t\t\t\tsum /= sumCoC;\n\t\t\tsum /= cocFar;\n\t\t}\n\t\tpcFragColor0 = vec4(sum, 1.0);\n\t}\n`;var EZ=`\n#if defined(NEAR_BLUR)\n\tvar nearTexture: texture_2d<f32>;\n\tvar nearTextureSampler: sampler;\n#endif\nvar farTexture: texture_2d<f32>;\nvar farTextureSampler: sampler;\nvar cocTexture: texture_2d<f32>;\nvar cocTextureSampler: sampler;\nuniform kernel: array<vec2f, {KERNEL_COUNT}>;\nuniform blurRadiusNear: f32;\nuniform blurRadiusFar: f32;\nvarying uv0: vec2f;\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tlet coc: vec2f = textureSample(cocTexture, cocTextureSampler, input.uv0).rg;\n\tlet cocFar: f32 = coc.r;\n\tvar sum: vec3f = vec3f(0.0, 0.0, 0.0);\n\t#if defined(NEAR_BLUR)\n\t\tlet cocNear: f32 = coc.g;\n\t\tif (cocNear > 0.0001) {\n\t\t\tlet nearTextureSize: vec2f = vec2f(textureDimensions(nearTexture, 0));\n\t\t\tlet step: vec2f = cocNear * uniform.blurRadiusNear / nearTextureSize;\n\t\t\tfor (var i: i32 = 0; i < {KERNEL_COUNT}; i = i + 1) {\n\t\t\t\tlet uv: vec2f = uv0 + step * uniform.kernel[i].element;\n\t\t\t\tlet tap: vec3f = textureSampleLevel(nearTexture, nearTextureSampler, uv, 0.0).rgb;\n\t\t\t\tsum = sum + tap;\n\t\t\t}\n\t\t\tsum = sum * f32({INV_KERNEL_COUNT});\n\t\t} else\n\t#endif\n\t\tif (cocFar > 0.0001) {\n\t\t\tlet farTextureSize: vec2f = vec2f(textureDimensions(farTexture, 0));\n\t\t\tlet step: vec2f = cocFar * uniform.blurRadiusFar / farTextureSize;\n\t\t\tvar sumCoC: f32 = 0.0;\n\t\t\tfor (var i: i32 = 0; i < {KERNEL_COUNT}; i = i + 1) {\n\t\t\t\tlet uv: vec2f = uv0 + step * uniform.kernel[i].element;\n\t\t\t\tvar tap: vec3f = textureSampleLevel(farTexture, farTextureSampler, uv, 0.0).rgb;\n\t\t\t\tlet cocThis: f32 = textureSampleLevel(cocTexture, cocTextureSampler, uv, 0.0).r;\n\t\t\t\ttap = tap * cocThis;\n\t\t\t\tsumCoC = sumCoC + cocThis;\n\t\t\t\tsum = sum + tap;\n\t\t\t}\n\t\t\tif (sumCoC > 0.0) {\n\t\t\t\tsum = sum / sumCoC;\n\t\t\t}\n\t\t\tsum = sum / cocFar;\n\t\t}\n\toutput.color = vec4f(sum, 1.0);\n\treturn output;\n}\n`;class AZ extends Tb{constructor(t,e,s,i){super(t),this.blurRadiusNear=1,this.blurRadiusFar=1,this._blurRings=3,this._blurRingPoints=3;this.nearTexture=e;this.farTexture=s;this.cocTexture=i;yv.get(t,cr).set("dofBlurPS",bZ);yv.get(t,dr).set("dofBlurPS",EZ);const{scope:n}=t;this.kernelId=n.resolve("kernel[0]");this.kernelCountId=n.resolve("kernelCount");this.blurRadiusNearId=n.resolve("blurRadiusNear");this.blurRadiusFarId=n.resolve("blurRadiusFar");this.nearTextureId=n.resolve("nearTexture");this.farTextureId=n.resolve("farTexture");this.cocTextureId=n.resolve("cocTexture")}set blurRings(t){if(this._blurRings!==t){this._blurRings=t;this.shader=null}}get blurRings(){return this._blurRings}set blurRingPoints(t){if(this._blurRingPoints!==t){this._blurRingPoints=t;this.shader=null}}get blurRingPoints(){return this._blurRingPoints}createShader(){this.kernel=new Float32Array(Mt.concentric(this.blurRings,this.blurRingPoints));const t=this.kernel.length>>1;const e=this.nearTexture!==null;const s=new Map;s.set("{KERNEL_COUNT}",t);s.set("{INV_KERNEL_COUNT}",1/t);if(e)s.set("NEAR_BLUR","");this.shader=Tv.createShader(this.device,{uniqueName:`DofBlurShader-${t}-${e?"nearBlur":"noNearBlur"}`,attributes:{aPosition:Ki},vertexChunk:"quadVS",fragmentChunk:"dofBlurPS",fragmentDefines:s})}execute(){if(!this.shader){this.createShader()}this.nearTextureId.setValue(this.nearTexture);this.farTextureId.setValue(this.farTexture);this.cocTextureId.setValue(this.cocTexture);this.kernelId.setValue(this.kernel);this.kernelCountId.setValue(this.kernel.length>>1);this.blurRadiusNearId.setValue(this.blurRadiusNear);this.blurRadiusFarId.setValue(this.blurRadiusFar);super.execute()}}class CZ extends Yc{constructor(t,e,s,i,n,r){super(t),this.focusDistance=100,this.focusRange=50,this.blurRadius=1,this.blurRings=3,this.blurRingPoints=3,this.highQuality=true,this.cocTexture=null,this.blurTexture=null,this.cocPass=null,this.farPass=null,this.blurPass=null;this.highQuality=n;this.cocPass=this.setupCocPass(t,e,s,r);this.beforePasses.push(this.cocPass);const a=n?s:i;this.farPass=this.setupFarPass(t,a,.5);this.beforePasses.push(this.farPass);this.blurPass=this.setupBlurPass(t,i,r,n?2:.5);this.beforePasses.push(this.blurPass)}destroy(){this.destroyRenderPasses();this.cocPass=null;this.farPass=null;this.blurPass=null;this.destroyRT(this.cocRT);this.destroyRT(this.farRt);this.destroyRT(this.blurRt);this.cocRT=null;this.farRt=null;this.blurRt=null}destroyRenderPasses(){for(let t=0;t<this.beforePasses.length;t++){this.beforePasses[t].destroy()}this.beforePasses.length=0}destroyRT(t){if(t){t.destroyTextureBuffers();t.destroy()}}setupCocPass(t,e,s,i){const n=i?Ti:xi;this.cocRT=this.createRenderTarget("CoCTexture",n);this.cocTexture=this.cocRT.colorBuffer;const r=new wZ(t,e,i);r.init(this.cocRT,{resizeSource:s});r.setClearColor(bt.BLACK);return r}setupFarPass(t,e,s){this.farRt=this.createRenderTarget("FarDofTexture",e.format);const i=new WK(t,e,{boxFilter:true,premultiplyTexture:this.cocTexture,premultiplySrcChannel:"r"});i.init(this.farRt,{resizeSource:e,scaleX:s,scaleY:s});i.setClearColor(bt.BLACK);return i}setupBlurPass(t,e,s,i){const n=this.farRt?.colorBuffer;this.blurRt=this.createRenderTarget("DofBlurTexture",e.format);this.blurTexture=this.blurRt.colorBuffer;const r=new AZ(t,s?e:null,n,this.cocTexture);r.init(this.blurRt,{resizeSource:e,scaleX:i,scaleY:i});r.setClearColor(bt.BLACK);return r}createTexture(t,e){return new lo(this.device,{name:t,width:1,height:1,format:e,mipmaps:false,minFilter:os,magFilter:os,addressU:pe,addressV:pe})}createRenderTarget(t,e){return new il({colorBuffer:this.createTexture(t,e),depth:false,stencil:false})}frameUpdate(){super.frameUpdate();this.cocPass.focusDistance=this.focusDistance;this.cocPass.focusRange=this.focusRange;this.blurPass.blurRadiusNear=this.blurRadius;this.blurPass.blurRadiusFar=this.blurRadius*(this.highQuality?1:.5);this.blurPass.blurRings=this.blurRings;this.blurPass.blurRingPoints=this.blurRingPoints}}const PZ=[];const LZ="uSceneDepthMap";class DZ extends Yc{constructor(t,e,s,i,n){super(t),this.viewBindGroups=[],this.linearDepthClearValue=new bt(0,0,0,0);this.scene=e;this.renderer=s;this.camera=i;this.setupRenderTarget(n)}destroy(){super.destroy();this.renderTarget?.destroy();this.renderTarget=null;this.linearDepthTexture?.destroy();this.linearDepthTexture=null;this.viewBindGroups.forEach((t=>{t.defaultUniformBuffer.destroy();t.destroy()}));this.viewBindGroups.length=0}setupRenderTarget(t){const{device:e}=this;this.linearDepthFormat=e.textureFloatRenderable?Bs:Ds;this.linearDepthTexture=new lo(e,{name:"SceneLinearDepthTexture",width:1,height:1,format:this.linearDepthFormat,mipmaps:false,minFilter:as,magFilter:as,addressU:pe,addressV:pe});const s=new il({name:"PrepassRT",colorBuffer:this.linearDepthTexture,depth:true,samples:1});this.camera.shaderParams.sceneDepthMapLinear=true;this.init(s,t)}after(){this.device.scope.resolve(LZ).setValue(this.linearDepthTexture)}execute(){const{renderer:t,scene:e,renderTarget:s}=this;const i=this.camera.camera;const n=e.layers.layerList;const r=e.layers.subLayerEnabled;const a=e.layers.subLayerList;for(let e=0;e<n.length;e++){const o=n[e];if(o.id===cm){break}if(o.enabled&&r[e]){if(o.camerasSet.has(i)){const n=o.getCulledInstances(i);const r=a[e]?n.transparent:n.opaque;for(let t=0;t<r.length;t++){const e=r[t];if(e.material?.depthWrite){PZ.push(e)}}t.renderForwardLayer(i,s,null,undefined,mg,this.viewBindGroups,{meshInstances:PZ});PZ.length=0}}}}frameUpdate(){super.frameUpdate();const{camera:t}=this;this.setClearDepth(t.clearDepthBuffer?1:undefined);let e;if(t.clearDepthBuffer){const s=t.farClip-Number.MIN_VALUE;e=this.linearDepthClearValue;if(this.linearDepthFormat===Bs){e.r=s}else{Dt.float2RGBA8(s,e)}}this.setClearColor(e)}}var MZ=`\n\t#include "screenDepthPS"\n\tvarying vec2 uv0;\n\tuniform sampler2D sourceTexture;\n\tuniform vec2 sourceInvResolution;\n\tuniform int filterSize;\n\tfloat random(const highp vec2 w) {\n\t\tconst vec3 m = vec3(0.06711056, 0.00583715, 52.9829189);\n\t\treturn fract(m.z * fract(dot(w, m.xy)));\n\t}\n\tmediump float bilateralWeight(in mediump float depth, in mediump float sampleDepth) {\n\t\tmediump float diff = (sampleDepth - depth);\n\t\treturn max(0.0, 1.0 - diff * diff);\n\t}\n\tvoid tap(inout float sum, inout float totalWeight, float weight, float depth, vec2 position) {\n\t\tmediump float color = texture2D(sourceTexture, position).r;\n\t\tmediump float textureDepth = -getLinearScreenDepth(position);\n\t\n\t\tmediump float bilateral = bilateralWeight(depth, textureDepth);\n\t\tbilateral *= weight;\n\t\tsum += color * bilateral;\n\t\ttotalWeight += bilateral;\n\t}\n\tvoid main() {\n\t\tmediump float depth = -getLinearScreenDepth(uv0);\n\t\tmediump float totalWeight = 1.0;\n\t\tmediump float color = texture2D(sourceTexture, uv0 ).r;\n\t\tmediump float sum = color * totalWeight;\n\t\tfor (mediump int i = -filterSize; i <= filterSize; i++) {\n\t\t\tmediump float weight = 1.0;\n\t\t\t#ifdef HORIZONTAL\n\t\t\t\tvec2 offset = vec2(i, 0) * sourceInvResolution;\n\t\t\t#else\n\t\t\t\tvec2 offset = vec2(0, i) * sourceInvResolution;\n\t\t\t#endif\n\t\t\ttap(sum, totalWeight, weight, depth, uv0 + offset);\n\t\t}\n\t\tmediump float ao = sum / totalWeight;\n\t\tgl_FragColor.r = ao;\n\t}\n`;var IZ=`\n#include "screenDepthPS"\nvarying uv0: vec2f;\nvar sourceTexture: texture_2d<f32>;\nvar sourceTextureSampler: sampler;\nuniform sourceInvResolution: vec2f;\nuniform filterSize: i32;\nfn random(w: vec2f) -> f32 {\n\tconst m: vec3f = vec3f(0.06711056, 0.00583715, 52.9829189);\n\treturn fract(m.z * fract(dot(w, m.xy)));\n}\nfn bilateralWeight(depth: f32, sampleDepth: f32) -> f32 {\n\tlet diff: f32 = (sampleDepth - depth);\n\treturn max(0.0, 1.0 - diff * diff);\n}\nfn tap(sum_ptr: ptr<function, f32>, totalWeight_ptr: ptr<function, f32>, weight: f32, depth: f32, position: vec2f) {\n\tlet color: f32 = textureSample(sourceTexture, sourceTextureSampler, position).r;\n\tlet textureDepth: f32 = -getLinearScreenDepth(position);\n\tlet bilateral: f32 = bilateralWeight(depth, textureDepth) * weight;\n\t*sum_ptr = *sum_ptr + color * bilateral;\n\t*totalWeight_ptr = *totalWeight_ptr + bilateral;\n}\n@fragment\nfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\tvar output: FragmentOutput;\n\tlet depth: f32 = -getLinearScreenDepth(input.uv0);\n\tvar totalWeight: f32 = 1.0;\n\tlet color: f32 = textureSample(sourceTexture, sourceTextureSampler, input.uv0 ).r;\n\tvar sum: f32 = color * totalWeight;\n\tfor (var i: i32 = -uniform.filterSize; i <= uniform.filterSize; i = i + 1) {\n\t\tlet weight: f32 = 1.0;\n\t\t#ifdef HORIZONTAL\n\t\t\tvar offset: vec2f = vec2f(f32(i), 0.0) * uniform.sourceInvResolution;\n\t\t#else\n\t\t\tvar offset: vec2f = vec2f(0.0, f32(i)) * uniform.sourceInvResolution;\n\t\t#endif\n\t\ttap(&sum, &totalWeight, weight, depth, input.uv0 + offset);\n\t}\n\tlet ao: f32 = sum / totalWeight;\n\toutput.color = vec4f(ao, ao, ao, 1.0);\n\treturn output;\n}\n`;class RZ extends Tb{constructor(t,e,s,i){super(t);this.sourceTexture=e;yv.get(t,cr).set("depthAwareBlurPS",MZ);yv.get(t,dr).set("depthAwareBlurPS",IZ);const n=new Map;if(i)n.set("HORIZONTAL","");Tv.addScreenDepthChunkDefines(t,s.shaderParams,n);this.shader=Tv.createShader(t,{uniqueName:`DepthAware${i?"Horizontal":"Vertical"}BlurShader`,attributes:{aPosition:Ki},vertexChunk:"quadVS",fragmentChunk:"depthAwareBlurPS",fragmentDefines:n});const r=this.device.scope;this.sourceTextureId=r.resolve("sourceTexture");this.sourceInvResolutionId=r.resolve("sourceInvResolution");this.sourceInvResolutionValue=new Float32Array(2);this.filterSizeId=r.resolve("filterSize")}execute(){this.filterSizeId.setValue(4);this.sourceTextureId.setValue(this.sourceTexture);const{width:t,height:e}=this.sourceTexture;this.sourceInvResolutionValue[0]=1/t;this.sourceInvResolutionValue[1]=1/e;this.sourceInvResolutionId.setValue(this.sourceInvResolutionValue);super.execute()}}var OZ=`\n\t#include "screenDepthPS"\n\t\n\tvarying vec2 uv0;\n\tuniform vec2 uInvResolution;\n\tuniform float uAspect;\n\t#define saturate(x) clamp(x,0.0,1.0)\n\thighp float getWFromProjectionMatrix(const mat4 p, const vec3 v) {\n\t\treturn -v.z;\n\t}\n\thighp float getViewSpaceZFromW(const mat4 p, const float w) {\n\t\treturn -w;\n\t}\n\tconst float kLog2LodRate = 3.0;\n\tfloat random(const highp vec2 w) {\n\t\tconst vec3 m = vec3(0.06711056, 0.00583715, 52.9829189);\n\t\treturn fract(m.z * fract(dot(w, m.xy)));\n\t}\n\thighp vec2 getFragCoord() {\n\t\treturn gl_FragCoord.xy;\n\t}\n\thighp vec3 computeViewSpacePositionFromDepth(highp vec2 uv, highp float linearDepth) {\n\t\treturn vec3((0.5 - uv) * vec2(uAspect, 1.0) * linearDepth, linearDepth);\n\t}\n\thighp vec3 faceNormal(highp vec3 dpdx, highp vec3 dpdy) {\n\t\treturn normalize(cross(dpdx, dpdy));\n\t}\n\thighp vec3 computeViewSpaceNormal(const highp vec3 position) {\n\t\treturn faceNormal(dFdx(position), dFdy(position));\n\t}\n\thighp vec3 computeViewSpaceNormal(const highp vec3 position, const highp vec2 uv) {\n\t\thighp vec2 uvdx = uv + vec2(uInvResolution.x, 0.0);\n\t\thighp vec2 uvdy = uv + vec2(0.0, uInvResolution.y);\n\t\thighp vec3 px = computeViewSpacePositionFromDepth(uvdx, -getLinearScreenDepth(uvdx));\n\t\thighp vec3 py = computeViewSpacePositionFromDepth(uvdy, -getLinearScreenDepth(uvdy));\n\t\thighp vec3 dpdx = px - position;\n\t\thighp vec3 dpdy = py - position;\n\t\treturn faceNormal(dpdx, dpdy);\n\t}\n\tuniform vec2 uSampleCount;\n\tuniform float uSpiralTurns;\n\t#define PI (3.14159)\n\tmediump vec3 tapLocation(mediump float i, const mediump float noise) {\n\t\tmediump float offset = ((2.0 * PI) * 2.4) * noise;\n\t\tmediump float angle = ((i * uSampleCount.y) * uSpiralTurns) * (2.0 * PI) + offset;\n\t\tmediump float radius = (i + noise + 0.5) * uSampleCount.y;\n\t\treturn vec3(cos(angle), sin(angle), radius * radius);\n\t}\n\thighp vec2 startPosition(const float noise) {\n\t\tfloat angle = ((2.0 * PI) * 2.4) * noise;\n\t\treturn vec2(cos(angle), sin(angle));\n\t}\n\tuniform vec2 uAngleIncCosSin;\n\thighp mat2 tapAngleStep() {\n\t\thighp vec2 t = uAngleIncCosSin;\n\t\treturn mat2(t.x, t.y, -t.y, t.x);\n\t}\n\tmediump vec3 tapLocationFast(mediump float i, mediump vec2 p, const mediump float noise) {\n\t\tmediump float radius = (i + noise + 0.5) * uSampleCount.y;\n\t\treturn vec3(p, radius * radius);\n\t}\n\tuniform float uMaxLevel;\n\tuniform float uInvRadiusSquared;\n\tuniform float uMinHorizonAngleSineSquared;\n\tuniform float uBias;\n\tuniform float uPeak2;\n\tvoid computeAmbientOcclusionSAO(inout mediump float occlusion, mediump float i, mediump float ssDiskRadius,\n\t\t\tconst highp vec2 uv, const highp vec3 origin, const mediump vec3 normal,\n\t\t\tconst mediump vec2 tapPosition, const float noise) {\n\t\tmediump vec3 tap = tapLocationFast(i, tapPosition, noise);\n\t\tmediump float ssRadius = max(1.0, tap.z * ssDiskRadius);\n\t\tmediump vec2 uvSamplePos = uv + vec2(ssRadius * tap.xy) * uInvResolution;\n\t\tmediump float level = clamp(floor(log2(ssRadius)) - kLog2LodRate, 0.0, float(uMaxLevel));\n\t\thighp float occlusionDepth = -getLinearScreenDepth(uvSamplePos);\n\t\thighp vec3 p = computeViewSpacePositionFromDepth(uvSamplePos, occlusionDepth);\n\t\tvec3 v = p - origin;\n\t\tfloat vv = dot(v, v);\n\t\tfloat vn = dot(v, normal);\n\t\tmediump float w = max(0.0, 1.0 - vv * uInvRadiusSquared);\n\t\tw = w * w;\n\t\tw *= step(vv * uMinHorizonAngleSineSquared, vn * vn);\n\t\tocclusion += w * max(0.0, vn + origin.z * uBias) / (vv + uPeak2);\n\t}\n\tuniform float uProjectionScaleRadius;\n\tuniform float uIntensity;\n\tuniform float uRandomize;\n\tfloat scalableAmbientObscurance(highp vec2 uv, highp vec3 origin, vec3 normal) {\n\t\tfloat noise = random(getFragCoord()) + uRandomize;\n\t\thighp vec2 tapPosition = startPosition(noise);\n\t\thighp mat2 angleStep = tapAngleStep();\n\t\tfloat ssDiskRadius = -(uProjectionScaleRadius / origin.z);\n\t\tfloat occlusion = 0.0;\n\t\tfor (float i = 0.0; i < uSampleCount.x; i += 1.0) {\n\t\t\tcomputeAmbientOcclusionSAO(occlusion, i, ssDiskRadius, uv, origin, normal, tapPosition, noise);\n\t\t\ttapPosition = angleStep * tapPosition;\n\t\t}\n\t\treturn occlusion;\n\t}\n\tuniform float uPower;\n\tvoid main() {\n\t\thighp vec2 uv = uv0;\n\t\thighp float depth = -getLinearScreenDepth(uv0);\n\t\thighp vec3 origin = computeViewSpacePositionFromDepth(uv, depth);\n\t\tvec3 normal = computeViewSpaceNormal(origin, uv);\n\t\tfloat occlusion = 0.0;\n\t\tif (uIntensity > 0.0) {\n\t\t\tocclusion = scalableAmbientObscurance(uv, origin, normal);\n\t\t}\n\t\tfloat ao = max(0.0, 1.0 - occlusion * uIntensity);\n\t\tao = pow(ao, uPower);\n\t\tgl_FragColor = vec4(ao, ao, ao, 1.0);\n\t}\n`;var FZ=`\n\t#include "screenDepthPS"\n\tvarying uv0: vec2f;\n\tuniform uInvResolution: vec2f;\n\tuniform uAspect: f32;\n\tfn getWFromProjectionMatrix(p: mat4x4f, v: vec3f) -> f32 {\n\t\treturn -v.z;\n\t}\n\tfn getViewSpaceZFromW(p: mat4x4f, w: f32) -> f32 {\n\t\treturn -w;\n\t}\n\tconst kLog2LodRate: f32 = 3.0;\n\tfn random(w: vec2f) -> f32 {\n\t\tconst m: vec3f = vec3f(0.06711056, 0.00583715, 52.9829189);\n\t\treturn fract(m.z * fract(dot(w, m.xy)));\n\t}\n\tfn getFragCoord() -> vec2f {\n\t\treturn pcPosition.xy;\n\t}\n\tfn computeViewSpacePositionFromDepth(uv: vec2f, linearDepth: f32) -> vec3f {\n\t\treturn vec3f((0.5 - uv) * vec2f(uniform.uAspect, 1.0) * linearDepth, linearDepth);\n\t}\n\tfn faceNormal(dpdx: vec3f, dpdy: vec3f) -> vec3f {\n\t\treturn normalize(cross(dpdx, dpdy));\n\t}\n\tfn computeViewSpaceNormalDeriv(position: vec3f) -> vec3f {\n\t\treturn faceNormal(dpdx(position), dpdy(position));\n\t}\n\tfn computeViewSpaceNormalDepth(position: vec3f, uv: vec2f) -> vec3f {\n\t\tlet uvdx: vec2f = uv + vec2f(uniform.uInvResolution.x, 0.0);\n\t\tlet uvdy: vec2f = uv + vec2f(0.0, uniform.uInvResolution.y);\n\t\tlet px: vec3f = computeViewSpacePositionFromDepth(uvdx, -getLinearScreenDepth(uvdx));\n\t\tlet py: vec3f = computeViewSpacePositionFromDepth(uvdy, -getLinearScreenDepth(uvdy));\n\t\tlet dpdx: vec3f = px - position;\n\t\tlet dpdy: vec3f = py - position;\n\t\treturn faceNormal(dpdx, dpdy);\n\t}\n\tuniform uSampleCount: vec2f;\n\tuniform uSpiralTurns: f32;\n\tconst PI: f32 = 3.14159;\n\tfn tapLocation(i: f32, noise: f32) -> vec3f {\n\t\tlet offset: f32 = ((2.0 * PI) * 2.4) * noise;\n\t\tlet angle: f32 = ((i * uniform.uSampleCount.y) * uniform.uSpiralTurns) * (2.0 * PI) + offset;\n\t\tlet radius: f32 = (i + noise + 0.5) * uniform.uSampleCount.y;\n\t\treturn vec3f(cos(angle), sin(angle), radius * radius);\n\t}\n\tfn startPosition(noise: f32) -> vec2f {\n\t\tlet angle: f32 = ((2.0 * PI) * 2.4) * noise;\n\t\treturn vec2f(cos(angle), sin(angle));\n\t}\n\tuniform uAngleIncCosSin: vec2f;\n\tfn tapAngleStep() -> mat2x2f {\n\t\tlet t: vec2f = uniform.uAngleIncCosSin;\n\t\treturn mat2x2f(vec2f(t.x, t.y), vec2f(-t.y, t.x));\n\t}\n\tfn tapLocationFast(i: f32, p: vec2f, noise_in: f32) -> vec3f {\n\t\tlet radius: f32 = (i + noise_in + 0.5) * uniform.uSampleCount.y;\n\t\treturn vec3f(p.x, p.y, radius * radius);\n\t}\n\tuniform uMaxLevel: f32;\n\tuniform uInvRadiusSquared: f32;\n\tuniform uMinHorizonAngleSineSquared: f32;\n\tuniform uBias: f32;\n\tuniform uPeak2: f32;\n\tfn computeAmbientOcclusionSAO(occlusion_ptr: ptr<function, f32>, i: f32, ssDiskRadius: f32,\n\t\t\tuv: vec2f, origin: vec3f, normal: vec3f,\n\t\t\ttapPosition: vec2f, noise: f32) {\n\t\tlet tap: vec3f = tapLocationFast(i, tapPosition, noise);\n\t\tlet ssRadius: f32 = max(1.0, tap.z * ssDiskRadius);\n\t\tlet uvSamplePos: vec2f = uv + (ssRadius * tap.xy) * uniform.uInvResolution;\n\t\tlet level: f32 = clamp(floor(log2(ssRadius)) - kLog2LodRate, 0.0, uniform.uMaxLevel);\n\t\tlet occlusionDepth: f32 = -getLinearScreenDepth(uvSamplePos);\n\t\tlet p: vec3f = computeViewSpacePositionFromDepth(uvSamplePos, occlusionDepth);\n\t\tlet v: vec3f = p - origin;\n\t\tlet vv: f32 = dot(v, v);\n\t\tlet vn: f32 = dot(v, normal);\n\t\tvar w_val: f32 = max(0.0, 1.0 - vv * uniform.uInvRadiusSquared);\n\t\tw_val = w_val * w_val;\n\t\tw_val = w_val * step(vv * uniform.uMinHorizonAngleSineSquared, vn * vn);\n\t\t*occlusion_ptr = *occlusion_ptr + w_val * max(0.0, vn + origin.z * uniform.uBias) / (vv + uniform.uPeak2);\n\t}\n\tuniform uProjectionScaleRadius: f32;\n\tuniform uIntensity: f32;\n\tuniform uRandomize: f32;\n\tfn scalableAmbientObscurance(uv: vec2f, origin: vec3f, normal: vec3f) -> f32 {\n\t\tlet noise: f32 = random(getFragCoord()) + uniform.uRandomize;\n\t\tvar tapPosition: vec2f = startPosition(noise);\n\t\tlet angleStep: mat2x2f = tapAngleStep();\n\t\tlet ssDiskRadius: f32 = -(uniform.uProjectionScaleRadius / origin.z);\n\t\tvar occlusion: f32 = 0.0;\n\t\tfor (var i: i32 = 0; i < i32(uniform.uSampleCount.x); i = i + 1) {\n\t\t\tcomputeAmbientOcclusionSAO(&occlusion, f32(i), ssDiskRadius, uv, origin, normal, tapPosition, noise);\n\t\t\ttapPosition = angleStep * tapPosition;\n\t\t}\n\t\treturn occlusion;\n\t}\n\tuniform uPower: f32;\n\t@fragment\n\tfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t\tvar output: FragmentOutput;\n\t\tlet uv: vec2f = input.uv0;\n\t\tlet depth: f32 = -getLinearScreenDepth(input.uv0);\n\t\tlet origin: vec3f = computeViewSpacePositionFromDepth(uv, depth);\n\t\tlet normal: vec3f = computeViewSpaceNormalDepth(origin, uv);\n\t\tvar occlusion: f32 = 0.0;\n\t\tif (uniform.uIntensity > 0.0) {\n\t\t\tocclusion = scalableAmbientObscurance(uv, origin, normal);\n\t\t}\n\t\tvar ao: f32 = max(0.0, 1.0 - occlusion * uniform.uIntensity);\n\t\tao = pow(ao, uniform.uPower);\n\t\toutput.color = vec4f(ao, ao, ao, 1.0);\n\t\treturn output;\n\t}\n`;class NZ extends Tb{constructor(t,e,s,i){super(t),this.radius=5,this.intensity=1,this.power=1,this.sampleCount=10,this.minAngle=5,this.randomize=false,this._scale=1,this._blueNoise=new lS(19);this.sourceTexture=e;this.cameraComponent=s;yv.get(t,cr).set("ssaoPS",OZ);yv.get(t,dr).set("ssaoPS",FZ);const n=new Map;Tv.addScreenDepthChunkDefines(t,s.shaderParams,n);this.shader=Tv.createShader(t,{uniqueName:"SsaoShader",attributes:{aPosition:Ki},vertexChunk:"quadVS",fragmentChunk:"ssaoPS",fragmentDefines:n});const r=this.createRenderTarget("SsaoFinalTexture");this.ssaoTexture=r.colorBuffer;this.init(r,{resizeSource:this.sourceTexture});const a=new bt(0,0,0,0);this.setClearColor(a);if(i){const e=this.createRenderTarget("SsaoTempTexture");const i=new RZ(t,r.colorBuffer,s,true);i.init(e,{resizeSource:r.colorBuffer});i.setClearColor(a);const n=new RZ(t,e.colorBuffer,s,false);n.init(r,{resizeSource:r.colorBuffer});n.setClearColor(a);this.afterPasses.push(i);this.afterPasses.push(n)}this.ssaoTextureId=t.scope.resolve("ssaoTexture");this.ssaoTextureSizeInvId=t.scope.resolve("ssaoTextureSizeInv")}destroy(){this.renderTarget?.destroyTextureBuffers();this.renderTarget?.destroy();this.renderTarget=null;if(this.afterPasses.length>0){const t=this.afterPasses[0].renderTarget;t?.destroyTextureBuffers();t?.destroy()}this.afterPasses.forEach((t=>t.destroy()));this.afterPasses.length=0;super.destroy()}set scale(t){this._scale=t;this.scaleX=t;this.scaleY=t}get scale(){return this._scale}createRenderTarget(t){return new il({depth:false,colorBuffer:new lo(this.device,{name:t,width:1,height:1,format:xi,mipmaps:false,minFilter:as,magFilter:as,addressU:pe,addressV:pe})})}execute(){const{device:t,sourceTexture:e,sampleCount:s,minAngle:i,scale:n}=this;const{width:r,height:a}=this.renderTarget.colorBuffer;const o=t.scope;o.resolve("uAspect").setValue(r/a);o.resolve("uInvResolution").setValue([1/r,1/a]);o.resolve("uSampleCount").setValue([s,1/s]);const l=Math.sin(i*Math.PI/180);o.resolve("uMinHorizonAngleSineSquared").setValue(l*l);const h=10;const c=1/(s-.5)*h*2*3.141;const d=this.radius/n;const u=.001;const f=.1*d;const p=2*(f*2*3.141)*this.intensity/s;const m=.5*e.height;o.resolve("uSpiralTurns").setValue(h);o.resolve("uAngleIncCosSin").setValue([Math.cos(c),Math.sin(c)]);o.resolve("uMaxLevel").setValue(0);o.resolve("uInvRadiusSquared").setValue(1/(d*d));o.resolve("uBias").setValue(u);o.resolve("uPeak2").setValue(f*f);o.resolve("uIntensity").setValue(p);o.resolve("uPower").setValue(this.power);o.resolve("uProjectionScaleRadius").setValue(m*d);o.resolve("uRandomize").setValue(this.randomize?this._blueNoise.value():0);super.execute()}after(){this.ssaoTextureId.setValue(this.ssaoTexture);const t=this.sourceTexture;this.ssaoTextureSizeInvId.setValue([1/t.width,1/t.height])}}class kZ{constructor(){this.stencil=false;this.samples=1;this.sceneColorMap=false;this.lastGrabLayerId=dm;this.lastGrabLayerIsTransparent=false;this.lastSceneLayerId=um;this.lastSceneLayerIsTransparent=true;this.taaEnabled=false;this.bloomEnabled=false;this.ssaoType=UK;this.ssaoBlurEnabled=true;this.prepassEnabled=false;this.dofEnabled=false;this.dofNearBlur=false;this.dofHighQuality=true}}const BZ=new kZ;class UZ extends Yc{constructor(t,e,s,i={}){super(t.graphicsDevice),this._renderTargetScale=1,this.layersDirty=false,this.rt=null;this.app=t;this.cameraComponent=s;this.cameraFrame=e;this.options=this.sanitizeOptions(i);this.setupRenderPasses(this.options)}destroy(){this.reset()}reset(){this.sceneTexture=null;this.sceneTextureHalf=null;if(this.rt){this.rt.destroyTextureBuffers();this.rt.destroy();this.rt=null}if(this.rtHalf){this.rtHalf.destroyTextureBuffers();this.rtHalf.destroy();this.rtHalf=null}this.beforePasses.forEach((t=>t.destroy()));this.beforePasses.length=0;this.prePass=null;this.scenePass=null;this.scenePassTransparent=null;this.colorGrabPass=null;this.composePass=null;this.bloomPass=null;this.ssaoPass=null;this.taaPass=null;this.afterPass=null;this.scenePassHalf=null;this.dofPass=null}sanitizeOptions(t){t=Object.assign({},BZ,t);if(t.taaEnabled||t.ssaoType!==UK||t.dofEnabled){t.prepassEnabled=true}return t}set renderTargetScale(t){this._renderTargetScale=t;if(this.scenePass){this.scenePass.scaleX=t;this.scenePass.scaleY=t}}get renderTargetScale(){return this._renderTargetScale}needsReset(t){const e=this.options;const s=(t,e)=>t!==e&&(!(Array.isArray(t)&&Array.isArray(e))||t.length!==e.length||!t.every(((t,s)=>t===e[s])));return t.ssaoType!==e.ssaoType||t.ssaoBlurEnabled!==e.ssaoBlurEnabled||t.taaEnabled!==e.taaEnabled||t.samples!==e.samples||t.stencil!==e.stencil||t.bloomEnabled!==e.bloomEnabled||t.prepassEnabled!==e.prepassEnabled||t.sceneColorMap!==e.sceneColorMap||t.dofEnabled!==e.dofEnabled||t.dofNearBlur!==e.dofNearBlur||t.dofHighQuality!==e.dofHighQuality||s(t.formats,e.formats)}update(t){t=this.sanitizeOptions(t);if(this.needsReset(t)||this.layersDirty){this.layersDirty=false;this.reset()}this.options=t;if(!this.sceneTexture){this.setupRenderPasses(this.options)}}createRenderTarget(t,e,s,i,n){const r=new lo(this.device,{name:t,width:4,height:4,format:this.hdrFormat,mipmaps:false,minFilter:os,magFilter:os,addressU:pe,addressV:pe});return new il({colorBuffer:r,depth:e,stencil:s,samples:i,flipY:n})}setupRenderPasses(t){const{device:e}=this;const s=this.cameraComponent;const i=s.renderTarget;this.hdrFormat=e.getRenderableHdrFormat(t.formats,true,t.samples)||Ds;this._bloomEnabled=t.bloomEnabled&&this.hdrFormat!==Ds;this._sceneHalfEnabled=this._bloomEnabled||t.dofEnabled;s.shaderParams.ssaoEnabled=t.ssaoType===zK;const n=!!i?.flipY;this.rt=this.createRenderTarget("SceneColor",true,t.stencil,t.samples,n);this.sceneTexture=this.rt.colorBuffer;if(this._sceneHalfEnabled){this.rtHalf=this.createRenderTarget("SceneColorHalf",false,false,1,n);this.sceneTextureHalf=this.rtHalf.colorBuffer}this.sceneOptions={resizeSource:i,scaleX:this.renderTargetScale,scaleY:this.renderTargetScale};this.createPasses(t);const r=this.collectPasses();this.beforePasses=r.filter((t=>t!==undefined&&t!==null))}collectPasses(){return[this.prePass,this.ssaoPass,this.scenePass,this.colorGrabPass,this.scenePassTransparent,this.taaPass,this.scenePassHalf,this.bloomPass,this.dofPass,this.composePass,this.afterPass]}createPasses(t){this.setupScenePrepass(t);this.setupSsaoPass(t);const e=this.setupScenePass(t);const s=this.setupTaaPass(t);this.setupSceneHalfPass(t,s);this.setupBloomPass(t,this.sceneTextureHalf);this.setupDofPass(t,this.sceneTexture,this.sceneTextureHalf);this.setupComposePass(t);this.setupAfterPass(t,e)}setupScenePrepass(t){if(t.prepassEnabled){const{app:t,device:e,cameraComponent:s}=this;const{scene:i,renderer:n}=t;this.prePass=new DZ(e,i,n,s,this.sceneOptions)}}setupScenePassSettings(t){t.gammaCorrection=T_;t.toneMapping=M_}setupScenePass(t){const{app:e,device:s,cameraComponent:i}=this;const{scene:n,renderer:r}=e;const a=n.layers;this.scenePass=new Sx(s,a,n,r);this.setupScenePassSettings(this.scenePass);this.scenePass.init(this.rt,this.sceneOptions);const o=t.sceneColorMap?t.lastGrabLayerId:t.lastSceneLayerId;const l=t.sceneColorMap?t.lastGrabLayerIsTransparent:t.lastSceneLayerIsTransparent;const h={lastAddedIndex:0,clearRenderTarget:true};h.lastAddedIndex=this.scenePass.addLayers(a,i,h.lastAddedIndex,h.clearRenderTarget,o,l);h.clearRenderTarget=false;if(t.sceneColorMap){this.colorGrabPass=new dy(s);this.colorGrabPass.source=this.rt;this.scenePassTransparent=new Sx(s,a,n,r);this.setupScenePassSettings(this.scenePassTransparent);this.scenePassTransparent.init(this.rt);h.lastAddedIndex=this.scenePassTransparent.addLayers(a,i,h.lastAddedIndex,h.clearRenderTarget,t.lastSceneLayerId,t.lastSceneLayerIsTransparent);if(!this.scenePassTransparent.rendersAnything){this.scenePassTransparent.destroy();this.scenePassTransparent=null}if(this.scenePassTransparent){if(t.prepassEnabled){this.scenePassTransparent.depthStencilOps.storeDepth=true}}}return h}setupSsaoPass(t){const{ssaoBlurEnabled:e,ssaoType:s}=t;const{device:i,cameraComponent:n}=this;if(s!==UK){this.ssaoPass=new NZ(i,this.sceneTexture,n,e)}}setupSceneHalfPass(t,e){if(this._sceneHalfEnabled){this.scenePassHalf=new WK(this.device,this.sceneTexture,{boxFilter:true,removeInvalid:true});this.scenePassHalf.name="RenderPassSceneHalf";this.scenePassHalf.init(this.rtHalf,{resizeSource:e,scaleX:.5,scaleY:.5});this.scenePassHalf.setClearColor(bt.BLACK)}}setupBloomPass(t,e){if(this._bloomEnabled){this.bloomPass=new jK(this.device,e,this.hdrFormat)}}setupDofPass(t,e,s){if(t.dofEnabled){this.dofPass=new CZ(this.device,this.cameraComponent,e,s,t.dofHighQuality,t.dofNearBlur)}}setupTaaPass(t){let e=this.sceneTexture;if(t.taaEnabled){this.taaPass=new SZ(this.device,this.sceneTexture,this.cameraComponent);e=this.taaPass.historyTexture}return e}setupComposePass(t){this.composePass=new mZ(this.device);this.composePass.bloomTexture=this.bloomPass?.bloomTexture;this.composePass.taaEnabled=t.taaEnabled;this.composePass.cocTexture=this.dofPass?.cocTexture;this.composePass.blurTexture=this.dofPass?.blurTexture;this.composePass.blurTextureUpscale=!this.dofPass?.highQuality;const e=this.cameraComponent;const s=e.renderTarget;this.composePass.init(s);this.composePass.ssaoTexture=t.ssaoType===VK?this.ssaoPass.ssaoTexture:null}setupAfterPass(t,e){const{app:s,cameraComponent:i}=this;const{scene:n,renderer:r}=s;const a=n.layers;const o=i.renderTarget;this.afterPass=new Sx(this.device,a,n,r);this.afterPass.init(o);this.afterPass.addLayers(a,i,e.lastAddedIndex,e.clearRenderTarget)}frameUpdate(){if(this.layersDirty){this.cameraFrame.update()}super.frameUpdate();const t=this.taaPass?.update()??this.rt.colorBuffer;this.composePass.sceneTexture=t;this.scenePassHalf?.setSourceTexture(t)}}class zZ{constructor(t,e){this._enabled=true;this.rendering={renderFormats:[Vs,Fs,ks],stencil:false,renderTargetScale:1,samples:1,sceneColorMap:false,sceneDepthMap:false,toneMapping:0,sharpness:0};this.ssao={type:UK,blurEnabled:true,randomize:false,intensity:.5,radius:30,samples:12,power:6,minAngle:10,scale:1};this.bloom={intensity:0,blurLevel:16};this.grading={enabled:false,brightness:1,contrast:1,saturation:1,tint:new bt(1,1,1,1)};this.colorLUT={texture:null,intensity:1};this.vignette={intensity:0,inner:.5,outer:1,curvature:.5};this.taa={enabled:false,jitter:1};this.fringing={intensity:0};this.dof={enabled:false,nearBlur:false,focusDistance:100,focusRange:10,blurRadius:3,blurRings:4,blurRingPoints:5,highQuality:true};this.debug=null;this.options=new kZ;this.renderPassCamera=null;this.app=t;this.cameraComponent=e;this.updateOptions();this.enable();this.cameraLayersChanged=e.on("set:layers",(()=>{if(this.renderPassCamera)this.renderPassCamera.layersDirty=true}))}destroy(){this.disable();this.cameraLayersChanged.off()}enable(){this.renderPassCamera=this.createRenderPass();this.cameraComponent.renderPasses=[this.renderPassCamera]}disable(){const t=this.cameraComponent;t.renderPasses?.forEach((t=>{t.destroy()}));t.renderPasses=[];t.rendering=null;t.jitter=0;t.shaderParams.ssaoEnabled=false;this.renderPassCamera=null}createRenderPass(){return new UZ(this.app,this,this.cameraComponent,this.options)}set enabled(t){if(this._enabled!==t){if(t){this.enable()}else{this.disable()}this._enabled=t}}get enabled(){return this._enabled}updateOptions(){const{options:t,rendering:e,bloom:s,taa:i,ssao:n}=this;t.stencil=e.stencil;t.samples=e.samples;t.sceneColorMap=e.sceneColorMap;t.prepassEnabled=e.sceneDepthMap;t.bloomEnabled=s.intensity>0;t.taaEnabled=i.enabled;t.ssaoType=n.type;t.ssaoBlurEnabled=n.blurEnabled;t.formats=e.renderFormats.slice();t.dofEnabled=this.dof.enabled;t.dofNearBlur=this.dof.nearBlur;t.dofHighQuality=this.dof.highQuality}update(){if(!this._enabled)return;const t=this.cameraComponent;const{options:e,renderPassCamera:s,rendering:i,bloom:n,grading:r,vignette:a,fringing:o,taa:l,ssao:h}=this;this.updateOptions();s.update(e);const{composePass:c,bloomPass:d,ssaoPass:u,dofPass:f}=s;s.renderTargetScale=wt.clamp(i.renderTargetScale,.1,1);c.toneMapping=i.toneMapping;c.sharpness=i.sharpness;if(e.bloomEnabled&&d){c.bloomIntensity=n.intensity;d.blurLevel=n.blurLevel}if(e.dofEnabled){f.focusDistance=this.dof.focusDistance;f.focusRange=this.dof.focusRange;f.blurRadius=this.dof.blurRadius;f.blurRings=this.dof.blurRings;f.blurRingPoints=this.dof.blurRingPoints}if(e.ssaoType!==UK){u.intensity=h.intensity;u.power=h.power;u.radius=h.radius;u.sampleCount=h.samples;u.minAngle=h.minAngle;u.scale=h.scale;u.randomize=h.randomize}c.gradingEnabled=r.enabled;if(r.enabled){c.gradingSaturation=r.saturation;c.gradingBrightness=r.brightness;c.gradingContrast=r.contrast;c.gradingTint=r.tint}c.colorLUT=this.colorLUT.texture;c.colorLUTIntensity=this.colorLUT.intensity;c.vignetteEnabled=a.intensity>0;if(c.vignetteEnabled){c.vignetteInner=a.inner;c.vignetteOuter=a.outer;c.vignetteCurvature=a.curvature;c.vignetteIntensity=a.intensity}c.fringingEnabled=o.intensity>0;if(c.fringingEnabled){c.fringingIntensity=o.intensity}t.jitter=l.enabled?l.jitter:0;c.debug=this.debug;if(c.debug==="ssao"&&e.ssaoType===UK)c.debug=null;if(c.debug==="vignette"&&!c.vignetteEnabled)c.debug=null}}const VZ=new It;const GZ=new Gt;class HZ{constructor(t=It.ZERO,e=It.ZERO,s=0){this.position=new It;this.angles=new It;this.distance=0;this.pitchRange=new Ot(-Infinity,Infinity);this.yawRange=new Ot(-Infinity,Infinity);this.xRange=new Ot(-Infinity,Infinity);this.yRange=new Ot(-Infinity,Infinity);this.zRange=new Ot(-Infinity,Infinity);this.set(t,e,s)}copy(t){return this.set(t.position,t.angles,t.distance)}clone(){return new HZ(this.position.clone(),this.angles.clone(),this.distance)}equalsApprox(t,e=1e-6){return this.position.equalsApprox(t.position,e)&&this.angles.equalsApprox(t.angles,e)&&Math.abs(this.distance-t.distance)<e}lerp(t,e,s,i=s,n=s){this.position.lerp(t.position,e.position,s);this.angles.x=wt.lerpAngle(t.angles.x,e.angles.x,i)%360;this.angles.y=wt.lerpAngle(t.angles.y,e.angles.y,i)%360;this.angles.z=wt.lerpAngle(t.angles.z,e.angles.z,i)%360;this.distance=wt.lerp(t.distance,e.distance,n);return this}move(t){this.position.add(t);this.position.x=wt.clamp(this.position.x,this.xRange.x,this.xRange.y);this.position.y=wt.clamp(this.position.y,this.yRange.x,this.yRange.y);this.position.z=wt.clamp(this.position.z,this.zRange.x,this.zRange.y);return this}rotate(t){this.angles.add(t);this.angles.x%=360;this.angles.y%=360;this.angles.z%=360;this.angles.x=wt.clamp(this.angles.x,this.pitchRange.x,this.pitchRange.y);this.angles.y=wt.clamp(this.angles.y,this.yawRange.x,this.yawRange.y);return this}set(t,e,s){this.position.copy(t);this.angles.copy(e);this.distance=s;return this}look(t,e){this.position.copy(t);this.distance=t.distance(e);const s=VZ.sub2(e,t).normalize();const i=Math.atan2(-s.y,Math.sqrt(s.x*s.x+s.z*s.z))*wt.RAD_TO_DEG;const n=Math.atan2(-s.x,-s.z)*wt.RAD_TO_DEG;this.angles.set(-i,n,0);return this}getFocus(t){return GZ.setFromEulerAngles(this.angles).transformVector(It.FORWARD,t).mulScalar(this.distance).add(this.position)}}class WZ{constructor(t){if(Array.isArray(t)){this._value=t.slice()}else{this._value=new Array(+t).fill(0)}}add(t){for(let e=0;e<this._value.length;e++){this._value[e]+=t._value[e]||0}return this}append(t){for(let e=0;e<this._value.length;e++){this._value[e]+=t[e]||0}return this}copy(t){for(let e=0;e<this._value.length;e++){this._value[e]=t._value[e]||0}return this}length(){let t=0;for(const e of this._value){t+=e*e}return Math.sqrt(t)}read(){const t=this._value.slice();this._value.fill(0);return t}}class XZ{constructor(t){this.deltas={};for(const e in t){this.deltas[e]=new WZ(t[e])}}read(){const t={};for(const e in this.deltas){t[e]=this.deltas[e].read()}return t}}class qZ extends XZ{on(t,e){this._events.on(t,e)}off(t,e){this._events.off(t,e)}fire(t,...e){this._events.fire(t,...e)}attach(t){if(this._element){this.detach()}this._element=t}detach(){if(!this._element){return}this._element=null;this.read()}destroy(){this.detach();this._events.off()}constructor(...t){super(...t),this._element=null,this._events=new at}}class $Z{update(t,e){t.read()}}class jZ extends $Z{attach(t,e=true){}detach(){}update(t,e){super.update(t,e);return this._pose}destroy(){this.detach()}constructor(...t){super(...t),this._pose=new HZ}}const YZ=250;const KZ=100;const ZZ=new Ot;class QZ{constructor({range:t}={}){this._range=70;this._position=new Ot;this._value=new Ot;this._range=t??this._range}get value(){return this._value}down(t,e){this._position.set(t,e);this._value.set(0,0);return[t,e,t,e]}move(t,e){ZZ.set(t-this._position.x,e-this._position.y);if(ZZ.length()>this._range){ZZ.normalize().mulScalar(this._range)}this._value.set(wt.clamp(ZZ.x/this._range,-1,1),wt.clamp(ZZ.y/this._range,-1,1));const{x:s,y:i}=this._position;return[s,i,s+ZZ.x,i+ZZ.y]}up(){this._position.set(0,0);this._value.set(0,0);return[-1,-1,-1,-1]}}class JZ extends qZ{constructor(){super({input:[0,0],doubleTap:[0]}),this._layout="joystick",this._pointerData=new Map,this._lastPointer={x:0,y:0,time:0};this._joystick=new QZ;this._onPointerDown=this._onPointerDown.bind(this);this._onPointerMove=this._onPointerMove.bind(this);this._onPointerUp=this._onPointerUp.bind(this)}set layout(t){if(this._layout===t){return}this._layout=t;this.read();this._pointerData.clear()}get layout(){return this._layout}get joystick(){return this._joystick}_onPointerDown(t){const{pointerType:e,pointerId:s,clientX:i,clientY:n}=t;if(e!=="touch"){return}this._element?.setPointerCapture(s);this._pointerData.set(s,{x:i,y:n});const r=Date.now();const a=(this._lastPointer.x-i)**2+(this._lastPointer.y-n)**2;if(a<KZ&&r-this._lastPointer.time<YZ){this.deltas.doubleTap.append([1])}this._lastPointer.x=i;this._lastPointer.y=n;this._lastPointer.time=r;if(this._layout==="joystick"){this.fire("joystick:position",this._joystick.down(i,n))}}_onPointerMove(t){const{pointerType:e,pointerId:s,target:i,clientX:n,clientY:r,movementX:a,movementY:o}=t;if(e!=="touch"){return}if(i!==this._element){return}const l=this._pointerData.get(s);if(!l){return}l.x=n;l.y=r;if(this._layout==="joystick"){this.fire("joystick:position",this._joystick.move(n,r))}else{this.deltas.input.append([a,o])}}_onPointerUp(t){const{pointerType:e,pointerId:s}=t;if(e!=="touch"){return}this._element?.releasePointerCapture(s);const i=this._pointerData.get(s);if(!i){return}this._pointerData.delete(s);if(this._layout==="joystick"){this.fire("joystick:position",this._joystick.up())}}attach(t){super.attach(t);this._element=t;this._element.addEventListener("pointerdown",this._onPointerDown);this._element.addEventListener("pointermove",this._onPointerMove);this._element.addEventListener("pointerup",this._onPointerUp);this._element.addEventListener("pointercancel",this._onPointerUp)}detach(){if(!this._element){return}this._element.removeEventListener("pointerdown",this._onPointerDown);this._element.removeEventListener("pointermove",this._onPointerMove);this._element.removeEventListener("pointerup",this._onPointerUp);this._element.removeEventListener("pointercancel",this._onPointerUp);this._pointerData.clear();super.detach()}read(){this.deltas.input.append([this._joystick.value.x,this._joystick.value.y]);return super.read()}destroy(){this._joystick.up();super.destroy()}}const tQ=(t,e)=>t.indexOf(e)===0;const eQ=(t,e)=>t.indexOf(e,t.length-e.length)!==-1;class sQ extends qZ{constructor(t){super({leftInput:[0,0],rightInput:[0,0],doubleTap:[0]}),this._layout="joystick-touch",this._pointerData=new Map,this._lastPointer={x:0,y:0,time:0};if(t){this.layout=t}this._leftJoystick=new QZ;this._rightJoystick=new QZ;this._onPointerDown=this._onPointerDown.bind(this);this._onPointerMove=this._onPointerMove.bind(this);this._onPointerUp=this._onPointerUp.bind(this)}set layout(t){if(this._layout===t){return}this._layout=t;this.read();this._pointerData.clear()}get layout(){return this._layout}get leftJoystick(){return this._leftJoystick}get rightJoystick(){return this._rightJoystick}_onPointerDown(t){const{pointerType:e,pointerId:s,clientX:i,clientY:n}=t;if(e!=="touch"){return}this._element?.setPointerCapture(s);const r=i<window.innerWidth*.5;this._pointerData.set(s,{x:i,y:n,left:r});const a=Date.now();const o=(this._lastPointer.x-i)**2+(this._lastPointer.y-n)**2;if(o<KZ&&a-this._lastPointer.time<YZ){this.deltas.doubleTap.append([1])}this._lastPointer.x=i;this._lastPointer.y=n;this._lastPointer.time=a;if(r&&tQ(this._layout,"joystick")){this.fire("joystick:position:left",this._leftJoystick.down(i,n))}if(!r&&eQ(this._layout,"joystick")){this.fire("joystick:position:right",this._rightJoystick.down(i,n))}}_onPointerMove(t){const{pointerType:e,pointerId:s,target:i,clientX:n,clientY:r,movementX:a,movementY:o}=t;if(e!=="touch"){return}if(i!==this._element){return}const l=this._pointerData.get(s);if(!l){return}const{left:h}=l;l.x=n;l.y=r;if(h){if(tQ(this._layout,"joystick")){this.fire("joystick:position:left",this._leftJoystick.move(n,r))}else{this.deltas.leftInput.append([a,o])}}else{if(eQ(this._layout,"joystick")){this.fire("joystick:position:right",this._rightJoystick.move(n,r))}else{this.deltas.rightInput.append([a,o])}}}_onPointerUp(t){const{pointerType:e,pointerId:s}=t;if(e!=="touch"){return}this._element?.releasePointerCapture(s);const i=this._pointerData.get(s);if(!i){return}const{left:n}=i;this._pointerData.delete(s);if(n&&tQ(this._layout,"joystick")){this.fire("joystick:position:left",this._leftJoystick.up())}if(!n&&eQ(this._layout,"joystick")){this.fire("joystick:position:right",this._rightJoystick.up())}}attach(t){super.attach(t);this._element=t;this._element.addEventListener("pointerdown",this._onPointerDown);this._element.addEventListener("pointermove",this._onPointerMove);this._element.addEventListener("pointerup",this._onPointerUp);this._element.addEventListener("pointercancel",this._onPointerUp)}detach(){if(!this._element){return}this._element.removeEventListener("pointerdown",this._onPointerDown);this._element.removeEventListener("pointermove",this._onPointerMove);this._element.removeEventListener("pointerup",this._onPointerUp);this._element.removeEventListener("pointercancel",this._onPointerUp);this._pointerData.clear();super.detach()}read(){this.deltas.leftInput.append([this._leftJoystick.value.x,this._leftJoystick.value.y]);this.deltas.rightInput.append([this._rightJoystick.value.x,this._rightJoystick.value.y]);return super.read()}destroy(){this._leftJoystick.up();this._rightJoystick.up();super.destroy()}}const iQ=new Ot;class nQ extends qZ{constructor(){super({touch:[0,0],count:[0],pinch:[0]}),this._pointerEvents=new Map,this._pointerPos=new Ot,this._pinchDist=-1;this._onPointerDown=this._onPointerDown.bind(this);this._onPointerMove=this._onPointerMove.bind(this);this._onPointerUp=this._onPointerUp.bind(this);this._onContextMenu=this._onContextMenu.bind(this)}_onPointerDown(t){const{pointerId:e,pointerType:s}=t;if(s!=="touch"){return}this._element?.setPointerCapture(e);this._pointerEvents.set(e,t);this.deltas.count.append([1]);if(this._pointerEvents.size>1){this._getMidPoint(this._pointerPos);this._pinchDist=this._getPinchDist()}}_onPointerMove(t){const{pointerType:e,target:s,pointerId:i,movementX:n,movementY:r}=t;if(e!=="touch"){return}if(s!==this._element){return}if(this._pointerEvents.size===0){return}this._pointerEvents.set(i,t);if(this._pointerEvents.size>1){const t=this._getMidPoint(iQ);this.deltas.touch.append([t.x-this._pointerPos.x,t.y-this._pointerPos.y]);this._pointerPos.copy(t);const e=this._getPinchDist();if(this._pinchDist>0){this.deltas.pinch.append([this._pinchDist-e])}this._pinchDist=e}else{this.deltas.touch.append([n,r])}}_onPointerUp(t){const{pointerType:e,pointerId:s}=t;if(e!=="touch"){return}this._element?.releasePointerCapture(s);this._pointerEvents.delete(s);this.deltas.count.append([-1]);if(this._pointerEvents.size<2){this._pinchDist=-1}this._pointerPos.set(0,0)}_onContextMenu(t){t.preventDefault()}_getMidPoint(t){if(this._pointerEvents.size<2){return t.set(0,0)}const[e,s]=this._pointerEvents.values();const i=e.clientX-s.clientX;const n=e.clientY-s.clientY;return t.set(s.clientX+i*.5,s.clientY+n*.5)}_getPinchDist(){if(this._pointerEvents.size<2){return 0}const[t,e]=this._pointerEvents.values();const s=t.clientX-e.clientX;const i=t.clientY-e.clientY;return Math.sqrt(s*s+i*i)}attach(t){super.attach(t);this._element=t;this._element.addEventListener("pointerdown",this._onPointerDown);this._element.addEventListener("pointermove",this._onPointerMove);this._element.addEventListener("pointerup",this._onPointerUp);this._element.addEventListener("pointercancel",this._onPointerUp);this._element.addEventListener("contextmenu",this._onContextMenu)}detach(){if(!this._element){return}this._element.removeEventListener("pointerdown",this._onPointerDown);this._element.removeEventListener("pointermove",this._onPointerMove);this._element.removeEventListener("pointerup",this._onPointerUp);this._element.removeEventListener("pointercancel",this._onPointerUp);this._element.removeEventListener("contextmenu",this._onContextMenu);this._pointerEvents.clear();super.detach()}}const rQ={passive:false};const aQ={A:0,B:1,C:2,D:3,E:4,F:5,G:6,H:7,I:8,J:9,K:10,L:11,M:12,N:13,O:14,P:15,Q:16,R:17,S:18,T:19,U:20,V:21,W:22,X:23,Y:24,Z:25,0:26,1:27,2:28,3:29,4:30,5:31,6:32,7:33,8:34,9:35,UP:36,DOWN:37,LEFT:38,RIGHT:39,SPACE:40,SHIFT:41,CTRL:42};const oQ=Object.keys(aQ).length;const lQ=Array(oQ).fill(0);class hQ extends qZ{static{this.keyCode=aQ}constructor({pointerLock:t=false}={}){super({key:Array(oQ).fill(0),button:[0,0,0],mouse:[0,0],wheel:[0]}),this._pointerId=0,this._keyMap=new Map,this._keyPrev=Array(oQ).fill(0),this._keyNow=Array(oQ).fill(0),this._button=Array(3).fill(0);this._pointerLock=t??false;const{keyCode:e}=hQ;for(let t=0;t<26;t++){const s=`Key${String.fromCharCode("A".charCodeAt(0)+t)}`;this._keyMap.set(s,e.A+t)}for(let t=0;t<10;t++){const s=`Digit${t}`;this._keyMap.set(s,e["0"]+t)}this._keyMap.set("ArrowUp",e.UP);this._keyMap.set("ArrowDown",e.DOWN);this._keyMap.set("ArrowLeft",e.LEFT);this._keyMap.set("ArrowRight",e.RIGHT);this._keyMap.set("Space",e.SPACE);this._keyMap.set("ShiftLeft",e.SHIFT);this._keyMap.set("ShiftRight",e.SHIFT);this._keyMap.set("ControlLeft",e.CTRL);this._keyMap.set("ControlRight",e.CTRL);this._onWheel=this._onWheel.bind(this);this._onPointerDown=this._onPointerDown.bind(this);this._onPointerMove=this._onPointerMove.bind(this);this._onPointerUp=this._onPointerUp.bind(this);this._onContextMenu=this._onContextMenu.bind(this);this._onKeyDown=this._onKeyDown.bind(this);this._onKeyUp=this._onKeyUp.bind(this)}_onWheel(t){t.preventDefault();this.deltas.wheel.append([t.deltaY])}_onPointerDown(t){if(t.pointerType!=="mouse"){return}if(this._pointerLock){if(document.pointerLockElement!==this._element){this._element?.requestPointerLock()}}else{this._element?.setPointerCapture(t.pointerId)}this._clearButtons();this._button[t.button]=1;this.deltas.button.append(this._button);if(this._pointerId){return}this._pointerId=t.pointerId}_onPointerMove(t){if(t.pointerType!=="mouse"){return}if(t.target!==this._element){return}if(this._pointerLock){if(document.pointerLockElement!==this._element){return}}else{if(this._pointerId!==t.pointerId){return}}this.deltas.mouse.append([t.movementX,t.movementY])}_onPointerUp(t){if(t.pointerType!=="mouse"){return}if(!this._pointerLock){this._element?.releasePointerCapture(t.pointerId)}this._clearButtons();this.deltas.button.append(this._button);if(this._pointerId!==t.pointerId){return}this._pointerId=0}_onContextMenu(t){t.preventDefault()}_onKeyDown(t){if(this._pointerLock&&document.pointerLockElement!==this._element){return}t.stopPropagation();this._setKey(t.code,1)}_onKeyUp(t){t.stopPropagation();this._setKey(t.code,0)}_clearButtons(){for(let t=0;t<this._button.length;t++){if(this._button[t]===1){this._button[t]=-1;continue}this._button[t]=0}}_setKey(t,e){if(!this._keyMap.has(t)){return}this._keyNow[this._keyMap.get(t)??0]=e}attach(t){super.attach(t);this._element=t;this._element.addEventListener("wheel",this._onWheel,rQ);this._element.addEventListener("pointerdown",this._onPointerDown);this._element.addEventListener("pointermove",this._onPointerMove);this._element.addEventListener("pointerup",this._onPointerUp);this._element.addEventListener("pointercancel",this._onPointerUp);this._element.addEventListener("contextmenu",this._onContextMenu);window.addEventListener("keydown",this._onKeyDown,false);window.addEventListener("keyup",this._onKeyUp,false)}detach(){if(!this._element){return}this._element.removeEventListener("wheel",this._onWheel,rQ);this._element.removeEventListener("pointerdown",this._onPointerDown);this._element.removeEventListener("pointermove",this._onPointerMove);this._element.removeEventListener("pointerup",this._onPointerUp);this._element.removeEventListener("pointercancel",this._onPointerUp);this._element.removeEventListener("contextmenu",this._onContextMenu);window.removeEventListener("keydown",this._onKeyDown,false);window.removeEventListener("keyup",this._onKeyUp,false);this._keyNow.fill(0);this._keyPrev.fill(0);super.detach()}read(){for(let t=0;t<lQ.length;t++){lQ[t]=this._keyNow[t]-this._keyPrev[t];this._keyPrev[t]=this._keyNow[t]}this.deltas.key.append(lQ);return super.read()}}const cQ={A:0,B:1,X:2,Y:3,LB:4,RB:5,LT:6,RT:7,SELECT:8,START:9,LEFT_STICK:10,RIGHT_STICK:11};const dQ=Object.keys(cQ).length;class uQ extends qZ{static{this.buttonCode=cQ}constructor(){super({buttons:Array(dQ).fill(0),leftStick:[0,0],rightStick:[0,0]}),this._buttonPrev=Array(dQ).fill(0)}read(){const t=navigator.getGamepads();for(let e=0;e<t.length;e++){const s=t[e];if(!s){continue}if(s.mapping!=="standard"){continue}if(s.axes.length<4){continue}if(s.buttons.length<dQ){continue}const{buttons:i,axes:n}=s;for(let t=0;t<this._buttonPrev.length;t++){const e=+i[t].pressed;this.deltas.buttons[t]=e-this._buttonPrev[t];this._buttonPrev[t]=e}this.deltas.leftStick.append([n[0],n[1]]);this.deltas.rightStick.append([n[2],n[3]])}return super.read()}}const fQ=(t,e)=>1-Math.pow(t,e*1e3);const pQ=new It;const mQ=new It;const _Q=new It;const gQ=new It;const vQ=new It;const yQ=new Gt;class SQ extends jZ{set pitchRange(t){this._targetPose.pitchRange.copy(t);this._pose.copy(this._targetPose.rotate(It.ZERO))}get pitchRange(){return this._targetPose.pitchRange}set yawRange(t){this._targetPose.yawRange.copy(t);this._pose.copy(this._targetPose.rotate(It.ZERO))}get yawRange(){return this._targetPose.yawRange}attach(t,e=true){this._targetPose.copy(t);if(!e){this._pose.copy(this._targetPose)}}detach(){this._targetPose.copy(this._pose)}update(t,e){const{move:s,rotate:i}=t.read();this._targetPose.rotate(mQ.set(-i[1],-i[0],0));yQ.setFromEulerAngles(this._pose.angles);yQ.transformVector(It.FORWARD,_Q);yQ.transformVector(It.RIGHT,gQ);yQ.transformVector(It.UP,vQ);pQ.set(0,0,0);pQ.add(_Q.mulScalar(s[2]));pQ.add(gQ.mulScalar(s[0]));pQ.add(vQ.mulScalar(s[1]));this._targetPose.move(pQ);return this._pose.lerp(this._pose,this._targetPose,fQ(this.moveDamping,e),fQ(this.rotateDamping,e))}destroy(){this.detach()}constructor(...t){super(...t),this._targetPose=new HZ,this.rotateDamping=.98,this.moveDamping=.98}}const xQ=new It;const TQ=new It;const wQ=new It;const bQ=new Gt;class EQ extends jZ{set pitchRange(t){this._targetRootPose.pitchRange.copy(t);this._rootPose.copy(this._targetRootPose.rotate(It.ZERO))}get pitchRange(){return this._targetRootPose.pitchRange}set yawRange(t){this._targetRootPose.yawRange.copy(t);this._rootPose.copy(this._targetRootPose.rotate(It.ZERO))}get yawRange(){return this._targetRootPose.yawRange}set zoomRange(t){this._targetChildPose.zRange.copy(t);this._childPose.copy(this._targetChildPose.move(It.ZERO))}get zoomRange(){return this._targetRootPose.zRange}attach(t,e=true){this._targetRootPose.set(t.getFocus(xQ),t.angles,0);this._targetChildPose.position.set(0,0,t.distance);if(!e){this._rootPose.copy(this._targetRootPose);this._childPose.copy(this._targetChildPose)}}detach(){this._targetRootPose.copy(this._rootPose);this._targetChildPose.copy(this._childPose)}update(t,e){const{move:s,rotate:i}=t.read();TQ.set(s[0],s[1],0);bQ.setFromEulerAngles(this._rootPose.angles).transformVector(TQ,TQ);this._targetRootPose.move(TQ);const{z:n}=this._targetChildPose.position;this._targetChildPose.move(TQ.set(0,0,n*(1+s[2])-n));this._targetRootPose.rotate(wQ.set(-i[1],-i[0],0));this._rootPose.lerp(this._rootPose,this._targetRootPose,fQ(this.moveDamping,e),fQ(this.rotateDamping,e),1);this._childPose.lerp(this._childPose,this._targetChildPose,fQ(this.zoomDamping,e),1,1);bQ.setFromEulerAngles(this._rootPose.angles).transformVector(this._childPose.position,TQ).add(this._rootPose.position);return this._pose.set(TQ,this._rootPose.angles,this._childPose.position.z)}destroy(){this.detach()}constructor(...t){super(...t),this._targetRootPose=new HZ,this._rootPose=new HZ,this._targetChildPose=new HZ,this._childPose=new HZ,this.rotateDamping=.98,this.moveDamping=.98,this.zoomDamping=.98}}const AQ=.001;const CQ=new It;const PQ=new It;const LQ=new Gt;class DQ extends jZ{attach(t,e=true){this._targetRootPose.set(t.getFocus(CQ),t.angles,0);this._targetChildPose.position.set(0,0,t.distance);if(!e){this._rootPose.copy(this._targetRootPose);this._childPose.copy(this._targetChildPose)}}detach(){this._targetRootPose.copy(this._rootPose);this._targetChildPose.copy(this._childPose)}complete(){return this._targetRootPose.equalsApprox(this._rootPose,AQ)&&this._targetChildPose.equalsApprox(this._childPose,AQ)}update(t,e){t.read();this._rootPose.lerp(this._rootPose,this._targetRootPose,fQ(this.focusDamping,e),fQ(this.focusDamping,e),1);this._childPose.lerp(this._childPose,this._targetChildPose,fQ(this.focusDamping,e),1,1);LQ.setFromEulerAngles(this._rootPose.angles).transformVector(this._childPose.position,PQ).add(this._rootPose.position);return this._pose.set(PQ,this._rootPose.angles,this._childPose.position.length())}destroy(){this.detach()}constructor(...t){super(...t),this._targetRootPose=new HZ,this._rootPose=new HZ,this._targetChildPose=new HZ,this._childPose=new HZ,this.focusDamping=.98}}const MQ="local";const IQ="world";const RQ="x";const OQ="y";const FQ="z";const NQ="yz";const kQ="xz";const BQ="xy";const UQ="xyz";const zQ="face";const VQ=new It;const GQ=new It;const HQ=new Vt;const WQ=new Vt;const XQ=new te;const qQ="Gizmo";const $Q=1e-4;const jQ=.3;const YQ=.32;const KQ=1e-6;class ZQ extends at{static{this.EVENT_POINTERDOWN="pointer:down"}static{this.EVENT_POINTERMOVE="pointer:move"}static{this.EVENT_POINTERUP="pointer:up"}static{this.EVENT_POSITIONUPDATE="position:update"}static{this.EVENT_ROTATIONUPDATE="rotation:update"}static{this.EVENT_SCALEUPDATE="scale:update"}static{this.EVENT_NODESATTACH="nodes:attach"}static{this.EVENT_NODESDETACH="nodes:detach"}static{this.EVENT_RENDERUPDATE="render:update"}static createLayer(t,e=qQ,s){const i=new kx({name:e,clearDepthBuffer:true,opaqueSortMode:Bg,transparentSortMode:Bg});t.scene.layers.insert(i,s??t.scene.layers.layerList.length);return i}constructor(t,e){super(),this._size=1,this._scale=1,this._coordSpace=IQ,this.nodes=[],this.intersectShapes=[];this._camera=t;this._app=t.system.app;this._device=this._app.graphicsDevice;this._layer=e;t.layers=t.layers.concat(e.id);this.root=new dC("gizmo");this._app.root.addChild(this.root);this.root.enabled=false;this._updateScale();this._onPointerDown=this._onPointerDown.bind(this);this._onPointerMove=this._onPointerMove.bind(this);this._onPointerUp=this._onPointerUp.bind(this);this._device.canvas.addEventListener("pointerdown",this._onPointerDown);this._device.canvas.addEventListener("pointermove",this._onPointerMove);this._device.canvas.addEventListener("pointerup",this._onPointerUp);this._app.on("update",(()=>{this._updatePosition();this._updateRotation();this._updateScale()}));this._app.on("destroy",(()=>this.destroy()))}get layer(){return this._layer}set coordSpace(t){this._coordSpace=t??IQ;this._updateRotation()}get coordSpace(){return this._coordSpace}set size(t){this._size=t;this._updateScale()}get size(){return this._size}get facing(){if(this._camera.projection===l_){const t=this.root.getPosition();const e=this._camera.entity.getPosition();return GQ.sub2(e,t).normalize()}return GQ.copy(this._camera.entity.forward).mulScalar(-1)}_onPointerDown(t){if(!this.root.enabled||document.pointerLockElement){return}const e=this._getSelection(t.offsetX,t.offsetY);if(e[0]){t.preventDefault();t.stopPropagation()}const{canvas:s}=this._device;s.setPointerCapture(t.pointerId);this.fire(ZQ.EVENT_POINTERDOWN,t.offsetX,t.offsetY,e[0])}_onPointerMove(t){if(!this.root.enabled||document.pointerLockElement){return}const e=this._getSelection(t.offsetX,t.offsetY);if(e[0]){t.preventDefault();t.stopPropagation()}this.fire(ZQ.EVENT_POINTERMOVE,t.offsetX,t.offsetY,e[0])}_onPointerUp(t){if(!this.root.enabled||document.pointerLockElement){return}const e=this._getSelection(t.offsetX,t.offsetY);if(e[0]){t.preventDefault();t.stopPropagation()}const{canvas:s}=this._device;s.releasePointerCapture(t.pointerId);this.fire(ZQ.EVENT_POINTERUP,t.offsetX,t.offsetY,e[0])}_updatePosition(){VQ.set(0,0,0);for(let t=0;t<this.nodes.length;t++){const e=this.nodes[t];VQ.add(e.getPosition())}VQ.mulScalar(1/(this.nodes.length||1));if(VQ.distance(this.root.getPosition())<KQ){return}this.root.setPosition(VQ);this.fire(ZQ.EVENT_POSITIONUPDATE,VQ)}_updateRotation(){VQ.set(0,0,0);if(this._coordSpace===MQ&&this.nodes.length!==0){VQ.copy(this.nodes[this.nodes.length-1].getEulerAngles())}if(VQ.distance(this.root.getEulerAngles())<KQ){return}this.root.setEulerAngles(VQ);this.fire(ZQ.EVENT_ROTATIONUPDATE,VQ)}_updateScale(){if(this._camera.projection===l_){const t=this.root.getPosition();const e=this._camera.entity.getPosition();const s=t.distance(e);this._scale=Math.tan(.5*this._camera.fov*wt.DEG_TO_RAD)*s*jQ}else{this._scale=this._camera.orthoHeight*YQ}this._scale=Math.max(this._scale*this._size,$Q);if(Math.abs(this._scale-this.root.getLocalScale().x)<KQ){return}this.root.setLocalScale(this._scale,this._scale,this._scale);this.fire(ZQ.EVENT_SCALEUPDATE,this._scale)}_getSelection(t,e){const s=this._camera.screenToWorld(t,e,0);const i=this._camera.screenToWorld(t,e,this._camera.farClip-this._camera.nearClip);const n=VQ.copy(i).sub(s).normalize();const r=[];for(let t=0;t<this.intersectShapes.length;t++){const e=this.intersectShapes[t];if(e.disabled||!e.entity.enabled){continue}const i=e.entity.getWorldTransform();for(let t=0;t<e.triData.length;t++){const{tris:a,transform:o,priority:l}=e.triData[t];const h=HQ.copy(i).mul(o);const c=WQ.copy(h).invert();const d=XQ;c.transformPoint(s,d.origin);c.transformVector(n,d.direction);d.direction.normalize();for(let t=0;t<a.length;t++){if(a[t].intersectsRay(d,VQ)){r.push({dist:h.transformPoint(VQ).sub(s).length(),meshInstances:e.meshInstances,priority:l})}}}}if(r.length){r.sort(((t,e)=>{if(t.priority!==0&&e.priority!==0){return e.priority-t.priority}return t.dist-e.dist}));return r[0].meshInstances}return[]}attach(t=[]){if(Array.isArray(t)){if(t.length===0){return}this.nodes=t}else{this.nodes=[t]}this._updatePosition();this._updateRotation();this._updateScale();this.fire(ZQ.EVENT_NODESATTACH);this.root.enabled=true;this.fire(ZQ.EVENT_RENDERUPDATE)}detach(){this.root.enabled=false;this.fire(ZQ.EVENT_RENDERUPDATE);this.fire(ZQ.EVENT_NODESDETACH);this.nodes=[]}destroy(){this.detach();this._device.canvas.removeEventListener("pointerdown",this._onPointerDown);this._device.canvas.removeEventListener("pointermove",this._onPointerMove);this._device.canvas.removeEventListener("pointerup",this._onPointerUp);this.root.destroy()}}const QQ=Object.freeze(new bt(1,.3,.3));const JQ=Object.freeze(new bt(.3,1,.3));const tJ=Object.freeze(new bt(.3,.3,1));const eJ=Object.freeze(new bt(1,1,.5));const sJ=Object.freeze(new bt(.5,.5,.5,.5));const iJ=t=>new bt(t.r,t.g,t.b);const nJ=(t,e)=>new bt(t.r,t.g,t.b,e);const rJ=new It;const aJ=new It;const oJ=new Gt;const lJ=new te;const hJ=new Qt;const cJ=Object.keys(rJ);class dJ extends ZQ{static{this.EVENT_TRANSFORMSTART="transform:start"}static{this.EVENT_TRANSFORMMOVE="transform:move"}static{this.EVENT_TRANSFORMEND="transform:end"}constructor(t,e){super(t,e),this._colorAlpha=.6,this._meshColors={axis:{x:this._colorSemi(QQ),y:this._colorSemi(JQ),z:this._colorSemi(tJ),xyz:this._colorSemi(bt.WHITE),f:this._colorSemi(bt.WHITE)},hover:{x:QQ.clone(),y:JQ.clone(),z:tJ.clone(),xyz:bt.WHITE.clone(),f:eJ.clone()},disabled:sJ.clone()},this._guideColors={x:QQ.clone(),y:JQ.clone(),z:tJ.clone(),f:eJ.clone()},this._rootStartPos=new It,this._rootStartRot=new Gt,this._shading=false,this._shapes={},this._shapeMap=new Map,this._hoverShape=null,this._hoverAxis="",this._hoverIsPlane=false,this._noSelection=false,this._selectedAxis="",this._selectedIsPlane=false,this._selectionStartPoint=new It,this._dragging=false,this._snap=false,this.snapIncrement=1;this._app.on("prerender",(()=>{if(!this.root.enabled){return}this._drawGuideLines()}));this.on(ZQ.EVENT_POINTERDOWN,((t,e,s)=>{const i=this._shapeMap.get(s);if(i?.disabled){return}if(this._dragging){return}if(!s){this._noSelection=true;return}this._selectedAxis=this._getAxis(s);this._selectedIsPlane=this._getIsPlane(s);this._rootStartPos.copy(this.root.getPosition());this._rootStartRot.copy(this.root.getRotation());const n=this._screenToPoint(t,e);this._selectionStartPoint.copy(n);this._dragging=true;this.fire(dJ.EVENT_TRANSFORMSTART,n,t,e)}));this.on(ZQ.EVENT_POINTERMOVE,((t,e,s)=>{const i=this._shapeMap.get(s);if(i?.disabled){return}if(!this._noSelection){this._hover(s)}if(!this._dragging){return}const n=this._screenToPoint(t,e);this.fire(dJ.EVENT_TRANSFORMMOVE,n,t,e);this._hoverAxis="";this._hoverIsPlane=false}));this.on(ZQ.EVENT_POINTERUP,((t,e,s)=>{this._noSelection=false;this._hover(s);if(!this._dragging){return}this._dragging=false;this.fire(dJ.EVENT_TRANSFORMEND);this._selectedAxis="";this._selectedIsPlane=false}));this.on(ZQ.EVENT_NODESDETACH,(()=>{this.snap=false;this._hoverAxis="";this._hoverIsPlane=false;this._hover();this.fire(ZQ.EVENT_POINTERUP)}))}set shading(t){this._shading=this.root.enabled&&t;for(const t in this._shapes){this._shapes[t].shading=this._shading}}get shading(){return this._shading}set snap(t){this._snap=this.root.enabled&&t}get snap(){return this._snap}set xAxisColor(t){this._updateAxisColor(RQ,t)}get xAxisColor(){return this._meshColors.axis.x}set yAxisColor(t){this._updateAxisColor(OQ,t)}get yAxisColor(){return this._meshColors.axis.y}set zAxisColor(t){this._updateAxisColor(FQ,t)}get zAxisColor(){return this._meshColors.axis.z}set colorAlpha(t){this._colorAlpha=wt.clamp(t,0,1);this._meshColors.axis.x.copy(this._colorSemi(this._meshColors.axis.x));this._meshColors.axis.y.copy(this._colorSemi(this._meshColors.axis.y));this._meshColors.axis.z.copy(this._colorSemi(this._meshColors.axis.z));this._meshColors.axis.xyz.copy(this._colorSemi(this._meshColors.axis.xyz));this._meshColors.axis.f.copy(this._colorSemi(this._meshColors.axis.f));for(const t in this._shapes){this._shapes[t].hover(!!this._hoverAxis)}}get colorAlpha(){return this._colorAlpha}_colorSemi(t){return nJ(t,this._colorAlpha)}_updateAxisColor(t,e){const s=iJ(e);const i=this._colorSemi(e);this._guideColors[t].copy(s);this._meshColors.axis[t].copy(i);this._meshColors.hover[t].copy(s);for(const t in this._shapes){this._shapes[t].hover(!!this._hoverAxis)}}_getAxis(t){if(!t){return""}return t.node.name.split(":")[1]}_getIsPlane(t){if(!t){return false}return t.node.name.indexOf("plane")!==-1}_hover(t){if(this._dragging){return}this._hoverAxis=this._getAxis(t);this._hoverIsPlane=this._getIsPlane(t);const e=t?this._shapeMap.get(t)??null:null;if(e===this._hoverShape){return}if(this._hoverShape){this._hoverShape.hover(false);this._hoverShape=null}if(e){e.hover(true);this._hoverShape=e}this.fire(ZQ.EVENT_RENDERUPDATE)}_createRay(t){if(this._camera.projection===l_){lJ.origin.copy(this._camera.entity.getPosition());lJ.direction.sub2(t,lJ.origin).normalize();return lJ}const e=this._camera.farClip-this._camera.nearClip;lJ.origin.sub2(t,rJ.copy(this._camera.entity.forward).mulScalar(e));lJ.direction.copy(this._camera.entity.forward);return lJ}_createPlane(t,e,s){const i=rJ.copy(this.facing);const n=hJ.normal.set(0,0,0);if(e){n.copy(i)}else{n[t]=1;this._rootStartRot.transformVector(n,n);if(s){aJ.cross(n,i).normalize();n.cross(aJ,n).normalize()}}return hJ.setFromPointNormal(this._rootStartPos,n)}_dirFromAxis(t,e){if(t===zQ){e.copy(this._camera.entity.forward).mulScalar(-1)}else{e.set(0,0,0);e[t]=1}return e}_projectToAxis(t,e){rJ.set(0,0,0);rJ[e]=1;t.copy(rJ.mulScalar(rJ.dot(t)));const s=t[e];t.set(0,0,0);t[e]=s}_screenToPoint(t,e,s=false,i=false){const n=this._camera.screenToWorld(t,e,1);const r=this._selectedAxis;const a=this._createRay(n);const o=this._createPlane(r,s,i);const l=new It;o.intersectsRay(a,l);return l}_drawGuideLines(){const t=this.root.getPosition();const e=oJ.copy(this.root.getRotation());const s=this._hoverAxis||this._selectedAxis;const i=this._hoverIsPlane||this._selectedIsPlane;for(let n=0;n<cJ.length;n++){const r=cJ[n];if(s===UQ){this._drawSpanLine(t,e,r);continue}if(i){if(r!==s){this._drawSpanLine(t,e,r)}}else{if(r===s){this._drawSpanLine(t,e,r)}}}}_drawSpanLine(t,e,s){rJ.set(0,0,0);rJ[s]=1;rJ.mulScalar(this._camera.farClip-this._camera.nearClip);aJ.copy(rJ).mulScalar(-1);e.transformVector(rJ,rJ);e.transformVector(aJ,aJ);this._app.drawLine(rJ.add(t),aJ.add(t),this._guideColors[s],true)}_createTransform(){for(const t in this._shapes){const e=this._shapes[t];this.root.addChild(e.entity);this.intersectShapes.push(e);for(let t=0;t<e.meshInstances.length;t++){this._shapeMap.set(e.meshInstances[t],e)}}}enableShape(t,e){if(!this._shapes.hasOwnProperty(t)){return}this._shapes[t].disabled=!e}isShapeEnabled(t){if(!this._shapes.hasOwnProperty(t)){return false}return!this._shapes[t].disabled}destroy(){super.destroy();for(const t in this._shapes){this._shapes[t].destroy()}}}const uJ=new It;const fJ=new It;const pJ=new It;class mJ{constructor(t,e=0){this._priority=0;this._transform=new Vt;this.tris=[];this.fromGeometry(t);this._priority=e}get transform(){return this._transform}get priority(){return this._priority}setTransform(t=new It,e=new Gt,s=new It){this.transform.setTRS(t,e,s)}fromGeometry(t){if(!t||!(t instanceof gw)){throw new Error("No geometry provided.")}const e=t.positions??[];const s=t.indices??[];this.tris=[];for(let t=0;t<s.length;t+=3){const i=s[t];const n=s[t+1];const r=s[t+2];uJ.set(e[i*3],e[i*3+1],e[i*3+2]);fJ.set(e[n*3],e[n*3+1],e[n*3+2]);pJ.set(e[r*3],e[r*3+1],e[r*3+2]);const a=new ue(uJ,fJ,pJ);this.tris.push(a)}}}const _J=.25;const gJ=.75;const vJ=new It(1,2,3);const yJ={box:Sw,cone:pE,cylinder:mE,plane:_E,sphere:xw,torus:gE};const SJ={uniqueName:"axis-shape",attributes:{vertex_position:Ki,vertex_color:en},vertexGLSL:`\n\t\tattribute vec3 vertex_position;\n\t\tattribute vec4 vertex_color;\n\t\n\t\tvarying vec4 vColor;\n\t\n\t\tuniform mat4 matrix_model;\n\t\tuniform mat4 matrix_viewProjection;\n\t\n\t\tvoid main(void) {\n\t\t\tgl_Position = matrix_viewProjection * matrix_model * vec4(vertex_position, 1.0);\n\t\t\tgl_Position.z = clamp(gl_Position.z, -abs(gl_Position.w), abs(gl_Position.w));\n\t\t\tvColor = vertex_color;\n\t\t}\n\t`,fragmentGLSL:`\n\t\t#include "gammaPS"\n\t\n\t\tprecision highp float;\n\t\n\t\tvarying vec4 vColor;\n\t\tvoid main(void) {\n\t\t\tgl_FragColor = vec4(gammaCorrectOutput(decodeGamma(vColor)), vColor.w);\n\t\t}\n\t`,vertexWGSL:`\n\t\tattribute vertex_position: vec3f;\n\t\tattribute vertex_color: vec4f;\n\t\tuniform matrix_model: mat4x4f;\n\t\tuniform matrix_viewProjection: mat4x4f;\n\t\tvarying vColor: vec4f;\n\t\t@vertex\n\t\tfn vertexMain(input: VertexInput) -> VertexOutput {\n\t\t\tvar output: VertexOutput;\n\t\t\toutput.vColor = input.vertex_color;\n\t\t\tlet pos = vec4f(input.vertex_position, 1.0);\n\t\t\toutput.position = uniform.matrix_viewProjection * uniform.matrix_model * pos;\n\t\t\toutput.position.z = clamp(output.position.z, -abs(output.position.w), abs(output.position.w));\n\t\t\treturn output;\n\t\t}\n\t`,fragmentWGSL:`\n\t\t#include "gammaPS"\n\t\tvarying vColor: vec4f;\n\t\t@fragment\n\t\tfn fragmentMain(input: FragmentInput) -> FragmentOutput {\n\t\t\tvar output: FragmentOutput;\n\t\t\toutput.color = vec4f(gammaCorrectOutput(decodeGamma(input.vColor)), input.vColor.w);\n\t\t\treturn output;\n\t\t}\n\t`};const xJ=new Map;const TJ=new It;const wJ=new It;const bJ=new Vt;const EJ=new gw;EJ.positions=[];EJ.normals=[];const AJ=(t,e,s)=>{if(!t.normals||!t.positions){return[]}let i;if(s){i=bJ.copy(s).invert().transformVector(TJ.copy(vJ),TJ).normalize()}t.colors=[];const n=[];const r=t.positions.length/3;for(let s=0;s<r;s++){let r=1;if(i){const e=t.normals[s*3];const n=t.normals[s*3+1];const a=t.normals[s*3+2];const o=wJ.set(e,n,a);const l=i.dot(o);r=l*_J+gJ}n.push(r);t.colors.push(r*e.r*255,r*e.g*255,r*e.b*255,e.a*255)}return n};const CJ=(t,e)=>{const s=xJ.get(t);const i=[];for(let t=0;t<s.length;t++){i.push(s[t]*e.r*255,s[t]*e.g*255,s[t]*e.b*255,e.a*255)}t.setColors32(i);t.update()};class PJ{constructor(t,e){this._layers=[];this._shading=true;this._defaultColor=bt.WHITE;this._hoverColor=bt.BLACK;this._disabledColor=sJ;this._cull=is;this.triData=[];this.meshInstances=[];this.device=t;this.axis=e.axis??"x";this._position=e.position??new It;this._rotation=e.rotation??new It;this._scale=e.scale??new It(1,1,1);this._disabled=e.disabled??false;this._layers=e.layers??this._layers;this._shading=e.shading??this._shading;if(e.defaultColor instanceof bt){this._defaultColor=e.defaultColor}if(e.hoverColor instanceof bt){this._hoverColor=e.hoverColor}if(e.disabledColor instanceof bt){this._disabledColor=e.disabledColor}}set disabled(t){for(let e=0;e<this.meshInstances.length;e++){CJ(this.meshInstances[e].mesh,t?this._disabledColor:this._defaultColor)}this._disabled=t??false}get disabled(){return this._disabled}set shading(t){this._shading=t??true;const e=this._disabled?this._disabledColor:this._defaultColor;for(let t=0;t<this.meshInstances.length;t++){const s=this.meshInstances[t].mesh;s.getPositions(EJ.positions);s.getNormals(EJ.normals);const i=AJ(EJ,e,this._shading?this.entity.getWorldTransform():undefined);xJ.set(s,i);CJ(s,e)}}get shading(){return this._shading}_createRoot(t){this.entity=new dC(`${t}:${this.axis}`);this.entity.setLocalPosition(this._position);this.entity.setLocalEulerAngles(this._rotation);this.entity.setLocalScale(this._scale)}_createMesh(t,e=true){const s=this._disabled?this._disabledColor:this._defaultColor;const i=AJ(t,s,e?this.entity.getWorldTransform():undefined);const n=Vv.fromGeometry(this.device,t);xJ.set(n,i);return n}_createRenderComponent(t,e){const s=new dw(SJ);s.cull=this._cull;s.blendType=Hp;s.update();const i=[];for(let t=0;t<e.length;t++){const n=new sy(e[t],s);n.cull=false;i.push(n);this.meshInstances.push(n)}t.addComponent("render",{meshInstances:i,layers:this._layers,castShadows:false})}_addRenderMesh(t,e,s){const i=yJ[e];if(!i){throw new Error("Invalid primitive type.")}this._createRenderComponent(t,[this._createMesh(new i,s)])}hover(t){if(this._disabled){return}for(let e=0;e<this.meshInstances.length;e++){const s=t?this._hoverColor:this._defaultColor;const i=this.meshInstances[e].mesh;CJ(i,s)}}destroy(){this.entity.destroy()}}const LJ=1e-6;class DJ extends PJ{constructor(t,e={}){super(t,e),this._cull=ss,this._size=.2,this._gap=.1,this._flipped=new It;this.triData=[new mJ(new _E)];this._createPlane()}set size(t){this._size=t??1;this._updateTransform()}get size(){return this._size}set gap(t){this._gap=t??0;this._updateTransform()}get gap(){return this._gap}set flipped(t){if(this._flipped.distance(t)<LJ){return}this._flipped.copy(t);this.entity.setLocalPosition(this._getPosition())}get flipped(){return this._flipped}_getPosition(){const t=this._size/2+this._gap;const e=new It(this._flipped.x?-t:t,this._flipped.y?-t:t,this._flipped.z?-t:t);e[this.axis]=0;return e}_createPlane(){this._createRoot("plane");this._updateTransform();this._addRenderMesh(this.entity,"plane",this._shading)}_updateTransform(){this.entity.setLocalPosition(this._getPosition());this.entity.setLocalEulerAngles(this._rotation);this.entity.setLocalScale(this._size,this._size,this._size)}}const MJ=new It;const IJ=new It;const RJ=new Gt;class OJ extends PJ{constructor(t,e={}){super(t,e),this._gap=0,this._lineThickness=.02,this._lineLength=.5,this._arrowThickness=.12,this._arrowLength=.18,this._tolerance=.1,this._flipped=false;this.triData=[new mJ(new pE),new mJ(new mE,1)];this._createArrow()}set gap(t){this._gap=t??0;this._updateHead();this._updateLine()}get gap(){return this._gap}set lineThickness(t){this._lineThickness=t??1;this._updateHead();this._updateLine()}get lineThickness(){return this._lineThickness}set lineLength(t){this._lineLength=t??1;this._updateHead();this._updateLine()}get lineLength(){return this._lineLength}set arrowThickness(t){this._arrowThickness=t??1;this._updateHead()}get arrowThickness(){return this._arrowThickness}set arrowLength(t){this._arrowLength=t??1;this._updateHead()}get arrowLength(){return this._arrowLength}set tolerance(t){this._tolerance=t;this._updateLine()}get tolerance(){return this._tolerance}set flipped(t){if(this._flipped===t){return}this._flipped=t;if(this._rotation.equals(It.ZERO)){MJ.set(0,0,this._flipped?180:0)}else{MJ.copy(this._rotation).mulScalar(this._flipped?-1:1)}this._line.enabled=!this._flipped;this.entity.setLocalEulerAngles(MJ)}get flipped(){return this._flipped}_createArrow(){this._createRoot("arrow");this._head=new dC(`head:${this.axis}`);this.entity.addChild(this._head);this._updateHead();this._addRenderMesh(this._head,"cone",this._shading);this._line=new dC(`line:${this.axis}`);this.entity.addChild(this._line);this._updateLine();this._addRenderMesh(this._line,"cylinder",this._shading)}_updateHead(){MJ.set(0,this._gap+this._arrowLength*.5+this._lineLength,0);RJ.set(0,0,0,1);IJ.set(this._arrowThickness,this._arrowLength,this._arrowThickness);this.triData[0].setTransform(MJ,RJ,IJ);this._head.setLocalPosition(0,this._gap+this._arrowLength*.5+this._lineLength,0);this._head.setLocalScale(this._arrowThickness,this._arrowLength,this._arrowThickness)}_updateLine(){MJ.set(0,this._gap+this._lineLength*.5,0);RJ.set(0,0,0,1);IJ.set(this._lineThickness+this._tolerance,this._lineLength,this._lineThickness+this._tolerance);this.triData[1].setTransform(MJ,RJ,IJ);this._line.setLocalPosition(0,this._gap+this._lineLength*.5,0);this._line.setLocalScale(this._lineThickness,this._lineLength,this._lineThickness)}}class FJ extends PJ{constructor(t,e={}){super(t,e),this._size=.12,this._tolerance=.05;this.triData=[new mJ(new xw,2)];this._createCenter()}_createCenter(){this._createRoot("sphereCenter");this._updateTransform();this._addRenderMesh(this.entity,"sphere",this._shading)}set size(t){this._size=t??1;this._updateTransform()}get size(){return this._size}set tolerance(t){this._tolerance=t;this._updateTransform()}get tolerance(){return this._tolerance}_updateTransform(){this.entity.setLocalScale(this._size,this._size,this._size)}}const NJ=new It;const kJ=new It;const BJ=new It;const UJ=new Gt;const zJ=.98;class VJ extends dJ{constructor(t,e){super(t,e),this._shapes={face:new FJ(this._device,{axis:zQ,layers:[this._layer.id],shading:this._shading,defaultColor:this._meshColors.axis.xyz,hoverColor:this._meshColors.hover.xyz}),yz:new DJ(this._device,{axis:RQ,layers:[this._layer.id],shading:this._shading,rotation:new It(0,0,-90),defaultColor:this._meshColors.axis.x,hoverColor:this._meshColors.hover.x}),xz:new DJ(this._device,{axis:OQ,layers:[this._layer.id],shading:this._shading,rotation:new It(0,0,0),defaultColor:this._meshColors.axis.y,hoverColor:this._meshColors.hover.y}),xy:new DJ(this._device,{axis:FQ,layers:[this._layer.id],shading:this._shading,rotation:new It(90,0,0),defaultColor:this._meshColors.axis.z,hoverColor:this._meshColors.hover.z}),x:new OJ(this._device,{axis:RQ,layers:[this._layer.id],shading:this._shading,rotation:new It(0,0,-90),defaultColor:this._meshColors.axis.x,hoverColor:this._meshColors.hover.x}),y:new OJ(this._device,{axis:OQ,layers:[this._layer.id],shading:this._shading,rotation:new It(0,0,0),defaultColor:this._meshColors.axis.y,hoverColor:this._meshColors.hover.y}),z:new OJ(this._device,{axis:FQ,layers:[this._layer.id],shading:this._shading,rotation:new It(90,0,0),defaultColor:this._meshColors.axis.z,hoverColor:this._meshColors.hover.z})},this._nodeLocalPositions=new Map,this._nodePositions=new Map,this.snapIncrement=1,this.flipShapes=true;this._createTransform();this.on(dJ.EVENT_TRANSFORMSTART,(()=>{this._storeNodePositions()}));this.on(dJ.EVENT_TRANSFORMMOVE,(t=>{const e=BJ.copy(t).sub(this._selectionStartPoint);if(this.snap){e.mulScalar(1/this.snapIncrement);e.round();e.mulScalar(this.snapIncrement)}this._setNodePositions(e)}));this.on(dJ.EVENT_NODESDETACH,(()=>{this._nodeLocalPositions.clear();this._nodePositions.clear()}));this._app.on("prerender",(()=>{this._shapesLookAtCamera()}))}set axisGap(t){this._setArrowProp("gap",t)}get axisGap(){return this._shapes.x.gap}set axisLineThickness(t){this._setArrowProp("lineThickness",t)}get axisLineThickness(){return this._shapes.x.lineThickness}set axisLineLength(t){this._setArrowProp("lineLength",t)}get axisLineLength(){return this._shapes.x.lineLength}set axisLineTolerance(t){this._setArrowProp("tolerance",t)}get axisLineTolerance(){return this._shapes.x.tolerance}set axisArrowThickness(t){this._setArrowProp("arrowThickness",t)}get axisArrowThickness(){return this._shapes.x.arrowThickness}set axisArrowLength(t){this._setArrowProp("arrowLength",t)}get axisArrowLength(){return this._shapes.x.arrowLength}set axisPlaneSize(t){this._setPlaneProp("size",t)}get axisPlaneSize(){return this._shapes.yz.size}set axisPlaneGap(t){this._setPlaneProp("gap",t)}get axisPlaneGap(){return this._shapes.yz.gap}set axisCenterSize(t){this._shapes.face.size=t}get axisCenterSize(){return this._shapes.face.size}set axisCenterTolerance(t){this._shapes.face.tolerance=t}get axisCenterTolerance(){return this._shapes.face.tolerance}_setArrowProp(t,e){this._shapes.x[t]=e;this._shapes.y[t]=e;this._shapes.z[t]=e}_setPlaneProp(t,e){this._shapes.yz[t]=e;this._shapes.xz[t]=e;this._shapes.xy[t]=e}_shapesLookAtCamera(){const t=this.facing;let e=t.dot(this.root.right);this._shapes.x.entity.enabled=Math.abs(e)<zJ;if(this.flipShapes){this._shapes.x.flipped=e<0}e=t.dot(this.root.up);this._shapes.y.entity.enabled=Math.abs(e)<zJ;if(this.flipShapes){this._shapes.y.flipped=e<0}e=t.dot(this.root.forward);this._shapes.z.entity.enabled=Math.abs(e)<zJ;if(this.flipShapes){this._shapes.z.flipped=e>0}NJ.cross(t,this.root.right);this._shapes.yz.entity.enabled=NJ.length()<zJ;if(this.flipShapes){this._shapes.yz.flipped=kJ.set(0,+(NJ.dot(this.root.forward)<0),+(NJ.dot(this.root.up)<0))}NJ.cross(t,this.root.forward);this._shapes.xy.entity.enabled=NJ.length()<zJ;if(this.flipShapes){this._shapes.xy.flipped=kJ.set(+(NJ.dot(this.root.up)<0),+(NJ.dot(this.root.right)>0),0)}NJ.cross(t,this.root.up);this._shapes.xz.entity.enabled=NJ.length()<zJ;if(this.flipShapes){this._shapes.xz.flipped=kJ.set(+(NJ.dot(this.root.forward)>0),0,+(NJ.dot(this.root.right)>0))}}_storeNodePositions(){for(let t=0;t<this.nodes.length;t++){const e=this.nodes[t];this._nodeLocalPositions.set(e,e.getLocalPosition().clone());this._nodePositions.set(e,e.getPosition().clone())}}_setNodePositions(t){for(let e=0;e<this.nodes.length;e++){const s=this.nodes[e];if(this._coordSpace===MQ){const e=this._nodeLocalPositions.get(s);if(!e){continue}NJ.copy(t);s.parent?.getWorldTransform().getScale(kJ);kJ.x=1/kJ.x;kJ.y=1/kJ.y;kJ.z=1/kJ.z;UJ.copy(s.getLocalRotation()).transformVector(NJ,NJ);NJ.mul(kJ);s.setLocalPosition(NJ.add(e))}else{const e=this._nodePositions.get(s);if(!e){continue}s.setPosition(NJ.copy(t).add(e))}}this._updatePosition()}_screenToPoint(t,e){const s=this._camera.screenToWorld(t,e,1);const i=this._selectedAxis;const n=this._selectedIsPlane;const r=this._createRay(s);const a=this._createPlane(i,i===zQ,!n);const o=new It;a.intersectsRay(r,o);UJ.copy(this._rootStartRot).invert().transformVector(o,o);if(!n&&i!==zQ){this._projectToAxis(o,i)}return o}}const GJ=80;const HJ=20;class WJ extends PJ{constructor(t,e={}){super(t,e),this._tubeRadius=.01,this._ringRadius=.5,this._tolerance=.05;this._tubeRadius=e.tubeRadius??this._tubeRadius;this._ringRadius=e.ringRadius??this._ringRadius;this._sectorAngle=e.sectorAngle??this._sectorAngle;this.triData=[new mJ(this._createTorusGeometry())];this._createDisk()}_createTorusGeometry(){return new gE({tubeRadius:this._tubeRadius+this._tolerance,ringRadius:this._ringRadius,sectorAngle:this._sectorAngle,segments:HJ})}_createTorusMesh(t){const e=new gE({tubeRadius:this._tubeRadius,ringRadius:this._ringRadius,sectorAngle:t,segments:GJ});return this._createMesh(e,this._shading)}_createDisk(){this._createRoot("disk");this._createRenderComponent(this.entity,[this._createTorusMesh(this._sectorAngle),this._createTorusMesh(360)]);this.drag(false)}set tubeRadius(t){this._tubeRadius=t??.1;this._updateTransform()}get tubeRadius(){return this._tubeRadius}set ringRadius(t){this._ringRadius=t??.1;this._updateTransform()}get ringRadius(){return this._ringRadius}set tolerance(t){this._tolerance=t;this._updateTransform()}get tolerance(){return this._tolerance}_updateTransform(){this.triData[0].fromGeometry(this._createTorusGeometry());this.meshInstances[0].mesh=this._createTorusMesh(this._sectorAngle);this.meshInstances[1].mesh=this._createTorusMesh(360)}drag(t){this.meshInstances[0].visible=!t;this.meshInstances[1].visible=t}hide(t){if(t){this.meshInstances[0].visible=false;this.meshInstances[1].visible=false;return}this.drag(false)}}const XJ=new It;const qJ=new It;const $J=new It;const jJ=new It;const YJ=new Vt;const KJ=new Gt;const ZJ=new Gt;const QJ=.9;const JJ=new bt(0,0,0,.3);class t0 extends dJ{constructor(t,e){super(t,e),this._shapes={z:new WJ(this._device,{axis:FQ,layers:[this._layer.id],shading:this._shading,rotation:new It(90,0,90),defaultColor:this._meshColors.axis.z,hoverColor:this._meshColors.hover.z,sectorAngle:180}),x:new WJ(this._device,{axis:RQ,layers:[this._layer.id],shading:this._shading,rotation:new It(0,0,-90),defaultColor:this._meshColors.axis.x,hoverColor:this._meshColors.hover.x,sectorAngle:180}),y:new WJ(this._device,{axis:OQ,layers:[this._layer.id],shading:this._shading,rotation:new It(0,0,0),defaultColor:this._meshColors.axis.y,hoverColor:this._meshColors.hover.y,sectorAngle:180}),face:new WJ(this._device,{axis:zQ,layers:[this._layer.id],shading:this._shading,rotation:this._getLookAtEulerAngles(this._camera.entity.getPosition()),defaultColor:this._meshColors.axis.f,hoverColor:this._meshColors.hover.f,ringRadius:.55})},this._selectionStartAngle=0,this._nodeLocalRotations=new Map,this._nodeRotations=new Map,this._nodeOffsets=new Map,this._guideAngleStartColor=JJ.clone(),this._guideAngleStart=new It,this._guideAngleEnd=new It,this.snapIncrement=5,this.orbitRotation=false;this._createTransform();this.on(dJ.EVENT_TRANSFORMSTART,((t,e,s)=>{this._selectionStartAngle=this._calculateAngle(t,e,s);this._storeNodeRotations();this._storeGuidePoints();this._drag(true)}));this.on(dJ.EVENT_TRANSFORMMOVE,((t,e,s)=>{const i=this._selectedAxis;let n=this._calculateAngle(t,e,s)-this._selectionStartAngle;if(this.snap){n=Math.round(n/this.snapIncrement)*this.snapIncrement}this._setNodeRotations(i,n);this._updateGuidePoints(n)}));this.on(dJ.EVENT_TRANSFORMEND,(()=>{this._drag(false)}));this.on(dJ.EVENT_NODESDETACH,(()=>{this._nodeLocalRotations.clear();this._nodeRotations.clear();this._nodeOffsets.clear()}));this._app.on("prerender",(()=>{this._shapesLookAtCamera();if(this._dragging){const t=this.root.getPosition();this._drawGuideAngleLine(t,this._selectedAxis,this._guideAngleStart,this._guideAngleStartColor);this._drawGuideAngleLine(t,this._selectedAxis,this._guideAngleEnd)}}))}set xyzTubeRadius(t){this._setDiskProp("tubeRadius",t)}get xyzTubeRadius(){return this._shapes.x.tubeRadius}set xyzRingRadius(t){this._setDiskProp("ringRadius",t)}get xyzRingRadius(){return this._shapes.x.ringRadius}set faceTubeRadius(t){this._shapes.face.tubeRadius=t}get faceTubeRadius(){return this._shapes.face.tubeRadius}set faceRingRadius(t){this._shapes.face.ringRadius=t}get faceRingRadius(){return this._shapes.face.ringRadius}set ringTolerance(t){this._setDiskProp("tolerance",t);this._shapes.face.tolerance=t}get ringTolerance(){return this._shapes.x.tolerance}_setDiskProp(t,e){this._shapes.x[t]=e;this._shapes.y[t]=e;this._shapes.z[t]=e}_storeGuidePoints(){const t=this.root.getPosition();const e=this._selectedAxis;const s=e===zQ;const i=s?this.faceRingRadius:this.xyzRingRadius;this._guideAngleStart.copy(this._selectionStartPoint).sub(t).normalize();this._guideAngleStart.mulScalar(i);this._guideAngleEnd.copy(this._guideAngleStart)}_updateGuidePoints(t){const e=this._selectedAxis;const s=e===zQ;if(s){XJ.copy(this.facing)}else{XJ.set(0,0,0);XJ[e]=1;this._rootStartRot.transformVector(XJ,XJ)}KJ.setFromAxisAngle(XJ,t);KJ.transformVector(this._guideAngleStart,this._guideAngleEnd)}_drawGuideAngleLine(t,e,s,i=this._guideColors[e]){XJ.set(0,0,0);qJ.copy(s).mulScalar(this._scale);this._app.drawLine(XJ.add(t),qJ.add(t),i,false,this._layer)}_getLookAtEulerAngles(t){XJ.set(0,0,0);YJ.setLookAt(XJ,t,It.UP);KJ.setFromMat4(YJ);KJ.getEulerAngles(XJ);XJ.x+=90;return XJ}_shapesLookAtCamera(){if(this._camera.projection===l_){this._shapes.face.entity.lookAt(this._camera.entity.getPosition());this._shapes.face.entity.rotateLocal(90,0,0)}else{KJ.copy(this._camera.entity.getRotation()).getEulerAngles(XJ);this._shapes.face.entity.setEulerAngles(XJ);this._shapes.face.entity.rotateLocal(-90,0,0)}const t=XJ.copy(this.facing);KJ.copy(this.root.getRotation()).invert().transformVector(t,t);let e=Math.atan2(t.z,t.y)*wt.RAD_TO_DEG;this._shapes.x.entity.setLocalEulerAngles(0,e-90,-90);e=Math.atan2(t.x,t.z)*wt.RAD_TO_DEG;this._shapes.y.entity.setLocalEulerAngles(0,e,0);e=Math.atan2(t.y,t.x)*wt.RAD_TO_DEG;this._shapes.z.entity.setLocalEulerAngles(90,0,e+90)}_drag(t){for(const e in this._shapes){const s=this._shapes[e];if(e===this._selectedAxis){s.drag(t)}else{s.hide(t)}}this.fire(dJ.EVENT_RENDERUPDATE)}_storeNodeRotations(){const t=this.root.getPosition();for(let e=0;e<this.nodes.length;e++){const s=this.nodes[e];this._nodeLocalRotations.set(s,s.getLocalRotation().clone());this._nodeRotations.set(s,s.getRotation().clone());this._nodeOffsets.set(s,s.getPosition().clone().sub(t))}}_setNodeRotations(t,e){const s=this.root.getPosition();const i=t===zQ;KJ.setFromAxisAngle(this._dirFromAxis(t,XJ),e);for(let t=0;t<this.nodes.length;t++){const e=this.nodes[t];if(!i&&this._coordSpace===MQ){const t=this._nodeLocalRotations.get(e);if(!t){continue}ZJ.copy(t).mul(KJ);e.setLocalRotation(ZJ)}else{const t=this._nodeRotations.get(e);if(!t){continue}const i=this._nodeOffsets.get(e);if(!i){continue}XJ.copy(i);KJ.transformVector(XJ,XJ);ZJ.copy(KJ).mul(t);e.setEulerAngles(ZJ.getEulerAngles());e.setPosition(XJ.add(s))}}if(this._coordSpace===MQ){this._updateRotation()}}_screenToPoint(t,e){const s=this._camera.screenToWorld(t,e,1);const i=this._selectedAxis;const n=this._createRay(s);const r=this._createPlane(i,i===zQ,false);const a=new It;r.intersectsRay(n,a);return a}_calculateAngle(t,e,s){const i=this.root.getPosition();const n=this._selectedAxis;const r=this._createPlane(n,n===zQ,false);let a=0;const o=qJ.copy(this.facing);const l=r.normal.dot(o);if(this.orbitRotation||Math.abs(l)>QJ){XJ.sub2(t,i);KJ.copy(this._camera.entity.getRotation()).invert().transformVector(XJ,XJ);a=Math.sign(l)*Math.atan2(XJ.y,XJ.x)*wt.RAD_TO_DEG}else{XJ.copy(i);qJ.cross(r.normal,o).normalize().add(i);this._camera.worldToScreen(XJ,$J);this._camera.worldToScreen(qJ,jJ);XJ.sub2(jJ,$J).normalize();qJ.set(e,s,0);a=XJ.dot(qJ)}return a}}class e0 extends PJ{constructor(t,e={}){super(t,e),this._size=.12,this._tolerance=.05;this.triData=[new mJ(new Sw,2)];this._createCenter()}_createCenter(){this._createRoot("boxCenter");this._updateTransform();this._addRenderMesh(this.entity,"box",this._shading)}set size(t){this._size=t??1;this._updateTransform()}get size(){return this._size}set tolerance(t){this._tolerance=t;this._updateTransform()}get tolerance(){return this._tolerance}_updateTransform(){this.entity.setLocalScale(this._size,this._size,this._size)}}const s0=new It;const i0=new It;const n0=new Gt;class r0 extends PJ{constructor(t,e={}){super(t,e),this._gap=0,this._lineThickness=.02,this._lineLength=.5,this._boxSize=.12,this._tolerance=.1,this._flipped=false;this.triData=[new mJ(new Sw),new mJ(new mE,1)];this._createBoxLine()}set gap(t){this._gap=t??0;this._updateLine();this._updateBox()}get gap(){return this._gap}set lineThickness(t){this._lineThickness=t??1;this._updateLine();this._updateBox()}get lineThickness(){return this._lineThickness}set lineLength(t){this._lineLength=t??1;this._updateLine();this._updateBox()}get lineLength(){return this._lineLength}set boxSize(t){this._boxSize=t??1;this._updateBox()}get boxSize(){return this._boxSize}set tolerance(t){this._tolerance=t;this._updateLine()}get tolerance(){return this._tolerance}set flipped(t){if(this._flipped===t){return}this._flipped=t;if(this._rotation.equals(It.ZERO)){s0.set(0,0,this._flipped?180:0)}else{s0.copy(this._rotation).mulScalar(this._flipped?-1:1)}this._line.enabled=!this._flipped;this.entity.setLocalEulerAngles(s0)}get flipped(){return this._flipped}_createBoxLine(){this._createRoot("boxLine");this._box=new dC(`box:${this.axis}`);this.entity.addChild(this._box);this._updateBox();this._addRenderMesh(this._box,"box",this._shading);this._line=new dC(`line:${this.axis}`);this.entity.addChild(this._line);this._updateLine();this._addRenderMesh(this._line,"cylinder",this._shading)}_updateBox(){s0.set(0,this._gap+this._boxSize*.5+this._lineLength,0);n0.set(0,0,0,1);i0.set(this._boxSize,this._boxSize,this._boxSize);this.triData[0].setTransform(s0,n0,i0);this._box.setLocalPosition(0,this._gap+this._boxSize*.5+this._lineLength,0);this._box.setLocalScale(this._boxSize,this._boxSize,this._boxSize)}_updateLine(){s0.set(0,this._gap+this._lineLength*.5,0);n0.set(0,0,0,1);i0.set(this._lineThickness+this._tolerance,this._lineLength,this._lineThickness+this._tolerance);this.triData[1].setTransform(s0,n0,i0);this._line.setLocalPosition(0,this._gap+this._lineLength*.5,0);this._line.setLocalScale(this._lineThickness,this._lineLength,this._lineThickness)}}const a0=new It;const o0=new It;const l0=new It;const h0=new Gt;const c0=.98;class d0 extends dJ{constructor(t,e){super(t,e),this._shapes={xyz:new e0(this._device,{axis:UQ,layers:[this._layer.id],shading:this._shading,defaultColor:this._meshColors.axis.xyz,hoverColor:this._meshColors.hover.xyz}),yz:new DJ(this._device,{axis:RQ,layers:[this._layer.id],shading:this._shading,rotation:new It(0,0,-90),defaultColor:this._meshColors.axis.x,hoverColor:this._meshColors.hover.x}),xz:new DJ(this._device,{axis:OQ,layers:[this._layer.id],shading:this._shading,rotation:new It(0,0,0),defaultColor:this._meshColors.axis.y,hoverColor:this._meshColors.hover.y}),xy:new DJ(this._device,{axis:FQ,layers:[this._layer.id],shading:this._shading,rotation:new It(90,0,0),defaultColor:this._meshColors.axis.z,hoverColor:this._meshColors.hover.z}),x:new r0(this._device,{axis:RQ,layers:[this._layer.id],shading:this._shading,rotation:new It(0,0,-90),defaultColor:this._meshColors.axis.x,hoverColor:this._meshColors.hover.x}),y:new r0(this._device,{axis:OQ,layers:[this._layer.id],shading:this._shading,rotation:new It(0,0,0),defaultColor:this._meshColors.axis.y,hoverColor:this._meshColors.hover.y}),z:new r0(this._device,{axis:FQ,layers:[this._layer.id],shading:this._shading,rotation:new It(90,0,0),defaultColor:this._meshColors.axis.z,hoverColor:this._meshColors.hover.z})},this._coordSpace=MQ,this._nodeScales=new Map,this._useUniformScaling=false,this.snapIncrement=1,this.flipShapes=true,this.lowerBoundScale=new It(-Infinity,-Infinity,-Infinity);this._createTransform();this.on(dJ.EVENT_TRANSFORMSTART,(()=>{this._storeNodeScales()}));this.on(dJ.EVENT_TRANSFORMMOVE,(t=>{const e=l0.copy(t).sub(this._selectionStartPoint);if(this.snap){e.mulScalar(1/this.snapIncrement);e.round();e.mulScalar(this.snapIncrement)}e.mulScalar(1/this._scale);this._setNodeScales(e.add(It.ONE))}));this.on(dJ.EVENT_NODESDETACH,(()=>{this._nodeScales.clear()}));this._app.on("prerender",(()=>{this._shapesLookAtCamera()}))}set coordSpace(t){}get coordSpace(){return this._coordSpace}set uniform(t){this._useUniformScaling=t??true}get uniform(){return this._useUniformScaling}set axisGap(t){this._setArrowProp("gap",t)}get axisGap(){return this._shapes.x.gap}set axisLineThickness(t){this._setArrowProp("lineThickness",t)}get axisLineThickness(){return this._shapes.x.lineThickness}set axisLineLength(t){this._setArrowProp("lineLength",t)}get axisLineLength(){return this._shapes.x.lineLength}set axisLineTolerance(t){this._setArrowProp("tolerance",t)}get axisLineTolerance(){return this._shapes.x.tolerance}set axisBoxSize(t){this._setArrowProp("boxSize",t)}get axisBoxSize(){return this._shapes.x.boxSize}set axisPlaneSize(t){this._setPlaneProp("size",t)}get axisPlaneSize(){return this._shapes.yz.size}set axisPlaneGap(t){this._setPlaneProp("gap",t)}get axisPlaneGap(){return this._shapes.yz.gap}set axisCenterSize(t){this._shapes.xyz.size=t}get axisCenterSize(){return this._shapes.xyz.size}set axisCenterTolerance(t){this._shapes.xyz.tolerance=t}get axisCenterTolerance(){return this._shapes.xyz.tolerance}_setArrowProp(t,e){this._shapes.x[t]=e;this._shapes.y[t]=e;this._shapes.z[t]=e}_setPlaneProp(t,e){this._shapes.yz[t]=e;this._shapes.xz[t]=e;this._shapes.xy[t]=e}_shapesLookAtCamera(){const t=this.facing;let e=t.dot(this.root.right);this._shapes.x.entity.enabled=Math.abs(e)<c0;if(this.flipShapes){this._shapes.x.flipped=e<0}e=t.dot(this.root.up);this._shapes.y.entity.enabled=Math.abs(e)<c0;if(this.flipShapes){this._shapes.y.flipped=e<0}e=t.dot(this.root.forward);this._shapes.z.entity.enabled=Math.abs(e)<c0;if(this.flipShapes){this._shapes.z.flipped=e>0}a0.cross(t,this.root.right);this._shapes.yz.entity.enabled=a0.length()<c0;if(this.flipShapes){this._shapes.yz.flipped=o0.set(0,+(a0.dot(this.root.forward)<0),+(a0.dot(this.root.up)<0))}a0.cross(t,this.root.forward);this._shapes.xy.entity.enabled=a0.length()<c0;if(this.flipShapes){this._shapes.xy.flipped=o0.set(+(a0.dot(this.root.up)<0),+(a0.dot(this.root.right)>0),0)}a0.cross(t,this.root.up);this._shapes.xz.entity.enabled=a0.length()<c0;if(this.flipShapes){this._shapes.xz.flipped=o0.set(+(a0.dot(this.root.forward)>0),0,+(a0.dot(this.root.right)>0))}}_storeNodeScales(){for(let t=0;t<this.nodes.length;t++){const e=this.nodes[t];this._nodeScales.set(e,e.getLocalScale().clone())}}_setNodeScales(t){for(let e=0;e<this.nodes.length;e++){const s=this.nodes[e];const i=this._nodeScales.get(s);if(!i){continue}s.setLocalScale(a0.copy(i).mul(t).max(this.lowerBoundScale))}}_screenToPoint(t,e){const s=this.root.getPosition();const i=this._camera.screenToWorld(t,e,1);const n=this._selectedAxis;const r=this._selectedIsPlane;const a=this._useUniformScaling&&r||n===UQ;const o=this._createRay(i);const l=this._createPlane(n,a,!r);const h=new It;l.intersectsRay(o,h);if(a){switch(n){case RQ:a0.copy(this.root.up);o0.copy(this.root.forward).mulScalar(-1);break;case OQ:a0.copy(this.root.right);o0.copy(this.root.forward).mulScalar(-1);break;case FQ:a0.copy(this.root.up);o0.copy(this.root.right);break;default:a0.copy(this._camera.entity.up);o0.copy(this._camera.entity.right);break}o0.add(a0).normalize();a0.sub2(h,s);const t=a0.length();const e=t*a0.normalize().dot(o0);h.set(e,e,e);if(n!==UQ){h[n]=1}return h}h0.copy(this._rootStartRot).invert().transformVector(h,h);if(!r){this._projectToAxis(h,n)}return h}}const u0=new It;const f0=new It;const p0=new It;const m0=new Vt;class _0 extends at{static{this.EVENT_CAMERAALIGN="camera:align"}constructor(t){super(),this._size=0,this._anchor=new Ft(1,1,1,1),this._colorX=QQ.clone(),this._colorY=JQ.clone(),this._colorZ=tJ.clone(),this._colorNeg=new bt(.3,.3,.3),this._radius=10,this._textSize=10,this._lineThickness=2,this._lineLength=40;this.dom=document.createElement("div");this.dom.id="view-cube-container";this.dom.style.cssText=["position: absolute","margin: auto","pointer-events: none"].join(";");document.body.appendChild(this.dom);this.anchor=t??this._anchor;this._svg=document.createElementNS("http://www.w3.org/2000/svg","svg");this._svg.id="view-cube-svg";this._group=document.createElementNS(this._svg.namespaceURI,"g");this._svg.appendChild(this._group);this._resize();const e=this._colorX.toString(false);const s=this._colorY.toString(false);const i=this._colorZ.toString(false);this._shapes={nx:this._circle(e),ny:this._circle(s),nz:this._circle(i),px:this._circle(e,true,"X"),py:this._circle(s,true,"Y"),pz:this._circle(i,true,"Z"),xaxis:this._line(e),yaxis:this._line(s),zaxis:this._line(i)};this._shapes.px.children[0].addEventListener("pointerdown",(()=>{this.fire(_0.EVENT_CAMERAALIGN,It.RIGHT)}));this._shapes.py.children[0].addEventListener("pointerdown",(()=>{this.fire(_0.EVENT_CAMERAALIGN,It.UP)}));this._shapes.pz.children[0].addEventListener("pointerdown",(()=>{this.fire(_0.EVENT_CAMERAALIGN,It.BACK)}));this._shapes.nx.children[0].addEventListener("pointerdown",(()=>{this.fire(_0.EVENT_CAMERAALIGN,It.LEFT)}));this._shapes.ny.children[0].addEventListener("pointerdown",(()=>{this.fire(_0.EVENT_CAMERAALIGN,It.DOWN)}));this._shapes.nz.children[0].addEventListener("pointerdown",(()=>{this.fire(_0.EVENT_CAMERAALIGN,It.FORWARD)}));this.dom.appendChild(this._svg)}set anchor(t){this._anchor.copy(t);this.dom.style.top=this._anchor.x?"0px":"auto";this.dom.style.right=this._anchor.y?"0px":"auto";this.dom.style.bottom=this._anchor.z?"0px":"auto";this.dom.style.left=this._anchor.w?"0px":"auto"}get anchor(){return this._anchor}set colorX(t){this._colorX.copy(t);this._shapes.px.children[0].setAttribute("fill",this._colorX.toString(false));this._shapes.px.children[0].setAttribute("stroke",this._colorX.toString(false));this._shapes.nx.children[0].setAttribute("stroke",this._colorX.toString(false));this._shapes.xaxis.setAttribute("stroke",this._colorX.toString(false))}get colorX(){return this._colorX}set colorY(t){this._colorY.copy(t);this._shapes.py.children[0].setAttribute("fill",this._colorY.toString(false));this._shapes.py.children[0].setAttribute("stroke",this._colorY.toString(false));this._shapes.ny.children[0].setAttribute("stroke",this._colorY.toString(false));this._shapes.yaxis.setAttribute("stroke",this._colorY.toString(false))}get colorY(){return this._colorY}set colorZ(t){this._colorZ.copy(t);this._shapes.pz.children[0].setAttribute("fill",this._colorZ.toString(false));this._shapes.pz.children[0].setAttribute("stroke",this._colorZ.toString(false));this._shapes.nz.children[0].setAttribute("stroke",this._colorZ.toString(false));this._shapes.zaxis.setAttribute("stroke",this._colorZ.toString(false))}get colorZ(){return this._colorZ}set colorNeg(t){this._colorNeg.copy(t);this._shapes.px.children[0].setAttribute("fill",this._colorNeg.toString(false));this._shapes.py.children[0].setAttribute("fill",this._colorNeg.toString(false));this._shapes.pz.children[0].setAttribute("fill",this._colorNeg.toString(false))}get colorNeg(){return this._colorNeg}set radius(t){this._radius=t;this._shapes.px.children[0].setAttribute("r",`${t}`);this._shapes.py.children[0].setAttribute("r",`${t}`);this._shapes.pz.children[0].setAttribute("r",`${t}`);this._shapes.nx.children[0].setAttribute("r",`${t}`);this._shapes.ny.children[0].setAttribute("r",`${t}`);this._shapes.nz.children[0].setAttribute("r",`${t}`);this._resize()}get radius(){return this._radius}set textSize(t){this._textSize=t;this._shapes.px.children[1].setAttribute("font-size",`${t}`);this._shapes.py.children[1].setAttribute("font-size",`${t}`);this._shapes.pz.children[1].setAttribute("font-size",`${t}`)}get textSize(){return this._textSize}set lineThickness(t){this._lineThickness=t;this._shapes.xaxis.setAttribute("stroke-width",`${t}`);this._shapes.yaxis.setAttribute("stroke-width",`${t}`);this._shapes.zaxis.setAttribute("stroke-width",`${t}`);this._shapes.px.children[0].setAttribute("stroke-width",`${t}`);this._shapes.py.children[0].setAttribute("stroke-width",`${t}`);this._shapes.pz.children[0].setAttribute("stroke-width",`${t}`);this._shapes.nx.children[0].setAttribute("stroke-width",`${t}`);this._shapes.ny.children[0].setAttribute("stroke-width",`${t}`);this._shapes.nz.children[0].setAttribute("stroke-width",`${t}`);this._resize()}get lineThickness(){return this._lineThickness}set lineLength(t){this._lineLength=t;this._resize()}get lineLength(){return this._lineLength}_resize(){this._size=2*(this.lineLength+this.radius+this.lineThickness);this.dom.style.width=`${this._size}px`;this.dom.style.height=`${this._size}px`;this._svg.setAttribute("width",`${this._size}`);this._svg.setAttribute("height",`${this._size}`);this._group.setAttribute("transform",`translate(${this._size*.5}, ${this._size*.5})`)}_transform(t,e,s){t.setAttribute("transform",`translate(${e*this._lineLength}, ${s*this._lineLength})`)}_x2y2(t,e,s){t.setAttribute("x2",`${e*this._lineLength}`);t.setAttribute("y2",`${s*this._lineLength}`)}_line(t){const e=document.createElementNS(this._svg.namespaceURI,"line");e.setAttribute("stroke",t);e.setAttribute("stroke-width",`${this._lineThickness}`);this._group.appendChild(e);return e}_circle(t,e=false,s){const i=document.createElementNS(this._svg.namespaceURI,"g");const n=document.createElementNS(this._svg.namespaceURI,"circle");n.setAttribute("fill",e?t:this._colorNeg.toString(false));n.setAttribute("stroke",t);n.setAttribute("stroke-width",`${this._lineThickness}`);n.setAttribute("r",`${this._radius}`);n.setAttribute("cx","0");n.setAttribute("cy","0");n.setAttribute("pointer-events","all");i.appendChild(n);if(s){const t=document.createElementNS(this._svg.namespaceURI,"text");t.setAttribute("font-size",`${this._textSize}`);t.setAttribute("font-family","Arial");t.setAttribute("font-weight","bold");t.setAttribute("text-anchor","middle");t.setAttribute("alignment-baseline","central");t.textContent=s;i.appendChild(t)}i.setAttribute("cursor","pointer");this._group.appendChild(i);return i}update(t){if(!this._size){return}m0.invert(t);m0.getX(u0);m0.getY(f0);m0.getZ(p0);this._transform(this._shapes.px,u0.x,-u0.y);this._transform(this._shapes.nx,-u0.x,u0.y);this._transform(this._shapes.py,f0.x,-f0.y);this._transform(this._shapes.ny,-f0.x,f0.y);this._transform(this._shapes.pz,p0.x,-p0.y);this._transform(this._shapes.nz,-p0.x,p0.y);this._x2y2(this._shapes.xaxis,u0.x,-u0.y);this._x2y2(this._shapes.yaxis,f0.x,-f0.y);this._x2y2(this._shapes.zaxis,p0.x,-p0.y);const e=[{n:["xaxis","px"],value:u0.z},{n:["yaxis","py"],value:f0.z},{n:["zaxis","pz"],value:p0.z},{n:["nx"],value:-u0.z},{n:["ny"],value:-f0.z},{n:["nz"],value:-p0.z}].sort(((t,e)=>t.value-e.value));const s=document.createDocumentFragment();e.forEach((t=>{t.n.forEach((t=>{s.appendChild(this._shapes[t])}))}));this._group.appendChild(s)}destroy(){this.dom.remove();this.off()}}export{AA as ABSOLUTE_URL,fd as ACTION_GAMEPAD,ud as ACTION_KEYBOARD,dd as ACTION_MOUSE,pe as ADDRESS_CLAMP_TO_EDGE,me as ADDRESS_MIRRORED_REPEAT,fe as ADDRESS_REPEAT,H_ as AMBIENTSRC_AMBIENTSH,X_ as AMBIENTSRC_CONSTANT,W_ as AMBIENTSRC_ENVALATLAS,_O as ANIM_BLEND_1D,vO as ANIM_BLEND_2D_CARTESIAN,gO as ANIM_BLEND_2D_DIRECTIONAL,yO as ANIM_BLEND_DIRECT,wO as ANIM_CONTROL_STATES,cO as ANIM_EQUAL_TO,aO as ANIM_GREATER_THAN,lO as ANIM_GREATER_THAN_EQUAL_TO,iO as ANIM_INTERRUPTION_NEXT,rO as ANIM_INTERRUPTION_NEXT_PREV,eO as ANIM_INTERRUPTION_NONE,sO as ANIM_INTERRUPTION_PREV,nO as ANIM_INTERRUPTION_PREV_NEXT,EO as ANIM_LAYER_ADDITIVE,bO as ANIM_LAYER_OVERWRITE,oO as ANIM_LESS_THAN,hO as ANIM_LESS_THAN_EQUAL_TO,dO as ANIM_NOT_EQUAL_TO,pO as ANIM_PARAMETER_BOOLEAN,fO as ANIM_PARAMETER_FLOAT,uO as ANIM_PARAMETER_INTEGER,mO as ANIM_PARAMETER_TRIGGER,TO as ANIM_STATE_ANY,xO as ANIM_STATE_END,SO as ANIM_STATE_START,Wg as ASPECT_AUTO,Xg as ASPECT_MANUAL,CA as ASSET_ANIMATION,PA as ASSET_AUDIO,VA as ASSET_CONTAINER,BA as ASSET_CSS,NA as ASSET_CUBEMAP,UA as ASSET_HTML,LA as ASSET_IMAGE,DA as ASSET_JSON,IA as ASSET_MATERIAL,MA as ASSET_MODEL,zA as ASSET_SCRIPT,kA as ASSET_SHADER,RA as ASSET_TEXT,OA as ASSET_TEXTURE,FA as ASSET_TEXTUREATLAS,Sd as AXIS_KEY,pd as AXIS_MOUSE_X,md as AXIS_MOUSE_Y,_d as AXIS_PAD_L_X,gd as AXIS_PAD_L_Y,vd as AXIS_PAD_R_X,yd as AXIS_PAD_R_Y,MO as AnimBinder,tO as AnimClip,XH as AnimClipHandler,eF as AnimComponent,JO as AnimComponentLayer,nF as AnimComponentSystem,qO as AnimController,vG as AnimCurve,yG as AnimData,PO as AnimEvaluator,LO as AnimEvents,JR as AnimSnapshot,tF as AnimStateGraph,qH as AnimStateGraphHandler,IO as AnimTarget,DO as AnimTrack,gb as Animation,OO as AnimationComponent,kO as AnimationComponentSystem,WH as AnimationHandler,mb as AnimationKey,_b as AnimationNode,TR as AppBase,bR as AppOptions,jq as Application,qA as Asset,Yq as AssetListLoader,ez as AssetReference,jA as AssetRegistry,YH as AudioHandler,rF as AudioListenerComponent,lF as AudioListenerComponentSystem,Rg as BAKE_COLOR,Og as BAKE_COLORDIR,Ua as BINDGROUP_MESH,za as BINDGROUP_MESH_UB,Ba as BINDGROUP_VIEW,Le as BLENDEQUATION_ADD,Re as BLENDEQUATION_MAX,Ie as BLENDEQUATION_MIN,Me as BLENDEQUATION_REVERSE_SUBTRACT,De as BLENDEQUATION_SUBTRACT,Ce as BLENDMODE_CONSTANT,Q$ as BLENDMODE_CONSTANT_ALPHA,K$ as BLENDMODE_CONSTANT_COLOR,Ee as BLENDMODE_DST_ALPHA,Se as BLENDMODE_DST_COLOR,ge as BLENDMODE_ONE,Pe as BLENDMODE_ONE_MINUS_CONSTANT,J$ as BLENDMODE_ONE_MINUS_CONSTANT_ALPHA,Z$ as BLENDMODE_ONE_MINUS_CONSTANT_COLOR,Ae as BLENDMODE_ONE_MINUS_DST_ALPHA,xe as BLENDMODE_ONE_MINUS_DST_COLOR,be as BLENDMODE_ONE_MINUS_SRC_ALPHA,ye as BLENDMODE_ONE_MINUS_SRC_COLOR,Te as BLENDMODE_SRC_ALPHA,we as BLENDMODE_SRC_ALPHA_SATURATE,ve as BLENDMODE_SRC_COLOR,_e as BLENDMODE_ZERO,Gp as BLEND_ADDITIVE,$p as BLEND_ADDITIVEALPHA,Zp as BLEND_MAX,Kp as BLEND_MIN,qp as BLEND_MULTIPLICATIVE,jp as BLEND_MULTIPLICATIVE2X,Wp as BLEND_NONE,Hp as BLEND_NORMAL,Xp as BLEND_PREMULTIPLIED,Yp as BLEND_SCREEN,Vp as BLEND_SUBTRACTIVE,Ym as BLUR_BOX,Km as BLUR_GAUSSIAN,OF as BODYFLAG_KINEMATIC_OBJECT,FF as BODYFLAG_NORESPONSE_OBJECT,RF as BODYFLAG_STATIC_OBJECT,GF as BODYGROUP_DEFAULT,HF as BODYGROUP_DYNAMIC,qF as BODYGROUP_ENGINE_1,jF as BODYGROUP_ENGINE_2,YF as BODYGROUP_ENGINE_3,XF as BODYGROUP_KINEMATIC,VF as BODYGROUP_NONE,WF as BODYGROUP_STATIC,$F as BODYGROUP_TRIGGER,KF as BODYGROUP_USER_1,ZF as BODYGROUP_USER_2,QF as BODYGROUP_USER_3,JF as BODYGROUP_USER_4,tN as BODYGROUP_USER_5,eN as BODYGROUP_USER_6,sN as BODYGROUP_USER_7,iN as BODYGROUP_USER_8,rN as BODYMASK_ALL,nN as BODYMASK_NONE,oN as BODYMASK_NOT_STATIC,lN as BODYMASK_NOT_STATIC_KINEMATIC,aN as BODYMASK_STATIC,NF as BODYSTATE_ACTIVE_TAG,UF as BODYSTATE_DISABLE_DEACTIVATION,zF as BODYSTATE_DISABLE_SIMULATION,kF as BODYSTATE_ISLAND_SLEEPING,BF as BODYSTATE_WANTS_DEACTIVATION,MF as BODYTYPE_DYNAMIC,IF as BODYTYPE_KINEMATIC,DF as BODYTYPE_STATIC,ke as BUFFERUSAGE_COPY_DST,Ne as BUFFERUSAGE_COPY_SRC,Be as BUFFERUSAGE_INDEX,Ge as BUFFERUSAGE_INDIRECT,Oe as BUFFERUSAGE_READ,Ve as BUFFERUSAGE_STORAGE,ze as BUFFERUSAGE_UNIFORM,Ue as BUFFERUSAGE_VERTEX,Fe as BUFFERUSAGE_WRITE,We as BUFFER_DYNAMIC,qe as BUFFER_GPUDYNAMIC,He as BUFFER_STATIC,Xe as BUFFER_STREAM,cF as BUTTON_TRANSITION_MODE_SPRITE_CHANGE,hF as BUTTON_TRANSITION_MODE_TINT,Rv as Batch,Ov as BatchGroup,hy as BatchManager,KH as BinaryHandler,no as BindGroupFormat,eo as BindStorageBufferFormat,io as BindStorageTextureFormat,so as BindTextureFormat,to as BindUniformBufferFormat,Ro as BlendState,jt as BoundingBox,Zt as BoundingSphere,Sw as BoxGeometry,ZA as Bundle,tC as BundleHandler,YA as BundleRegistry,xF as ButtonComponent,EF as ButtonComponentSystem,tj as CHUNKAPI_1_51,ej as CHUNKAPI_1_55,sj as CHUNKAPI_1_56,ij as CHUNKAPI_1_57,nj as CHUNKAPI_1_58,rj as CHUNKAPI_1_60,aj as CHUNKAPI_1_62,oj as CHUNKAPI_1_65,lj as CHUNKAPI_1_70,hj as CHUNKAPI_2_1,cj as CHUNKAPI_2_3,dj as CHUNKAPI_2_5,uj as CHUNKAPI_2_6,fj as CHUNKAPI_2_7,pj as CHUNKAPI_2_8,$e as CLEARFLAG_COLOR,je as CLEARFLAG_DEPTH,Ye as CLEARFLAG_STENCIL,Ze as CUBEFACE_NEGX,Je as CUBEFACE_NEGY,es as CUBEFACE_NEGZ,Ke as CUBEFACE_POSX,Qe as CUBEFACE_POSY,ts as CUBEFACE_POSZ,p_ as CUBEPROJ_BOX,f_ as CUBEPROJ_NONE,is as CULLFACE_BACK,ns as CULLFACE_FRONT,rs as CULLFACE_FRONTANDBACK,ss as CULLFACE_NONE,yt as CURVE_LINEAR,St as CURVE_SMOOTHSTEP,xt as CURVE_SPLINE,Tt as CURVE_STEP,Sy as Camera,LV as CameraComponent,IV as CameraComponentSystem,zZ as CameraFrame,kZ as CameraFrameOptions,Jq as CanvasFont,fE as CapsuleGeometry,pw as ChunkUtils,PF as CollisionComponent,CN as CollisionComponentSystem,bt as Color,qR as Component,$R as ComponentSystem,KA as ComponentSystemRegistry,Wc as Compute,pE as ConeGeometry,xz as ContactPoint,Tz as ContactResult,tW as ContainerHandler,JH as ContainerResource,rp as Controller,eW as CssHandler,sW as CubemapHandler,At as Curve,Ct as CurveSet,mE as CylinderGeometry,g_ as DETAILMODE_ADD,x_ as DETAILMODE_MAX,S_ as DETAILMODE_MIN,__ as DETAILMODE_MUL,y_ as DETAILMODE_OVERLAY,v_ as DETAILMODE_SCREEN,Ta as DEVICETYPE_NULL,Sa as DEVICETYPE_WEBGL2,xa as DEVICETYPE_WEBGPU,Pa as DISPLAYFORMAT_HDR,Aa as DISPLAYFORMAT_LDR,Ca as DISPLAYFORMAT_LDR_SRGB,Cp as DISTANCE_EXPONENTIAL,Ap as DISTANCE_INVERSE,Ep as DISTANCE_LINEAR,Qg as DITHER_BAYER8,Jg as DITHER_BLUENOISE,tv as DITHER_IGNNOISE,Zg as DITHER_NONE,RO as DefaultAnimBinder,Uo as DepthState,Tw as DomeGeometry,sQ as DualGestureSource,dF as ELEMENTTYPE_GROUP,uF as ELEMENTTYPE_IMAGE,fF as ELEMENTTYPE_TEXT,i_ as EMITTERSHAPE_BOX,n_ as EMITTERSHAPE_SPHERE,lv as EVENT_CULL_END,$j as EVENT_GAMEPADCONNECTED,jj as EVENT_GAMEPADDISCONNECTED,kj as EVENT_KEYDOWN,Bj as EVENT_KEYUP,Uj as EVENT_MOUSEDOWN,zj as EVENT_MOUSEMOVE,Vj as EVENT_MOUSEUP,Gj as EVENT_MOUSEWHEEL,ov as EVENT_POSTCULL,iv as EVENT_POSTRENDER,rv as EVENT_POSTRENDER_LAYER,av as EVENT_PRECULL,sv as EVENT_PRERENDER,nv as EVENT_PRERENDER_LAYER,Yj as EVENT_SELECT,Zj as EVENT_SELECTEND,Kj as EVENT_SELECTSTART,qj as EVENT_TOUCHCANCEL,Wj as EVENT_TOUCHEND,Xj as EVENT_TOUCHMOVE,Hj as EVENT_TOUCHSTART,xk as ElementComponent,bk as ElementComponentSystem,zz as ElementDragHelper,V$ as ElementInput,k$ as ElementInputEvent,B$ as ElementMouseEvent,z$ as ElementSelectEvent,U$ as ElementTouchEvent,dC as Entity,ob as EnvLighting,rt as EventHandle,at as EventHandler,nA as FILLMODE_FILL_WINDOW,rA as FILLMODE_KEEP_ASPECT,iA as FILLMODE_NONE,os as FILTER_LINEAR,ds as FILTER_LINEAR_MIPMAP_LINEAR,cs as FILTER_LINEAR_MIPMAP_NEAREST,as as FILTER_NEAREST,hs as FILTER_NEAREST_MIPMAP_LINEAR,ls as FILTER_NEAREST_MIPMAP_NEAREST,mF as FITMODE_CONTAIN,_F as FITMODE_COVER,pF as FITMODE_STRETCH,Vk as FITTING_BOTH,Bk as FITTING_NONE,zk as FITTING_SHRINK,Uk as FITTING_STRETCH,em as FOG_EXP,sm as FOG_EXP2,tm as FOG_LINEAR,Jp as FOG_NONE,ON as FONT_BITMAP,RN as FONT_MSDF,im as FRESNEL_NONE,nm as FRESNEL_SCHLICK,ys as FUNC_ALWAYS,ps as FUNC_EQUAL,_s as FUNC_GREATER,vs as FUNC_GREATEREQUAL,fs as FUNC_LESS,ms as FUNC_LESSEQUAL,us as FUNC_NEVER,gs as FUNC_NOTEQUAL,Dt as FloatPacking,SQ as FlyController,DQ as FocusController,lb as FogParams,iW as FolderHandler,nW as Font,aW as FontHandler,Cx as ForwardRenderer,Jt as Frustum,T_ as GAMMA_NONE,w_ as GAMMA_SRGB,zQ as GIZMOAXIS_FACE,RQ as GIZMOAXIS_X,BQ as GIZMOAXIS_XY,UQ as GIZMOAXIS_XYZ,kQ as GIZMOAXIS_XZ,OQ as GIZMOAXIS_Y,NQ as GIZMOAXIS_YZ,FQ as GIZMOAXIS_Z,MQ as GIZMOSPACE_LOCAL,IQ as GIZMOSPACE_WORLD,lG as GSplatComponent,uG as GSplatComponentSystem,CE as GSplatData,CW as GSplatHandler,eA as GSplatInstance,DE as GSplatResource,PE as GSplatResourceBase,KE as GSplatSogsData,sA as GSplatSogsResource,vp as GamePads,uQ as GamepadSource,gw as Geometry,ZQ as Gizmo,BK as GltfExporter,By as GraphNode,el as GraphicsDevice,IW as HierarchyHandler,RW as HtmlHandler,wp as Http,iC as I18n,xs as INDEXFORMAT_UINT16,Ts as INDEXFORMAT_UINT32,Ss as INDEXFORMAT_UINT8,ZR as INTERPOLATION_CUBIC,KR as INTERPOLATION_LINEAR,YR as INTERPOLATION_STEP,MN as ImageElement,qc as IndexBuffer,ot as IndexedList,$Z as InputConsumer,jZ as InputController,WZ as InputDelta,XZ as InputFrame,qZ as InputSource,Lk as JointComponent,Rk as JointComponentSystem,OW as JsonHandler,NW as JsonStandardMaterialParser,Hd as KEY_0,Wd as KEY_1,Xd as KEY_2,qd as KEY_3,$d as KEY_4,jd as KEY_5,Yd as KEY_6,Kd as KEY_7,Zd as KEY_8,Qd as KEY_9,eu as KEY_A,zu as KEY_ADD,Cd as KEY_ALT,su as KEY_B,xd as KEY_BACKSPACE,lf as KEY_BACK_SLASH,iu as KEY_C,Ld as KEY_CAPS_LOCK,hf as KEY_CLOSE_BRACKET,nf as KEY_COMMA,Pu as KEY_CONTEXT_MENU,Ad as KEY_CONTROL,nu as KEY_D,Hu as KEY_DECIMAL,Gd as KEY_DELETE,Wu as KEY_DIVIDE,Ud as KEY_DOWN,ru as KEY_E,Od as KEY_END,bd as KEY_ENTER,tu as KEY_EQUAL,Dd as KEY_ESCAPE,au as KEY_F,Xu as KEY_F1,tf as KEY_F10,ef as KEY_F11,sf as KEY_F12,qu as KEY_F2,$u as KEY_F3,ju as KEY_F4,Yu as KEY_F5,Ku as KEY_F6,Zu as KEY_F7,Qu as KEY_F8,Ju as KEY_F9,ou as KEY_G,lu as KEY_H,Fd as KEY_HOME,hu as KEY_I,Vd as KEY_INSERT,cu as KEY_J,du as KEY_K,uu as KEY_L,Nd as KEY_LEFT,fu as KEY_M,cf as KEY_META,Uu as KEY_MULTIPLY,pu as KEY_N,Lu as KEY_NUMPAD_0,Du as KEY_NUMPAD_1,Mu as KEY_NUMPAD_2,Iu as KEY_NUMPAD_3,Ru as KEY_NUMPAD_4,Ou as KEY_NUMPAD_5,Fu as KEY_NUMPAD_6,Nu as KEY_NUMPAD_7,ku as KEY_NUMPAD_8,Bu as KEY_NUMPAD_9,mu as KEY_O,of as KEY_OPEN_BRACKET,_u as KEY_P,Rd as KEY_PAGE_DOWN,Id as KEY_PAGE_UP,Pd as KEY_PAUSE,rf as KEY_PERIOD,zd as KEY_PRINT_SCREEN,gu as KEY_Q,vu as KEY_R,wd as KEY_RETURN,Bd as KEY_RIGHT,yu as KEY_S,Jd as KEY_SEMICOLON,Vu as KEY_SEPARATOR,Ed as KEY_SHIFT,af as KEY_SLASH,Md as KEY_SPACE,Gu as KEY_SUBTRACT,Su as KEY_T,Td as KEY_TAB,xu as KEY_U,kd as KEY_UP,Tu as KEY_V,wu as KEY_W,Cu as KEY_WINDOWS,bu as KEY_X,Eu as KEY_Y,Au as KEY_Z,Mt as Kernel,Cj as Key,ep as Keyboard,Kf as KeyboardEvent,hQ as KeyboardMouseSource,cm as LAYERID_DEPTH,um as LAYERID_IMMEDIATE,dm as LAYERID_SKYBOX,fm as LAYERID_UI,hm as LAYERID_WORLD,om as LAYER_GIZMO,am as LAYER_HUD,lm as LAYER_WORLD,Cm as LIGHTFALLOFF_INVERSESQUARED,Am as LIGHTFALLOFF_LINEAR,wm as LIGHTSHAPE_DISK,xm as LIGHTSHAPE_PUNCTUAL,Tm as LIGHTSHAPE_RECT,bm as LIGHTSHAPE_SPHERE,vm as LIGHTTYPE_COUNT,pm as LIGHTTYPE_DIRECTIONAL,mm as LIGHTTYPE_OMNI,_m as LIGHTTYPE_POINT,gm as LIGHTTYPE_SPOT,Sm as LIGHT_COLOR_DIVIDER,kx as Layer,zx as LayerComposition,Yk as LayoutCalculator,Ok as LayoutChildComponent,kk as LayoutChildComponentSystem,Qk as LayoutGroupComponent,sB as LayoutGroupComponentSystem,Kx as Light,FV as LightComponent,NV as LightComponentSystem,Zx as LightingParams,XR as Lightmapper,Rb as LitMaterial,Lj as LitOptions,wb as LitShaderOptions,IN as LocalizedAsset,dg as MASK_AFFECT_DYNAMIC,ug as MASK_AFFECT_LIGHTMAPPED,fg as MASK_BAKE,Ek as MOTION_FREE,Ak as MOTION_LIMITED,Ck as MOTION_LOCKED,uf as MOUSEBUTTON_LEFT,ff as MOUSEBUTTON_MIDDLE,df as MOUSEBUTTON_NONE,pf as MOUSEBUTTON_RIGHT,Rt as Mat3,Vt as Mat4,wS as Material,BW as MaterialHandler,Vv as Mesh,sy as MeshInstance,yY as MiniStats,Jx as Model,aB as ModelComponent,hB as ModelComponentSystem,HW as ModelHandler,tT as Morph,Qx as MorphInstance,eT as MorphTarget,np as Mouse,ip as MouseEvent,nQ as MultiTouchSource,Pj as Node,Vc as NullGraphicsDevice,qg as ORIENTATION_HORIZONTAL,$g as ORIENTATION_VERTICAL,EQ as OrbitController,re as OrientedBox,wY as OutlineRenderer,mf as PAD_1,_f as PAD_2,gf as PAD_3,vf as PAD_4,If as PAD_DOWN,yf as PAD_FACE_1,Sf as PAD_FACE_2,xf as PAD_FACE_3,Tf as PAD_FACE_4,Rf as PAD_LEFT,wf as PAD_L_SHOULDER_1,Ef as PAD_L_SHOULDER_2,Lf as PAD_L_STICK_BUTTON,Nf as PAD_L_STICK_X,kf as PAD_L_STICK_Y,Of as PAD_RIGHT,bf as PAD_R_SHOULDER_1,Af as PAD_R_SHOULDER_2,Df as PAD_R_STICK_BUTTON,Bf as PAD_R_STICK_X,Uf as PAD_R_STICK_Y,Cf as PAD_SELECT,Pf as PAD_START,Mf as PAD_UP,Ff as PAD_VENDOR,s_ as PARTICLEMODE_CPU,e_ as PARTICLEMODE_GPU,o_ as PARTICLEORIENTATION_EMITTER,r_ as PARTICLEORIENTATION_SCREEN,a_ as PARTICLEORIENTATION_WORLD,Qm as PARTICLESORT_DISTANCE,Jm as PARTICLESORT_NEWER_FIRST,Zm as PARTICLESORT_NONE,t_ as PARTICLESORT_OLDER_FIRST,Vs as PIXELFORMAT_111110F,ws as PIXELFORMAT_A8,Zs as PIXELFORMAT_ASTC_4x4,Pi as PIXELFORMAT_ASTC_4x4_SRGB,Qs as PIXELFORMAT_ATC_RGB,Js as PIXELFORMAT_ATC_RGBA,Di as PIXELFORMAT_BC6F,Mi as PIXELFORMAT_BC6UF,Ii as PIXELFORMAT_BC7,Ri as PIXELFORMAT_BC7_SRGBA,ti as PIXELFORMAT_BGRA8,Us as PIXELFORMAT_DEPTH,Oi as PIXELFORMAT_DEPTH16,zs as PIXELFORMAT_DEPTHSTENCIL,Ms as PIXELFORMAT_DXT1,wi as PIXELFORMAT_DXT1_SRGB,Is as PIXELFORMAT_DXT3,bi as PIXELFORMAT_DXT3_SRGBA,Rs as PIXELFORMAT_DXT5,Ei as PIXELFORMAT_DXT5_SRGBA,Ws as PIXELFORMAT_ETC1,Xs as PIXELFORMAT_ETC2_RGB,qs as PIXELFORMAT_ETC2_RGBA,Ai as PIXELFORMAT_ETC2_SRGB,Ci as PIXELFORMAT_ETC2_SRGBA,bs as PIXELFORMAT_L8,G$ as PIXELFORMAT_L8_A8,Es as PIXELFORMAT_LA8,js as PIXELFORMAT_PVRTC_2BPP_RGBA_1,$s as PIXELFORMAT_PVRTC_2BPP_RGB_1,Ks as PIXELFORMAT_PVRTC_4BPP_RGBA_1,Ys as PIXELFORMAT_PVRTC_4BPP_RGB_1,yi as PIXELFORMAT_R16F,ii as PIXELFORMAT_R16I,ni as PIXELFORMAT_R16U,Bs as PIXELFORMAT_R32F,ri as PIXELFORMAT_R32I,ai as PIXELFORMAT_R32U,X$ as PIXELFORMAT_R4_G4_B4_A4,W$ as PIXELFORMAT_R5_G5_B5_A1,H$ as PIXELFORMAT_R5_G6_B5,xi as PIXELFORMAT_R8,ei as PIXELFORMAT_R8I,si as PIXELFORMAT_R8U,q$ as PIXELFORMAT_R8_G8_B8,$$ as PIXELFORMAT_R8_G8_B8_A8,Si as PIXELFORMAT_RG16F,hi as PIXELFORMAT_RG16I,ci as PIXELFORMAT_RG16U,di as PIXELFORMAT_RG32I,ui as PIXELFORMAT_RG32U,Ti as PIXELFORMAT_RG8,oi as PIXELFORMAT_RG8I,li as PIXELFORMAT_RG8U,Os as PIXELFORMAT_RGB16F,Ns as PIXELFORMAT_RGB32F,As as PIXELFORMAT_RGB565,Ls as PIXELFORMAT_RGB8,Fs as PIXELFORMAT_RGBA16F,mi as PIXELFORMAT_RGBA16I,_i as PIXELFORMAT_RGBA16U,ks as PIXELFORMAT_RGBA32F,gi as PIXELFORMAT_RGBA32I,vi as PIXELFORMAT_RGBA32U,Ps as PIXELFORMAT_RGBA4,Cs as PIXELFORMAT_RGBA5551,Ds as PIXELFORMAT_RGBA8,fi as PIXELFORMAT_RGBA8I,pi as PIXELFORMAT_RGBA8U,Li as PIXELFORMAT_SBGRA8,j$ as PIXELFORMAT_SRGB,Gs as PIXELFORMAT_SRGB8,Y$ as PIXELFORMAT_SRGBA,Hs as PIXELFORMAT_SRGBA8,Xi as PRIMITIVE_LINELOOP,Wi as PRIMITIVE_LINES,qi as PRIMITIVE_LINESTRIP,Hi as PRIMITIVE_POINTS,$i as PRIMITIVE_TRIANGLES,Yi as PRIMITIVE_TRIFAN,ji as PRIMITIVE_TRISTRIP,h_ as PROJECTION_ORTHOGRAPHIC,l_ as PROJECTION_PERSPECTIVE,lw as ParticleEmitter,mB as ParticleSystemComponent,QU as ParticleSystemComponentSystem,r$ as Picker,Qt as Plane,_E as PlaneGeometry,HZ as Pose,xb as PostEffect,PV as PostEffectQueue,vE as ProgramLibrary,Lv as QuadRender,Gt as Quat,z_ as REFLECTIONSRC_CUBEMAP,B_ as REFLECTIONSRC_ENVATLAS,U_ as REFLECTIONSRC_ENVATLASHQ,k_ as REFLECTIONSRC_NONE,V_ as REFLECTIONSRC_SPHEREMAP,u_ as RENDERSTYLE_POINTS,c_ as RENDERSTYLE_SOLID,d_ as RENDERSTYLE_WIREFRAME,aA as RESOLUTION_AUTO,oA as RESOLUTION_FIXED,nY as RIGIDBODY_ACTIVE_TAG,sY as RIGIDBODY_CF_KINEMATIC_OBJECT,iY as RIGIDBODY_CF_NORESPONSE_OBJECT,eY as RIGIDBODY_CF_STATIC_OBJECT,oY as RIGIDBODY_DISABLE_DEACTIVATION,lY as RIGIDBODY_DISABLE_SIMULATION,rY as RIGIDBODY_ISLAND_SLEEPING,Jj as RIGIDBODY_TYPE_DYNAMIC,tY as RIGIDBODY_TYPE_KINEMATIC,Qj as RIGIDBODY_TYPE_STATIC,aY as RIGIDBODY_WANTS_DEACTIVATION,te as Ray,yz as RaycastResult,dt as ReadStream,sz as RenderComponent,az as RenderComponentSystem,gG as RenderHandler,Yc as RenderPass,jK as RenderPassBloom,UZ as RenderPassCameraFrame,dy as RenderPassColorGrab,mZ as RenderPassCompose,RZ as RenderPassDepthAwareBlur,CZ as RenderPassDof,WK as RenderPassDownsample,Sx as RenderPassForward,DZ as RenderPassPrepass,Tb as RenderPassShaderQuad,NZ as RenderPassSsao,SZ as RenderPassTAA,$K as RenderPassUpsample,il as RenderTarget,JA as ResourceHandler,eC as ResourceLoader,mz as RigidBodyComponent,bz as RigidBodyComponentSystem,t0 as RotateGizmo,ir as SAMPLETYPE_DEPTH,er as SAMPLETYPE_FLOAT,nr as SAMPLETYPE_INT,rr as SAMPLETYPE_UINT,sr as SAMPLETYPE_UNFILTERABLE_FLOAT,Az as SCALEMODE_BLEND,Ez as SCALEMODE_NONE,Wz as SCROLLBAR_VISIBILITY_SHOW_ALWAYS,Xz as SCROLLBAR_VISIBILITY_SHOW_WHEN_REQUIRED,Gz as SCROLL_MODE_BOUNCE,Vz as SCROLL_MODE_CLAMP,Hz as SCROLL_MODE_INFINITE,un as SEMANTIC_ATTR0,fn as SEMANTIC_ATTR1,Tn as SEMANTIC_ATTR10,wn as SEMANTIC_ATTR11,bn as SEMANTIC_ATTR12,En as SEMANTIC_ATTR13,An as SEMANTIC_ATTR14,Cn as SEMANTIC_ATTR15,pn as SEMANTIC_ATTR2,mn as SEMANTIC_ATTR3,_n as SEMANTIC_ATTR4,gn as SEMANTIC_ATTR5,vn as SEMANTIC_ATTR6,yn as SEMANTIC_ATTR7,Sn as SEMANTIC_ATTR8,xn as SEMANTIC_ATTR9,tn as SEMANTIC_BLENDINDICES,Ji as SEMANTIC_BLENDWEIGHT,en as SEMANTIC_COLOR,Zi as SEMANTIC_NORMAL,Ki as SEMANTIC_POSITION,Qi as SEMANTIC_TANGENT,sn as SEMANTIC_TEXCOORD,nn as SEMANTIC_TEXCOORD0,rn as SEMANTIC_TEXCOORD1,an as SEMANTIC_TEXCOORD2,on as SEMANTIC_TEXCOORD3,ln as SEMANTIC_TEXCOORD4,hn as SEMANTIC_TEXCOORD5,cn as SEMANTIC_TEXCOORD6,dn as SEMANTIC_TEXCOORD7,og as SHADERDEF_BATCH,tg as SHADERDEF_DIRLM,Q_ as SHADERDEF_INSTANCING,J_ as SHADERDEF_LM,rg as SHADERDEF_LMAMBIENT,ng as SHADERDEF_MORPH_NORMAL,ig as SHADERDEF_MORPH_POSITION,ag as SHADERDEF_MORPH_TEXTURE_BASED_INT,$_ as SHADERDEF_NOSHADOW,eg as SHADERDEF_SCREENSPACE,j_ as SHADERDEF_SKIN,sg as SHADERDEF_TANGENTS,Y_ as SHADERDEF_UV0,K_ as SHADERDEF_UV1,Z_ as SHADERDEF_VCOLOR,cr as SHADERLANGUAGE_GLSL,dr as SHADERLANGUAGE_WGSL,yg as SHADERPASS_ALBEDO,Eg as SHADERPASS_AO,Ag as SHADERPASS_EMISSION,vg as SHADERPASS_FORWARD,wg as SHADERPASS_GLOSS,Cg as SHADERPASS_LIGHTING,bg as SHADERPASS_METALNESS,xg as SHADERPASS_OPACITY,Tg as SHADERPASS_SPECULARITY,Pg as SHADERPASS_UV0,Sg as SHADERPASS_WORLDNORMAL,Ea as SHADERSTAGE_COMPUTE,ba as SHADERSTAGE_FRAGMENT,wa as SHADERSTAGE_VERTEX,Pn as SHADERTAG_MATERIAL,pg as SHADER_FORWARD,gg as SHADER_PICK,mg as SHADER_PREPASS,_g as SHADER_SHADOW,lg as SHADOWUPDATE_NONE,cg as SHADOWUPDATE_REALTIME,hg as SHADOWUPDATE_THISFRAME,Wm as SHADOW_CASCADE_0,Xm as SHADOW_CASCADE_1,qm as SHADOW_CASCADE_2,$m as SHADOW_CASCADE_3,jm as SHADOW_CASCADE_ALL,Bm as SHADOW_PCF1,zm as SHADOW_PCF1_16F,km as SHADOW_PCF1_32F,Dm as SHADOW_PCF3,Vm as SHADOW_PCF3_16F,Lm as SHADOW_PCF3_32F,Nm as SHADOW_PCF5,Gm as SHADOW_PCF5_16F,Fm as SHADOW_PCF5_32F,Um as SHADOW_PCSS_32F,Im as SHADOW_VSM16,Om as SHADOW_VSM32,Mm as SHADOW_VSM_16F,Rm as SHADOW_VSM_32F,Yg as SKYTYPE_BOX,Kg as SKYTYPE_DOME,jg as SKYTYPE_INFINITE,Vg as SORTMODE_BACK2FRONT,Hg as SORTMODE_CUSTOM,Gg as SORTMODE_FRONT2BACK,Ug as SORTMODE_MANUAL,zg as SORTMODE_MATERIALMESH,Bg as SORTMODE_NONE,O_ as SPECOCC_AO,F_ as SPECOCC_GLOSSDEPENDENT,R_ as SPECOCC_NONE,cV as SPRITETYPE_ANIMATED,hV as SPRITETYPE_SIMPLE,Lg as SPRITE_RENDERMODE_SIMPLE,Dg as SPRITE_RENDERMODE_SLICED,Mg as SPRITE_RENDERMODE_TILED,VK as SSAOTYPE_COMBINE,zK as SSAOTYPE_LIGHTING,UK as SSAOTYPE_NONE,On as STENCILOP_DECREMENT,Fn as STENCILOP_DECREMENTWRAP,In as STENCILOP_INCREMENT,Rn as STENCILOP_INCREMENTWRAP,Nn as STENCILOP_INVERT,Ln as STENCILOP_KEEP,Mn as STENCILOP_REPLACE,Dn as STENCILOP_ZERO,d0 as ScaleGizmo,hb as Scene,WW as SceneHandler,pC as SceneRegistry,fC as SceneRegistryItem,a$ as SceneSettingsHandler,Ho as ScopeId,Wo as ScopeSpace,Pz as ScreenComponent,Mz as ScreenComponentSystem,jV as Script,GV as ScriptAttributes,JV as ScriptComponent,oG as ScriptComponentSystem,QW as ScriptHandler,nC as ScriptRegistry,ZV as ScriptType,$z as ScrollViewComponent,Qz as ScrollViewComponentSystem,Jz as ScrollbarComponent,sV as ScrollbarComponentSystem,Zh as Shader,yv as ShaderChunks,JW as ShaderHandler,dw as ShaderMaterial,_v as ShaderPass,Tv as ShaderUtils,Sz as SingleContactResult,JZ as SingleGestureSource,yb as Skeleton,cb as Skin,kv as SkinBatchInstance,Nv as SkinInstance,Ew as Sky,ut as SortedLoopArray,Ip as Sound,rV as SoundComponent,lV as SoundComponentSystem,Bp as SoundInstance,zp as SoundInstance3d,Mp as SoundManager,nV as SoundSlot,xw as SphereGeometry,fb as Sprite,dV as SpriteAnimationClip,yV as SpriteComponent,TV as SpriteComponentSystem,sX as SpriteHandler,Qb as StandardMaterial,Ob as StandardMaterialOptions,tl as StencilParameters,mc as StorageBuffer,$n as TEXHINT_ASSET,jn as TEXHINT_LIGHTMAP,Xn as TEXHINT_NONE,qn as TEXHINT_SHADOWMAP,Ma as TEXPROPERTY_ADDRESS_U,Ia as TEXPROPERTY_ADDRESS_V,Ra as TEXPROPERTY_ADDRESS_W,ka as TEXPROPERTY_ALL,Na as TEXPROPERTY_ANISOTROPY,Fa as TEXPROPERTY_COMPARE_FUNC,Oa as TEXPROPERTY_COMPARE_ON_READ,Da as TEXPROPERTY_MAG_FILTER,La as TEXPROPERTY_MIN_FILTER,Yn as TEXTUREDIMENSION_1D,Kn as TEXTUREDIMENSION_2D,Zn as TEXTUREDIMENSION_2D_ARRAY,tr as TEXTUREDIMENSION_3D,Qn as TEXTUREDIMENSION_CUBE,Jn as TEXTUREDIMENSION_CUBE_ARRAY,kn as TEXTURELOCK_NONE,Bn as TEXTURELOCK_READ,Un as TEXTURELOCK_WRITE,or as TEXTUREPROJECTION_CUBE,lr as TEXTUREPROJECTION_EQUIRECT,ar as TEXTUREPROJECTION_NONE,hr as TEXTUREPROJECTION_OCTAHEDRAL,zn as TEXTURETYPE_DEFAULT,Gn as TEXTURETYPE_RGBE,Vn as TEXTURETYPE_RGBM,Hn as TEXTURETYPE_RGBP,Wn as TEXTURETYPE_SWIZZLEGGGR,P_ as TONEMAP_ACES,L_ as TONEMAP_ACES2,A_ as TONEMAP_FILMIC,C_ as TONEMAP_HEJL,E_ as TONEMAP_LINEAR,D_ as TONEMAP_NEUTRAL,M_ as TONEMAP_NONE,p as TRACEID_BINDGROUPFORMAT_ALLOC,f as TRACEID_BINDGROUP_ALLOC,_ as TRACEID_COMPUTEPIPELINE_ALLOC,v as TRACEID_ELEMENT,x as TRACEID_GPU_TIMINGS,g as TRACEID_PIPELINELAYOUT_ALLOC,m as TRACEID_RENDERPIPELINE_ALLOC,n as TRACEID_RENDER_ACTION,t as TRACEID_RENDER_FRAME,e as TRACEID_RENDER_FRAME_TIME,s as TRACEID_RENDER_PASS,i as TRACEID_RENDER_PASS_DETAIL,S as TRACEID_RENDER_QUEUE,r as TRACEID_RENDER_TARGET_ALLOC,o as TRACEID_SHADER_ALLOC,l as TRACEID_SHADER_COMPILE,y as TRACEID_TEXTURES,a as TRACEID_TEXTURE_ALLOC,d as TRACEID_VRAM_IB,u as TRACEID_VRAM_SB,h as TRACEID_VRAM_TEXTURE,c as TRACEID_VRAM_VB,yr as TYPE_FLOAT16,vr as TYPE_FLOAT32,pr as TYPE_INT16,_r as TYPE_INT32,ur as TYPE_INT8,mr as TYPE_UINT16,gr as TYPE_UINT32,fr as TYPE_UINT8,ft as Tags,iX as Template,nX as TemplateHandler,uk as TextElement,rX as TextHandler,lo as Texture,pb as TextureAtlas,hX as TextureAtlasHandler,zX as TextureHandler,ao as TextureUtils,gE as TorusGeometry,Sp as Touch,Tp as TouchDevice,xp as TouchEvent,vt as Tracing,Kc as TransformFeedback,dJ as TransformGizmo,VJ as TranslateGizmo,ue as Tri,Sr as UNIFORMTYPE_BOOL,Qr as UNIFORMTYPE_BOOLARRAY,Lr as UNIFORMTYPE_BVEC2,ea as UNIFORMTYPE_BVEC2ARRAY,Dr as UNIFORMTYPE_BVEC3,na as UNIFORMTYPE_BVEC3ARRAY,Mr as UNIFORMTYPE_BVEC4,oa as UNIFORMTYPE_BVEC4ARRAY,Tr as UNIFORMTYPE_FLOAT,kr as UNIFORMTYPE_FLOATARRAY,xr as UNIFORMTYPE_INT,Kr as UNIFORMTYPE_INTARRAY,la as UNIFORMTYPE_ITEXTURE2D,pa as UNIFORMTYPE_ITEXTURE2D_ARRAY,ua as UNIFORMTYPE_ITEXTURE3D,ca as UNIFORMTYPE_ITEXTURECUBE,Ar as UNIFORMTYPE_IVEC2,Jr as UNIFORMTYPE_IVEC2ARRAY,Cr as UNIFORMTYPE_IVEC3,sa as UNIFORMTYPE_IVEC3ARRAY,Pr as UNIFORMTYPE_IVEC4,ra as UNIFORMTYPE_IVEC4ARRAY,Ir as UNIFORMTYPE_MAT2,Rr as UNIFORMTYPE_MAT3,Or as UNIFORMTYPE_MAT4,Wr as UNIFORMTYPE_MAT4ARRAY,Fr as UNIFORMTYPE_TEXTURE2D,Xr as UNIFORMTYPE_TEXTURE2D_ARRAY,Br as UNIFORMTYPE_TEXTURE2D_SHADOW,zr as UNIFORMTYPE_TEXTURE3D,Nr as UNIFORMTYPE_TEXTURECUBE,Ur as UNIFORMTYPE_TEXTURECUBE_SHADOW,qr as UNIFORMTYPE_UINT,Zr as UNIFORMTYPE_UINTARRAY,ha as UNIFORMTYPE_UTEXTURE2D,ma as UNIFORMTYPE_UTEXTURE2D_ARRAY,fa as UNIFORMTYPE_UTEXTURE3D,da as UNIFORMTYPE_UTEXTURECUBE,$r as UNIFORMTYPE_UVEC2,ta as UNIFORMTYPE_UVEC2ARRAY,jr as UNIFORMTYPE_UVEC3,ia as UNIFORMTYPE_UVEC3ARRAY,Yr as UNIFORMTYPE_UVEC4,aa as UNIFORMTYPE_UVEC4ARRAY,wr as UNIFORMTYPE_VEC2,Vr as UNIFORMTYPE_VEC2ARRAY,br as UNIFORMTYPE_VEC3,Gr as UNIFORMTYPE_VEC3ARRAY,Er as UNIFORMTYPE_VEC4,Hr as UNIFORMTYPE_VEC4ARRAY,Ga as UNIFORM_BUFFER_DEFAULT_SLOT_NAME,Ha as UNUSED_UNIFORM_NAME,gt as URI,zl as UniformBufferFormat,Ul as UniformFormat,CK as UsdzExporter,Fg as VIEW_CENTER,Ng as VIEW_LEFT,kg as VIEW_RIGHT,Ot as Vec2,It as Vec3,Ft as Vec4,qo as VertexBuffer,Qo as VertexFormat,cd as VertexIterator,_0 as ViewCube,ct as WasmModule,Fc as WebglGraphicsDevice,vc as WebgpuGraphicsDevice,iS as WorldClusters,dq as XRDEPTHSENSINGFORMAT_F32,hq as XRDEPTHSENSINGFORMAT_L8A8,cq as XRDEPTHSENSINGFORMAT_R16U,oq as XRDEPTHSENSINGUSAGE_CPU,lq as XRDEPTHSENSINGUSAGE_GPU,JX as XREYE_LEFT,QX as XREYE_NONE,tq as XREYE_RIGHT,sq as XRHAND_LEFT,eq as XRHAND_NONE,iq as XRHAND_RIGHT,jf as XRPAD_A,Yf as XRPAD_B,qf as XRPAD_SQUEEZE,$f as XRPAD_STICK_BUTTON,Gf as XRPAD_STICK_X,Hf as XRPAD_STICK_Y,Wf as XRPAD_TOUCHPAD_BUTTON,zf as XRPAD_TOUCHPAD_X,Vf as XRPAD_TOUCHPAD_Y,Xf as XRPAD_TRIGGER,$X as XRSPACE_BOUNDEDFLOOR,XX as XRSPACE_LOCAL,qX as XRSPACE_LOCALFLOOR,jX as XRSPACE_UNBOUNDED,WX as XRSPACE_VIEWER,YX as XRTARGETRAY_GAZE,ZX as XRTARGETRAY_POINTER,KX as XRTARGETRAY_SCREEN,aq as XRTRACKABLE_MESH,rq as XRTRACKABLE_PLANE,nq as XRTRACKABLE_POINT,HX as XRTYPE_AR,VX as XRTYPE_INLINE,GX as XRTYPE_VR,Vq as XrAnchor,Gq as XrAnchors,uq as XrDomOverlay,yq as XrFinger,Cq as XrHand,_q as XrHitTest,mq as XrHitTestSource,vq as XrImageTracking,Iq as XrInput,Mq as XrInputSource,Tq as XrJoint,kq as XrLightEstimation,$q as XrManager,Wq as XrMeshDetection,Uq as XrPlane,zq as XrPlaneDetection,gq as XrTrackedImage,Xq as XrView,qq as XrViews,wV as ZoneComponent,AV as ZoneComponentSystem,q_ as ambientSrcNames,xR as app,TX as basisInitialize,Va as bindGroupNames,Qp as blendNames,mw as calculateNormals,_w as calculateTangents,vj as createBox,Sj as createCapsule,xj as createCone,Tj as createCylinder,Gc as createGraphicsDevice,wj as createMesh,gj as createPlane,jW as createScript,wv as createShader,bv as createShaderFromCode,_j as createSphere,yj as createTorus,mt as createURI,m_ as cubemaProjectionNames,ev as ditherNames,LG as dracoInitialize,bj as drawFullscreenQuad,Iv as drawQuadWithShader,b as extend,rm as fresnelNames,b_ as gammaNames,Gi as getPixelFormatArrayType,$W as getReservedScriptNames,yp as getTouchTargetCoords,E as guid,bp as http,Ni as isCompressedPixelFormat,Bi as isIntegerPixelFormat,ki as isSrgbPixelFormat,Pm as lightFalloffNames,Em as lightShapeNames,ym as lightTypeNames,wt as math,pt as now,A as path,zi as pixelFormatGammaToLinear,Fi as pixelFormatInfo,Ui as pixelFormatLinearToGamma,B as platform,Ka as primitiveGlslToWgslTypeMap,G_ as reflectionSrcNames,KW as registerScript,tb as reprojectTexture,Vi as requiresManualGamma,w as revision,uA as script,Za as semanticToLocation,Dj as shaderChunks,Hm as shadowTypeInfo,N_ as specularOcclusionNames,Ig as spriteRenderModeNames,nt as string,I_ as tonemapNames,ja as typedArrayIndexFormats,Ya as typedArrayIndexFormatsByteSize,$a as typedArrayToType,Wa as typedArrayTypes,Xa as typedArrayTypesByteSize,_a as uniformTypeToName,va as uniformTypeToNameMapWGSL,ga as uniformTypeToNameWGSL,ya as uniformTypeToStorage,T as version,qa as vertexTypesNames};export default null;
//# sourceMappingURL=/sm/b4ee8d37e71e3103d029519779a670cca13a87fe1159ee09a6d56aac210078ca.map